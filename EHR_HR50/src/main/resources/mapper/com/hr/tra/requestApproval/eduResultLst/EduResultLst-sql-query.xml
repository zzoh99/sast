<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tra.requestApproval.eduResultDet">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getEduResultLstList">
			
				<![CDATA[
				SELECT DECODE(C.EDU_SATI_SKIP_YN, 'Y', 1, DECODE(NVL(E.APPL_STATUS_CD, '00'), '00',0, '11',0, 1)) AS TEMP1
					,DECODE(C.EDU_SATI_SKIP_YN, 'Y', 1, DECODE(NVL(E.APPL_STATUS_CD, '00'), '00',-1, '11',-1, 1))  AS SELECT_IMG
					,A.EDU_SEQ
					,B.EDU_COURSE_NM
					,A.EDU_EVENT_SEQ
					,C.EDU_EVENT_NM
					,B.IN_OUT_TYPE
					,A.SABUN
					,D.APPL_SEQ
					,C.EDU_PLACE -- 교육장소
					,F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'L10050', B.EDU_METHOD_CD) AS EDU_METHOD_NM
					,(SELECT X.EDU_ORG_NM FROM TTRA001 X WHERE X.ENTER_CD = C.ENTER_CD AND X.EDU_ORG_CD = C.EDU_ORG_CD) AS EDU_ORG_NM
					,DECODE(B.MANDATORY_YN,'Y','필수','선택') AS MANDATORY_YN -- 선택구분
					,F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'L10015', B.EDU_M_BRANCH_CD) AS EDU_M_BRANCH_NM
					,C.EDU_HOUR -- 시간
					,C.EDU_S_YMD -- 교육일정(시작)
					,C.EDU_E_YMD -- 교육일정(종료)
					,C.PER_EXPENSE_MON -- 교육비
					,C.LABOR_MON -- 환급예상액
					,NVL(C.PER_EXPENSE_MON,0) - NVL(C.LABOR_MON,0) AS PER_EXPENSE_PAY
					,A.EDU_MEMO
					,A.EDU_MEMO1
					,A.EDU_MEMO2
					,A.APPL_SEQ AS AP_APPL_SEQ
					,NVL(E.APPL_STATUS_CD,'00') AS APPL_STATUS_CD -- R10010
					,E.APPL_YMD -- R10010
					,(SELECT COUNT(*) FROM TTRA150 X
					WHERE X.ENTER_CD = A.ENTER_CD
						AND X.EDU_SEQ	= A.EDU_SEQ
						AND X.EDU_EVENT_SEQ = A.EDU_EVENT_SEQ) AS ITEM_CNT -- 만족도조사항목수
					,DECODE((	SELECT SUM(DECODE(T1.EDU_SURVEY_YN,'Y',0,1))
								FROM TTRA201 T1
								WHERE T1.ENTER_CD = A.ENTER_CD
								AND T1.APPL_SEQ = A.APPL_SEQ
							),0,'Y','N') AS EDU_SURVEY_YN	-- 교육만족도조사여부
					,C.EDU_SATI_SKIP_YN
				FROM TTRA201 A -- 교육신청관리
					,TTRA101 B -- 교육과정종합관리
					,TTRA121 C -- 교육과정_이벤트
					,TTRA203 D -- 교육결과보고_신청관리
					,THRI103 E -- 교육결과보고 관련 신청 마스터
					,THRI103 F -- 교육신청관련 신청마스터
				WHERE A.ENTER_CD = B.ENTER_CD
					AND A.EDU_SEQ	= B.EDU_SEQ
					AND A.ENTER_CD = C.ENTER_CD
					AND A.EDU_SEQ	= C.EDU_SEQ
					AND A.EDU_EVENT_SEQ = C.EDU_EVENT_SEQ
					AND A.ENTER_CD = D.ENTER_CD(+)
					AND A.EDU_SEQ	= D.EDU_SEQ(+)
					AND A.EDU_EVENT_SEQ = D.EDU_EVENT_SEQ(+)
					AND A.SABUN	= D.SABUN(+)
					AND A.APPL_SEQ = D.AP_APPL_SEQ(+)
					AND D.ENTER_CD = E.ENTER_CD(+)
					AND D.APPL_SEQ = E.APPL_SEQ(+)
					AND A.ENTER_CD = F.ENTER_CD
					AND A.APPL_SEQ = F.APPL_SEQ
					AND A.ENTER_CD = #{ssnEnterCd}
					AND A.SABUN = #{searchSabun}
					AND F.APPL_STATUS_CD = '99'
				ORDER BY C.EDU_S_YMD DESC
				]]>
		</select>

<!-- 		삭제 -->
		<delete parameterType="map" id="deleteEduResultLst">
					DELETE FROM TTRA203
					WHERE 	(ENTER_CD, EDU_SEQ, EDU_EVENT_SEQ, SABUN) IN 	(  (NULL, NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows">
						,	(#{ssnEnterCd}, TRIM(#{rm.eduSeq}), TRIM(#{rm.eduEventSeq}), TRIM(#{rm.sabun}))
</foreach>
						)
		</delete>
		
		<delete parameterType="map" id="deleteEduResult103">
					DELETE FROM THRI103
					WHERE 	(ENTER_CD, APPL_SEQ) IN 	(  (NULL, NULL)
<foreach item="rm" collection="deleteRows">
						,
							(#{ssnEnterCd}, #{rm.applSeq})
</foreach> <![CDATA[
					) AND APPL_SEQ            <> '0'
			]]>
			
		</delete>

		<delete parameterType="map" id="deleteEduResult107">
					DELETE FROM THRI107
					WHERE 	(ENTER_CD, APPL_SEQ) IN 	(  (NULL, NULL)
<foreach item="rm" collection="deleteRows">
						,
							(#{ssnEnterCd}, #{rm.applSeq})
</foreach> <![CDATA[
					) AND APPL_SEQ            <> '0'
				]]>
		</delete>
</mapper>