<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tra.yearEduPlan.yearEduSta">
		<!-- 기준년도 콤보 -->		
		<select parameterType="map" resultType="cMap" id="getYearEduStaYearCode">
				<![CDATA[
					SELECT YEAR AS CODE, YEAR AS CODE_NM
					   , SDATE , EDATE
					FROM TTRA500
					WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					ORDER BY YEAR DESC, SDATE DESC
				]]>
			
		</select>
		
		<select parameterType="map" resultType="cMap" id="getYearEduStaList">
                       SELECT
<choose><when test="searchGubun != null and searchGubun eq 'gubun2'">
<![CDATA[ 
						    MAX( F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, B.APPL_YMD, #{ssnLocaleCd}) ) AS ORG_NM
						    , MAX( F_COM_GET_PRIOR_ORG_TYPE_NM(A.ENTER_CD, A.ORG_CD, 'B0400', B.APPL_YMD) ) AS PRIOR_ORG_NM
						    , SUM(A.MON01) AS MON01
						    , SUM(A.MON02) AS MON02
						    , SUM(A.MON03) AS MON03
						    , SUM(A.MON04) AS MON04
						    , SUM(A.MON05) AS MON05
						    , SUM(A.MON06) AS MON06
						    , SUM(A.MON07) AS MON07
						    , SUM(A.MON08) AS MON08
						    , SUM(A.MON09) AS MON09
						    , SUM(A.MON10) AS MON10
						    , SUM(A.MON11) AS MON11
						    , SUM(A.MON12) AS MON12
						    , SUM(A.TOT_MON) AS TOT_MON ]]>
</when><otherwise> <![CDATA[
							A.ENTER_CD
						    , A.SABUN
						    , F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd} ) AS NAME -- 성명
						    , F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, B.APPL_YMD, #{ssnLocaleCd}) AS ORG_NM
						    , F_COM_GET_PRIOR_ORG_TYPE_NM(A.ENTER_CD, A.ORG_CD, 'B0400', B.APPL_YMD ) AS PRIOR_ORG_NM
						    , F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS JIKWEE_NM
						    , A.YEAR
						    , A.SEQ
						    , A.ORG_CD
						    , A.EDU_COURSE_NM
						    , A.IN_OUT_TYPE
						    , A.PRIORITY_CD
						    , A.MON01
						    , A.MON02
						    , A.MON03
						    , A.MON04
						    , A.MON05
						    , A.MON06
						    , A.MON07
						    , A.MON08
						    , A.MON09
						    , A.MON10
						    , A.MON11
						    , A.MON12
						    , A.TOT_MON
						    , A.NOTE
]]></otherwise></choose>
						 FROM TTRA503 A, THRI103 B, TTRA501 C
						WHERE A.ENTER_CD	= TRIM(#{ssnEnterCd})
                          AND A.ENTER_CD   = B.ENTER_CD
                          AND B.APPL_SEQ   = C.APPL_SEQ
                          AND A.ENTER_CD   = C.ENTER_CD
                          AND A.YEAR   = C.YEAR
                          AND A.ORG_CD   = C.ORG_CD
					      AND B.APPL_STATUS_CD = '99' 
<if test="searchPriorityCd != null and searchPriorityCd neq ''">
					      AND A.PRIORITY_CD = TRIM( #{searchPriorityCd} )
</if>
<if test="searchInOutType != null and searchInOutType neq ''">
					      AND A.IN_OUT_TYPE = TRIM( #{searchInOutType} )
</if>  
<if test="searchYear != null and searchYear neq ''">
					      AND A.YEAR = TRIM( #{searchYear} )

</if>
<if test="searchPriorOrgNm != null and searchPriorOrgNm neq ''">
					      AND UPPER(F_COM_GET_PRIOR_ORG_TYPE_NM(A.ENTER_CD, A.ORG_CD, 'B0400', B.APPL_YMD))  LIKE '%'||UPPER(TRIM( #{searchPriorOrgNm} ))||'%'
</if>      
<if test="searchOrgNm != null and searchOrgNm neq ''">
					      AND UPPER(F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}))  LIKE '%'||UPPER(TRIM( #{searchOrgNm} ))||'%' 
</if>
<choose><when test="searchGubun != null and searchGubun eq 'gubun2'">
						GROUP BY A.ORG_CD
						ORDER BY A.ORG_CD
</when><otherwise>
                        ORDER BY A.YEAR, A.ORG_CD, A.SABUN, A.SEQ
</otherwise></choose>
		</select>
</mapper>