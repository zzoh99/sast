<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="tim.code.holidayOccurStd.realOccurStd">

<!-- 휴가 발생조건 조회 -->
		<select parameterType="map" resultType="cMap" id="getRealOccurStdList">

				<![CDATA[
				  SELECT A.GNT_CD,B.GNT_NM,A.MM_DED_YN,A.MM_APP_CNT,A.YY_DED_YN,A.YY_APP_CNT,A.APP_DAY
				 	FROM TTIM005 A, TTIM014 B
				    WHERE A.ENTER_CD = #{ssnEnterCd}
				       AND A.ENTER_CD = B.ENTER_CD
				       AND A.GNT_CD = B.GNT_CD
				 	ORDER BY B.SEQ
				]]>


		</select>

<!-- 휴가 발생조건 저장 -->
		<update parameterType="map" id="saveRealOccurStd">

					MERGE INTO TTIM005 T
					USING	(
							SELECT A.ENTER_CD
								 , A.GNT_CD
							     , A.MM_DED_YN
							     , A.YY_DED_YN
							     , A.MM_APP_CNT
							     , A.YY_APP_CNT
							     , A.APP_DAY
							FROM	(
									SELECT NULL AS ENTER_CD
										 , NULL AS GNT_CD
										 , NULL AS MM_DED_YN
										 , NULL AS YY_DED_YN
										 , NULL AS MM_APP_CNT
									     , NULL AS YY_APP_CNT
									     , NULL AS APP_DAY
									FROM DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT TRIM( #{ssnEnterCd} )		AS  ENTER_CD
										 , TRIM( #{rm.gntCd} )			AS  GNT_CD
										 , TRIM( #{rm.mmDedYn})		AS  MM_DED_YN
										 , TRIM( #{rm.yyDedYn})		AS  YY_DED_YN
										 , TRIM( #{rm.mmAppCnt})		AS  MM_APP_CNT
										 , TRIM( #{rm.yyAppCnt})		AS  YY_APP_CNT
										 , TRIM( #{rm.appDay})			AS  APP_DAY
									  FROM DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.GNT_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.GNT_CD = S.GNT_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.MM_DED_YN    	= S.MM_DED_YN
									, T.YY_DED_YN    	= S.YY_DED_YN
									, T.MM_APP_CNT    	= S.MM_APP_CNT
									, T.YY_APP_CNT   	= S.YY_APP_CNT
									, T.APP_DAY    		= S.APP_DAY
									, T.CHKDATE			= SYSDATE
									, T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.GNT_CD
							, T.MM_DED_YN
							, T.YY_DED_YN
							, T.MM_APP_CNT
							, T.YY_APP_CNT
							, T.APP_DAY
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.GNT_CD
							, S.MM_DED_YN
							, S.YY_DED_YN
							, S.MM_APP_CNT
							, S.YY_APP_CNT
							, S.APP_DAY
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
<!-- 휴가 발생조건 삭제 -->
		<delete parameterType="map" id="deleteRealOccurStd">

					DELETE FROM TTIM005
					 WHERE ENTER_CD||'_'||GNT_CD IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test=' ssnEnterCd != null and !ssnEnterCd.equals("")
												and rm.gntCd != null and !rm.gntCd.equals("") '>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.gntCd} )
										</if>
</foreach>
										)
		</delete>

</mapper>