<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="tim.schedule.workScheduleAppDet">
	
<!--  근무한도 조회 -->
		<select parameterType="map" resultType="cMap" id="getWorkScheduleAppDetLimit">

				<![CDATA[
					SELECT A.SUM_DAY_WK_LMT
					     , A.SUM_DAY_OT_LMT
					     , A.SUM_WEEK_WK_LMT
					     , A.SUM_WEEK_OT_LMT
					     , A.AVG_DAY_WK_LMT
					     , A.AVG_DAY_OT_LMT
					     , A.AVG_WEEK_WK_LMT
					     , A.AVG_WEEK_OT_LMT
					  FROM TTIM115 A
					 WHERE A.ENTER_CD 		= #{ssnEnterCd}
					   AND A.WORK_GRP_CD    = #{workGrpCd}
				]]>


		</select>

	
<!--  근무조 조회 -->
		<select parameterType="map" resultType="cMap" id="getWorkScheduleAppDetWorkOrg">

				<![CDATA[
					SELECT A.WORK_ORG_CD 
					     , A.WORK_GRP_CD
					     , B.MAP_NM AS WORK_ORG_NM
					     , C.INTERVAL_CD
					     , F_COM_GET_GRCODE_NOTE_VAL( C.ENTER_CD, 'T90200', C.INTERVAL_CD, 1 ) AS DAY_GRCODE_CD  --신청단위
					     , F_COM_GET_GRCODE_NOTE_VAL( C.ENTER_CD, 'T90200', C.INTERVAL_CD, 2 ) AS TERM_GUBUN     --월단위/주단위
					     
				         , F_COM_GET_WORKTYPE(A.ENTER_CD, A.SABUN, A.YMD) AS WORK_TYPE  --직군(A:사무직, B:생산직)
					  FROM TTIM120_V A, TORG109 B, TTIM115 C
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.SABUN    = #{searchApplSabun}
					   AND A.YMD      = REPLACE(TRIM( #{ymd} ), '-', '')
					   AND A.ENTER_CD = B.ENTER_CD
					   AND A.WORK_ORG_CD = B.MAP_CD
					   AND B.MAP_TYPE_CD = '500'
					   AND A.ENTER_CD = C.ENTER_CD
					   AND A.WORK_GRP_CD = C.WORK_GRP_CD
				]]>


		</select>
		
<!-- 		조회 (메인)-->
		<select parameterType="map" resultType="cMap" id="getWorkScheduleAppDet">

				<![CDATA[
					SELECT A.ENTER_CD
						 , A.APPL_SEQ
						 , A.SABUN
						 
						 , A.WORK_GRP_CD
						 , A.WORK_ORG_CD
						 , (SELECT MAP_NM
						      FROM TORG109 X
						     WHERE X.ENTER_CD = A.ENTER_CD
						       AND X.MAP_TYPE_CD = '500'
						       AND X.MAP_CD      = A.WORK_ORG_CD
						       AND A.YMD BETWEEN X.SDATE AND NVL( X.EDATE, '29991231' ) ) AS WORK_ORG_NM
						 , A.INTERVAL_CD
					     , F_COM_GET_GRCODE_NOTE_VAL( A.ENTER_CD, 'T90200', A.INTERVAL_CD, 1 ) AS DAY_GRCODE_CD 
					     , F_COM_GET_GRCODE_NOTE_VAL( A.ENTER_CD, 'T90200', A.INTERVAL_CD, 2 ) AS TERM_GUBUN     --월단위/주단위
						 , A.DAY_GUBUN_CD
						 , A.YMD
						 , A.SDATE
						 , A.EDATE
					     , TO_CHAR(TO_DATE(A.SDATE,'YYYYMMDD'),'YYYY-MM-DD') || ' ~ ' || TO_CHAR(TO_DATE(A.EDATE,'YYYYMMDD'),'YYYY-MM-DD') AS WORK_TERM
						 , A.NOTE
						 
					  FROM TTIM811 A, TTIM118 C
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.SABUN    = #{searchApplSabun}
					   AND A.APPL_SEQ = #{searchApplSeq}
					   AND A.ENTER_CD = C.ENTER_CD
					   AND A.WORK_ORG_CD = C.WORK_ORG_CD
					   AND A.YMD BETWEEN C.SDATE AND NVL( C.EDATE, '29991231' )
					   
				]]>


		</select>


<!-- 	근무스케쥴 헤더 조회 -->
		<select parameterType="map" resultType="cMap" id="getWorkScheduleAppDetHeaderList">

				<![CDATA[
					SELECT TO_CHAR(TO_DATE(A.YMD, 'YYYYMMDD'), 'MM/DD') || ' (' || to_char(TO_DATE(A.YMD, 'YYYYMMDD'), 'dy') || ')' AS TITLE
					     , TO_CHAR(TO_DATE(A.YMD, 'YYYYMMDD'), 'MM/DD') AS MD
					     , CASE WHEN to_char(TO_DATE(A.YMD, 'YYYYMMDD') + 1, 'd') = F_COM_GET_STD_CD_VALUE(#{ssnEnterCd}, 'TIM_STD_START_WEEK') THEN 'Y'
					            WHEN A.YMD = TRIM(#{searchEYmd}) THEN 'Y'
					            ELSE 'N' END AS WEEK_YN
					     , '(' || to_char(TO_DATE(A.YMD, 'YYYYMMDD'), 'dy') || ')' AS WK
					     , 'td' || A.YMD AS SAVE_NAME
					     , CASE WHEN A.YMD <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN '0'
					            WHEN A.WORK_GRP_CD = TRIM( #{workGrpCd} ) THEN '1'
					            ELSE '0' END AS COL_EDIT 
					     , WORK_YN        -- 공휴일 포함 휴일여부  
					     , PLAN_WORK_YN   -- 스케쥴상의 휴일여부
					     , HOLIDAY_YN     -- 공휴일 여부 
                         , CASE WHEN TRIM(#{termGubun}) = 'M' AND A.YMD = TO_CHAR( ADD_MONTHS( TO_DATE(TRIM(#{searchSYmd}), 'YYYYMMDD')-1, TO_NUMBER(TRIM(#{intervalCd}))/30 ) , 'YYYYMMDD') THEN 'Y'
                                WHEN TRIM(#{termGubun}) = 'W' AND A.YMD = TO_CHAR( TO_DATE(TRIM(#{searchSYmd}), 'YYYYMMDD')+ TO_NUMBER(TRIM(#{intervalCd})) -1 , 'YYYYMMDD') THEN 'Y'
                                ELSE 'N' END AS TERM_YN
					  FROM TTIM120_V A
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.SABUN    = #{searchSabun}
					   AND A.YMD BETWEEN TRIM(#{searchSYmd}) AND TRIM(#{searchEYmd})
					 ORDER BY A.YMD 
				]]>


		</select>
		
<!-- 	근무스케쥴 조회 -->
		<select parameterType="map" resultType="cMap" id="getWorkScheduleAppDetList">

				<![CDATA[
					WITH WORK_LIST AS (
										SELECT 'td' || A.YMD AS YMD
										     , A.YMD AS SUN_DATE
											 , B.TIME_CD AS VAL
                                             , C.BF_TIME_CD 
                                             , C.AF_TIME_CD
                                             , TO_CHAR(NVL(C.OT_TIME,Z.OT_TIME)) AS OT_TIME 
                                             , C.GNT_STAT
                                             , C.GNT_PLAN
                                             , D.RGB_COLOR AS BF_BG_COLOR 
                                             , E.RGB_COLOR AS AF_BG_COLOR 
                                             
                                             , CASE WHEN A.HOLIDAY_YN = 'Y' AND A.PLAN_WORK_YN = 'N'  -- 근무일이면서 공휴일이면..  
                                                    THEN ( SELECT NVL(X.HOL_TIME_HOUR,0) 
                                                             FROM TTIM017 X 
                                                            WHERE X.ENTER_CD = A.ENTER_CD 
                                                              AND X.TIME_CD  = A.HOL_TIME_CD
                                                         ) ELSE 0 END AS HOL_HOUR
                                             , Y.HOLIDAY_NM            
										  FROM TTIM120_V A, TTIM017 B, TTIM812 C, TTIM017 D, TTIM017 E
										       -- 연장(휴일)근무신청
                                             , ( SELECT ENTER_CD, SABUN, YMD, SUM(REQUEST_HOUR) AS OT_TIME
                                                   FROM TTIM601 A
                                                   WHERE A.ENTER_CD = TRIM( #{ssnEnterCd} )
                                                     AND A.SABUN    = TRIM( #{searchSabun} )
                                                     AND A.YMD BETWEEN TRIM(#{searchSYmd}) AND TRIM(#{searchEYmd})
                                                     AND EXISTS ( SELECT 1
                                                                    FROM THRI103 X
                                                                   WHERE X.ENTER_CD = A.ENTER_CD
                                                                     AND X.APPL_SEQ = A.APPL_SEQ
                                                                     AND X.APPL_STATUS_CD IN ( '21', '31', '99' ) )
                                                   GROUP BY ENTER_CD, SABUN, YMD                
                                               ) Z 
                                             , TTIM001 Y                  
										 WHERE A.ENTER_CD = TRIM( #{ssnEnterCd} )
										   AND A.SABUN    = TRIM( #{searchSabun} )
										   AND A.WORK_GRP_CD   = TRIM( #{workGrpCd} )
										   AND A.YMD BETWEEN TRIM(#{searchSYmd}) AND TRIM(#{searchEYmd})
										   AND A.ENTER_CD = B.ENTER_CD
										   AND A.TIME_CD  = B.TIME_CD
                                           AND A.ENTER_CD = C.ENTER_CD(+)
                                           AND A.YMD      = C.WORK_YMD(+)
                                           AND TRIM( #{searchSabun} )   = C.SABUN(+)
                                           AND TRIM( #{searchApplSeq} ) = C.APPL_SEQ(+)
                                           AND C.ENTER_CD   = D.ENTER_CD(+)
                                           AND C.BF_TIME_CD = D.TIME_CD(+)
                                           AND C.ENTER_CD   = E.ENTER_CD(+)
                                           AND C.AF_TIME_CD = E.TIME_CD(+)
                                           
                                           -- 연장근무
                                           AND A.ENTER_CD   = Z.ENTER_CD(+)
                                           AND A.SABUN      = Z.SABUN(+)
                                           AND A.YMD        = Z.YMD(+)
                                           -- 공휴일
                                           AND A.ENTER_CD   	   = Y.ENTER_CD(+)
                                           AND A.BUSINESS_PLACE_CD = Y.BUSINESS_PLACE_CD(+)
                                           AND A.YMD               = Y.YY(+)||Y.MM(+)||Y.DD(+)
                                           
					)
					SELECT *
					  FROM (  
						     SELECT 1 SEQ, '변경 전' AS GUBUN, YMD, NVL(BF_TIME_CD, VAL) AS VAL, BF_BG_COLOR AS BG_COLOR, HOL_HOUR
						       FROM WORK_LIST 
						      UNION ALL
						     SELECT 2 SEQ, '변경 후' AS GUBUN, YMD, NVL(AF_TIME_CD, VAL) AS VAL, AF_BG_COLOR AS BG_COLOR, HOL_HOUR
						       FROM WORK_LIST
                              UNION ALL
                             SELECT 3 SEQ, '근태현황' AS GUBUN, YMD, NVL(HOLIDAY_NM, F_TIM_GET_DAY_GNT_NM(#{ssnEnterCd}, TRIM(#{searchSabun}), SUN_DATE)) AS VAL, '' AS BG_COLOR, HOL_HOUR
                               FROM WORK_LIST
                              UNION ALL
						     SELECT 4 SEQ, '근태계획' AS GUBUN, YMD, NVL(GNT_PLAN, '') AS VAL, '' AS BG_COLOR, HOL_HOUR
						       FROM WORK_LIST
                              UNION ALL
						     SELECT 5 SEQ, '연장계획<br>(시간)' AS GUBUN, YMD, NVL(OT_TIME, '') AS VAL, '' AS BG_COLOR, HOL_HOUR
						       FROM WORK_LIST
					       ) PIVOT ( MAX(VAL), MAX(BG_COLOR) AS BACK_COLOR, MAX(HOL_HOUR) AS HOL_HOUR  
					                 FOR YMD IN
					           ]]>
<foreach item="tit" collection="titles" open="(" close=")" separator=" , " >
					        						'${tit.saveName}' AS ${tit.saveName}
</foreach>
					                )
					 ORDER BY SEQ


		</select>
		

<!-- 기 신청 건 체크   -->
		<select parameterType="map" resultType="cMap" id="getWorkScheduleAppDetDupCnt">

				<![CDATA[
					SELECT COUNT(1) AS DUP_CNT
					  FROM TTIM811 A, THRI103 B
					 WHERE A.ENTER_CD     = #{ssnEnterCd}
					   AND A.APPL_SEQ    != #{searchApplSeq}
					   AND A.SABUN        = TRIM( #{searchApplSabun} )
					   AND TRIM( #{searchSYmd} ) BETWEEN A.SDATE  AND A.EDATE
					   AND A.ENTER_CD = B.ENTER_CD
					   AND A.APPL_SEQ = B.APPL_SEQ
					   AND B.APPL_STATUS_CD IN ( '21', '31' )
				]]>


		</select>
		
		
<!-- 근무스케쥴신청 세부내역 저장 -->		
		<update parameterType="map" id="saveWorkScheduleAppDet">

						 MERGE INTO TTIM811 T 
						 USING 
						( 
							SELECT  #{ssnEnterCd} 					AS ENTER_CD
									, TRIM(#{searchApplSeq})     		AS APPL_SEQ
									, TRIM(#{searchApplSabun})    	AS SABUN
						            , TRIM(#{workGrpCd})  			AS WORK_GRP_CD
						            , TRIM(#{workOrgCd})  			AS WORK_ORG_CD
						            , TRIM(#{intervalCd})  			AS INTERVAL_CD
						            , TRIM(#{dayGubunCd})  			AS DAY_GUBUN_CD
						            , REPLACE(TRIM(#{ymd}), '-', '')  AS YMD
						            , TRIM( #{searchSYmd} )  			AS SDATE
						            , TRIM( #{searchEYmd} )  			AS EDATE
						            , TRIM(#{note})  AS  NOTE
						        FROM DUAL
						) S 
						ON ( 
						          T.ENTER_CD = S.ENTER_CD 
						     AND  T.APPL_SEQ = S.APPL_SEQ 
						     AND  T.SABUN    = S.SABUN 
						) 
						WHEN MATCHED THEN 
						   UPDATE SET T.CHKDATE			= sysdate 
						            , T.CHKID			= #{ssnSabun}
						            , T.WORK_GRP_CD 	= S.WORK_GRP_CD
						            , T.WORK_ORG_CD 	= S.WORK_ORG_CD 
						            , T.INTERVAL_CD 	= S.INTERVAL_CD 
						            , T.DAY_GUBUN_CD 	= S.DAY_GUBUN_CD 
						            , T.YMD 			= S.YMD 
						            , T.SDATE 			= S.SDATE 
						            , T.EDATE 			= S.EDATE 
						            , T.NOTE 			= S.NOTE 
						WHEN NOT MATCHED THEN 
						   INSERT 
						   ( 
						              T.ENTER_CD
						            , T.APPL_SEQ
						            , T.SABUN
						            , T.WORK_GRP_CD
						            , T.WORK_ORG_CD
						            , T.INTERVAL_CD
						            , T.DAY_GUBUN_CD
						            , T.YMD
						            , T.SDATE
						            , T.EDATE
						            , T.NOTE
						            , T.CHKDATE
						            , T.CHKID
						   ) 
						   VALUES 
						   ( 
						              S.ENTER_CD
						            , S.APPL_SEQ
						            , S.SABUN
						            , S.WORK_GRP_CD
						            , S.WORK_ORG_CD
						            , S.INTERVAL_CD
						            , S.DAY_GUBUN_CD
						            , S.YMD
						            , S.SDATE
						            , S.EDATE
						            , S.NOTE
						            , sysdate
						            , #{ssnSabun}
						   ) 
		</update>
		
		
<!-- 근무스케쥴신청 상세 저장 -->		
		<update parameterType="map" id="saveWorkScheduleAppDetList">

						 MERGE INTO TTIM812 T 
						 USING 
						( 
						
							SELECT  #{ssnEnterCd} 					AS ENTER_CD
									, TRIM(#{searchApplSeq})     		AS APPL_SEQ
									, TRIM(#{searchApplSabun})    	AS SABUN
						            , TRIM(#{workYmd})  				AS WORK_YMD
						            , TRIM(#{workOrgCd})  			AS WORK_ORG_CD
						            , TRIM(#{bfTimeCd})  				AS BF_TIME_CD
						            , TRIM(#{afTimeCd})  				AS AF_TIME_CD
						            , TRIM(#{otTime})  				AS OT_TIME
						            , TRIM(#{gntStat})  				AS GNT_STAT
						            , TRIM(#{gntPlan})  				AS GNT_PLAN
						        FROM DUAL
						) S 
						ON ( 
						          T.ENTER_CD 	= S.ENTER_CD 
						     AND  T.APPL_SEQ 	= S.APPL_SEQ 
						     AND  T.SABUN 		= S.SABUN 
						     AND  T.WORK_YMD 	= S.WORK_YMD 
						) 

						WHEN MATCHED THEN 
						   UPDATE SET T.CHKDATE		= sysdate 
						            , T.CHKID		= #{ssnSabun}
						            , T.WORK_ORG_CD = S.WORK_ORG_CD 
						            , T.BF_TIME_CD 	= S.BF_TIME_CD 
						            , T.AF_TIME_CD 	= S.AF_TIME_CD
						            , T.OT_TIME  	= S.OT_TIME
						            , T.GNT_STAT 	= S.GNT_STAT 
						            , T.GNT_PLAN 	= S.GNT_PLAN 
						WHEN NOT MATCHED THEN 
						   INSERT 
						   ( 
						              T.ENTER_CD
						            , T.APPL_SEQ
						            , T.SABUN
						            , T.WORK_YMD
						            , T.WORK_ORG_CD
						            , T.BF_TIME_CD
						            , T.AF_TIME_CD
						            , T.OT_TIME
						            , T.GNT_STAT
						            , T.GNT_PLAN
						            , T.CHKDATE
						            , T.CHKID
						   ) 
						   VALUES 
						   ( 
						              S.ENTER_CD
						            , S.APPL_SEQ
						            , S.SABUN
						            , S.WORK_YMD
						            , S.WORK_ORG_CD
						            , S.BF_TIME_CD
						            , S.AF_TIME_CD
						            , S.OT_TIME
						            , S.GNT_STAT
						            , S.GNT_PLAN
						            , sysdate
						            , #{ssnSabun}
						   ) 

		</update>
		
<!-- 근무스케쥴신청 상세 삭제  -->
		<delete parameterType="map" id="deleteWorkScheduleAppDetList">

				<![CDATA[
					DELETE FROM TTIM812
					 WHERE ENTER_CD = #{ssnEnterCd}
					   AND APPL_SEQ = TRIM( #{searchApplSeq} )
				]]>

		</delete>
		

</mapper>