<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="tim.request.vacationChangeAppDet">

<!-- 근태취소신청 세부내역 조회 -->
		<select parameterType="map" resultType="cMap" id="getVacationChangeAppDetMap">

				<![CDATA[
					SELECT A.GNT_CD
					     , A.GNT_GUBUN_CD
					     , A.S_YMD
					     , A.E_YMD
					     , A.HOL_DAY
					     , A.CLOSE_DAY
					     , A.REQ_S_HM
					     , A.REQ_E_HM
					     , A.REQUEST_HOUR
					     , A.OCC_CD ||'_'|| A.FAM_CD AS OCC_FAM_CD
					     , A.OCC_CD
					     , A.FAM_CD
					     , A.OCC_HOLIDAY
					     , A.GNT_CD
					     , B.B_APPL_SEQ
					     , B.GNT_REQ_REASON
					     , B.B_REQUEST_HOUR
					     , B.B_REQ_S_HM
					     , B.B_REQ_E_HM
					     , (SELECT REQUEST_USE_TYPE FROM TTIM014 WHERE ENTER_CD = A.ENTER_CD AND GNT_CD = A.GNT_CD) AS REQUEST_USE_TYPE

					  FROM TTIM301 A, TTIM385 B 
                     WHERE A.ENTER_CD = #{ssnEnterCd}
                               ]]>
<choose><when test='searchBApplSeq != null and !searchBApplSeq.equals("")'>
					   AND A.APPL_SEQ = TRIM( #{searchBApplSeq} )
					   AND A.ENTER_CD = B.ENTER_CD(+)
					   AND A.APPL_SEQ = B.B_APPL_SEQ(+)
					   AND TRIM( #{searchApplSeq} ) = B.APPL_SEQ(+)
		</when><otherwise>
			           AND A.ENTER_CD = B.ENTER_CD
					   AND A.APPL_SEQ = B.B_APPL_SEQ
					   AND B.APPL_SEQ = TRIM( #{searchApplSeq} )
</otherwise>
</choose>


		</select>
		
		<select parameterType="map" resultType="cMap" id="getVacationChangeAppCheck" >

				<![CDATA[
					select CASE  WHEN  #{sYmd} BETWEEN SRC_USE_S_YMD AND SRC_USE_E_YMD THEN 'Y'
					             ELSE 'N' END AS USE_YMD_YN,
					      NVL((SELECT 'Y'
							FROM TSYS007 -- 만세력
							WHERE DAY_NM NOT IN ('토', '일')
							  AND SUN_DATE = #{sYmd}
							  AND SUN_DATE NOT IN (SELECT YY||MM||DD 
							                      FROM TTIM001  -- 휴일관리 
							                    WHERE ENTER_CD = #{ssnEnterCd}
							                        AND NVL(GUBUN, 'Y') = 'Y' --양력기준
							                   ) ), 'N') BIZ_DAY_YN
					from TTIM301
					where enter_Cd = #{ssnEnterCd}
					and appl_seq = #{applSeq}
				]]>


		</select>
		
		<select parameterType="map" resultType="cMap" id="getVacationChangeAppDetList" >

				<![CDATA[
					SELECT YMD
					FROM TTIM405
					WHERE ENTER_CD = TRIM( #{ssnEnterCd} )
					AND APPL_SEQ = TRIM( #{searchBApplSeq} )
				]]>


		</select>
		
		<select parameterType="map" resultType="cMap" id="getVacationChangeAppDetChangeList" >

				<![CDATA[
					SELECT GNT_CD, SABUN, APPL_SEQ, VACATION_YMD
					FROM TTIM387
					WHERE ENTER_CD = TRIM( #{ssnEnterCd} )
					AND APPL_SEQ = TRIM( #{searchApplSeq} )
				]]>


		</select>
		
<!-- 근태취소신청 세부내역 저장 -->
		<update parameterType="map" id="saveVacationChangeAppDet">
				<![CDATA[
					MERGE INTO TTIM385 T
					USING  (
							 SELECT TRIM(#{ssnEnterCd}) 							AS ENTER_CD
							   	 	, TRIM( #{searchApplSeq} )					AS APPL_SEQ
									, TRIM( #{searchApplSabun} )					AS SABUN
									, TRIM( #{searchGntCd} )	    				AS GNT_CD
									, TRIM( #{searchApplYmd} )					AS S_YMD
								    , TRIM( #{searchBApplSeq} )					AS B_APPL_SEQ
								    , TRIM( #{gntReqReason} )						AS GNT_REQ_REASON
								    , TRIM( #{requestHour} )						AS B_REQUEST_HOUR
								    , REPLACE(TRIM( #{startDate} ),':','')		AS B_REQ_S_HM
								    , REPLACE(TRIM( #{endDate} ),':','')			AS B_REQ_E_HM
							  FROM DUAL
							) S
					ON (     T.ENTER_CD	= S.ENTER_CD 
					     AND T.SABUN    = S.SABUN 
					     AND T.APPL_SEQ = S.APPL_SEQ
					    )
					WHEN MATCHED THEN
						UPDATE SET	  T.GNT_REQ_REASON  = S.GNT_REQ_REASON
									, T.B_REQUEST_HOUR  = S.B_REQUEST_HOUR
									, T.B_REQ_S_HM 		= S.B_REQ_S_HM
									, T.B_REQ_E_HM 		= S.B_REQ_E_HM
									, T.CHKDATE			= SYSDATE
									, T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD     
							, T.GNT_CD       
							, T.SABUN        
							, T.S_YMD        
							, T.APPL_SEQ     
							, T.B_APPL_SEQ   
							, T.GNT_REQ_REASON
							, T.B_REQUEST_HOUR
							, T.B_REQ_S_HM
							, T.B_REQ_E_HM
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD     
							, S.GNT_CD       
							, S.SABUN        
							, S.S_YMD        
							, S.APPL_SEQ     
							, S.B_APPL_SEQ   
							, S.GNT_REQ_REASON
							, S.B_REQUEST_HOUR
							, S.B_REQ_S_HM
							, S.B_REQ_E_HM
							, SYSDATE
							, #{ssnSabun}
						)
				]]>

		</update>
		
		
		<delete parameterType="map" id="deleteVacationChangeAppDetList">

				<![CDATA[
					DELETE FROM TTIM387
					WHERE ENTER_CD = TRIM( #{ssnEnterCd} )
					AND APPL_SEQ = TRIM( #{searchApplSeq} )
				]]>

		</delete>
		
		<update parameterType="map" id="insertVacationChangeAppDetList">

				<![CDATA[
					MERGE INTO TTIM387 T
					USING  (
							SELECT A.ENTER_CD
,F_COM_GET_ENTER_NM(A.ENTER_CD,'1') AS ENTER_NM
								 , A.GNT_CD
								 , A.SABUN
								 , A.APPL_SEQ
								 , A.VACATION_YMD
							   FROM (
									SELECT NULL		AS ENTER_CD
										 , NULL		AS GNT_CD
										 , NULL		AS SABUN
										 , NULL		AS APPL_SEQ
										 , NULL		AS VACATION_YMD
									  FROM DUAL
									  ]]>
<foreach item="rm" collection="insertRows" >
							UNION ALL
							SELECT #{ssnEnterCd}				AS ENTER_CD
								 , TRIM(#{rm.gntCd})		AS GNT_CD
								 , TRIM(#{rm.sabun})		AS SABUN
								 , TRIM(#{rm.applSeq})		AS APPL_SEQ
								 , TRIM(#{rm.vacationYmd})	AS VACATION_YMD
							  FROM DUAL
</foreach>
									) A 
							WHERE A.APPL_SEQ IS NOT NULL
							) S
					ON (     T.ENTER_CD	= S.ENTER_CD
						 AND T.GNT_CD   = S.GNT_CD  
					     AND T.SABUN    = S.SABUN 
					     AND T.APPL_SEQ = S.APPL_SEQ
					     AND T.VACATION_YMD	= S.VACATION_YMD
					    )
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.GNT_CD
							, T.SABUN
							, T.APPL_SEQ
							, T.VACATION_YMD
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.GNT_CD
							, S.SABUN
							, S.APPL_SEQ
							, S.VACATION_YMD
							, SYSDATE
							, #{ssnSabun}
						)
		</update>


</mapper>