<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="tim.workApp.workAttendAdjAppDet">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getWorkAttendAdjAppDet">

				<![CDATA[
						SELECT A.ENTER_CD
						     , A.APPL_SEQ
						     , A.SABUN
						     , A.YMD
						     , A.BF_SHM
						     , A.BF_EHM
						     , A.AF_SHM
						     , A.AF_EHM
						     , A.REASON
						     , A.NOTE
						  FROM TTIM345 A 
					    WHERE A.ENTER_CD   = #{ssnEnterCd}
                          AND A.APPL_SEQ   = TRIM( #{searchApplSeq} )
				]]>


		</select>

<!-- 	세콤 출퇴근 시간 조회 -->
		<select parameterType="map" resultType="cMap" id="getWorkAttendAdjAppDetSecomTime">

				<![CDATA[
		         SELECT CASE WHEN SHM IS NULL THEN '' ELSE substr(SHM, 1,2) || ':' || substr(SHM, 3,2) END SHM
					  , CASE WHEN EHM IS NULL THEN '' ELSE substr(EHM, 1,2) || ':' || substr(EHM, 3,2) END EHM
		           FROM (
						SELECT F_TIM_SECOM_TIME_HM(#{ssnEnterCd}, REPLACE(#{ymd},'-', ''), #{sabun}, '1', #{applSeq}) SHM
						     , F_TIM_SECOM_TIME_HM(#{ssnEnterCd}, REPLACE(#{ymd},'-', ''), #{sabun}, '2', #{applSeq}) EHM
						  FROM DUAL
					  )
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getWorkAttendAdjAppDetEndYn">

				<![CDATA[
					SELECT NVL(MAX(END_YN), 'N') AS END_YN
					  FROM (
						    SELECT A.YM, A.SUM_YN, A.END_YN
						             , F_CPN_GET_WORK_SYMD(A.ENTER_CD, F_COM_GET_PAY_TYPE(C.ENTER_CD, C.SABUN, C.YMD), A.YM) AS SDATE
						             , F_CPN_GET_WORK_EYMD(A.ENTER_CD, F_COM_GET_PAY_TYPE(C.ENTER_CD, C.SABUN, C.YMD), A.YM) AS EDATE
						             , C.YMD
						    FROM TTIM999 A, TTIM004 B, (SELECT #{ssnEnterCd} AS ENTER_CD   /*회사코드*/
						                                                            , #{searchApplSabun} AS SABUN   /*사번*/
						                                                            , REPLACE(#{tdYmd},'-', '') AS YMD     /*일자*/
						                                                 FROM DUAL) C
						    WHERE A.ENTER_CD = B.ENTER_CD
						        AND B.PAY_TYPE = F_COM_GET_PAY_TYPE(A.ENTER_CD, C.SABUN, C.YMD)
						        AND A.BUSINESS_PLACE_CD = F_COM_GET_BP_CD(A.ENTER_CD, C.SABUN, C.YMD)
						        AND A.ENTER_CD = C.ENTER_CD
						) WHERE YMD BETWEEN SDATE AND EDATE
				]]>


		</select>


<!-- 기 신청 건 체크   -->
		<select parameterType="map" resultType="cMap" id="getWorkAttendAdjAppDetDupCheck">

				<![CDATA[
					SELECT NVL(SUM(1),0) AS DUP_CNT
					  FROM TTIM345 A, THRI103 B
					 WHERE A.ENTER_CD     = #{ssnEnterCd}
					   AND A.SABUN        = #{searchApplSabun}
					   AND A.APPL_SEQ    != #{searchApplSeq}
					   AND A.YMD          = REPLACE( #{tdYmd} ,'-','')
					   AND A.ENTER_CD = B.ENTER_CD
					   AND A.APPL_SEQ = B.APPL_SEQ
					   AND B.APPL_STATUS_CD NOT IN ( '11', '23', '33', 'ZZ' )   -- 11:임시저장, 23:결재반려, 33:수신반려, ZZ:취소완료
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getBeginTime">

				<![CDATA[
					SELECT B.BEGIN_SHM
					FROM TTIM120_V A, TTIM017 B
					WHERE A.ENTER_CD = B.ENTER_CD
					AND A.TIME_CD = B.TIME_CD
					AND A.ENTER_CD = #{ssnEnterCd}
					AND A.SABUN = #{searchApplSabun}
					AND A.YMD = REPLACE(#{tdYmd},'-', '')
				]]>


		</select>


		<update parameterType="map" id="saveWorkAttendAdjAppDet">

				<![CDATA[
					MERGE INTO TTIM345 T
					USING	(
					    SELECT  A.ENTER_CD
					          , A.APPL_SEQ
					          , A.SABUN
					          , A.YMD
					          , A.BF_SHM
					          , A.BF_EHM
					          , A.AF_SHM
					          , A.AF_EHM
					          , A.REASON
						  FROM ( 
						       SELECT NULL AS  ENTER_CD
						            , NULL AS  APPL_SEQ
						            , NULL AS  SABUN
						            , NULL AS  YMD
						            , NULL AS  BF_SHM
						            , NULL AS  BF_EHM
						            , NULL AS  AF_SHM
						            , NULL AS  AF_EHM
						            , NULL AS  REASON
						         FROM DUAL
								UNION ALL
						       SELECT TRIM(#{ssnEnterCd})  				AS  ENTER_CD
						            , TRIM(#{searchApplSeq})  			AS  APPL_SEQ
						            , TRIM(#{searchApplSabun})			AS  SABUN
						            , REPLACE(TRIM(#{tdYmd}),'-','')		AS  YMD
						            , REPLACE(TRIM(#{bfShm}),':','')		AS  BF_SHM
						            , REPLACE(TRIM(#{bfEhm}),':','')		AS  BF_EHM
                                    , REPLACE(TRIM(#{afShm}),':','')		AS  AF_SHM
						            , REPLACE(TRIM(#{afEhm}),':','')		AS  AF_EHM
						            , TRIM(#{reason})  					AS  REASON
						        FROM DUAL
						  ) A WHERE A.ENTER_CD IS NOT NULL
							    AND A.SABUN IS NOT NULL
							    AND A.APPL_SEQ IS NOT NULL
							    AND A.YMD IS NOT NULL	
					) S 
					ON ( 
					          T.ENTER_CD = S.ENTER_CD 
					     AND  T.APPL_SEQ = S.APPL_SEQ 
					     AND  T.SABUN    = S.SABUN 
					) 
					WHEN MATCHED THEN 
					   UPDATE SET T.CHKDATE = sysdate 
					            , T.CHKID	= #{ssnSabun}
						        , T.BF_SHM	= S.BF_SHM
								, T.BF_EHM	= S.BF_EHM
								, T.AF_SHM	= S.AF_SHM
								, T.AF_EHM	= S.AF_EHM
								, T.REASON	= S.REASON
					WHEN NOT MATCHED THEN 
					   INSERT 
					   ( 
					              T.ENTER_CD
					            , T.APPL_SEQ
					            , T.SABUN
								, T.YMD
								, T.BF_SHM
								, T.BF_EHM
								, T.AF_SHM
								, T.AF_EHM
								, T.REASON
								, T.CHKDATE
								, T.CHKID
					   ) 
					   VALUES 
					   ( 
					              S.ENTER_CD
					            , S.APPL_SEQ
					            , S.SABUN
								, S.YMD
								, S.BF_SHM
								, S.BF_EHM
								, S.AF_SHM
								, S.AF_EHM
								, S.REASON
								, SYSDATE
								, #{ssnSabun}
						)
				]]>

		</update>

</mapper>