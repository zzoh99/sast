<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.evaluation.appSelfReportApp">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAppSelfReportAppList">

					SELECT   B.APPRAISAL_CD,
					         B.SABUN,
					         F_PAP_GETNAME (B.ENTER_CD, B.SABUN) NAME,
					         F_COM_GET_ORG_NM (B.ENTER_CD, B.ORG_CD, SYSDATE) ORG_NM,
					         <bind name="tpCnt" value="1" />
	                             <foreach item="rm" collection="titles" >
				 				 MAX (NVL (DECODE ( A.ITEM_CD, #{rm.itemCd}, A.VALUE_NM), '-'))  AS ${rm.saveNm} ,
							  	 <bind name="tpCnt" value="tpCnt + 1" />
								 </foreach>
					         C.NOTE,
					         C.ITEM8,
					         C.ITEM9,
					         F_COM_GET_ORG_NM (C.ENTER_CD, C.ITEM9, SYSDATE) AS ITEM9NM,
					         C.ITEM10,
					         C.ITEM11,
					         NVL (C.APP_STATUS, '0') APP_STATUS
			    	FROM 	(SELECT  V.SUNBUN,
					                 X.ENTER_CD,
					                 X.APPRAISAL_CD,
					                 X.ITEM_CD,
					                 X.VALUE_NM,
					                 Y.VALUE_CD,
					                 Y.SABUN
				             FROM    TPAP106 V, TPAP107 X, TPAP322 Y
				             WHERE   X.ENTER_CD = Y.ENTER_CD
			                 AND X.APPRAISAL_CD = Y.APPRAISAL_CD
			                 AND X.ITEM_CD = Y.ITEM_CD
			                 AND X.VALUE_CD = Y.VALUE_CD
			                 AND V.ENTER_CD = X.ENTER_CD
			                 AND V.APPRAISAL_CD = X.APPRAISAL_CD
			                 AND V.ITEM_CD = X.ITEM_CD) A,
					         TPAP201 B,
					         TPAP321 C,
					         TPAP105 D
			    	WHERE    B.ENTER_CD     = A.ENTER_CD(+)
			        AND      B.APPRAISAL_CD = A.APPRAISAL_CD(+)
			        AND      B.SABUN        = A.SABUN(+)
			        AND      B.ENTER_CD     = C.ENTER_CD(+)
			        AND      B.APPRAISAL_CD = C.APPRAISAL_CD(+)
			        AND      B.SABUN        = C.SABUN(+)
			        AND      B.APPRAISAL_CD = D.APPRAISAL_CD
			        AND      B.ENTER_CD     = #{ssnEnterCd}
			        AND      B.APPRAISAL_CD = #{searchAppraisalCd}
			        <if test='searchSabun != null and !searchSabun.equals("")'>
					AND      B.SABUN        = #{searchSabun}
					</if>
			        <if test='searchOrgCd != null and !searchOrgCd.equals("")'>
					AND      B.ORG_CD       = #{searchOrgCd}
					</if>
			       	<if test='searchAppStatus != null and searchAppStatus.equals("0")'>
					AND 	 C.APP_STATUS   IS NULL
					</if>
					<if test='searchAppStatus != null and (searchAppStatus.equals("1") or searchAppStatus.equals("2") or searchAppStatus.equals("3")'>'>
					AND 	 C.APP_STATUS   = #{searchAppStatus}
					</if>
				    GROUP BY B.APPRAISAL_CD,
					         B.SABUN,
					         F_PAP_GETNAME (B.ENTER_CD, B.SABUN),
					         F_COM_GET_ORG_NM (B.ENTER_CD, B.ORG_CD, SYSDATE),
					         C.NOTE,
					         C.ITEM8,
					         C.ITEM9,
					         F_COM_GET_ORG_NM (C.ENTER_CD, C.ITEM9, SYSDATE),
					         C.ITEM10,
					         C.ITEM11,
					         NVL (C.APP_STATUS, '0'),
					         B.ENTER_CD,
					         B.ORG_CD,
					         D.D_BASE_YMD,
					         B.JIKWEE_CD,
					         B.JIKCHAK_CD
					ORDER BY F_ORG_ORG_CHART_SORT (B.ENTER_CD, B.ORG_CD, D_BASE_YMD),
					         F_COM_GET_GRCODE_SEQ (B.ENTER_CD, 'H20030', B.JIKWEE_CD),
					         F_COM_GET_GRCODE_SEQ (B.ENTER_CD, 'H20020', B.JIKCHAK_CD),
					         B.SABUN


		</select>

		<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAppSelfReportAppColList">

				<![CDATA[
					SELECT  'col'||ITEM_CD AS SAVE_NM
					       ,ITEM_CD
					       ,ITEM_NM AS HEADER_NM
					FROM    TPAP106
					WHERE   ENTER_CD     = #{ssnEnterCd}
					AND     APPRAISAL_CD = #{searchAppraisalCd}
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getAppSelfReportAppMap">

				<![CDATA[
					SELECT COL1, COL2, COL3, COL4, COL5 FROM ZTST002
					WHERE 1 = 1
					AND ROWNUM = 1
				]]>


		</select>

<!-- 		저장 -->
		<update parameterType="map" id="saveAppSelfReportApp">

					MERGE INTO TPAP321 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.APPRAISAL_CD
									, A.SABUN
									, A.APP_STATUS
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS APPRAISAL_CD
											, NULL		AS SABUN
											, NULL		AS APP_STATUS
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											#{ssnEnterCd}                   AS ENTER_CD
											, TRIM( #{rm.appraisalCd} )   AS APPRAISAL_CD
											, TRIM( #{rm.sabun} )	      AS SABUN
											, TRIM( #{rm.appStatus} )	  AS APP_STATUS
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD		    = S.ENTER_CD
					AND  T.APPRAISAL_CD		= S.APPRAISAL_CD
					AND  T.SABUN       		= S.SABUN
					 )
					WHEN MATCHED THEN
						UPDATE SET	  T.APP_STATUS  = S.APP_STATUS
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.APPRAISAL_CD
							, T.SABUN
							, T.APP_STATUS
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.APPRAISAL_CD
							, S.SABUN
							, S.APP_STATUS
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
<!-- 		삭제 -->
		<delete parameterType="map" id="deleteAppSelfReportApp">

					DELETE FROM ZTST002
					WHERE 	COL1 IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.col1 != null and !rm.col1.equals("")'>
											TRIM( #{rm.col1} )
										</if>
</foreach>
										)
		</delete>
<!-- 		생성 -->
		<insert parameterType="map" id="insertAppSelfReportApp">

				<![CDATA[
						INSERT INTO MainMnMgrTable
						(
							  COL1
							, COL2
							, COL3
							, COL4
							, COL5
							, COL6
							, CHKDATE
							, CHKID
						)
						SELECT	  S.COL1
								, S.COL2
								, S.COL3
								, S.COL4
								, S.COL5
								, S.COL6
								, sysdate
								, #{ssnSabun}
						FROM (
								SELECT    NULL 	AS COL1
										, NULL 	AS COL2
										, NULL 	AS COL3
										, NULL 	AS COL4
										, NULL 	AS COL5
										, NULL 	AS COL6
								FROM   DUAL
								]]>
<foreach item="rm" collection="insertRows" index="icnt" >
					UNION ALL
								SELECT	  TO_CHAR( (SELECT (NVL(MAX(TO_NUMBER( COL1 )),0) + ${icnt} + 1) FROM ZTST002) )	AS COL1
										, TRIM(#{rm.col2})	AS COL2
										, TRIM(#{rm.col3})	AS COL3
										, TRIM(#{rm.col4})	AS COL4
										, TRIM(#{rm.col5})	AS COL5
										, TRIM(#{rm.col6})	AS COL6
								FROM   DUAL
</foreach>
							) S
						WHERE S.COL1 IS NOT NULL
		</insert>
<!-- 		수정 -->
		<update parameterType="map" id="updateAppSelfReportApp">

				<![CDATA[
					UPDATE ZTST002 T SET
					(	  COL1
						, COL2
						, COL3
						, COL4
						, CHKDATE
						, CHKID
						)
					=
					(	SELECT	  S.COL1
								, S.COL2
								, S.COL3
								, S.COL4
								, S.COL5
								, S.COL6
								, SYSDATE
								, #{ssnSabun}
						FROM (
							SELECT	  NULL 	AS COL1
									, NULL 	AS COL2
									, NULL 	AS COL3
									, NULL 	AS COL4
									, NULL 	AS COL5
									, NULL 	AS COL6
									FROM   DUAL
									]]>
<foreach item="rm" collection="updateRows" >
					UNION ALL
								SELECT
										  TRIM(#{rm.col1})	AS COL1
										, TRIM(#{rm.col2})	AS COL2
										, TRIM(#{rm.col3})	AS COL3
										, TRIM(#{rm.col4})	AS COL4
										, TRIM(#{rm.col5})	AS COL5
										, TRIM(#{rm.col6})	AS COL6
								FROM   DUAL
</foreach>
							) S
						WHERE S.COL1 IS NOT NULL
					)
					WHERE EXISTS (
									SELECT S.COL1
									FROM (
											SELECT	S.COL1
											FROM (
												SELECT	NULL 				AS COL1	FROM	DUAL
			<foreach item="rm" collection="updateRows" > UNION ALL		SELECT	TRIM(#{rm.col1})	AS COL1	FROM	DUAL  </foreach>
												) S
											WHERE S.COL1 IS NOT NULL
										)S
									WHERE T.COL1 = S.COL1
								)
		</update>

</mapper>