<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.appCompetency.compAppraisalIDMng">
<!-- 		리더십진단ID관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getCompAppraisalIDMngList">
				<![CDATA[
				SELECT A.ENTER_CD,
					   A.COMP_APPRAISAL_CD,
					   A.COMP_APPRAISAL_NM, 
					   A.APPRAISAL_YY, 
					   A.CON_YN, 
					   A.CLOSE_YN,
					   A.NOTE, 
					   A.APP_S_YMD, 
					   A.APP_E_YMD,
				       A.SEARCH_SEQ,
				       (SELECT SEARCH_DESC FROM THRI201 WHERE ENTER_CD = A.ENTER_CD AND SEARCH_SEQ = A.SEARCH_SEQ) AS SEARCH_SEQ_NM
				FROM TPAP521 A    
				WHERE A.ENTER_CD = #{ssnEnterCd}
				ORDER BY A.APPRAISAL_YY DESC, A.COMP_APPRAISAL_CD DESC
				]]>
		</select>
		
<!-- 		리더십진단ID관리 저장 -->	
		<update parameterType="map" id="saveCompAppraisalIDMng">

				<![CDATA[
					MERGE INTO TPAP521 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.COMP_APPRAISAL_CD
									, A.COMP_APPRAISAL_NM
									, A.APPRAISAL_YY
									, A.APP_S_YMD
									, A.APP_E_YMD
									, A.NOTE
									, A.CLOSE_YN
									, A.CON_YN
									, A.SEARCH_SEQ
							FROM	(
									SELECT	  NULL		AS ENTER_CD
										, NULL		AS COMP_APPRAISAL_CD
										, NULL		AS COMP_APPRAISAL_NM
										, NULL		AS APPRAISAL_YY
										, NULL		AS APP_S_YMD
										, NULL		AS APP_E_YMD
										, NULL		AS NOTE
										, NULL		AS CLOSE_YN
										, NULL		AS CON_YN        
										, NULL	    AS SEARCH_SEQ
									FROM	DUAL
									]]>
<bind name='icnt' value='1' />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT	TRIM(#{ssnEnterCd})	AS ENTER_CD
											<choose>
											<when test='rm.compAppraisalCd != null and !rm.compAppraisalCd.equals("")'>
												, TRIM( #{rm.compAppraisalCd}) AS COMP_APPRAISAL_CD
											</when>
									     <otherwise>
												, (SELECT SUBSTR( #{rm.appraisalYy},3,2) ||'L'|| LPAD(NVL(MAX(TO_NUMBER(SUBSTR(COMP_APPRAISAL_CD,-2))),0) + ${icnt},2,'0') AS COMP_APPRAISAL_CD
												FROM TPAP521
												WHERE ENTER_CD = #{ssnEnterCd}
													AND APPRAISAL_YY =  #{rm.appraisalYy}
											 )
											 <bind name="icnt" value="icnt + 1"/>
										 </otherwise>
											</choose>
											
											, TRIM(  #{rm.compAppraisalNm} )	AS COMP_APPRAISAL_NM
											, TRIM(  #{rm.appraisalYy} )		AS APPRAISAL_YY
											, TRIM(  #{rm.appSYmd} )			AS APP_S_YMD
											, TRIM(  #{rm.appEYmd} )			AS APP_E_YMD
											, TRIM(  #{rm.note} )			AS NOTE
											, TRIM(  #{rm.closeYn} )			AS CLOSE_YN
											, TRIM(  #{rm.conYn} )			AS CON_YN
											, TRIM(  #{rm.searchSeq} )		AS SEARCH_SEQ
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.COMP_APPRAISAL_CD = S.COMP_APPRAISAL_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.COMP_APPRAISAL_NM  	= S.COMP_APPRAISAL_NM     
									, T.APPRAISAL_YY		= S.APPRAISAL_YY
									, T.APP_S_YMD          	= S.APP_S_YMD            
									, T.APP_E_YMD      		= S.APP_E_YMD      
									, T.NOTE      			= S.NOTE      
									, T.CLOSE_YN           	= S.CLOSE_YN           
									, T.CON_YN    			= S.CON_YN    
									, T.CHKDATE				= SYSDATE
									, T.CHKID				= #{ssnSabun}
									, T.SEARCH_SEQ    		= S.SEARCH_SEQ
					WHEN NOT MATCHED THEN
						INSERT 
						(	
						      T.ENTER_CD        
							, T.COMP_APPRAISAL_CD      
							, T.COMP_APPRAISAL_NM      
							, T.APPRAISAL_YY 
							, T.APP_S_YMD             
							, T.APP_E_YMD       
							, T.NOTE       
							, T.CLOSE_YN            
							, T.CON_YN      
							, T.CHKDATE
							, T.CHKID
							, T.SEARCH_SEQ
						) 
						VALUES 
						(
							  S.ENTER_CD           
							, S.COMP_APPRAISAL_CD      
							, S.COMP_APPRAISAL_NM      
							, S.APPRAISAL_YY 
							, S.APP_S_YMD             
							, S.APP_E_YMD       
							, S.NOTE       
							, S.CLOSE_YN            
							, S.CON_YN           
							, SYSDATE
							, #{ssnSabun}
							, S.SEARCH_SEQ
						)
		</update>
<!-- 		리더십진단ID관리 삭제 -->
		<delete parameterType="map" id="deleteCompAppraisalIDMng">

				<![CDATA[
					DELETE FROM TPAP521
					WHERE ENTER_CD = TRIM( #{ssnEnterCd} )
					  AND ENTER_CD||'_'||COMP_APPRAISAL_CD IN ( NULL
					                                                ]]>
<foreach item="rm" collection="deleteRows" >
					,
						<if test='rm.compAppraisalCd != null and !rm.compAppraisalCd.equals("")'>
							TRIM(#{ssnEnterCd})||'_'||TRIM( #{rm.compAppraisalCd})
						</if>
</foreach>
						)
		</delete>

		<select parameterType="map" resultType="cMap" id="getAppPeopleList">

				<![CDATA[
					SELECT	DISTINCT(T1.APP_SABUN || '@' || T1.ENTER_CD) AS PUSH_TARGET
					FROM	TPAP527 T1
					WHERE	T1.ENTER_CD = #{ssnEnterCd}
					 AND	T1.COMP_APPRAISAL_CD = #{searchCompAppraisalCd}
				]]>


		</select>
</mapper>