<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.intern.internAppMgr">

<!-- 촉탁직평가관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getInternAppMgrList">

				<![CDATA[
					SELECT	/*	InternAppMgr-mapping-query.getInternAppMgrList	*/
							A.ENTER_CD				/*회사구분(TORG900)*/
						,	A.APPRAISAL_CD			/*평가ID코드(TPAP101)*/
						,	A.SABUN					/*사원번호*/
						,	F_COM_GET_NAMES(#{ssnEnterCd},	A.SABUN)	AS	NAME
       				    ,   F_COM_GET_ORG_NM(#{ssnEnterCd},F_COM_GET_ORG_CD('JJA',A.SABUN,TO_CHAR(A.chkdate,'YYYYMMDD')),TO_CHAR(A.chkdate,'YYYYMMDD')) AS ORG_NM				/*조직명*/
            			,	F_COM_GET_JIKWEE_NM(#{ssnEnterCd},A.SABUN,TO_CHAR(A.chkdate,'YYYYMMDD')) AS JIKWEE_NM
	          			,   F_COM_GET_JIKGUB_NM(#{ssnEnterCd},A.SABUN,TO_CHAR(A.chkdate,'YYYYMMDD')) AS JIKGUB_NM
            			,   F_COM_GET_JIKCHAK_NM(#{ssnEnterCd},A.SABUN,TO_CHAR(A.chkdate,'YYYYMMDD')) AS JIKCHAK_NM
           				,   F_COM_GET_JOB_NM(#{ssnEnterCd},A.SABUN,TO_CHAR(A.chkdate,'YYYYMMDD')) AS JOB_NM
           				,   D.EMP_YMD
           				,   C.CONTRACT_SYMD
           				,   C.CONTRACT_EYMD
           				,	A.APP_POINT  AS APP_POINT1
           				,   A.APP_POINT  AS APP_POINT2
           				,   '' AS CONTRACT_YN
           				,   '' AS MEMO
					FROM	TPAP600	A
						,	TPAP101 B  
						,	THRM151	C
            			,	THRM100 D
					WHERE	A.ENTER_CD		=	B.ENTER_CD
					AND		A.APPRAISAL_CD	=	B.APPRAISAL_CD
         			AND		A.ENTER_CD		=	D.ENTER_CD
					AND		A.SABUN			=	D.SABUN
					AND		A.ENTER_CD		=	C.ENTER_CD
					AND		A.SABUN			=	C.SABUN
          			AND     C.MANAGE_CD IN ('50','60','100','120')--50 촉탁, 60 기간제, 100 파견, 120 현지계약
					AND		C.SDATE = (
										SELECT	MAX(D.SDATE)
										FROM	THRM151 D
										WHERE	D.ENTER_CD	= C.ENTER_CD
										AND		D.SABUN		= C.SABUN
										AND		B.APP_E_YMD BETWEEN D.SDATE AND NVL(D.EDATE,'99991231')
									)
					AND		A.ENTER_CD		=	#{ssnEnterCd}
					AND		A.APPRAISAL_CD	=	#{searchAppraisalCd}
			       ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD,A.SABUN,C.SDATE)
				]]>


		</select>

<!-- 촉탁직평가관리 저장 -->
		<update parameterType="map" id="saveInternAppMgr">

				<![CDATA[
					MERGE INTO	/*	InternAppMgr-mapping-query.saveInternAppMgr	*/
								TPAP201 T
					USING	(
							SELECT	A.ENTER_CD
								,	A.APPRAISAL_CD
								,	A.APP_STEP_CD
								,	A.SABUN
								,	A.ORG_CD
								,	A.ORG_NM
								,	A.JIKWEE_CD
								,	A.JIKWEE_NM
								,	A.JOB_CD
								,	A.JOB_NM
								,	A.WORK_TYPE
								,	A.WORK_TYPE_NM
								,	A.JIKCHAK_CD
								,	A.JIKCHAK_NM
								,	A.JIKGUB_CD
								,	A.JIKGUB_NM
								,	A.APP_GROUP_CD
								,	A.APP_SHEET_TYPE
								,	A.APP_YN
								,	A.NOTE
								,	A.Q_ORG_CD
								,	A.Q_ORG_NM
								,	A.JOB_GROUP_CD
								,	A.JOB_GROUP_NM
								,	A.APP_1ST_END_YN
								,	A.EMP_YMD
								,	A.BASE3_YMD
								,	A.LAST_SK_YMD
								,	A.PROMOTION_YMD
								,	A.WORK_YEAR
								,	A.WORK_MONTH
								,	A.APP_CNT
								,	A.APP_ORG_CD1
								,	A.APP_ORG_CD2
								,	A.APP_ORG_CD3
								,	A.APP_ORG_TYPE
								,	A.HR_CONF_YN
							FROM	(
									SELECT NULL AS ENTER_CD
										 , NULL AS APPRAISAL_CD
										 , NULL AS APP_STEP_CD
										 , NULL AS SABUN
									     , NULL AS ORG_CD
									     , NULL AS ORG_NM
									     , NULL AS JIKWEE_CD
									     , NULL AS JIKWEE_NM
									     , NULL AS JOB_CD
										 , NULL AS JOB_NM
										 , NULL AS WORK_TYPE
										 , NULL AS WORK_TYPE_NM
										 , NULL AS JIKCHAK_CD
										 , NULL AS JIKCHAK_NM
									     , NULL AS JIKGUB_CD
									     , NULL AS JIKGUB_NM
									     , NULL AS APP_GROUP_CD
									     , NULL AS APP_SHEET_TYPE
									     , NULL AS APP_YN
									     , NULL AS NOTE
									     , NULL AS Q_ORG_CD
									     , NULL AS Q_ORG_NM
									     , NULL AS JOB_GROUP_CD
									     , NULL AS JOB_GROUP_NM
									     , NULL AS APP_1ST_END_YN
									     , NULL AS EMP_YMD
									     , NULL AS BASE3_YMD
									     , NULL AS LAST_SK_YMD
									     , NULL AS PROMOTION_YMD
									     , NULL AS WORK_YEAR
									     , NULL AS WORK_MONTH
									     , NULL AS APP_CNT
									     , NULL AS APP_ORG_CD1
									     , NULL AS APP_ORG_CD2
									     , NULL AS APP_ORG_CD3
									     , NULL AS APP_ORG_TYPE
									     , NULL AS HR_CONF_YN
									FROM DUAL
									]]>
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											#{ssnEnterCd}					AS	ENTER_CD
										,	TRIM(#{rm.appraisalCd}	)	AS	APPRAISAL_CD
										,	'5'							AS	APP_STEP_CD
										,	TRIM(#{rm.sabun}		)	AS	SABUN
										,	TRIM(#{rm.orgCd})	AS	ORG_CD
										,	TRIM(#{rm.orgNm})	AS	ORG_NM
										,	TRIM(#{rm.jikweeCd})	AS	JIKWEE_CD
										,	TRIM(#{rm.jikweeNm})	AS	JIKWEE_NM
										,	TRIM(#{rm.jobCd})	AS	JOB_CD
										,	TRIM(#{rm.jobNm})	AS	JOB_NM
										,	TRIM(#{rm.workType})	AS	WORK_TYPE
										,	TRIM(#{rm.workTypeNm})	AS	WORK_TYPE_NM
										,	TRIM(#{rm.jikchakCd})	AS	JIKCHAK_CD
										,	TRIM(#{rm.jikchakNm})	AS	JIKCHAK_NM
										,	TRIM(#{rm.jikgubCd})	AS	JIKGUB_CD
										,	TRIM(#{rm.jikgubNm})	AS	JIKGUB_NM
										,	TRIM(#{rm.appGroupCd}	)	AS	APP_GROUP_CD
										,	TRIM(#{rm.appSheetType})	AS	APP_SHEET_TYPE
										,	TRIM(#{rm.appYn})	AS	APP_YN
										,	TRIM(#{rm.note})	AS	NOTE
										,	TRIM(#{rm.qOrgCd})	AS	Q_ORG_CD
										,	TRIM(#{rm.qOrgNm})	AS	Q_ORG_NM
										,	TRIM(#{rm.jobGroupCd})	AS	JOB_GROUP_CD
										,	TRIM(#{rm.jobGroupNm})	AS	JOB_GROUP_NM
										,	TRIM(#{rm.app1StEndYn})	AS	APP_1ST_END_YN
										,	TRIM(#{rm.empYmd})	AS	EMP_YMD
										,	TRIM(#{rm.base3Ymd})	AS	BASE3_YMD
										,	TRIM(#{rm.lastSkYmd})	AS	LAST_SK_YMD
										,	TRIM(#{rm.promotionYmd})	AS	PROMOTION_YMD
										,	TRIM(#{rm.workYear})	AS	WORK_YEAR
										,	TRIM(#{rm.workMonth})	AS	WORK_MONTH
										,	TRIM(#{rm.appCnt})	AS	APP_CNT
										,	TRIM(#{rm.appOrgCd1})	AS	APP_ORG_CD1
										,	TRIM(#{rm.appOrgCd2})	AS	APP_ORG_CD2
										,	TRIM(#{rm.appOrgCd3})	AS	APP_ORG_CD3
										,	TRIM(#{rm.appOrgType})	AS	APP_ORG_TYPE
										,	TRIM(#{rm.hrConfYn})	AS	HR_CONF_YN
									FROM	DUAL
</foreach>
									) A WHERE A.ENTER_CD		IS NOT NULL
										  AND A.APPRAISAL_CD	IS NOT NULL
										  AND A.APP_STEP_CD		IS NOT NULL
										  AND A.SABUN			IS NOT NULL
							) S
					ON (
								T.ENTER_CD		=	S.ENTER_CD
							AND	T.APPRAISAL_CD	=	S.APPRAISAL_CD
							AND	T.APP_STEP_CD	=	S.APP_STEP_CD
							AND	T.SABUN			=	S.SABUN
						)
					WHEN MATCHED THEN
						UPDATE SET	  T.ORG_CD			=	S.ORG_CD
									, T.ORG_NM			=	S.ORG_NM
									, T.JIKWEE_CD		=	S.JIKWEE_CD
									, T.JIKWEE_NM		=	S.JIKWEE_NM
									, T.JOB_CD			=	S.JOB_CD
									, T.JOB_NM			=	S.JOB_NM
									, T.WORK_TYPE		=	S.WORK_TYPE
									, T.WORK_TYPE_NM	=	S.WORK_TYPE_NM
									, T.JIKCHAK_CD		=	S.JIKCHAK_CD
									, T.JIKCHAK_NM		=	S.JIKCHAK_NM
									, T.JIKGUB_CD		=	S.JIKGUB_CD
									, T.JIKGUB_NM		=	S.JIKGUB_NM
									, T.APP_GROUP_CD	=	S.APP_GROUP_CD
									, T.APP_SHEET_TYPE	=	S.APP_SHEET_TYPE
									, T.APP_YN			=	S.APP_YN
									, T.NOTE			=	S.NOTE
									, T.Q_ORG_CD		=	S.Q_ORG_CD
									, T.Q_ORG_NM		=	S.Q_ORG_NM
									, T.JOB_GROUP_CD	=	S.JOB_GROUP_CD
									, T.JOB_GROUP_NM	=	S.JOB_GROUP_NM
									, T.APP_1ST_END_YN	=	S.APP_1ST_END_YN
									, T.EMP_YMD			=	S.EMP_YMD
									, T.BASE3_YMD		=	S.BASE3_YMD
									, T.LAST_SK_YMD		=	S.LAST_SK_YMD
									, T.PROMOTION_YMD	=	S.PROMOTION_YMD
									, T.WORK_YEAR		=	S.WORK_YEAR
									, T.WORK_MONTH		=	S.WORK_MONTH
									, T.APP_CNT			=	S.APP_CNT
									, T.APP_ORG_CD1		=	S.APP_ORG_CD1
									, T.APP_ORG_CD2		=	S.APP_ORG_CD2
									, T.APP_ORG_CD3		=	S.APP_ORG_CD3
									, T.APP_ORG_TYPE	=	S.APP_ORG_TYPE
									, T.HR_CONF_YN		=	S.HR_CONF_YN
									, T.CHKDATE			=	SYSDATE
									, T.CHKID			=	#{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.APPRAISAL_CD
							, T.APP_STEP_CD
							, T.SABUN
							, T.ORG_CD
							, T.ORG_NM
							, T.JIKWEE_CD
							, T.JIKWEE_NM
							, T.JOB_CD
							, T.JOB_NM
							, T.WORK_TYPE
							, T.WORK_TYPE_NM
							, T.JIKCHAK_CD
							, T.JIKCHAK_NM
							, T.JIKGUB_CD
							, T.JIKGUB_NM
							, T.APP_GROUP_CD
							, T.APP_SHEET_TYPE
							, T.APP_YN
							, T.NOTE
							, T.Q_ORG_CD
							, T.Q_ORG_NM
							, T.JOB_GROUP_CD
							, T.JOB_GROUP_NM
							, T.APP_1ST_END_YN
							, T.EMP_YMD
							, T.BASE3_YMD
							, T.LAST_SK_YMD
							, T.PROMOTION_YMD
							, T.WORK_YEAR
							, T.WORK_MONTH
							, T.APP_CNT
							, T.APP_ORG_CD1
							, T.APP_ORG_CD2
							, T.APP_ORG_CD3
							, T.APP_ORG_TYPE
							, T.HR_CONF_YN
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.APPRAISAL_CD
							, S.APP_STEP_CD
							, S.SABUN
							, S.ORG_CD
							, S.ORG_NM
							, S.JIKWEE_CD
							, S.JIKWEE_NM
							, S.JOB_CD
							, S.JOB_NM
							, S.WORK_TYPE
							, S.WORK_TYPE_NM
							, S.JIKCHAK_CD
							, S.JIKCHAK_NM
							, S.JIKGUB_CD
							, S.JIKGUB_NM
							, S.APP_GROUP_CD
							, S.APP_SHEET_TYPE
							, S.APP_YN
							, S.NOTE
							, S.Q_ORG_CD
							, S.Q_ORG_NM
							, S.JOB_GROUP_CD
							, S.JOB_GROUP_NM
							, S.APP_1ST_END_YN
							, S.EMP_YMD
							, S.BASE3_YMD
							, S.LAST_SK_YMD
							, S.PROMOTION_YMD
							, S.WORK_YEAR
							, S.WORK_MONTH
							, S.APP_CNT
							, S.APP_ORG_CD1
							, S.APP_ORG_CD2
							, S.APP_ORG_CD3
							, S.APP_ORG_TYPE
							, S.HR_CONF_YN
							, SYSDATE
							, #{ssnSabun}
						)
		</update>

<!-- 촉탁직평가관리 삭제 -->
		<delete parameterType="map" id="deleteInternAppMgr">

					DELETE FROM THRM461
					 WHERE ENTER_CD||'_'||PROMOTION_CD||'_'||SABUN IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("") != null and rm.promotionCd != null and !rm.promotionCd.equals("") != null and rm.sabun != null and !rm.sabun.equals("")'>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.promotionCd} )||'_'||TRIM( #{rm.sabun} )
										</if>
</foreach>
										)
		</delete>



</mapper>