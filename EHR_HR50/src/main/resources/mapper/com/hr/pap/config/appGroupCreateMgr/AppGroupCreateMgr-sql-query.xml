<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.config.appGroupCreateMgr">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAppGroupCreateMgrList">

				<![CDATA[
						SELECT T1.APPRAISAL_CD, T1.APP_GROUP_CD, T1.APP_GROUP_NM, '0' AS BTN_SET,'0' AS SCOPE,
						       (SELECT DECODE(COUNT(*),0,'N','Y') FROM TSYS991 WHERE ENTER_CD = T1.ENTER_CD AND USE_GUBUN = 'G' AND ITEM_VALUE1 = T1.APPRAISAL_CD AND ITEM_VALUE2 = T1.APP_GROUP_CD) AS DETAIL_YN,
						       T1.SEQ,   T1.APP_SHEET_TYPE,T1.APP_1ST_YN,
						      (SELECT LISTAGG(B. AUTH_SCOPE_NM, ', ') WITHIN GROUP (ORDER BY B.AUTH_SCOPE_NM)
						      FROM (
						              SELECT ENTER_CD, SCOPE_CD, ITEM_VALUE1, ITEM_VALUE2, ITEM_VALUE3
						                FROM  TSYS991
						               WHERE ENTER_CD = TRIM(#{ssnEnterCd})
						                 AND USE_GUBUN = 'G'
						                 --AND ITEM_VALUE3 = '0'
						              GROUP BY ENTER_CD,SCOPE_CD, ITEM_VALUE1, ITEM_VALUE2, ITEM_VALUE3
						            ) A, TSYS315 B
						     WHERE A.ENTER_CD = B.ENTER_CD
						       AND A.SCOPE_CD = B. AUTH_SCOPE_CD
						       AND ITEM_VALUE1 =  T1.APPRAISAL_CD
						       AND ITEM_VALUE2 =  T1.APP_GROUP_CD
						       AND ITEM_VALUE3 =  '0') AS NOTE,
						       T1.APP_METHOD_CD,
						       T1.APP_SEQ_CD,
						       T1.GRP_ID,
						       T1.APP_SABUN,
						       T2.NAME AS APP_NAME
						  FROM TPAP133 T1
						  	 , THRM100 T2
						 WHERE T1.ENTER_CD = T2.ENTER_CD(+)
						   AND T1.APP_SABUN= T2.SABUN(+)
						   AND T1.ENTER_CD = TRIM(#{ssnEnterCd})
						   AND T1.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
						 ]]>
					   <if test='searchAppGroupNm != null and !searchAppGroupNm.equals("")'>
					       AND T1.APP_GROUP_NM LIKE '%' || TRIM(#{searchAppGroupNm}) || '%'
					   </if>
					   <if test='searchAppSeqCd != null and !searchAppSeqCd.equals("")'>
					       AND T1.APP_SEQ_CD LIKE TRIM(#{searchAppSeqCd})
					   </if>
					ORDER BY T1.APP_SEQ_CD, T1.APP_GROUP_NM
					--ORDER BY T1.SEQ

		</select>
<!-- 		저장 -->
		<update parameterType="map" id="saveAppGroupCreateMgr">

					MERGE INTO TPAP133 T
					USING	(
							SELECT	A.ENTER_CD
									, A.APPRAISAL_CD
									, A.APP_GROUP_CD
									, A.APP_GROUP_NM
									, A.SEQ
									, A.NOTE
									, A.APP_SHEET_TYPE
									, A.APP_SEQ_CD
									, A.GRP_ID
									, A.APP_METHOD_CD
									, A.APP_1ST_YN
									, A.APP_SABUN
							FROM	(
									SELECT	  NULL	AS ENTER_CD
											, NULL	AS APPRAISAL_CD
											, NULL	AS APP_GROUP_CD
											, NULL	AS APP_GROUP_NM
											, NULL	AS SEQ
											, NULL	AS NOTE
											, NULL	AS APP_SHEET_TYPE
											, NULL	AS APP_SEQ_CD
											, NULL	AS GRP_ID
											, NULL	AS APP_METHOD_CD
											, NULL	AS APP_1ST_YN
											, NULL	AS APP_SABUN
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  #{ssnEnterCd}            	AS ENTER_CD
											, TRIM( #{rm.appraisalCd} )	AS APPRAISAL_CD

											<choose><when test='rm.appGroupCd != null and !rm.appGroupCd.equals("")'>
												--증가가 되는 키인경우 키가 공백이 아니면 들어온 값을 삽입
												, TRIM(#{rm.appGroupCd}) 			AS APP_GROUP_CD
											</when><otherwise>
												--증가가 되는 키인경우 키가 공백이면 증가된 값을 삽입
												, TO_CHAR(NVL((SELECT MAX(TO_NUMBER(APP_GROUP_CD)) FROM TPAP133 WHERE ENTER_CD = #{ssnEnterCd} AND APPRAISAL_CD = TRIM( #{rm.appraisalCd} )), 0) + ${icnt}) AS APP_GROUP_CD
												--icnt 증가
												<bind name="icnt" value="icnt + 1" />
											</otherwise>
											</choose>

											, TRIM( #{rm.appGroupNm})	AS APP_GROUP_NM
											, TRIM( #{rm.seq} )	        AS SEQ
											, TRIM( #{rm.note})	    AS NOTE
											, TRIM( #{rm.appSheetType})    AS APP_SHEET_TYPE
											, TRIM( #{rm.appSeqCd})	    AS APP_SEQ_CD
											, TRIM( #{rm.grpId})	    	AS GRP_ID
											, TRIM( #{rm.appMethodCd})	    AS APP_METHOD_CD
											, TRIM( #{rm.app1stYn})	    AS APP_1ST_YN
											, TRIM( #{rm.appSabun} )	    AS APP_SABUN
											FROM   DUAL
</foreach>
									) A WHERE ENTER_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD		= S.ENTER_CD
					AND  T.APPRAISAL_CD = S.APPRAISAL_CD
					AND  T.APP_GROUP_CD = S.APP_GROUP_CD
					)
					WHEN MATCHED THEN
						UPDATE SET
									  T.APP_GROUP_NM    	= S.APP_GROUP_NM
									, T.SEQ             	= S.SEQ
			                      	, T.NOTE            	= S.NOTE
									, T.APP_SHEET_TYPE      = S.APP_SHEET_TYPE
									, T.APP_SEQ_CD         	= S.APP_SEQ_CD
									, T.APP_1ST_YN          = S.APP_1ST_YN
									, T.GRP_ID          = S.GRP_ID
									, T.APP_SABUN          = S.APP_SABUN
									, T.CHKDATE			= SYSDATE
									, T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							T.ENTER_CD
							, T.APPRAISAL_CD
							, T.APP_GROUP_CD
							, T.APP_GROUP_NM
							, T.SEQ
							, T.NOTE
							, T.APP_SHEET_TYPE
							, T.APP_SEQ_CD
							, T.CHKDATE
							, T.CHKID
							, T.GRP_ID
							, T.APP_METHOD_CD
							, T.APP_1ST_YN
							, T.APP_SABUN
						)
						VALUES
						(
							S.ENTER_CD
							, S.APPRAISAL_CD
							, S.APP_GROUP_CD
							, S.APP_GROUP_NM
							, S.SEQ
							, S.NOTE
							, S.APP_SHEET_TYPE
							, S.APP_SEQ_CD
							, SYSDATE
							, #{ssnSabun}
							, S.GRP_ID
							, S.APP_METHOD_CD
							, S.APP_1ST_YN
							, S.APP_SABUN
						)
		</update>

<!-- 		삭제 -->
		<delete parameterType="map" id="deleteAppGroupCreateMgr">

					DELETE	FROM TPAP133
					WHERE	(ENTER_CD, APPRAISAL_CD, APP_GROUP_CD) IN ((NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.appraisalCd != null and !rm.appraisalCd.equals("")'>
										<if test='rm.appGroupCd != null and !rm.appGroupCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.appraisalCd} ) , TRIM( #{rm.appGroupCd} ) )
										</if>
										</if>
										</if>
</foreach>
										)
		</delete>

		<delete parameterType="map" id="deleteAppGroupCreateMgr2">


					DELETE FROM TSYS991
					WHERE 	(ENTER_CD, USE_GUBUN, ITEM_VALUE1, ITEM_VALUE2, ITEM_VALUE3) IN 	(  (NULL,NULL,NULL,NULL,NULL)
<foreach item="rm" collection="deleteRows" >
						,				(
										#{ssnEnterCd}
										,	TRIM( 'G' )
										<if test='rm.appraisalCd != null and !rm.appraisalCd.equals("")'>
										,	TRIM( #{rm.appraisalCd} )
										</if>
										<if test='rm.appGroupCd != null and !rm.appGroupCd.equals("")'>
										,	TRIM( #{rm.appGroupCd} )
										</if>
										,	TRIM( '0' )
										)
</foreach>
										)
		</delete>

		<!-- 		삭제 -->
		<delete parameterType="map" id="deleteAppGroupCreateMgrCopyPop1">

				<![CDATA[
					DELETE FROM TPAP109
					WHERE 	ENTER_CD       =  #{ssnEnterCd}
					AND     APPRAISAL_CD   =  #{tgtAppraisalCd}
				]]>


		</delete>


		<!-- 		삭제 -->
		<delete parameterType="map" id="deleteAppGroupCreateMgrCopyPop2">

				<![CDATA[
					DELETE FROM TSYS991
					WHERE 	ENTER_CD       =  #{ssnEnterCd}
					AND     USE_GUBUN      =  'G'
					AND     ITEM_VALUE1    =  #{tgtAppraisalCd}
				]]>


		</delete>

		<select parameterType="map" resultType="cMap" id="getAppGroupCreateMgrTblNm">

				<![CDATA[
				SELECT A.SCOPE_CD, B. AUTH_SCOPE_NM, B.TABLE_NM
				  FROM (
						SELECT ENTER_CD, SCOPE_CD
						FROM  TSYS991
						WHERE ENTER_CD = TRIM(#{ssnEnterCd})
						AND USE_GUBUN = 'G'
						AND ITEM_VALUE1 =  TRIM(#{searchAppraisalCd})
						AND ITEM_VALUE2 =  TRIM(#{appGroupCd})
						AND ITEM_VALUE3 =  TRIM(#{seq})
						GROUP BY ENTER_CD,SCOPE_CD
						) A, TSYS315 B
				 WHERE A.ENTER_CD = B.ENTER_CD
				   AND A.SCOPE_CD = B. AUTH_SCOPE_CD
				]]>


		</select>


		<select parameterType="map" resultType="cMap" id="getAppGroupCreateMgrScopeCd">

				<![CDATA[

				SELECT A.SCOPE_CD, A.SCOPE_VALUE, A.SCOPE_VALUE_NM
				  FROM TSYS991 A
				 WHERE ENTER_CD =TRIM(#{ssnEnterCd})
				   AND USE_GUBUN = 'G'
				   AND ITEM_VALUE1 = TRIM(#{searchAppraisalCd})
				   AND ITEM_VALUE2 = TRIM(#{appGroupCd})
				   AND ITEM_VALUE3 = TRIM(#{seq})
				   AND SCOPE_CD = TRIM(#{scopeCd})
				ORDER BY 1,2,3
				]]>


		</select>

<!-- 		생성 -->
		<insert parameterType="map" id="insertAppGroupCreateMgrCopyPop1">

				<![CDATA[
						INSERT INTO TPAP109
						(
							  ENTER_CD
							, APPRAISAL_CD
							, COM_GUBUN_CD
							, COMPETENCY_CD
							, APP_BASIS_POINT
							, SCOPE_GUBUN
							, SUNBUN
							, CHKDATE
							, CHKID
						)
						SELECT	  S.ENTER_CD
								, #{tgtAppraisalCd}
								, S.COM_GUBUN_CD
								, S.COMPETENCY_CD
								, S.APP_BASIS_POINT
								, S.SCOPE_GUBUN
								, S.SUNBUN
								, SYSDATE
								, #{ssnSabun}
						FROM    TPAP109 S
						WHERE S.ENTER_CD = #{ssnEnterCd}
						AND   S.APPRAISAL_CD = #{orgnAppraisalCd}
				]]>

		</insert>


<!-- 		생성 -->
		<insert parameterType="map" id="insertAppGroupCreateMgrCopyPop2">

				<![CDATA[
						INSERT INTO TSYS991
						(
							  ENTER_CD
							, USE_GUBUN
							, ITEM_VALUE1
							, ITEM_VALUE2
							, ITEM_VALUE3
							, SCOPE_CD
							, SCOPE_VALUE
							, CHKDATE
							, CHKID
						)
						SELECT	  S.ENTER_CD
								, 'G'
								, #{tgtAppraisalCd}
								, S.ITEM_VALUE2
								, S.ITEM_VALUE3
								, S.SCOPE_CD
								, S.SCOPE_VALUE
								, SYSDATE
								, #{ssnSabun}
						FROM    TSYS991 S
						WHERE S.ENTER_CD    = #{ssnEnterCd}
						AND   S.USE_GUBUN   = 'G'
						AND   S.ITEM_VALUE1 = #{orgnAppraisalCd}
				]]>

		</insert>

</mapper>