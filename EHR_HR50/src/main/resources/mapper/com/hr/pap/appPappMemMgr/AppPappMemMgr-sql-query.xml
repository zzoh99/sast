<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.appPappMemMgr">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAppPappMemMgrList1">

				<![CDATA[
					SELECT ENTER_CD
						 , APP_SEQ_CD
						 , APP_SEQ_NM
						 , SABUN
						 , NAME
						 , ORG_NM
						 , JIKWEE_NM
						 , JIKCHAK_NM
						 , INWON_CNT
						 , APPRAISAL_CD
					FROM (
						SELECT ENTER_CD
					         , APP_SEQ_CD 
					         , F_COM_GET_GRCODE_NAME(ENTER_CD, 'P00003', APP_SEQ_CD) AS APP_SEQ_NM
					         , SABUN
					         , F_COM_GET_NAMES(ENTER_CD, SABUN) AS NAME
					         , F_COM_GET_ORG_NM21(ENTER_CD, SABUN, NVL(F_PAP_GET_BASE_YMD(ENTER_CD, APPRAISAL_CD, #{searchAppStepCd}), '99991231')) AS ORG_NM
					         , F_COM_GET_JIKWEE_NM(ENTER_CD, SABUN, NVL(F_PAP_GET_BASE_YMD(ENTER_CD, APPRAISAL_CD, #{searchAppStepCd}), '99991231')) AS JIKWEE_NM
					         , F_COM_GET_JIKCHAK_NM(ENTER_CD, SABUN, NVL(F_PAP_GET_BASE_YMD(ENTER_CD, APPRAISAL_CD, #{searchAppStepCd}), '99991231')) AS JIKCHAK_NM
					         , (SELECT COUNT(SABUN) 
					              FROM TPAP202 
					             WHERE ENTER_CD = D.ENTER_CD
					               AND APPRAISAL_CD = D.APPRAISAL_CD
					               AND APP_STEP_CD  = #{searchAppStepCd}
					               AND APP_SEQ_CD   = D.APP_SEQ_CD
					               AND APP_SABUN    = D.SABUN) AS INWON_CNT
					         , APPRAISAL_CD
						  FROM 
						       (
						          SELECT A.ENTER_CD
						                ,C.CODE AS APP_SEQ_CD
						                ,A.SABUN AS SABUN
						                ,A.APPRAISAL_CD 
						           FROM TPAP160 A, TPAP101 B, (SELECT CODE, CODE_NM 
						                                         FROM TSYS005 
						                                        WHERE ENTER_CD = #{ssnEnterCd}
						                                          AND GRCODE_CD = 'P00003' 
						                                          AND CODE = #{searchAppSeqCd}) C
						          WHERE A.ENTER_CD     = #{ssnEnterCd} --변수
						            AND A.APPRAISAL_CD = #{searchAppraisalCd}
						            AND A.APP_STEP_CD  = #{searchAppStepCd}
						            AND B.ENTER_CD     = A.ENTER_CD
						            AND B.APPRAISAL_CD = A.APPRAISAL_CD    
						            AND A.SABUN IS NOT NULL
						          UNION
						        SELECT  A.ENTER_CD
						               ,A.APP_SEQ_CD
						               ,A.APP_SABUN AS SABUN
						               ,A.APPRAISAL_CD 
						          FROM TPAP202 A
						         WHERE A.ENTER_CD     = #{ssnEnterCd}
						           AND A.APPRAISAL_CD = #{searchAppraisalCd}
						           AND A.APP_STEP_CD  = #{searchAppStepCd}
						           AND A.APP_SEQ_CD   = #{searchAppSeqCd}
						           AND A.APP_SEQ_CD <> '0'   --본인평가가 아닌 것
						       ) D
						GROUP BY ENTER_CD, APP_SEQ_CD, SABUN, APPRAISAL_CD
					)
					WHERE ENTER_CD = #{ssnEnterCd}
					          ]]>
					<if test='searchSabunName != null and !searchSabunName.equals("")'>
					AND (SABUN LIKE '%' || #{searchSabunName} || '%' OR NAME LIKE '%' || #{searchSabunName} || '%')
					</if>
					<if test='searchOrgNm != null and !searchOrgNm.equals("")'>
					AND ORG_NM LIKE '%' || #{searchOrgNm} || '%'
					</if>
					ORDER BY APP_SEQ_CD, F_PAP_ORG_CHART_SORT(ENTER_CD, F_COM_GET_ORG_CD(ENTER_CD, SABUN, NVL(F_PAP_GET_BASE_YMD(ENTER_CD, APPRAISAL_CD, #{searchAppStepCd}), '99991231')), APPRAISAL_CD, #{searchAppStepCd})


		</select>
		
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAppPappMemMgrList2">

				<![CDATA[
					SELECT B.APP_ORG_NM
						 , B.APP_ORG_CD
						 , B.SABUN
						 , B.NAME
						 , B.JIKWEE_NM
						 , B.JIKCHAK_NM
						 , F_PAP_GET_APP_GROUP_NM2(B.ENTER_CD, B.APPRAISAL_CD, B.SABUN, B.APP_ORG_CD, #{searchAppSeqCd}) AS APP_GROUP_NM   -- 변수, 1차, 2차(조회조건, 1이면 1차, 2이면 2차)
						 , C.APP_SABUN
			      	     , F_COM_GET_NAMES(C.ENTER_CD, C.APP_SABUN) AS APP_NAME
			      	     , F_COM_GET_JIKCHAK_NM(C.ENTER_CD, C.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(B.ENTER_CD, B.APPRAISAL_CD, #{searchAppStepCd}), '99991231')) AS APP_JIKCHAK_NM
				      FROM TPAP201 B, TPAP202 C 
				     WHERE B.ENTER_CD = #{ssnEnterCd}
				       AND B.APPRAISAL_CD = #{searchAppraisalCd}
				       AND B.APP_YN       = 'Y'
				       AND B.APP_STEP_CD  = #{searchAppStepCd} --최종평가일 경우에만
				       AND C.ENTER_CD     = B.ENTER_CD
				       AND C.APPRAISAL_CD = B.APPRAISAL_CD
				       AND C.SABUN        = B.SABUN
				       AND C.APP_ORG_CD   = B.APP_ORG_CD
				       AND C.APP_SEQ_CD   = #{searchAppSeqCd} -- 변수, 1차, 2차(조회조건, 1이면 1차, 2이면 2차)
				       AND C.APP_STEP_CD  = B.APP_STEP_CD
				       AND C.APP_SABUN    = #{searchAppSabun} --변수
				    ORDER BY F_COM_JIKJE_SORT(B.ENTER_CD, C.SABUN, NVL(F_PAP_GET_BASE_YMD(B.ENTER_CD, B.APPRAISAL_CD, #{searchAppStepCd}), '99991231'))
				]]>


		</select>
		
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAppPappMemMgrList3">

				<![CDATA[
					SELECT APP_ORG_CD
						 , APP_ORG_NM
						 , NAME
						 , SABUN
						 , JIKWEE_NM
						 , JIKCHAK_NM
						 , APP_GROUP_NM
					FROM (
						SELECT ENTER_CD
							 , APPRAISAL_CD
							 , APP_ORG_CD
							 , APP_ORG_NM
							 , NAME
							 , SABUN
							 , JIKWEE_NM
							 , JIKCHAK_NM
							 , F_PAP_GET_APP_GROUP_NM2(ENTER_CD, APPRAISAL_CD, SABUN, APP_ORG_CD, #{searchAppSeqCd}) AS APP_GROUP_NM -- 변수, 1차, 2차(조회조건, 1이면 1차, 2이면 2차)
						FROM TPAP201 A
					   WHERE A.ENTER_CD = #{ssnEnterCd}
						 AND A.APPRAISAL_CD = #{searchAppraisalCd}
						 AND A.APP_YN = 'Y'
						 AND A.APP_STEP_CD = #{searchAppStepCd} --최종평가일 경우에만
						 AND A.SABUN || '_' || A.APP_ORG_CD NOT IN (
							SELECT SABUN || '_' || APP_ORG_CD
							  FROM TPAP202 C
							 WHERE C.ENTER_CD = A.ENTER_CD
							   AND C.APPRAISAL_CD = A.APPRAISAL_CD
							   AND C.APP_SEQ_CD = #{searchAppSeqCd} --변수
							   AND C.APP_STEP_CD = #{searchAppStepCd} --최종평가
							   AND NVL(C.APP_SABUN, '-') IN
												(
													SELECT D.SABUN
													  FROM TPAP160 D, TPAP101 E
													 WHERE D.ENTER_CD = C.ENTER_CD
													   AND D.APPRAISAL_CD = C.APPRAISAL_CD
													   AND D.APP_STEP_CD = #{searchAppStepCd} --최종평가
													   AND E.ENTER_CD = D.ENTER_CD
													   AND E.APPRAISAL_CD = D.APPRAISAL_CD
													   AND D.SABUN IS NOT NULL
													 UNION
													SELECT APP_SABUN AS SABUN
													  FROM TPAP202
													 WHERE ENTER_CD = C.ENTER_CD
													   AND APPRAISAL_CD = C.APPRAISAL_CD
													   AND APP_STEP_CD = #{searchAppStepCd} --최종평가
													   AND APP_SEQ_CD = C.APP_SEQ_CD
												)
							)
						)
						WHERE ENTER_CD = #{ssnEnterCd}
						          ]]>
						<if test='searchSheet3Word != null and !searchSheet3Word.equals("")'>
							AND (
								NAME LIKE '%' || #{searchSheet3Word} || '%' OR
								APP_ORG_NM LIKE '%' || #{searchSheet3Word} || '%' OR
								APP_GROUP_NM LIKE '%' || #{searchSheet3Word} || '%'
							)
						</if>
						ORDER BY F_COM_JIKJE_SORT(ENTER_CD, SABUN, NVL(F_PAP_GET_BASE_YMD(ENTER_CD, APPRAISAL_CD, #{searchAppStepCd}), '99991231'))


		</select>
	
<!-- 		저장 -->
		<update parameterType="map" id="saveAppPappMemMgr">

				MERGE INTO TPAP202 T
					USING	(
							SELECT #{ssnEnterCd} 			AS ENTER_CD
								 , #{searchAppraisalCd}	AS APPRAISAL_CD
								 , #{searchAppStepCd}		AS APP_STEP_CD
								 , A.SABUN
								 , A.APP_ORG_CD
								 , #{searchAppSeqCd}		AS APP_SEQ_CD
								 , A.APP_SABUN
								 , F_COM_GET_ORG_CD(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS ORG_CD
								 , F_COM_GET_ORG_NM21(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS ORG_NM
								 , F_COM_GET_JIKWEE_CD(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS JIKWEE_CD
								 , F_COM_GET_JIKWEE_NM(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS JIKWEE_NM
								 , F_COM_GET_JIKCHAK_CD(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS JIKCHAK_CD
								 , F_COM_GET_JIKCHAK_NM(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS JIKCHAK_NM
								 , F_COM_GET_JIKGUB_CD(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS JIKGUB_CD
								 , F_COM_GET_JIKGUB_NM(#{ssnEnterCd}, A.APP_SABUN, NVL(F_PAP_GET_BASE_YMD(#{ssnEnterCd}, #{searchAppraisalCd}, #{searchAppStepCd}), '99991231')) AS JIKGUB_NM
							   FROM (
									SELECT NULL			AS SABUN
										 , NULL			AS APP_SABUN
										 , NULL			AS APP_ORG_CD
									  FROM DUAL
<foreach item="rm" collection="mergeRows" >
							UNION ALL
							SELECT TRIM(#{rm.sabun})	AS SABUN
								 , TRIM(#{rm.appSabun})	AS APP_SABUN
								 , TRIM(#{rm.appOrgCd})	AS APP_ORG_CD
							  FROM DUAL
</foreach>
									) A 
							WHERE A.SABUN IS NOT NULL
							) S
					ON (	T.ENTER_CD		= S.ENTER_CD 
						AND	T.APPRAISAL_CD	= S.APPRAISAL_CD
						AND	T.APP_STEP_CD	= S.APP_STEP_CD
						AND	T.SABUN			= S.SABUN
						AND	T.APP_ORG_CD	= S.APP_ORG_CD
						AND	T.APP_SEQ_CD	= S.APP_SEQ_CD
						AND T.APP_SABUN		= S.APP_SABUN
						)
					WHEN MATCHED THEN 
					UPDATE SET T.CHKDATE = SYSDATE
					DELETE WHERE(T.APP_SABUN IS NOT NULL)
					WHEN NOT MATCHED THEN
					INSERT (
						T.ENTER_CD, 
						T.APPRAISAL_CD, 
						T.APP_STEP_CD, 
						T.SABUN,
						T.APP_ORG_CD, 
						T.APP_SEQ_CD, 
						T.APP_SABUN,
						T.ORG_CD, 
						T.ORG_NM, 
						T.JIKWEE_CD, 
						T.JIKWEE_NM,
						T.JIKCHAK_CD, 
						T.JIKCHAK_NM, 
						T.JIKGUB_CD, 
						T.JIKGUB_NM,
						T.CHKDATE, 
						T.CHKID
					)
					VALUES (
						S.ENTER_CD, 
						S.APPRAISAL_CD, 
						S.APP_STEP_CD, 
						S.SABUN,
						S.APP_ORG_CD, 
						S.APP_SEQ_CD, 
						#{searchAppSabun},
						S.ORG_CD, 
						S.ORG_NM, 
						S.JIKWEE_CD, 
						S.JIKWEE_NM,
						S.JIKCHAK_CD, 
						S.JIKCHAK_NM, 
						S.JIKGUB_CD, 
						S.JIKGUB_NM,
						SYSDATE, 
						#{ssnSabun}
					)
		</update>
<!-- 		평가그룹 초기화 -->
		<delete parameterType="map" id="deleteInitializeAppPappMem">

				<![CDATA[
					DELETE TPAP202 
					 WHERE ENTER_CD		= #{ssnEnterCd}
					   AND APPRAISAL_CD	= #{searchAppraisalCd}
					   AND APP_STEP_CD	= #{searchAppStepCd}
					   AND APP_SEQ_CD	= #{searchAppSeqCd}
				]]>
		</delete>

</mapper>