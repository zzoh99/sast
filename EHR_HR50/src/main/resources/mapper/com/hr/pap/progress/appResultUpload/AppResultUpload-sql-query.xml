<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.progress.appResultUpload">

		<select parameterType="map" resultType="cMap" id="getAppResultUploadList">

				<![CDATA[
				SELECT	A.ENTER_CD					/*	회사구분(TORG900)		*/
					,	A.APPRAISAL_CD				/*	평가ID코드(TPAP101)	*/
					,	A.APP_STEP_CD				/*	평가단계(P00005)		*/
					,	A.SABUN						/*	사원번호				*/
					,	A.APP_ORG_CD				/*	조직코드(TORG101)		*/
					,	A.APP_ORG_NM				/*	평가부서명				*/
					,	A.NAME						/*	성명					*/
					,	A.JIKWEE_CD					/*	직위(H20030)			*/
					,	A.JIKWEE_NM					/*	직위명				*/
					,	A.JOB_CD					/*	직무코드(TORG201)		*/
					,	A.JOB_NM					/*	직무명				*/
					,	A.WORK_TYPE					/*	직군코드(H10050)		*/
					,	A.WORK_TYPE_NM				/*	직종명				*/
					,	A.JIKCHAK_NM				/*	직책명				*/
					,	A.JIKCHAK_CD				/*	직책(H20020)			*/
					,	A.JIKGUB_CD					/*	직급(H20010)			*/
					,	A.JIKGUB_NM					/*	직급명				*/
					,	B.MBO_POINT					/*	평가점수				*/
					,	B.MBO_T_APP_SELF_POINT		/*	성과평가점수_본인		*/
					,	B.MBO_T_APP_1ST_POINT		/*	성과평가점수_1차			*/
					,	B.MBO_T_APP_2ND_POINT		/*	성과평가점수_2차			*/
					,	B.MBO_T_APP_3RD_POINT		/*	성과평가점수_3차			*/
					,	B.MBO_T_APP_SELF_CLASS_CD	/*	성과평가등급_본인		*/
					,	B.MBO_T_APP_1ST_CLASS_CD	/*	성과평가등급_1차			*/
					,	B.MBO_T_APP_2ND_CLASS_CD	/*	성과평가등급_2차			*/
					,	B.MBO_T_APP_3RD_CLASS_CD	/*	성과평가등급_3차			*/
					,	B.COMP_T_APP_SELF_POINT		/*	역량평가점수_본인		*/
					,	B.COMP_T_APP_1ST_POINT		/*	역량평가점수_1차			*/
					,	B.COMP_T_APP_2ND_POINT		/*	역량평가점수_2차			*/
					,	B.COMP_T_APP_3RD_POINT		/*	역량평가점수_3차			*/
					,	B.COMP_T_APP_SELF_CLASS_CD	/*	역량평가등급_본인		*/
					,	B.COMP_T_APP_1ST_CLASS_CD	/*	역량평가등급_1차			*/
					,	B.COMP_T_APP_2ND_CLASS_CD	/*	역량평가등급_2차			*/
					,	B.COMP_T_APP_3RD_CLASS_CD	/*	역량평가등급_3차			*/
					,	B.CHKID						/*	최종수정자				*/
					,	D.NAME	AS	CHKNAME
					,	TO_CHAR( B.CHKDATE, 'YYYY-MM-DD hh:mi:ss' ) AS CHKDATE			/*	최종수정시간				*/
				FROM	TPAP201	A
					,	TPAP511	B
					,	TPAP101	C
					,	THRM100	D
				WHERE	A.ENTER_CD		=	B.ENTER_CD
				AND		A.APPRAISAL_CD	=	B.APPRAISAL_CD
				AND		A.SABUN			=	B.SABUN
				AND		A.APP_ORG_CD	=	B.APP_ORG_CD
				AND		A.ENTER_CD		=	#{ssnEnterCd}
				AND		A.APPRAISAL_CD	=	#{searchAppraisalCd}
				AND		A.APP_STEP_CD	=	'5'
				AND		A.ENTER_CD		=	C.ENTER_CD
				AND		A.APPRAISAL_CD	=	C.APPRAISAL_CD
				AND		B.ENTER_CD		=	D.ENTER_CD
				AND		B.CHKID			=	D.SABUN
				         ]]>
				<if test='searchAppOrgNm != null and !searchAppOrgNm.equals("")'>
				AND		A.APP_ORG_NM LIKE '%' || #{searchAppOrgNm} || '%'
				</if>
				<if test='searchNm != null and !searchNm.equals("")'>
				AND		(
								A.NAME LIKE '%' || #{searchNm} || '%'
							OR	A.SABUN	=	#{searchNm}
						)
				</if>
				ORDER	BY
						APP_ORG_NM ASC
					,	F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, C.APP_S_YMD) ASC


		</select>

		<update parameterType="map" id="saveAppResultUpload">

						MERGE INTO TPAP511	T
						USING
						(
									SELECT	ENTER_CD
										,	APPRAISAL_CD
										,	SABUN
										,	APP_ORG_CD
										,	MBO_POINT
										,	MBO_T_APP_SELF_POINT
										,	MBO_T_APP_1ST_POINT
										,	MBO_T_APP_2ND_POINT
										,	MBO_T_APP_3RD_POINT
										,	MBO_T_APP_SELF_CLASS_CD
										,	MBO_T_APP_1ST_CLASS_CD
										,	MBO_T_APP_2ND_CLASS_CD
										,	MBO_T_APP_3RD_CLASS_CD
										,	COMP_T_APP_SELF_POINT
										,	COMP_T_APP_1ST_POINT
										,	COMP_T_APP_2ND_POINT
										,	COMP_T_APP_3RD_POINT
										,	COMP_T_APP_SELF_CLASS_CD
										,	COMP_T_APP_1ST_CLASS_CD
										,	COMP_T_APP_2ND_CLASS_CD
										,	COMP_T_APP_3RD_CLASS_CD
										,	CHKDATE
										,	CHKID
							FROM	(
									SELECT	NULL		AS	ENTER_CD
										,	NULL		AS	APPRAISAL_CD
										,	NULL		AS	SABUN
										,	NULL		AS	APP_ORG_CD
										,	NULL		AS	MBO_POINT
										,	NULL		AS	MBO_T_APP_SELF_POINT
										,	NULL		AS	MBO_T_APP_1ST_POINT
										,	NULL		AS	MBO_T_APP_2ND_POINT
										,	NULL		AS	MBO_T_APP_3RD_POINT
										,	NULL		AS	MBO_T_APP_SELF_CLASS_CD
										,	NULL		AS	MBO_T_APP_1ST_CLASS_CD
										,	NULL		AS	MBO_T_APP_2ND_CLASS_CD
										,	NULL		AS	MBO_T_APP_3RD_CLASS_CD
										,	NULL		AS	COMP_T_APP_SELF_POINT
										,	NULL		AS	COMP_T_APP_1ST_POINT
										,	NULL		AS	COMP_T_APP_2ND_POINT
										,	NULL		AS	COMP_T_APP_3RD_POINT
										,	NULL		AS	COMP_T_APP_SELF_CLASS_CD
										,	NULL		AS	COMP_T_APP_1ST_CLASS_CD
										,	NULL		AS	COMP_T_APP_2ND_CLASS_CD
										,	NULL		AS	COMP_T_APP_3RD_CLASS_CD
										,	NULL		AS	CHKDATE
										,	NULL		AS	CHKID
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
								UNION ALL
									SELECT	TRIM(#{ssnEnterCd})					AS	ENTER_CD
										,	TRIM(#{rm.appraisalCd})				AS	APPRAISAL_CD
										,	TRIM(#{rm.sabun})					AS	SABUN
										,	TRIM(#{rm.appOrgCd})				AS	APP_ORG_CD
										,	TRIM(#{rm.mboPoint})				AS	MBO_POINT
										,	TRIM(#{rm.mboTAppSelfPoint})		AS	MBO_T_APP_SELF_POINT
										,	TRIM(#{rm.mboTApp1stPoint})			AS	MBO_T_APP_1ST_POINT
										,	TRIM(#{rm.mboTApp2ndPoint})			AS	MBO_T_APP_2ND_POINT
										,	TRIM(#{rm.mboTApp3rdPoint})			AS	MBO_T_APP_3RD_POINT
										,	TRIM(#{rm.mboTAppSelfClassCd})		AS	MBO_T_APP_SELF_CLASS_CD
										,	TRIM(#{rm.mboTApp1stClassCd})		AS	MBO_T_APP_1ST_CLASS_CD
										,	TRIM(#{rm.mboTApp2ndClassCd})		AS	MBO_T_APP_2ND_CLASS_CD
										,	TRIM(#{rm.mboTApp3rdClassCd})		AS	MBO_T_APP_3RD_CLASS_CD
										,	TRIM(#{rm.compTAppSelfPoint})		AS	COMP_T_APP_SELF_POINT
										,	TRIM(#{rm.compTApp1stPoint})		AS	COMP_T_APP_1ST_POINT
										,	TRIM(#{rm.compTApp2ndPoint})		AS	COMP_T_APP_2ND_POINT
										,	TRIM(#{rm.compTApp3rdPoint})		AS	COMP_T_APP_3RD_POINT
										,	TRIM(#{rm.compTAppSelfClassCd})		AS	COMP_T_APP_SELF_CLASS_CD
										,	TRIM(#{rm.compTApp1stClassCd})		AS	COMP_T_APP_1ST_CLASS_CD
										,	TRIM(#{rm.compTApp2ndClassCd})		AS	COMP_T_APP_2ND_CLASS_CD
										,	TRIM(#{rm.compTApp3rdClassCd})		AS	COMP_T_APP_3RD_CLASS_CD
										,	SYSDATE								AS	CHKDATE
										,	#{ssnSabun}							AS	CHKID
									FROM	DUAL
</foreach>
									)	WHERE	ENTER_CD IS NOT NULL
										AND	APPRAISAL_CD IS NOT NULL
										AND	SABUN IS NOT NULL
										AND	APP_ORG_CD IS NOT NULL
						) S
					ON	(
								T.ENTER_CD				=	S.ENTER_CD
							AND	T.APPRAISAL_CD			=	S.APPRAISAL_CD
							AND	T.SABUN					=	S.SABUN
							AND	T.APP_ORG_CD			=	S.APP_ORG_CD
						)
					WHEN MATCHED THEN
					UPDATE SET
							T.MBO_POINT					=	S.MBO_POINT
						,	T.MBO_T_APP_SELF_POINT		=	S.MBO_T_APP_SELF_POINT
						,	T.MBO_T_APP_1ST_POINT		=	S.MBO_T_APP_1ST_POINT
						,	T.MBO_T_APP_2ND_POINT		=	S.MBO_T_APP_2ND_POINT
						,	T.MBO_T_APP_3RD_POINT		=	S.MBO_T_APP_3RD_POINT
						,	T.MBO_T_APP_SELF_CLASS_CD	=	S.MBO_T_APP_SELF_CLASS_CD
						,	T.MBO_T_APP_1ST_CLASS_CD	=	S.MBO_T_APP_1ST_CLASS_CD
						,	T.MBO_T_APP_2ND_CLASS_CD	=	S.MBO_T_APP_2ND_CLASS_CD
						,	T.MBO_T_APP_3RD_CLASS_CD	=	S.MBO_T_APP_3RD_CLASS_CD
						,	T.COMP_T_APP_SELF_POINT		=	S.COMP_T_APP_SELF_POINT
						,	T.COMP_T_APP_1ST_POINT		=	S.COMP_T_APP_1ST_POINT
						,	T.COMP_T_APP_2ND_POINT		=	S.COMP_T_APP_2ND_POINT
						,	T.COMP_T_APP_3RD_POINT		=	S.COMP_T_APP_3RD_POINT
						,	T.COMP_T_APP_SELF_CLASS_CD	=	S.COMP_T_APP_SELF_CLASS_CD
						,	T.COMP_T_APP_1ST_CLASS_CD	=	S.COMP_T_APP_1ST_CLASS_CD
						,	T.COMP_T_APP_2ND_CLASS_CD	=	S.COMP_T_APP_2ND_CLASS_CD
						,	T.COMP_T_APP_3RD_CLASS_CD	=	S.COMP_T_APP_3RD_CLASS_CD
						,	T.CHKDATE					=	S.CHKDATE
						,	T.CHKID						=	S.CHKID
					WHEN NOT MATCHED THEN
					INSERT
					(
							T.ENTER_CD
						,	T.APPRAISAL_CD
						,	T.SABUN
						,	T.APP_ORG_CD
						,	T.MBO_POINT
						,	T.MBO_T_APP_SELF_POINT
						,	T.MBO_T_APP_1ST_POINT
						,	T.MBO_T_APP_2ND_POINT
						,	T.MBO_T_APP_3RD_POINT
						,	T.MBO_T_APP_SELF_CLASS_CD
						,	T.MBO_T_APP_1ST_CLASS_CD
						,	T.MBO_T_APP_2ND_CLASS_CD
						,	T.MBO_T_APP_3RD_CLASS_CD
						,	T.COMP_T_APP_SELF_POINT
						,	T.COMP_T_APP_1ST_POINT
						,	T.COMP_T_APP_2ND_POINT
						,	T.COMP_T_APP_3RD_POINT
						,	T.COMP_T_APP_SELF_CLASS_CD
						,	T.COMP_T_APP_1ST_CLASS_CD
						,	T.COMP_T_APP_2ND_CLASS_CD
						,	T.COMP_T_APP_3RD_CLASS_CD
						,	T.CHKDATE
						,	T.CHKID
					)
					VALUES
					(
							S.ENTER_CD
						,	S.APPRAISAL_CD
						,	S.SABUN
						,	S.APP_ORG_CD
						,	S.MBO_POINT
						,	S.MBO_T_APP_SELF_POINT
						,	S.MBO_T_APP_1ST_POINT
						,	S.MBO_T_APP_2ND_POINT
						,	S.MBO_T_APP_3RD_POINT
						,	S.MBO_T_APP_SELF_CLASS_CD
						,	S.MBO_T_APP_1ST_CLASS_CD
						,	S.MBO_T_APP_2ND_CLASS_CD
						,	S.MBO_T_APP_3RD_CLASS_CD
						,	S.COMP_T_APP_SELF_POINT
						,	S.COMP_T_APP_1ST_POINT
						,	S.COMP_T_APP_2ND_POINT
						,	S.COMP_T_APP_3RD_POINT
						,	S.COMP_T_APP_SELF_CLASS_CD
						,	S.COMP_T_APP_1ST_CLASS_CD
						,	S.COMP_T_APP_2ND_CLASS_CD
						,	S.COMP_T_APP_3RD_CLASS_CD
						,	S.CHKDATE
						,	S.CHKID
					)
		</update>

		<delete parameterType="map" id="deleteAppResultUpload">

					DELETE	FROM TPAP511
					WHERE	(ENTER_CD, APPRAISAL_CD, SABUN, APP_ORG_CD) IN ((NULL, NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.appraisalCd != null and !rm.appraisalCd.equals("")'>
										<if test='rm.sabun != null and !rm.sabun.equals("")'>
										<if test='rm.appOrgCd != null and !rm.appOrgCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.appraisalCd} ) , TRIM( #{rm.sabun} ) , TRIM( #{rm.appOrgCd} ) )
										</if>
										</if>
										</if>
										</if>
</foreach>
										)
		</delete>

</mapper>