<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.intern.internAppPeopleMgr">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getInternAppPeopleMngrList">

				<![CDATA[
					SELECT
						  B.NAME	-- 성명
						, A.SABUN	-- 사번
						, F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, 'ALIAS') AS ALIAS
						, A.ORG_NM	-- 소속
						, A.JIKWEE_NM	-- 직위
						, A.JIKGUB_NM	-- 직급
						, B.GEMP_YMD	-- 입사일
						, F_COM_GET_LOCATION_NM(A.ENTER_CD, A.LOCATION_CD) AS LOCATION_NM	-- 근무지
						, A.TRA_YMD	-- 수습만료일
					    , F_COM_GET_CONT_ADDRESS(A.ENTER_CD, A.SABUN, 'IM') AS MAIL_ID -- 평가대상자 메일주소
						
						, A.HOLD_OFFICE_CD	-- 최종평가상태
						, A.APP_AS_YMD	-- 평가기간-시작일
						, A.APP_AE_YMD	-- 평가기간-종료일
						
						, F_COM_GET_NAMES(A.ENTER_CD, A.MAN1_SABUN) AS MAN1_NAME	-- 1차평가-성명
						, F_COM_GET_NAMES(A.ENTER_CD, A.MAN1_SABUN, 'ALIAS') AS MAN1_ALIAS	-- 1차평가-성명
						, A.MAN1_SABUN	-- 1차평가-사번
						, A.APPRAISAL_1ST_YN	-- 1차평가-평가여부
						, A.APP_1ST_POINT	-- 1차평가-평가점수
					    , F_COM_GET_CONT_ADDRESS(A.ENTER_CD, A.MAN1_SABUN, 'IM') AS MAN1_MAIL_ID -- 1차평가자 메일주소
						
						, F_COM_GET_NAMES(A.ENTER_CD, A.MAN2_SABUN) AS MAN2_NAME	-- 2차평가-성명
						, F_COM_GET_NAMES(A.ENTER_CD, A.MAN2_SABUN, 'ALIAS') AS MAN2_ALIAS	-- 2차평가-성명
						, A.MAN2_SABUN	-- 2차평가-사번
						, A.APPRAISAL_2ND_YN	-- 2차평가-평가여부
						, A.APP_2ND_POINT	-- 2차평가-평가점수
					    , F_COM_GET_CONT_ADDRESS(A.ENTER_CD, A.MAN2_SABUN, 'IM') AS MAN2_MAIL_ID -- 2차평가자 메일주소
						
						, A.MIDDLE_APP_POINT	-- 중간점수
						, A.FINAL_APP_POINT	-- 최종평균
						, A.TOTAL_APP_CLASS_CD	-- 종합등급
						, A.NOTE	-- 비고
						
						, A.ORG_CD
						, A.JIKWEE_CD
						, A.JIKGUB_CD
						, A.JIKCHAK_CD
						, A.JIKCHAK_NM
						, A.LOCATION_CD
						, A.HOLD_OFFICE_CD
						, A.TOTAL_APP_CLASS_CD

					FROM TPAP691 A
						, THRM100 B
					
					WHERE A.ENTER_CD = B.ENTER_CD
						AND A.SABUN = B.SABUN
				 		AND A.ENTER_CD = TRIM(#{ssnEnterCd})
				 		]]>
						<if test='searchOrgCd != null and !searchOrgCd.equals("")'>
						AND A.ORG_CD = TRIM(#{searchOrgCd})
						</if>
						
						<if test='searchSabun != null and !searchSabun.equals("")'>
						AND A.SABUN = TRIM(#{searchSabun})
						</if>
						
						<if test='searchHoldOfficeCd != null and !searchHoldOfficeCd.equals("")'>
						AND A.HOLD_OFFICE_CD = TRIM(#{searchHoldOfficeCd})
						</if>

						<if test='searchTraYmd1 != null and !searchTraYmd1.equals("") != null and searchTraYmd2 != null and !searchTraYmd2.equals("")'>
						AND A.TRA_YMD BETWEEN TRIM(REPLACE(#{searchTraYmd1}, '-', '')) AND TRIM(REPLACE(#{searchTraYmd2}, '-', ''))
						</if>
						
			  		ORDER BY B.NAME

		</select>
<!-- 		저장 -->	
		<update parameterType="map" id="saveInternAppPeopleMngr">

					MERGE INTO TPAP691 T
					USING	(
							SELECT		A.ENTER_CD
									, A.SABUN
									, A.TRA_YMD
									, A.ORG_CD
									, A.ORG_NM
									, A.JIKWEE_CD
									, A.JIKWEE_NM
									, A.JIKGUB_CD
									, A.JIKGUB_NM
									, A.JIKCHAK_CD
									, A.JIKCHAK_NM
									, A.LOCATION_CD
									, A.APP_AS_YMD
									, A.APP_AE_YMD
									, A.HOLD_OFFICE_CD
									, A.MAN1_SABUN
									, A.APPRAISAL_1ST_YN
									, A.MAN2_SABUN
									, A.APPRAISAL_2ND_YN
									, A.APP_1ST_POINT
									, A.APP_2ND_POINT
									, A.MIDDLE_APP_POINT
									, A.FINAL_APP_POINT
									, A.TOTAL_APP_CLASS_CD
									, A.NOTE
							FROM	(
									SELECT		NULL	AS ENTER_CD
											, NULL	AS SABUN
											, NULL	AS TRA_YMD
											, NULL	AS ORG_CD
											, NULL	AS ORG_NM
											, NULL	AS JIKWEE_CD
											, NULL	AS JIKWEE_NM
											, NULL	AS JIKGUB_CD
											, NULL	AS JIKGUB_NM
											, NULL	AS JIKCHAK_CD
											, NULL	AS JIKCHAK_NM
											, NULL	AS LOCATION_CD
											, NULL	AS APP_AS_YMD
											, NULL	AS APP_AE_YMD
											, NULL	AS HOLD_OFFICE_CD
											, NULL	AS MAN1_SABUN
											, NULL	AS APPRAISAL_1ST_YN
											, NULL	AS MAN2_SABUN
											, NULL	AS APPRAISAL_2ND_YN
											, NULL	AS APP_1ST_POINT
											, NULL	AS APP_2ND_POINT
											, NULL	AS MIDDLE_APP_POINT
											, NULL	AS FINAL_APP_POINT
											, NULL	AS TOTAL_APP_CLASS_CD
											, NULL	AS NOTE
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
												#{ssnEnterCd}	AS ENTER_CD
											, TRIM( #{rm.sabun} )			AS SABUN
											, TRIM( #{rm.traYmd})			AS TRA_YMD
											, TRIM( #{rm.orgCd})			AS ORG_CD
											, TRIM( #{rm.orgNm})			AS ORG_NM
											, TRIM( #{rm.jikweeCd})		AS JIKWEE_CD
											, TRIM( #{rm.jikweeNm})		AS JIKWEE_NM
											, TRIM( #{rm.jikgubCd})		AS JIKGUB_CD
											, TRIM( #{rm.jikgubNm})		AS JIKGUB_NM
											, TRIM( #{rm.jikchakCd})		AS JIKCHAK_CD
											, TRIM( #{rm.jikchakNm})		AS JIKCHAK_NM
											, TRIM( #{rm.locationCd})		AS LOCATION_CD
											, TRIM( #{rm.appAsYmd})		AS APP_AS_YMD
											, TRIM( #{rm.appAeYmd})		AS APP_AE_YMD
											, TRIM( #{rm.holdOfficeCd})	AS HOLD_OFFICE_CD
											, TRIM( #{rm.man1Sabun})		AS MAN1_SABUN
											, TRIM( #{rm.appraisal1stYn})	AS APPRAISAL_1ST_YN
											, TRIM( #{rm.man2Sabun})		AS MAN2_SABUN
											, TRIM( #{rm.appraisal2ndYn})	AS APPRAISAL_2ND_YN
											, TRIM( #{rm.app1stPoint})		AS APP_1ST_POINT
											, TRIM( #{rm.app2ndPoint})		AS APP_2ND_POINT
											, TRIM( #{rm.middleAppPoint})	AS MIDDLE_APP_POINT
											, TRIM( #{rm.finalAppPoint})	AS FINAL_APP_POINT
											, TRIM( #{rm.totalAppClassCd})	AS TOTAL_APP_CLASS_CD
											, TRIM( #{rm.note})			AS NOTE
											FROM	DUAL
</foreach>
									) A WHERE ENTER_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD		= S.ENTER_CD
					AND	T.SABUN		= S.SABUN
					--AND	T.TRA_YMD		= S.TRA_YMD
					AND T.APP_AS_YMD	= S.APP_AS_YMD
					)
					WHEN MATCHED THEN
						UPDATE SET
										T.ORG_CD			= S.ORG_CD
									, T.ORG_NM				= S.ORG_NM
									, T.JIKWEE_CD			= S.JIKWEE_CD
									, T.JIKWEE_NM			= S.JIKWEE_NM
									, T.JIKGUB_CD			= S.JIKGUB_CD
									, T.JIKGUB_NM			= S.JIKGUB_NM
									, T.JIKCHAK_CD			= S.JIKCHAK_CD
									, T.JIKCHAK_NM			= S.JIKCHAK_NM
									, T.LOCATION_CD			= S.LOCATION_CD
									, T.APP_AE_YMD			= S.APP_AE_YMD
									, T.HOLD_OFFICE_CD		= S.HOLD_OFFICE_CD
									, T.MAN1_SABUN			= S.MAN1_SABUN
									, T.APPRAISAL_1ST_YN	= S.APPRAISAL_1ST_YN
									, T.MAN2_SABUN			= S.MAN2_SABUN
									, T.APPRAISAL_2ND_YN	= S.APPRAISAL_2ND_YN
									, T.APP_1ST_POINT		= S.APP_1ST_POINT
									, T.APP_2ND_POINT		= S.APP_2ND_POINT
									, T.MIDDLE_APP_POINT	= S.MIDDLE_APP_POINT
									, T.FINAL_APP_POINT		= S.FINAL_APP_POINT
									, T.TOTAL_APP_CLASS_CD	= S.TOTAL_APP_CLASS_CD
									, T.NOTE				= S.NOTE
									, T.CHKDATE				= SYSDATE
									, T.CHKID				= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
								T.ENTER_CD
							, T.SABUN
							, T.TRA_YMD
							, T.ORG_CD
							, T.ORG_NM
							, T.JIKWEE_CD
							, T.JIKWEE_NM
						    , T.JIKGUB_CD
							, T.JIKGUB_NM
							, T.JIKCHAK_CD
							, T.JIKCHAK_NM
							, T.LOCATION_CD
							, T.APP_AS_YMD
							, T.APP_AE_YMD
							, T.HOLD_OFFICE_CD
							, T.MAN1_SABUN
							, T.APPRAISAL_1ST_YN
							, T.MAN2_SABUN
							, T.APPRAISAL_2ND_YN
							, T.APP_1ST_POINT
							, T.APP_2ND_POINT
							, T.MIDDLE_APP_POINT
							, T.FINAL_APP_POINT
							, T.TOTAL_APP_CLASS_CD
							, T.NOTE
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
								S.ENTER_CD
							, S.SABUN
							, S.TRA_YMD
							, S.ORG_CD
							, S.ORG_NM
							, S.JIKWEE_CD
							, S.JIKWEE_NM
							, S.JIKGUB_CD
							, S.JIKGUB_NM
							, S.JIKCHAK_CD
							, S.JIKCHAK_NM
							, S.LOCATION_CD
							, S.APP_AS_YMD
							, S.APP_AE_YMD
							, S.HOLD_OFFICE_CD
							, S.MAN1_SABUN
							, S.APPRAISAL_1ST_YN
							, S.MAN2_SABUN
							, S.APPRAISAL_2ND_YN
							, S.APP_1ST_POINT
							, S.APP_2ND_POINT
							, S.MIDDLE_APP_POINT
							, S.FINAL_APP_POINT
							, S.TOTAL_APP_CLASS_CD
							, S.NOTE
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
		
<!-- 		삭제 -->
		<delete parameterType="map" id="deleteInternAppPeopleMngr">

					DELETE FROM TPAP691
					WHERE 	(ENTER_CD,SABUN,TRA_YMD) IN 	(  (NULL,NULL,NULL)
<foreach item="rm" collection="deleteRows" >
						,				(
										#{ssnEnterCd}
										,	TRIM( #{rm.sabun} )
										,	TRIM( #{rm.traYmd})
										)
</foreach>
										)
		</delete>


</mapper>