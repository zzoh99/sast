<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="pap.progress.appResultMgr">

<!-- 평가결과관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getAppResultMgrList">

				<![CDATA[
					SELECT A.ENTER_CD
					     , A.APPRAISAL_CD
					     , A.SABUN
					     , A.APP_ORG_CD
					     , A.NAME
					     , F_COM_GET_NAMES (A.ENTER_CD, A.SABUN, 'ALIAS') AS ALIAS
					     , A.APP_ORG_NM
					     , A.JIKWEE_CD
					     , A.JIKWEE_NM
					     , A.JOB_CD
					     , A.JOB_NM
					     , A.WORK_TYPE
					     , A.WORK_TYPE_NM
					     , A.JIKCHAK_NM
					     , A.JIKCHAK_CD
					     , A.JIKGUB_CD
					     , A.JIKGUB_NM
					     , A.GEMP_YMD
					     , A.JIKGUB_YMD
					     , A.APP_GROUP_CD
					     , (SELECT APP_GROUP_NM FROM TPAP133
					         WHERE ENTER_CD = A.ENTER_CD
					           AND APPRAISAL_CD = A.APPRAISAL_CD
					           AND APP_GROUP_CD = A.APP_GROUP_CD
					       ) AS APP_GROUP_NM
					     , F_PAP_GET_APP_GROUP_NM2(A.ENTER_CD, A.APPRAISAL_CD, A.SABUN, A.APP_ORG_CD, '1') AS APP_GROUP_NM_1ST
					     , F_PAP_GET_APP_GROUP_NM2(A.ENTER_CD, A.APPRAISAL_CD, A.SABUN, A.APP_ORG_CD, '2') AS APP_GROUP_NM_2ND
					     , F_PAP_GET_APP_GROUP_NM2(A.ENTER_CD, A.APPRAISAL_CD, A.SABUN, A.APP_ORG_CD, '6') AS APP_GROUP_NM_3RD
					     , A.APP_SHEET_TYPE
					     , A.APP_METHOD_CD
					     , A.MAIN_ORG_YN
					     , A.MBO_T_APP_SELF_POINT
					     , A.MBO_T_APP_1ST_POINT
					     , A.MBO_T_APP_2ND_POINT
					     , A.MBO_T_APP_3RD_POINT
					     , A.MBO_SELF_CLASS_CD
					     , A.MBO_1ST_CLASS_CD
					     , A.MBO_2ND_CLASS_CD
					     , A.MBO_3RD_CLASS_CD
					     , A.COMP_T_SELF_POINT
					     , A.COMP_T_1ST_POINT
					     , A.COMP_T_2ND_POINT
					     , A.COMP_T_3RD_POINT
					     , A.COMP_SELF_CLASS_CD
					     , A.COMP_1ST_CLASS_CD
					     , A.COMP_2ND_CLASS_CD
					     , A.COMP_3RD_CLASS_CD
					     , A.APP_SELF_POINT
					     , A.APP_1ST_POINT
					     , A.APP_2ND_POINT
					     , A.APP_3RD_POINT
					     , A.APP_SELF_CLASS_CD
					     , NVL(A.APP_1ST_CLASS_CD, (SELECT Z.APP_1ST_CLASS_CD FROM TPAP350 Z
					         WHERE Z.ENTER_CD = A.ENTER_CD
					           AND Z.APPRAISAL_CD = A.APPRAISAL_CD 
					           AND Z.SABUN = A.SABUN
					           AND Z.APP_ORG_CD = A.APP_ORG_CD)) AS APP_1ST_CLASS_CD
					     , A.APP_2ND_CLASS_CD
					     , A.APP_3RD_CLASS_CD
					     , A.MBO_APP_SUM_POINT
					     , A.COMP_APP_SUM_POINT
					     , A.APP_SUM_POINT
					     , A.MBO_APP_SUM_CLASS_CD
					     , A.COMP_APP_SUM_CLASS_CD
					     , A.APP_SUM_CLASS_CD
					     , A.APP_M_RATE
					     , A.LAST_MBO_POINT
					     , A.LAST_COMP_POINT
					     , A.LAST_POINT
					     , A.LAST_MBO_CLASS_CD
					     , A.LAST_COMP_CLASS_CD
					     , A.LAST_CLASS_CD
					     , A.ADT_MBO_POINT
					     , A.ADT_COMP_POINT
					     , A.ADT_POINT
					     , A.ADT_MBO_CLASS_CD
					     , A.ADT_COMP_CLASS_CD
					     , A.ADT_CLASS_CD
					     , A.FINAL_MBO_POINT
					     , A.FINAL_COMP_POINT
					     , A.FINAL_POINT
					     , A.FINAL_MBO_CLASS_CD
					     , A.FINAL_COMP_CLASS_CD
					     , A.FINAL_CLASS_CD
					     , A.MBO_APP_RANK
					     , A.COMP_APP_RANK
					     , A.APP_RANK
					     , A.ETC_POINT
					     , A.KPI_TOAL_POINT
					     , NVL(A.CONFIRM_YN,'N') AS CONFIRM_YN
					     , A.MEMO
					     , A.MBO_T_ADT_1ST_POINT
					     , A.MBO_T_ADT_2ND_POINT
					     , A.COMP_T_ADT_1ST_POINT
					     , A.COMP_T_ADT_2ND_POINT
					     , A.ADT_1ST_CLASS_CD
					     , A.ADT_2ND_CLASS_CD
					     , A.ADT_3RD_CLASS_CD
					     , A.CHKDATE
					     , A.CHKID
					     , F_COM_GET_JIKGUB_YEUNCHA(A.ENTER_CD,A.SABUN,TO_CHAR(SYSDATE,'YYYYMMDD')) AS JIKGUB_YEUNCHA
					     , '0' AS DETAIL
					     , '1' AS DETAIL1
					     , B.PROTEST_MEMO_MBO /* 이의제기(업적평가) */
					     , B.PROTEST_MEMO_COMP /* 이의제기(역량평가) */
					     , NVL(C.APP_AS_YMD, '') AS EXCEPTION_SDATE
					     , NVL(C.APP_AE_YMD, '') AS EXCEPTION_EDATE
                         , (
                            SELECT NVL(MAX(T.APP_SEQ_CD), '-1')
                              FROM TPAP202 T
                             WHERE T.ENTER_CD     = A.ENTER_CD
                               AND T.APPRAISAL_CD = A.APPRAISAL_CD
                               AND T.APP_STEP_CD  = '5'
                               AND T.SABUN        = A.SABUN
                               AND T.APP_ORG_CD   = A.APP_ORG_CD
                           ) AS LAST_APP_SEQ_CD
					  FROM TPAP551 A
					     , TPAP567 B
					     , TPAP103 C
					 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
					   AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					   --AND A.MAIN_ORG_YN = 'Y'
					   /* 평가결과피드백 */
					   AND A.ENTER_CD     = B.ENTER_CD(+)
					   AND A.APPRAISAL_CD = B.APPRAISAL_CD(+)
					   AND A.SABUN        = B.SABUN(+)
					   AND A.APP_ORG_CD   = B.APP_ORG_CD(+)
					   AND A.ENTER_CD 	  = C.ENTER_CD(+)
					   AND A.APPRAISAL_CD = C.APPRAISAL_CD(+)
					   AND C.APP_STEP_CD(+) = '5'
					           ]]>
<if test='searchAppOrgCd != null and !searchAppOrgCd.equals("")'>
					   AND A.APP_ORG_CD = TRIM(#{searchAppOrgCd})
</if>
<if test='searchAppOrgNm != null and !searchAppOrgNm.equals("")'>
					   AND A.APP_ORG_NM LIKE '%'|| TRIM(#{searchAppOrgNm}) || '%'
</if>
<if test='searchAppGroupCd != null and !searchAppGroupCd.equals("")'>
					   AND A.SABUN || '_' || A.APP_ORG_CD IN (
					                     SELECT SABUN || '_' || APP_ORG_CD
					                       FROM TPAP202
					                      WHERE ENTER_CD     = A.ENTER_CD
					                        AND APPRAISAL_CD = A.APPRAISAL_CD
					                        AND APP_STEP_CD  = '5'
					                        AND APP_GROUP_CD = TRIM(#{searchAppGroupCd})
					       ) 
</if>
<if test='searchAppSheetType != null and !searchAppSheetType.equals("")'>
					   AND A.APP_SHEET_TYPE = TRIM(#{searchAppSheetType})
</if>
<if test='searchAppMethodCd != null and !searchAppMethodCd.equals("")'>
					   AND A.APP_METHOD_CD = TRIM(#{searchAppMethodCd})
</if>
<if test='searchNameSabun != null and !searchNameSabun.equals("")'>
					   AND (A.NAME LIKE #{searchNameSabun} ||'%' OR A.SABUN LIKE #{searchNameSabun} ||'%')
</if>
<if test='searchProtestYn != null and searchProtestYn.equals("Y")'>
					 <![CDATA[
					   AND A.SABUN || '_' || A.APP_ORG_CD IN 	(
					                     SELECT SABUN || '_' || APP_ORG_CD
					                       FROM TPAP567
					                      WHERE ENTER_CD = A.ENTER_CD
					                        AND APPRAISAL_CD = A.APPRAISAL_CD
					                        AND (LENGTH(PROTEST_MEMO_MBO) > 0 OR LENGTH(PROTEST_MEMO_COMP) > 0)
					                    )
					                    ]]>
</if>
<if test='searchProtestYn != null and searchProtestYn.equals("N")'>
					   <![CDATA[
					   AND A.SABUN || '_' || A.APP_ORG_CD NOT IN (
					                       SELECT SABUN || '_' || APP_ORG_CD
					                         FROM TPAP567
					                        WHERE ENTER_CD= A.ENTER_CD
					                          AND APPRAISAL_CD = A.APPRAISAL_CD
					                          AND (LENGTH(PROTEST_MEMO_MBO) > 0 OR LENGTH(PROTEST_MEMO_COMP) > 0)
					                      )
					                      ]]>
</if>
<if test='searchAppGroupByAppSabunYn != null and searchAppGroupByAppSabunYn.equals("Y")'>
			<![CDATA[
					   AND A.SABUN || '_' || A.APP_ORG_CD IN 	(
					                     SELECT SABUN || '_' || APP_ORG_CD
					                       FROM TPAP202
					                      WHERE ENTER_CD     = A.ENTER_CD
					                        AND APPRAISAL_CD = A.APPRAISAL_CD
					                        AND APP_STEP_CD  = '5'
					                        AND APP_SABUN    = #{ssnSabun}
					                        AND SABUN        <> #{ssnSabun}
					                    )
					                    ]]>
</if>
					 ORDER BY A.APP_ORG_CD, A.JIKCHAK_CD, A.JIKWEE_CD


		</select>

		<!-- 직책자평가내역 -->
		<select parameterType="map" resultType="cMap" id="getAppDirectorResultMgrList">

				<![CDATA[
				SELECT T.*
				     , (SELECT APP_S_YMD FROM TPAP101 WHERE ENTER_CD = T.ENTER_CD AND APPRAISAL_CD = T.APPRAISAL_CD) AS APP_S_YMD
				     , F_COM_GET_NAMES(T.ENTER_CD,T.APP_SABUN) AS APP_NAME
				     , F_COM_GET_JIKGUB_NM( T.ENTER_CD, T.APP_SABUN, (SELECT APP_E_YMD FROM TPAP101 WHERE ENTER_CD = T.ENTER_CD AND APPRAISAL_CD = T.APPRAISAL_CD) , #{ssnLocaleCd} ) AS JIKGUB_NM
				     , F_COM_GET_JIKWEE_NM( T.ENTER_CD, T.APP_SABUN, (SELECT APP_E_YMD FROM TPAP101 WHERE ENTER_CD = T.ENTER_CD AND APPRAISAL_CD = T.APPRAISAL_CD) , #{ssnLocaleCd} ) AS JIKWEE_NM
				     , F_COM_GET_JIKCHAK_NM( T.ENTER_CD, T.APP_SABUN, (SELECT APP_E_YMD FROM TPAP101 WHERE ENTER_CD = T.ENTER_CD AND APPRAISAL_CD = T.APPRAISAL_CD) , #{ssnLocaleCd} ) AS JIKCHAK_NM
				  FROM (
				          SELECT ENTER_CD
				               , MAX(APPRAISAL_CD) AS APPRAISAL_CD
				               , APP_SEQ_CD
				               , APP_SABUN
				               , APP_GROUP_CD
				               , COUNT(*)||'명' AS CNT
				            FROM TPAP202 A
				           WHERE ENTER_CD = TRIM(#{ssnEnterCd})
				             AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
				             AND APP_STEP_CD = '5'
				             AND APP_GROUP_CD IS NOT NULL
				                     ]]>
<if test='searchAppSabunName != null and !searchAppSabunName.equals("")'>
				          AND ( F_COM_GET_NAMES(A.ENTER_CD,A.APP_SABUN) LIKE '%' || #{searchAppSabunName} || '%' OR A.APP_SABUN LIKE '%' || #{searchAppSabunName} ||'%')
</if>
<if test='searchAppSeqCd != null and !searchAppSeqCd.equals("")'>
				          AND  A.APP_SEQ_CD = #{searchAppSeqCd}
</if>
<if test='searchGroupCd != null and !searchGroupCd.equals("")'>
				          AND  A.APP_GROUP_CD = #{searchGroupCd}
</if>
				          GROUP BY A.ENTER_CD, A.APP_SEQ_CD, A.APP_SABUN, A.APP_GROUP_CD
				      ) T
				 WHERE 1 = 1
				 ORDER BY APP_SEQ_CD, F_COM_JIKJE_SORT(T.ENTER_CD, T.APP_SABUN, APP_S_YMD)

		</select>


<!-- 평가결과종합관리 점수상세 팝업 조회 -->
		<select parameterType="map" resultType="cMap" id="getAppResultMgrDetailPopupList">

				<![CDATA[
					SELECT A.APP_ORG_NM
						 , A.MBO_T_APP_SELF_POINT
						 , A.MBO_T_APP_1ST_POINT
						 , A.MBO_T_APP_2ND_POINT
						 , A.MBO_T_APP_3RD_POINT
						 , A.MBO_SELF_CLASS_CD
						 , A.MBO_1ST_CLASS_CD
						 , A.MBO_2ND_CLASS_CD
						 , A.MBO_3RD_CLASS_CD
						 , A.COMP_T_SELF_POINT
						 , A.COMP_T_1ST_POINT
						 , A.COMP_T_2ND_POINT
						 , A.COMP_T_3RD_POINT
						 , A.COMP_SELF_CLASS_CD
						 , A.COMP_1ST_CLASS_CD
						 , A.COMP_2ND_CLASS_CD
						 , A.COMP_3RD_CLASS_CD
						 , A.MBO_APP_SUM_POINT
						 , A.COMP_APP_SUM_POINT
						 , A.APP_SUM_POINT
						 , A.MBO_APP_SUM_CLASS_CD
						 , A.COMP_APP_SUM_CLASS_CD
						 , A.APP_SUM_CLASS_CD
						 , A.LAST_MBO_POINT
						 , A.LAST_COMP_POINT
						 , A.LAST_POINT
						 , A.LAST_MBO_CLASS_CD
						 , A.LAST_COMP_CLASS_CD
						 , A.LAST_CLASS_CD
						 , A.ADT_MBO_POINT
						 , A.ADT_COMP_POINT
						 , A.ADT_POINT
						 , A.ADT_MBO_CLASS_CD
						 , A.ADT_COMP_CLASS_CD
						 , A.ADT_CLASS_CD
						 , A.FINAL_MBO_POINT
						 , A.FINAL_COMP_POINT
						 , A.FINAL_POINT
						 , A.FINAL_MBO_CLASS_CD
						 , A.FINAL_COMP_CLASS_CD
						 , A.FINAL_CLASS_CD
						 , A.APP_M_RATE
					 FROM TPAP551 A
					WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
					  AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					  AND A.SABUN = TRIM(#{searchSabun})
				]]>


		</select>

<!-- 평가결과종합관리 그룹결과 팝업 조회 -->
		<select parameterType="map" resultType="cMap" id="getAppResultMgrGrpPopupList">

				<![CDATA[
					SELECT A.ENTER_CD, A.APPRAISAL_CD, A.APP_GROUP_CD, A.APP_GROUP_NM,
					       APP_GROUP_S_CNT, APP_GROUP_A_CNT, APP_GROUP_B_CNT, APP_GROUP_C_CNT, APP_GROUP_D_CNT,
					       S_CNT_R, A_CNT_R, B_CNT_R, C_CNT_R, D_CNT_R
					FROM(
					SELECT A.ENTER_CD, A.APPRAISAL_CD, A.APP_GROUP_CD, B.APP_GROUP_NM, SUM(S_CNT) AS S_CNT_R,SUM(A_CNT)  AS A_CNT_R,SUM(B_CNT) AS B_CNT_R, SUM(C_CNT) AS C_CNT_R,SUM(D_CNT) AS D_CNT_R
					       FROM(
					          SELECT  ENTER_CD, APPRAISAL_CD, APP_GROUP_CD, COUNT(*) AS S_CNT, 0 AS A_CNT, 0 AS B_CNT, 0 AS C_CNT , 0 AS D_CNT
					            FROM TPAP551 A
					           WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					             AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					             AND  DECODE(TRIM(#{searchAppTypeCd}),'A',FINAL_MBO_CLASS_CD,'B',FINAL_COMP_CLASS_CD, FINAL_CLASS_CD) ='1'
					             AND APP_METHOD_CD = '02'
					            GROUP BY  ENTER_CD, APPRAISAL_CD, APP_GROUP_CD
					          UNION
					          SELECT   ENTER_CD, APPRAISAL_CD, APP_GROUP_CD, 0 AS S_CNT, COUNT(*) AS A_CNT, 0 AS B_CNT, 0 AS C_CNT , 0 AS D_CNT
					            FROM TPAP551 A
					           WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					             AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					             AND  DECODE(TRIM(#{searchAppTypeCd}),'A',FINAL_MBO_CLASS_CD,'B',FINAL_COMP_CLASS_CD, FINAL_CLASS_CD) ='3'
					             AND APP_METHOD_CD = '02'
					            GROUP BY  ENTER_CD, APPRAISAL_CD, APP_GROUP_CD
					          UNION
					          SELECT   ENTER_CD, APPRAISAL_CD, APP_GROUP_CD, 0 AS S_CNT, 0 AS A_CNT, COUNT(*) AS B_CNT, 0 AS C_CNT , 0 AS D_CNT
					            FROM TPAP551 A
					           WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					             AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					             AND  DECODE(TRIM(#{searchAppTypeCd}),'A',FINAL_MBO_CLASS_CD,'B',FINAL_COMP_CLASS_CD, FINAL_CLASS_CD) ='5'
					             AND APP_METHOD_CD = '02'
					            GROUP BY  ENTER_CD, APPRAISAL_CD, APP_GROUP_CD
					          UNION
					          SELECT   ENTER_CD, APPRAISAL_CD, APP_GROUP_CD, 0 AS S_CNT,0 AS A_CNT, 0 AS B_CNT, COUNT(*) AS C_CNT , 0 AS D_CNT
					            FROM TPAP551 A
					           WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					             AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					             AND  DECODE(TRIM(#{searchAppTypeCd}),'A',FINAL_MBO_CLASS_CD,'B',FINAL_COMP_CLASS_CD, FINAL_CLASS_CD) ='7'
					             AND APP_METHOD_CD = '02'
					            GROUP BY  ENTER_CD, APPRAISAL_CD, APP_GROUP_CD
					          UNION
					          SELECT  ENTER_CD, APPRAISAL_CD,  APP_GROUP_CD, 0 AS S_CNT,0 AS A_CNT, 0 AS B_CNT, 0 AS C_CNT ,  COUNT(*)  AS D_CNT
					            FROM TPAP551 A
					           WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					             AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					             AND DECODE(TRIM(#{searchAppTypeCd}),'A',FINAL_MBO_CLASS_CD,'B',FINAL_COMP_CLASS_CD, FINAL_CLASS_CD) ='9'  -- 평가종류에 따라서
					             AND APP_METHOD_CD = '02'
					            GROUP BY ENTER_CD, APPRAISAL_CD, APP_GROUP_CD) A, TPAP133 B
					      WHERE A.ENTER_CD = B.ENTER_CD
					        AND A.APPRAISAL_CD = B.APPRAISAL_CD
					        AND A.APP_GROUP_CD = B.APP_GROUP_CD
					      GROUP BY A.ENTER_CD, A.APPRAISAL_CD, A.APP_GROUP_CD, B.APP_GROUP_NM) A, TPAP221 B
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.APP_GROUP_CD = B.APP_GROUP_CD
					   AND A.ENTER_CD = TRIM(#{ssnEnterCd})
					   AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
					   AND B.APP_TYPE_CD = TRIM(#{searchAppTypeCd})  -- 평가종류에 따라서
				]]>


		</select>

<!-- 마감여부 조회 -->
		<select parameterType="map" resultType="cMap" id="getAppResultMgrMap">

				<![CDATA[
					SELECT  NVL(CLOSE_YN,'N') AS CLOSE_YN
					FROM TPAP101
					WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
				]]>


		</select>

<!-- 평가결과관리 저장 -->
		<update parameterType="map" id="saveAppResultMgr">

                    MERGE INTO TPAP551 T
                    USING (
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" separator=" UNION ALL " >
                           SELECT TRIM(#{ssnEnterCd})             AS ENTER_CD
                                , TRIM(#{rm.appraisalCd})       AS APPRAISAL_CD
                                , TRIM(#{rm.sabun})             AS SABUN
                                , TRIM(#{rm.appOrgCd})          AS APP_ORG_CD
                                , TRIM(#{rm.name})              AS NAME
                                , TRIM(#{rm.appOrgNm})          AS APP_ORG_NM
                                , TRIM(#{rm.jikweeCd})          AS JIKWEE_CD
                                , TRIM(#{rm.jikweeNm})          AS JIKWEE_NM
                                , TRIM(#{rm.workType})          AS WORK_TYPE
                                , TRIM(#{rm.workTypeNm})        AS WORK_TYPE_NM
                                , TRIM(#{rm.jikchakNm})         AS JIKCHAK_NM
                                , TRIM(#{rm.jikchakCd})         AS JIKCHAK_CD
                                , TRIM(#{rm.jikgubCd})          AS JIKGUB_CD
                                , TRIM(#{rm.jikgubNm})          AS JIKGUB_NM
                                , TRIM(#{rm.appGroupCd})        AS APP_GROUP_CD
                                , TRIM(#{rm.appSheetType})      AS APP_SHEET_TYPE
                                , TRIM(#{rm.appMethodCd})       AS APP_METHOD_CD
                                , TRIM(#{rm.mboTAppSelfPoint})  AS MBO_T_APP_SELF_POINT
                                , TRIM(#{rm.mboTApp1stPoint})   AS MBO_T_APP_1ST_POINT
                                , TRIM(#{rm.mboTApp2ndPoint})   AS MBO_T_APP_2ND_POINT
                                , TRIM(#{rm.mboTApp3rdPoint})   AS MBO_T_APP_3RD_POINT
                                , TRIM(#{rm.mboSelfClassCd})    AS MBO_SELF_CLASS_CD
                                , TRIM(#{rm.mbo1stClassCd})     AS MBO_1ST_CLASS_CD
                                , TRIM(#{rm.mbo2ndClassCd})     AS MBO_2ND_CLASS_CD
                                , TRIM(#{rm.mbo3rdClassCd})     AS MBO_3RD_CLASS_CD
                                , TRIM(#{rm.compTSelfPoint})    AS COMP_T_SELF_POINT
                                , TRIM(#{rm.compT1stPoint})     AS COMP_T_1ST_POINT
                                , TRIM(#{rm.compT2ndPoint})     AS COMP_T_2ND_POINT
                                , TRIM(#{rm.compT3rdPoint})     AS COMP_T_3RD_POINT
                                , TRIM(#{rm.compSelfClassCd})   AS COMP_SELF_CLASS_CD
                                , TRIM(#{rm.comp1stClassCd})    AS COMP_1ST_CLASS_CD
                                , TRIM(#{rm.comp2ndClassCd})    AS COMP_2ND_CLASS_CD
                                , TRIM(#{rm.comp3rdClassCd})    AS COMP_3RD_CLASS_CD
                                , TRIM(#{rm.app1stClassCd})     AS APP_1ST_CLASS_CD
                                , TRIM(#{rm.app2ndClassCd})     AS APP_2ND_CLASS_CD
                                , TRIM(#{rm.app3rdClassCd})     AS APP_3RD_CLASS_CD
                                , TRIM(#{rm.mboAppSumPoint})    AS MBO_APP_SUM_POINT
                                , TRIM(#{rm.compAppSumPoint})   AS COMP_APP_SUM_POINT
                                , TRIM(#{rm.appSumPoint})       AS APP_SUM_POINT
                                , TRIM(#{rm.mboAppSumClassCd})  AS MBO_APP_SUM_CLASS_CD
                                , TRIM(#{rm.compAppSumClassCd}) AS COMP_APP_SUM_CLASS_CD
                                , TRIM(#{rm.appSumClassCd})     AS APP_SUM_CLASS_CD
                                , TRIM(#{rm.lastMboPoint})      AS LAST_MBO_POINT
                                , TRIM(#{rm.lastCompPoint})     AS LAST_COMP_POINT
                                , TRIM(#{rm.lastPoint})         AS LAST_POINT
                                , TRIM(#{rm.lastMboClassCd})    AS LAST_MBO_CLASS_CD
                                , TRIM(#{rm.lastCompClassCd})   AS LAST_COMP_CLASS_CD
                                , TRIM(#{rm.lastClassCd})       AS LAST_CLASS_CD
                                , TRIM(#{rm.adtMboPoint})       AS ADT_MBO_POINT
                                , TRIM(#{rm.adtCompPoint})      AS ADT_COMP_POINT
                                , TRIM(#{rm.adtPoint})          AS ADT_POINT
                                , TRIM(#{rm.adtMboClassCd})     AS ADT_MBO_CLASS_CD
                                , TRIM(#{rm.adtCompClassCd})    AS ADT_COMP_CLASS_CD
                                , TRIM(#{rm.adtClassCd})        AS ADT_CLASS_CD
                                , TRIM(#{rm.finalMboPoint})     AS FINAL_MBO_POINT
                                , TRIM(#{rm.finalCompPoint})    AS FINAL_COMP_POINT
                                , TRIM(#{rm.finalPoint})        AS FINAL_POINT
                                , TRIM(#{rm.finalMboClassCd})   AS FINAL_MBO_CLASS_CD
                                , TRIM(#{rm.finalCompClassCd})  AS FINAL_COMP_CLASS_CD
                                , TRIM(#{rm.finalClassCd})      AS FINAL_CLASS_CD
                                , TRIM(#{rm.mboAppRank})        AS MBO_APP_RANK
                                , TRIM(#{rm.compAppRank})       AS COMP_APP_RANK
                                , TRIM(#{rm.appRank})           AS APP_RANK
                                , TRIM(#{rm.confirmYn})         AS CONFIRM_YN
                                , TRIM(#{rm.memo})              AS MEMO
                                , TRIM(#{rm.mboTAdt1stPoint})   AS MBO_T_ADT_1ST_POINT
                                , TRIM(#{rm.mboTAdt2ndPoint})   AS MBO_T_ADT_2ND_POINT
                                , TRIM(#{rm.compTAdt1stPoint})  AS COMP_T_ADT_1ST_POINT
                                , TRIM(#{rm.compTAdt2ndPoint})  AS COMP_T_ADT_2ND_POINT
                                , TRIM(#{rm.adt1stClassCd})     AS ADT_1ST_CLASS_CD
                                , TRIM(#{rm.adt2ndClassCd})     AS ADT_2ND_CLASS_CD
                                , TRIM(#{rm.adt3rdClassCd})     AS ADT_3RD_CLASS_CD
                             FROM DUAL
</foreach>
                          ) S
                    ON (
                            T.ENTER_CD     = S.ENTER_CD
                        AND T.APPRAISAL_CD = S.APPRAISAL_CD
                        AND T.SABUN        = S.SABUN
                        AND T.APP_ORG_CD   = S.APP_ORG_CD
                       )
                    WHEN MATCHED THEN
                         UPDATE SET
                                T.NAME                  = S.NAME
                              , T.APP_ORG_NM            = S.APP_ORG_NM
                              , T.JIKWEE_CD             = S.JIKWEE_CD
                              , T.JIKWEE_NM             = S.JIKWEE_NM
                              , T.WORK_TYPE             = S.WORK_TYPE
                              , T.WORK_TYPE_NM          = S.WORK_TYPE_NM
                              , T.JIKCHAK_NM            = S.JIKCHAK_NM
                              , T.JIKCHAK_CD            = S.JIKCHAK_CD
                              , T.JIKGUB_CD             = S.JIKGUB_CD
                              , T.JIKGUB_NM             = S.JIKGUB_NM
                              , T.APP_GROUP_CD          = S.APP_GROUP_CD
                              , T.APP_SHEET_TYPE        = S.APP_SHEET_TYPE
                              , T.APP_METHOD_CD         = S.APP_METHOD_CD
                              , T.MBO_T_APP_SELF_POINT  = S.MBO_T_APP_SELF_POINT
                              , T.MBO_T_APP_1ST_POINT   = S.MBO_T_APP_1ST_POINT
                              , T.MBO_T_APP_2ND_POINT   = S.MBO_T_APP_2ND_POINT
                              , T.MBO_T_APP_3RD_POINT   = S.MBO_T_APP_3RD_POINT
                              , T.MBO_SELF_CLASS_CD     = S.MBO_SELF_CLASS_CD
                              , T.MBO_1ST_CLASS_CD      = S.MBO_1ST_CLASS_CD
                              , T.MBO_2ND_CLASS_CD      = S.MBO_2ND_CLASS_CD
                              , T.MBO_3RD_CLASS_CD      = S.MBO_3RD_CLASS_CD
                              , T.COMP_T_SELF_POINT     = S.COMP_T_SELF_POINT
                              , T.COMP_T_1ST_POINT      = S.COMP_T_1ST_POINT
                              , T.COMP_T_2ND_POINT      = S.COMP_T_2ND_POINT
                              , T.COMP_T_3RD_POINT      = S.COMP_T_3RD_POINT
                              , T.COMP_SELF_CLASS_CD    = S.COMP_SELF_CLASS_CD
                              , T.COMP_1ST_CLASS_CD     = S.COMP_1ST_CLASS_CD
                              , T.COMP_2ND_CLASS_CD     = S.COMP_2ND_CLASS_CD
                              , T.COMP_3RD_CLASS_CD     = S.COMP_3RD_CLASS_CD
                              , T.APP_1ST_CLASS_CD      = S.APP_1ST_CLASS_CD
                              , T.APP_2ND_CLASS_CD      = S.APP_2ND_CLASS_CD
                              , T.APP_3RD_CLASS_CD      = S.APP_3RD_CLASS_CD
                              , T.MBO_APP_SUM_POINT     = S.MBO_APP_SUM_POINT
                              , T.COMP_APP_SUM_POINT    = S.COMP_APP_SUM_POINT
                              , T.APP_SUM_POINT         = S.APP_SUM_POINT
                              , T.MBO_APP_SUM_CLASS_CD  = S.MBO_APP_SUM_CLASS_CD
                              , T.COMP_APP_SUM_CLASS_CD = S.COMP_APP_SUM_CLASS_CD
                              , T.APP_SUM_CLASS_CD      = S.APP_SUM_CLASS_CD
                              , T.LAST_MBO_POINT        = S.LAST_MBO_POINT
                              , T.LAST_COMP_POINT       = S.LAST_COMP_POINT
                              , T.LAST_POINT            = S.LAST_POINT
                              , T.LAST_MBO_CLASS_CD     = S.LAST_MBO_CLASS_CD
                              , T.LAST_COMP_CLASS_CD    = S.LAST_COMP_CLASS_CD
                              , T.LAST_CLASS_CD         = S.LAST_CLASS_CD
                              , T.ADT_MBO_POINT         = S.ADT_MBO_POINT
                              , T.ADT_COMP_POINT        = S.ADT_COMP_POINT
                              , T.ADT_POINT             = S.ADT_POINT
                              , T.ADT_MBO_CLASS_CD      = S.ADT_MBO_CLASS_CD
                              , T.ADT_COMP_CLASS_CD     = S.ADT_COMP_CLASS_CD
                              , T.ADT_CLASS_CD          = S.ADT_CLASS_CD
                              , T.FINAL_MBO_POINT       = S.FINAL_MBO_POINT
                              , T.FINAL_COMP_POINT      = S.FINAL_COMP_POINT
                              , T.FINAL_POINT           = S.FINAL_POINT
                              , T.FINAL_MBO_CLASS_CD    = S.FINAL_MBO_CLASS_CD
                              , T.FINAL_COMP_CLASS_CD   = S.FINAL_COMP_CLASS_CD
                              , T.FINAL_CLASS_CD        = S.FINAL_CLASS_CD
                              , T.MBO_APP_RANK          = S.MBO_APP_RANK
                              , T.COMP_APP_RANK         = S.COMP_APP_RANK
                              , T.APP_RANK              = S.APP_RANK
                              , T.CONFIRM_YN            = S.CONFIRM_YN
                              , T.MEMO                  = S.MEMO
                              , T.MBO_T_ADT_1ST_POINT   = S.MBO_T_ADT_1ST_POINT
                              , T.MBO_T_ADT_2ND_POINT   = S.MBO_T_ADT_2ND_POINT
                              , T.COMP_T_ADT_1ST_POINT  = S.COMP_T_ADT_1ST_POINT
                              , T.COMP_T_ADT_2ND_POINT  = S.COMP_T_ADT_2ND_POINT
                              , T.ADT_1ST_CLASS_CD      = S.ADT_1ST_CLASS_CD
                              , T.ADT_2ND_CLASS_CD      = S.ADT_2ND_CLASS_CD
                              , T.ADT_3RD_CLASS_CD      = S.ADT_3RD_CLASS_CD
                              , T.CHKDATE               = SYSDATE
                              , T.CHKID                 = #{ssnSabun}
                    WHEN NOT MATCHED THEN
                         INSERT
                         (
                                T.ENTER_CD
                              , T.APPRAISAL_CD
                              , T.SABUN
                              , T.APP_ORG_CD
                              , T.NAME
                              , T.APP_ORG_NM
                              , T.JIKWEE_CD
                              , T.JIKWEE_NM
                              , T.WORK_TYPE
                              , T.WORK_TYPE_NM
                              , T.JIKCHAK_NM
                              , T.JIKCHAK_CD
                              , T.JIKGUB_CD
                              , T.JIKGUB_NM
                              , T.APP_GROUP_CD
                              , T.APP_SHEET_TYPE
                              , T.APP_METHOD_CD
                              , T.MBO_T_APP_SELF_POINT
                              , T.MBO_T_APP_1ST_POINT
                              , T.MBO_T_APP_2ND_POINT
                              , T.MBO_T_APP_3RD_POINT
                              , T.MBO_SELF_CLASS_CD
                              , T.MBO_1ST_CLASS_CD
                              , T.MBO_2ND_CLASS_CD
                              , T.MBO_3RD_CLASS_CD
                              , T.COMP_T_SELF_POINT
                              , T.COMP_T_1ST_POINT
                              , T.COMP_T_2ND_POINT
                              , T.COMP_T_3RD_POINT
                              , T.COMP_SELF_CLASS_CD
                              , T.COMP_1ST_CLASS_CD
                              , T.COMP_2ND_CLASS_CD
                              , T.COMP_3RD_CLASS_CD
                              , T.APP_1ST_CLASS_CD
                              , T.APP_2ND_CLASS_CD
                              , T.APP_3RD_CLASS_CD
                              , T.MBO_APP_SUM_POINT
                              , T.COMP_APP_SUM_POINT
                              , T.APP_SUM_POINT
                              , T.MBO_APP_SUM_CLASS_CD
                              , T.COMP_APP_SUM_CLASS_CD
                              , T.APP_SUM_CLASS_CD
                              , T.LAST_MBO_POINT
                              , T.LAST_COMP_POINT
                              , T.LAST_POINT
                              , T.LAST_MBO_CLASS_CD
                              , T.LAST_COMP_CLASS_CD
                              , T.LAST_CLASS_CD
                              , T.ADT_MBO_POINT
                              , T.ADT_COMP_POINT
                              , T.ADT_POINT
                              , T.ADT_MBO_CLASS_CD
                              , T.ADT_COMP_CLASS_CD
                              , T.ADT_CLASS_CD
                              , T.FINAL_MBO_POINT
                              , T.FINAL_COMP_POINT
                              , T.FINAL_POINT
                              , T.FINAL_MBO_CLASS_CD
                              , T.FINAL_COMP_CLASS_CD
                              , T.FINAL_CLASS_CD
                              , T.MBO_APP_RANK
                              , T.COMP_APP_RANK
                              , T.APP_RANK
                              , T.CONFIRM_YN
                              , T.MEMO
                              , T.MBO_T_ADT_1ST_POINT
                              , T.MBO_T_ADT_2ND_POINT
                              , T.COMP_T_ADT_1ST_POINT
                              , T.COMP_T_ADT_2ND_POINT
                              , T.ADT_1ST_CLASS_CD
                              , T.ADT_2ND_CLASS_CD
                              , T.ADT_3RD_CLASS_CD
                              , T.CHKDATE
                              , T.CHKID
                         )
                         VALUES
                         (
                                S.ENTER_CD
                              , S.APPRAISAL_CD
                              , S.SABUN
                              , S.APP_ORG_CD
                              , S.NAME
                              , S.APP_ORG_NM
                              , S.JIKWEE_CD
                              , S.JIKWEE_NM
                              , S.WORK_TYPE
                              , S.WORK_TYPE_NM
                              , S.JIKCHAK_NM
                              , S.JIKCHAK_CD
                              , S.JIKGUB_CD
                              , S.JIKGUB_NM
                              , S.APP_GROUP_CD
                              , S.APP_SHEET_TYPE
                              , S.APP_METHOD_CD
                              , S.MBO_T_APP_SELF_POINT
                              , S.MBO_T_APP_1ST_POINT
                              , S.MBO_T_APP_2ND_POINT
                              , S.MBO_T_APP_3RD_POINT
                              , S.MBO_SELF_CLASS_CD
                              , S.MBO_1ST_CLASS_CD
                              , S.MBO_2ND_CLASS_CD
                              , S.MBO_3RD_CLASS_CD
                              , S.COMP_T_SELF_POINT
                              , S.COMP_T_1ST_POINT
                              , S.COMP_T_2ND_POINT
                              , S.COMP_T_3RD_POINT
                              , S.COMP_SELF_CLASS_CD
                              , S.COMP_1ST_CLASS_CD
                              , S.COMP_2ND_CLASS_CD
                              , S.COMP_3RD_CLASS_CD
                              , S.APP_1ST_CLASS_CD
                              , S.APP_2ND_CLASS_CD
                              , S.APP_3RD_CLASS_CD
                              , S.MBO_APP_SUM_POINT
                              , S.COMP_APP_SUM_POINT
                              , S.APP_SUM_POINT
                              , S.MBO_APP_SUM_CLASS_CD
                              , S.COMP_APP_SUM_CLASS_CD
                              , S.APP_SUM_CLASS_CD
                              , S.LAST_MBO_POINT
                              , S.LAST_COMP_POINT
                              , S.LAST_POINT
                              , S.LAST_MBO_CLASS_CD
                              , S.LAST_COMP_CLASS_CD
                              , S.LAST_CLASS_CD
                              , S.ADT_MBO_POINT
                              , S.ADT_COMP_POINT
                              , S.ADT_POINT
                              , S.ADT_MBO_CLASS_CD
                              , S.ADT_COMP_CLASS_CD
                              , S.ADT_CLASS_CD
                              , S.FINAL_MBO_POINT
                              , S.FINAL_COMP_POINT
                              , S.FINAL_POINT
                              , S.FINAL_MBO_CLASS_CD
                              , S.FINAL_COMP_CLASS_CD
                              , S.FINAL_CLASS_CD
                              , S.MBO_APP_RANK
                              , S.COMP_APP_RANK
                              , S.APP_RANK
                              , S.CONFIRM_YN
                              , S.MEMO
                              , S.MBO_T_ADT_1ST_POINT
                              , S.MBO_T_ADT_2ND_POINT
                              , S.COMP_T_ADT_1ST_POINT
                              , S.COMP_T_ADT_2ND_POINT
                              , S.ADT_1ST_CLASS_CD
                              , S.ADT_2ND_CLASS_CD
                              , S.ADT_3RD_CLASS_CD
                              , SYSDATE
                              , #{ssnSabun}
                         )
        </update>

<!-- 평가결과가관리 삭제 -->
		<delete parameterType="map" id="deleteAppResultMgr">

					DELETE FROM TPAP551
					WHERE	(ENTER_CD, APPRAISAL_CD, SABUN, APP_ORG_CD) IN 	( (NULL, NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,				(
										#{ssnEnterCd}
										<if test='rm.appraisalCd != null and !rm.appraisalCd.equals("")'>
											, TRIM( #{rm.appraisalCd} )
                                        </if>

										<if test='rm.sabun != null and !rm.sabun.equals("")'>
											, TRIM( #{rm.sabun} )
                                        </if>

										<if test='rm.appOrgCd != null and !rm.appOrgCd.equals("")'>
											, TRIM( #{rm.appOrgCd} )
                                        </if>
										)
</foreach>
										)
        </delete>

     <!-- 평가결과 상위3 하위3 조회 -->
     <select parameterType="map" resultType="cMap" id="getEvalRankingList">
          <![CDATA[
          SELECT 'A' AS GUBUN , A.*
          FROM
               (
                    SELECT B.ENTER_CD
                         , B.APPRAISAL_CD
                         , B.SABUN
                         , B.APP_ORG_CD
                         , B.NAME
                         , B.APP_ORG_NM
                         , A.APPRAISAL_YY, B.FINAL_POINT
                         , ROW_NUMBER() OVER(PARTITION BY B.ENTER_CD, B.APPRAISAL_CD ORDER BY B.FINAL_POINT DESC) rn
                    FROM TPAP101 A
                              JOIN TPAP551 B
                                   ON A.ENTER_CD = B.ENTER_CD
                                        AND A.APPRAISAL_CD = B.APPRAISAL_CD
                    WHERE A.ENTER_CD = #{ssnEnterCd}
                      AND A.APP_TYPE_CD = #{searchAppTypeCd}
                      AND A.APPRAISAL_YY = #{searchYear}
               ) A
          WHERE A.rn <= 3
          UNION ALL
          SELECT 'B' AS GUBUN , A.*
          FROM
               (
                    SELECT B.ENTER_CD
                         , B.APPRAISAL_CD
                         , B.SABUN
                         , B.APP_ORG_CD
                         , B.NAME
                         , B.APP_ORG_NM
                         , A.APPRAISAL_YY , B.FINAL_POINT
                         , ROW_NUMBER() OVER(PARTITION BY B.ENTER_CD, B.APPRAISAL_CD ORDER BY B.FINAL_POINT ASC) rn
                    FROM TPAP101 A
                              JOIN TPAP551 B
                                   ON A.ENTER_CD = B.ENTER_CD
                                        AND A.APPRAISAL_CD = B.APPRAISAL_CD
                    WHERE A.ENTER_CD = #{ssnEnterCd}
                      AND A.APP_TYPE_CD = #{searchAppTypeCd}
                      AND A.APPRAISAL_YY = #{searchYear}
               ) A
          WHERE A.rn <= 3
    ]]>
     </select>

</mapper>