<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.medical.medAppDet">
	
	<!-- 대상자 콤보 리스트 -->
	<select id="getMedAppDetFamCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT TT.CODE
		     , TT.CODE_NM AS CODE_NM
		     , TT.FAM_NM AS FAM_NM
		     , F_COM_GET_GRCODE_NAME(#{ssnEnterCd}, 'B60030', TT.FAM_CD) AS FAM_CD_NM
		     , TT.FAM_CD AS FAM_CD
		     , TT.FAM_YMD AS FAM_YMD
		     , TT.SEX_TYPE AS SEX_TYPE
	     FROM (
				SELECT A.RES_NO AS CODE
				     , A.NAME AS CODE_NM
				     , A.NAME AS FAM_NM
				     , '10' AS FAM_CD
				     , BIR_YMD AS FAM_YMD
				     , F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H00010', A.SEX_TYPE) AS SEX_TYPE
				FROM THRM100 A
				WHERE ENTER_CD = #{ssnEnterCd}
				AND SABUN = TRIM( #{searchApplSabun} ) ]]>
			<if test="famNm != null and famNm neq ''">
				AND RES_NO = TRIM( #{famNm} )
			</if>
	<![CDATA[
				AND EXISTS ( SELECT 1
				                FROM TBEN702 X
				                WHERE X.ENTER_CD = #{ssnEnterCd}
				                AND TO_CHAR(SYSDATE, 'yyyymmdd') BETWEEN X.SDATE AND NVL(X.EDATE, '99991231')
				                AND X.FAM_CD = '10' )
				UNION ALL
				SELECT A.FAMRES AS CODE
				     , A.FAM_NM AS CODE_NM
				     , A.FAM_NM
				     , (SELECT MAX(CODE) FROM TSYS005 Y
						WHERE GRCODE_CD = 'B60030' AND ENTER_CD = #{ssnEnterCd} 
						AND ( TRIM(NVL(Y.NOTE1,'xxx')) = A.FAM_CD OR TRIM(NVL(Y.NOTE2,'xxx')) = A.FAM_CD )) AS FAM_CD
				     , A.FAM_YMD
				     , CASE WHEN SUBSTR(CRYPTIT.DECRYPT(A.FAMRES, A.ENTER_CD), 7, 1) IN ('1', '3', '5', '7', '9')
					    THEN '남' 
				 		WHEN SUBSTR(CRYPTIT.DECRYPT(A.FAMRES, A.ENTER_CD), 7, 1) IN ('2', '4', '6', '8', '0') 
				 		THEN '여'
				 		ELSE '' END AS SEX_TYPE_NM
				FROM THRM111 A
				WHERE ENTER_CD = #{ssnEnterCd}
				AND SABUN =  TRIM( #{searchApplSabun} ) ]]>
			<if test="famNm != null and famNm neq ''">
				AND FAMRES =  TRIM( #{famNm} )
			</if>
	<![CDATA[
				AND EXISTS ( SELECT 1
				                FROM TBEN702 X, TSYS005 Y
				                WHERE X.ENTER_CD = #{ssnEnterCd}
				                AND TO_CHAR(SYSDATE, 'yyyymmdd') BETWEEN X.SDATE AND NVL(X.EDATE, '99991231')
				                AND X.ENTER_CD = Y.ENTER_CD
				                AND Y.GRCODE_CD = 'B60030'
				                AND X.FAM_CD = Y.CODE 
				                AND ( TRIM(NVL(Y.NOTE1,'xxx')) = A.FAM_CD
				                   OR TRIM(NVL(Y.NOTE2,'xxx')) = A.FAM_CD ) 
				            )
		            ) TT
	]]>
	</select>
		
	<!-- 지원시작년월 조회 -->
	<select id="getMedAppDetPayYm" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT MIN(A.PAY_YM) AS MED_S_YM
			 , CASE WHEN TO_CHAR(TO_DATE(NVL(MIN(A.PAY_YM),TO_CHAR(SYSDATE,'YYYYMM')),'YYYYMM') + (INTERVAL '12' MONTH),'YYYYMM') > TO_CHAR(SYSDATE, 'YYYYMM')
			  	    THEN 'true' ELSE 'false' 
			    END AS YEAR_YN
		 FROM TBEN703 A
		WHERE A.ENTER_CD = #{ssnEnterCd}
		  AND A.SABUN = TRIM( #{searchApplSabun} )
		  AND A.FAM_RES_NO = #{famNm}
		  AND A.MED_CODE = #{medCode}
		  AND EXISTS ( SELECT 1
		                 FROM THRI103 X
		                WHERE X.ENTER_CD = A.ENTER_CD
	                      AND X.APPL_SEQ = A.APPL_SEQ
	                      AND X.APPL_STATUS_CD = '99'
	                 )
	]]>
	</select>
		
	<!-- 년간지원받은금액 조회 -->
	<select id="getMedAppDetTotalPayMon" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT 
			NVL(SUM(A.PAY_MON),0) AS TOTAL_PAY_MON 
		  FROM TBEN703 A, THRI103 B
		 WHERE 1=1
		   AND A.ENTER_CD = #{ssnEnterCd}
		   AND A.ENTER_CD = B.ENTER_CD
		   AND A.APPL_SEQ = B.APPL_SEQ 
		   AND A.SABUN = TRIM( #{searchApplSabun} )
		   AND B.APPL_STATUS_CD = '99'
		   AND SUBSTR( A.PAY_YM, 1, 4) = SUBSTR(#{searchApplYmd}, 1, 4)
	]]>
	</select>
		
	<!-- 전년도 연말정산 부양가족여부 조회 -->
	<select id="getMedAppDetDpndntYn" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT F_CPN_GET_FAM_DPNDNT_YN(#{ssnEnterCd}, TO_CHAR(ADD_MONTHS(#{searchYmd}, -12), 'YYYY'), '1', TRIM( #{searchApplSabun} ), #{famNm}) AS BUYANG_YN
		  FROM DUAL
	]]>
	</select>
		
	<!-- 년간지원받을수있는금액 조회  -->
	<select id="getMedAppDetFreelPayMon" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT
		(
			SELECT 
				NVL(MAX(EMP_YEAR_MON),0) AS EMP_YEAR_MON
			FROM TBEN702 X
			WHERE X.ENTER_CD = #{ssnEnterCd}
			AND TO_CHAR(SYSDATE, 'yyyymmdd') BETWEEN X.SDATE AND NVL(X.EDATE, '99991231')
			AND X.FAM_CD = '10'
		)
		-
		(
			SELECT 
				NVL(SUM(A.PAY_MON),0) AS PAY_MON 
			  FROM TBEN703 A, THRI103 B
			 WHERE 1=1
			   AND A.ENTER_CD = #{ssnEnterCd} 
			   AND A.ENTER_CD = B.ENTER_CD
			   AND A.APPL_SEQ = B.APPL_SEQ 
			   AND A.SABUN = TRIM( #{searchApplSabun} )
			   AND B.APPL_STATUS_CD = '99'
			   AND SUBSTR( A.PAY_YM, 1, 4) = TO_CHAR(SYSDATE,'YYYY')
		) AS FREE_PAY_MON
		FROM DUAL
	]]>
	</select>
		
	<!--  세부내역 저장(관리자) -->
	<update id="saveMedAppDetAdmin" parameterType="map">
	<![CDATA[
		MERGE INTO TBEN703 T
		USING  ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
			SELECT    TRIM( #{ssnEnterCd} )					AS ENTER_CD
			   	 	, TRIM( #{rm.searchApplSeq} )			AS APPL_SEQ
					, TRIM( #{rm.searchApplSabun} )			AS SABUN
					, REPLACE(TRIM(#{rm.payYm}),'-','') 	AS PAY_YM
					, REPLACE(TRIM(#{rm.applMon}),',','')	AS APPL_MON
					, REPLACE(TRIM(#{rm.payMon}),',','')	AS PAY_MON
					, TRIM( #{rm.payNote} ) 				AS PAY_NOTE
				FROM DUAL
		</foreach>
	<![CDATA[
				) S
		ON (      T.ENTER_CD = S.ENTER_CD
		      AND T.APPL_SEQ = S.APPL_SEQ
		   )
		WHEN MATCHED THEN
			UPDATE SET	  T.PAY_YM 	    	= S.PAY_YM
						, T.APPL_MON     	= S.APPL_MON
						, T.PAY_MON     	= S.PAY_MON
						, T.PAY_NOTE     	= S.PAY_NOTE
						, T.CHKDATE			= SYSDATE
						, T.CHKID			= #{ssnSabun}
	]]>
	</update>
		
	<!--  세부내역 저장 -->
	<update id="saveMedAppDet" parameterType="map">
	<![CDATA[
			 MERGE INTO TBEN703 T 
			 USING ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
					SELECT TRIM(#{ssnEnterCd})  AS  ENTER_CD 
			             , TRIM(#{rm.searchApplSeq})  AS  APPL_SEQ
			             , TRIM(#{rm.searchApplSabun})  AS  SABUN
			             , TRIM(#{rm.famCd})  AS  FAM_CD
			             , TRIM(#{rm.famRealNm})  AS  FAM_NM
			             , TRIM(#{rm.famNm})  AS  FAM_RES_NO
			             , TRIM(#{rm.medCode})  AS  MED_CODE
			             , TRIM(#{rm.medCodeNm})  AS  MED_NAME
			             , REPLACE(TRIM(#{rm.medSYm}),'-','')  AS  MED_S_YM
			             , TRIM(#{rm.note})  AS  NOTE
			             , TRIM(#{rm.famYmdReal})  AS  FAM_YMD
			          FROM DUAL
		</foreach>
	<![CDATA[
			) S 
			ON ( 
			          T.ENTER_CD = S.ENTER_CD 
			     AND  T.APPL_SEQ = S.APPL_SEQ 
			) 
			WHEN MATCHED THEN 
			   UPDATE SET T.CHKDATE	= sysdate 
			            , T.CHKID	= #{ssnSabun} 
			            , T.FAM_CD = S.FAM_CD 
			            , T.FAM_NM = S.FAM_NM 
			            , T.FAM_RES_NO = S.FAM_RES_NO 
			            , T.MED_CODE = S.MED_CODE 
			            , T.MED_NAME = S.MED_NAME 
			            , T.MED_S_YM = S.MED_S_YM 
			            , T.NOTE = S.NOTE 
			            , T.FAM_YMD = S.FAM_YMD 
			WHEN NOT MATCHED THEN 
			   INSERT 
			   ( 
			              T.ENTER_CD
			            , T.APPL_SEQ
			            , T.SABUN
			            , T.FAM_CD
			            , T.FAM_NM
			            , T.FAM_RES_NO
			            , T.MED_CODE
			            , T.MED_NAME
			            , T.MED_S_YM
			            , T.NOTE
			            , T.FAM_YMD
			            , T.CHKDATE
			            , T.CHKID
			   ) 
			   VALUES 
			   ( 
			              S.ENTER_CD
			            , S.APPL_SEQ
			            , S.SABUN
			            , S.FAM_CD
			            , S.FAM_NM
			            , S.FAM_RES_NO
			            , S.MED_CODE
			            , S.MED_NAME
			            , S.MED_S_YM
			            , S.NOTE
			            , S.FAM_YMD
			            , sysdate
			            , #{ssnSabun}
			   )
	]]>
	</update>
		
	<!-- 재직상태 정보 조회 -->
	<select id="getMedAppDetUserStsCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT UPPER(F_COM_GET_STATUS_CD(#{ssnEnterCd}, #{searchApplSabun})) AS STS_CD
			 , F_COM_GET_CAREER_CNT(#{ssnEnterCd}, #{searchApplSabun}, 'W', 'YY', NULL, NULL, 'ko_KR') AS WORK_YEAR
		FROM DUAL 
	]]>
	</select>
		
	<!-- 신청자정보 조회 -->
	<select id="getMedAppDetMap" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT
			 A.ENTER_CD
			,A.APPL_SEQ
			,A.SABUN
			,A.FAM_CD
			,A.FAM_NM
			,A.FAM_RES_NO
			,A.MED_CODE
			,A.MED_NAME
			,A.MED_S_YM
			,A.APPL_MON
			,A.NOTE
			,A.PAY_MON
			,A.PAY_YM
			,A.PAY_NOTE
			,A.CLOSE_YN
			,A.FAM_YMD
			,F_COM_GET_GRCODE_NAME(#{ssnEnterCd}, 'B60030', A.FAM_CD) AS FAM_CD_NM
			,CASE WHEN SUBSTR(CRYPTIT.DECRYPT(A.FAM_RES_NO, A.ENTER_CD), 7, 1) IN ('1', '3', '5', '7', '9')
			    THEN '남' 
		 		WHEN SUBSTR(CRYPTIT.DECRYPT(A.FAM_RES_NO, A.ENTER_CD), 7, 1) IN ('2', '4', '6', '8', '0') 
		 		THEN '여'
		 		ELSE '' END AS SEX_TYPE_NM
	     FROM TBEN703 A
	    WHERE A.ENTER_CD   = #{ssnEnterCd}
          AND A.APPL_SEQ   = TRIM( #{searchApplSeq} )
	]]>
	</select>
	
</mapper>