<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.gift.giftAppDet">
		
	<!-- 신청자정보 조회 -->
	<select id="getGiftAppDetUseInfo" parameterType="map" resultType="cMap">
	<![CDATA[
        SELECT 
            CASE WHEN B.REC_PHONE IS NOT NULL THEN F_COM_GET_CONT_ADDRESS(#{ssnEnterCd}, TRIM( #{searchApplSabun} ), 'HP') ELSE B.REC_PHONE END AS PHONE_NO
           , F_COM_GET_NAMES(#{ssnEnterCd}, TRIM( #{searchApplSabun} ), '') AS APPL_NAME
           , A.ADDR_GUBUN
           ,CASE WHEN B.REC_ADDR IS NOT NULL THEN B.REC_ZIP || '__' || B.REC_ADDR  ELSE ( SELECT ZIP || '__' || ADDR
                  FROM TSYS015 A  -- LOCATION 관리
                WHERE ENTER_CD =    #{ssnEnterCd}
                   AND A.LOCATION_CD   = F_COM_GET_LOCATION_CD2(#{ssnEnterCd}, TRIM( #{searchApplSabun} ), TO_CHAR(SYSDATE, 'YYYYMMDD')) 
             ) END AS LOC_ADDR      
           , CASE WHEN B.REC_ADDR IS NOT NULL THEN B.REC_ZIP || '__' || B.REC_ADDR  ELSE ( SELECT ZIP || '__' || TRIM(ADDR1 || ' ' || ADDR2)
                 FROM THRM123
                WHERE ENTER_CD = #{ssnEnterCd}
                  AND SABUN    = TRIM( #{searchApplSabun} )
                  AND ADD_TYPE = '3' ) END AS EMP_ADDR 
           , B.NOTE      
        FROM TBEN765 A, TBEN767 B
       WHERE A.ENTER_CD = #{ssnEnterCd}
         AND A.ENTER_CD = B.ENTER_CD(+)
         AND A.GIFT_SEQ = B.GIFT_SEQ(+)
         AND TRIM(#{searchApplSabun}) = B.SABUN(+)
         AND A.GIFT_SEQ = TRIM( #{searchGiftSeq} )
	]]>
	</select>
	
	<!-- 저장  -->
	<update id="saveGiftAppDet" parameterType="map">
	<![CDATA[			
		 MERGE INTO TBEN767 T 
		 USING ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
				SELECT TRIM(#{ssnEnterCd})  			AS  ENTER_CD 
			         , TRIM(#{rm.searchGiftSeq})  	AS  GIFT_SEQ
			         , TRIM(#{rm.searchApplSabun})  	AS  SABUN
			         , TRIM(#{rm.giftCd})  			AS  GIFT_CD
			         , TO_CHAR(SYSDATE,'YYYYMMDD')  	AS  APPL_YMD
			         , TRIM(#{rm.recName})  			AS  REC_NAME
			         , TRIM(#{rm.recPhone})  		AS  REC_PHONE
			         , TRIM(#{rm.recZip})  			AS  REC_ZIP
			         , TRIM(#{rm.recAddr})  			AS  REC_ADDR
			         , TRIM(#{rm.note})  			AS  NOTE
			      FROM DUAL
		</foreach>
	<![CDATA[					
		) S 
		ON ( 
		          T.ENTER_CD 	= S.ENTER_CD 
		     AND  T.GIFT_SEQ 	= S.GIFT_SEQ 
		     AND  T.SABUN 		= S.SABUN 
		) 
		WHEN MATCHED THEN 
		   UPDATE SET T.CHKDATE		= sysdate 
		            , T.CHKID		= #{ssnSabun} 
		            , T.GIFT_CD 	= S.GIFT_CD 
		            , T.APPL_YMD 	= S.APPL_YMD 
		            , T.REC_NAME 	= S.REC_NAME 
		            , T.REC_PHONE 	= S.REC_PHONE 
		            , T.REC_ZIP 	= S.REC_ZIP 
		            , T.REC_ADDR 	= S.REC_ADDR 
		            , T.NOTE 		= S.NOTE 
		WHEN NOT MATCHED THEN 
		   INSERT 
		   ( 
		              T.ENTER_CD
		            , T.GIFT_SEQ
		            , T.SABUN
		            , T.GIFT_CD
		            , T.APPL_YMD
		            , T.REC_NAME
		            , T.REC_PHONE
		            , T.REC_ZIP
		            , T.REC_ADDR
		            , T.NOTE
		            , T.CHKDATE
		            , T.CHKID
		   ) 
		   VALUES 
		   ( 
		              S.ENTER_CD
		            , S.GIFT_SEQ
		            , S.SABUN
		            , S.GIFT_CD
		            , S.APPL_YMD
		            , S.REC_NAME
		            , S.REC_PHONE
		            , S.REC_ZIP
		            , S.REC_ADDR
		            , S.NOTE
		            , sysdate
		            , #{ssnSabun}
		   ) 
	]]>
	</update>
	
</mapper>