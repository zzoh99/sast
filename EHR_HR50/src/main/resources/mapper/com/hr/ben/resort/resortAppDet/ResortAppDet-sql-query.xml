<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.resort.resortAppDet">
	
	<!-- 리조트명 콤보 -->		
	<select id="getResortAppDetResortName" parameterType="map" resultType="cMap">
	<![CDATA[
		 SELECT SEQ AS CODE_REAL, RESORT_NM AS CODE_NM, RESORT_NM AS CODE
		   FROM TBEN490
		  WHERE ENTER_CD = #{ssnEnterCd}
		    AND COMPANY_CD = TRIM(#{companyCd})
		    AND NVL(USE_YN,'N') = 'Y'
		  ORDER BY F_COM_GET_GRCODE_SEQ( #{ssnEnterCd}, 'B49530', COMPANY_CD)
		         , F_COM_GET_GRCODE_SEQ( #{ssnEnterCd}, 'B49510', AREA_CD)
		         , RESORT_NM
	]]>
	</select>
		
	<!-- 성수기 사용시간 체크 -->		
	<select id="getResortAppDetChkSeasonDay" parameterType="map" resultType="cMap">
	<![CDATA[
		 SELECT COUNT(1) AS CNT
		  FROM TBEN492
		 WHERE ENTER_CD = #{ssnEnterCd}
		    AND (   TO_DATE(#{sdate}) BETWEEN TO_DATE(USE_SDATE) AND TO_DATE(USE_EDATE) 
		         OR TO_DATE(#{edate}) BETWEEN TO_DATE(USE_SDATE) AND TO_DATE(USE_EDATE) 
		         OR ( TO_DATE(USE_SDATE) > TO_DATE(#{sdate}) AND TO_DATE(USE_EDATE) < TO_DATE(#{edate}) ) 
		        )
	]]>
	</select>
		
	<!-- 회사지원 가능여부 체크 -->		
	<select id="getResortAppDetChkComMon" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT COUNT(1) AS CNT
		  FROM TBEN491 A, THRI103 B
		 WHERE A.ENTER_CD = #{ssnEnterCd}
		   AND A.SABUN    = #{searchApplSabun}
		   AND SUBSTR(A.SDATE,1,4)  = SUBSTR(REPLACE(TRIM( #{sdate} ), '-', ''),1,4)
		   AND A.ENTER_CD = B.ENTER_CD
		   AND A.APPL_SEQ = B.APPL_SEQ
		   AND B.APPL_STATUS_CD in ('21','31','99')
		   AND A.STATUS_CD = 'Y'
		   AND NVL(A.COM_MON, 0) > 0
	]]>
	</select>
		
	<!-- 신청내용 조회 -->
	<select id="getResortAppDetMap" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT  A.ENTER_CD
				, A.APPL_SEQ
				, A.SABUN
				, A.COMPANY_CD
				, A.RESORT_NM
				, A.ROOM_TYPE
				, A.SDATE
				, A.EDATE
				, A.DAYS
				, A.WAIT_YN
				, A.CNT
				, A.PHONE_NO
				, A.MAIL_ID
				, A.COM_MON_YN
				, A.NOTE
				, A.STATUS_CD
				, A.PLAN_SEQ
				, A.RESORT_SEQ
				, A.HOPE_CD
				, A.RSV_NO1
				, A.RSV_NO2
				, A.RESORT_MON
				, A.COM_MON
				, A.PSNAL_MON
                  FROM TBEN491 A
                 WHERE A.ENTER_CD   = #{ssnEnterCd}
                   AND A.APPL_SEQ   = #{searchApplSeq}
	]]>
	</select>
		
	<!-- 개인연락처 조회 -->
	<select id="getResortAppDetMap2" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT F_COM_GET_CONT_ADDRESS(#{ssnEnterCd}, TRIM(#{searchApplSabun}), 'HP') AS PHONE_NO
             , F_COM_GET_CONT_ADDRESS(#{ssnEnterCd}, TRIM(#{searchApplSabun}), 'IM') AS MAIL_ID
         FROM DUAL
	]]>
	</select>
		
	<!-- 신청 내용 저장 -->
	<update id="saveResortAppDet" parameterType="map">
	<![CDATA[
		MERGE INTO TBEN491 T
		USING ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
				SELECT	  TRIM( #{ssnEnterCd} ) 	    AS ENTER_CD
						, TRIM( #{rm.searchApplSeq} ) 	AS APPL_SEQ
						, TRIM( #{rm.searchApplSabun} )	AS SABUN
						, TRIM( #{rm.companyCd} )		AS COMPANY_CD
						, TRIM( #{rm.resortNm} ) 		AS RESORT_NM
						, REPLACE(TRIM( #{rm.sdate} ), '-', '') AS SDATE
						, REPLACE(TRIM( #{rm.edate} ), '-', '') AS EDATE
						, TRIM( #{rm.roomType} ) 		AS ROOM_TYPE
						, TRIM( #{rm.days} ) 			AS DAYS
						, TRIM( #{rm.waitYn} ) 			AS WAIT_YN
						, TRIM( #{rm.cnt} ) 			AS CNT
						, TRIM( #{rm.phoneNo} ) 		AS PHONE_NO
						, TRIM( #{rm.mailId}) 			AS MAIL_ID
						, TRIM( #{rm.note} ) 			AS NOTE
						, TRIM( #{rm.comMonYn} ) 		AS COM_MON_YN
						, TRIM( #{rm.planSeq} ) 		AS PLAN_SEQ
						, TRIM( #{rm.resortSeq} ) 		AS RESORT_SEQ
						, TRIM( #{rm.hopeCd} ) 			AS HOPE_CD
						, TRIM( #{rm.rsvNo1} ) 			AS RSV_NO1
						, TRIM( #{rm.rsvNo2} ) 			AS RSV_NO2
						, TRIM( #{rm.resortMon} ) 		AS RESORT_MON
						, TRIM( #{rm.comMon} ) 			AS COM_MON
						, TRIM( #{rm.psnalMon} ) 		AS PSNAL_MON
				 FROM   DUAL
		</foreach>
	<![CDATA[
				) S
		ON ( 		 T.ENTER_CD	= S.ENTER_CD
				AND  T.APPL_SEQ	= S.APPL_SEQ
		 )
		WHEN MATCHED THEN
		   UPDATE SET T.CHKDATE	= sysdate 
		            , T.CHKID	= #{ssnSabun} 
		            , T.COMPANY_CD = S.COMPANY_CD
		            , T.RESORT_NM = S.RESORT_NM 
		            , T.ROOM_TYPE = S.ROOM_TYPE 
		            , T.SDATE = S.SDATE 
		            , T.EDATE = S.EDATE 
		            , T.DAYS = S.DAYS 
		            , T.WAIT_YN = S.WAIT_YN 
		            , T.CNT = S.CNT 
		            , T.PHONE_NO = S.PHONE_NO 
		            , T.MAIL_ID = S.MAIL_ID 
		            , T.COM_MON_YN = S.COM_MON_YN 
		            , T.NOTE = S.NOTE 
		            , T.PLAN_SEQ = S.PLAN_SEQ 
		            , T.RESORT_SEQ = S.RESORT_SEQ 
		            , T.HOPE_CD = S.HOPE_CD 
		            , T.RSV_NO1 = S.RSV_NO1 
		            , T.RSV_NO2 = S.RSV_NO2 
		            , T.RESORT_MON = S.RESORT_MON 
		            , T.COM_MON = S.COM_MON 
		            , T.PSNAL_MON = S.PSNAL_MON 
		WHEN NOT MATCHED THEN 
		   INSERT 
		   ( 
		              T.ENTER_CD
		            , T.APPL_SEQ
		            , T.SABUN
		            , T.COMPANY_CD
		            , T.RESORT_NM
		            , T.ROOM_TYPE
		            , T.SDATE
		            , T.EDATE
		            , T.DAYS
		            , T.WAIT_YN
		            , T.CNT
		            , T.PHONE_NO
		            , T.MAIL_ID
		            , T.COM_MON_YN
		            , T.NOTE
		            , T.PLAN_SEQ
		            , T.RESORT_SEQ
		            , T.HOPE_CD
		            , T.RSV_NO1
		            , T.RSV_NO2
		            , T.RESORT_MON
		            , T.COM_MON
		            , T.PSNAL_MON
		            , T.CHKDATE
		            , T.CHKID
		   ) 
		   VALUES 
		   ( 
		              S.ENTER_CD
		            , S.APPL_SEQ
		            , S.SABUN
		            , S.COMPANY_CD
		            , S.RESORT_NM
		            , S.ROOM_TYPE
		            , S.SDATE
		            , S.EDATE
		            , S.DAYS
		            , S.WAIT_YN
		            , S.CNT
		            , S.PHONE_NO
		            , S.MAIL_ID
		            , S.COM_MON_YN
		            , S.NOTE
		            , S.PLAN_SEQ
		            , S.RESORT_SEQ
		            , S.HOPE_CD
		            , S.RSV_NO1
		            , S.RSV_NO2
		            , S.RESORT_MON
		            , S.COM_MON
		            , S.PSNAL_MON
		            , sysdate
		            , #{ssnSabun}
			)
	]]>
	</update>
		
	<select id="getResortTargetYn" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT 
			COUNT(1) AS CNT 
		  FROM TBEN496 A
		 WHERE A.ENTER_CD =	#{ssnEnterCd}
	       AND A.YEAR 	  = SUBSTR(REPLACE(TRIM( #{sdate} ), '-', ''),1,4)
	       AND A.SABUN	  = TRIM( #{searchApplSabun} )
	]]>
	</select>
</mapper>