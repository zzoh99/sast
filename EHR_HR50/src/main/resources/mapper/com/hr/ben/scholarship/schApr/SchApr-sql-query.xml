<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.scholarship.schApr">
		
	<!-- 조회 -->
	<select id="getSchAprList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd} ) AS NAME
	         , F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS ORG_NM
	         , F_COM_GET_JIKCHAK_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS JIKCHAK_NM
	         , F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS JIKWEE_NM
	         , F_COM_GET_JIKGUB_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS JIKGUB_NM
	         , F_COM_GET_WORKTYPE_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS WORKTYPE_NM
	         , A.ENTER_CD
		     , A.APPL_SEQ
		     , A.SABUN
		     , A.SCH_TYPE_CD
		     , A.SCH_SUP_TYPE_CD
		     , A.FAM_CD
		     , A.FAM_NM
		     , A.FAM_YMD
	    	 , CASE WHEN A.FAM_RES_NO IS NULL THEN NULL
	    	        WHEN SUBSTR(CRYPTIT.DECRYPT(A.FAM_RES_NO, A.ENTER_CD), 7, 1) IN ('1', '3', '5') THEN '남'
			        ELSE '여' END AS SEX_TYPE
		     , A.APP_YEAR
		     , A.DIV_CD
		     , A.SCH_LOC_CD
		     , A.SCH_NAME
		     , A.SCH_YEAR
		     , A.SCH_DEPT
		     , A.SCH_ENT_YM
		     , A.SCH_PAY_YN
		     , A.EXC_RATE
		     , A.EXT_MON
		     , A.APPL_MON
		     , A.NOTE
		     , A.PAY_MON
		     , A.PAY_YM
		     , A.PAY_NOTE
		     , A.CLOSE_YN
	         , B.APPL_YMD
	         , B.APPL_SABUN
	         , B.APPL_IN_SABUN
	         , B.APPL_STATUS_CD
	         , '0' AS DETAIL
	         , CASE WHEN A.CLOSE_YN = 'Y' THEN '0' ELSE '1' END AS SHTCOL_EDIT
	         , (    SELECT SUM(Y.PAY_MON)
		              FROM TBEN751 Y
		             WHERE Y.ENTER_CD    = A.ENTER_CD
		               AND Y.SABUN       = A.SABUN
		               AND Y.SCH_TYPE_CD = A.SCH_TYPE_CD
		               AND Y.FAM_RES_NO  = A.FAM_RES_NO 
		               AND Y.APP_YEAR    = A.APP_YEAR  -- 신청년도
		               AND EXISTS ( SELECT 1 FROM THRI103 X
		                             WHERE X.ENTER_CD = Y.ENTER_CD
		                               AND X.APPL_SEQ = Y.APPL_SEQ
		                               AND X.APPL_STATUS_CD IN ('21','31','99') ) -- 신청중인 대상도 체크				         
	           ) AS YEAR_APPL_MON  --년간지원금액 
		  FROM TBEN751 A, THRI103 B
		 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
	       AND A.ENTER_CD   = B.ENTER_CD
	       AND A.APPL_SEQ   = B.APPL_SEQ
	       AND B.APPL_STATUS_CD NOT IN ('11') ]]>
	<if test="searchFrom != null and searchFrom neq '' and searchTo != null and searchTo neq ''">
		   AND B.APPL_YMD BETWEEN REPLACE(#{searchFrom}, '-','') AND REPLACE(#{searchTo}, '-','')
	</if>
	<if test="searchApplStatusCd != null and searchApplStatusCd neq ''">
		   AND B.APPL_STATUS_CD = TRIM(#{searchApplStatusCd})
	</if>
	<if test="searchYear != null and searchYear neq ''">
		   AND A.APP_YEAR = TRIM(#{searchYear})
	</if>
	<if test="searchPayYm != null and searchPayYm neq ''">
		   AND A.PAY_YM = REPLACE(#{searchPayYm}, '-','')
	</if>
	<if test="searchSabunName != null and searchSabunName neq ''">
		   AND (A.SABUN LIKE '%'||TRIM( #{searchSabunName} )||'%' OR F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd}) LIKE '%'||TRIM( #{searchSabunName} )||'%')
	</if>
	<if test="searchOrgNm != null and searchOrgNm neq ''">
		   AND F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) LIKE '%'||TRIM( #{searchOrgNm} )||'%'
	</if>
    <if test="searchDivCd != null and searchDivCd neq ''">
           AND A.DIV_CD = TRIM(#{searchDivCd})
    </if>
	     ORDER BY B.APPL_YMD DESC,  A.APPL_SEQ DESC
	</select>
		
	<update id="saveSchApr" parameterType="map">
	<![CDATA[
		MERGE INTO TBEN751 T
		USING ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
			    SELECT TRIM(#{ssnEnterCd})			AS	ENTER_CD
			         , TRIM(#{rm.applSeq})			AS	APPL_SEQ
			         , TRIM(#{rm.sabun})			AS	SABUN
                              , TRIM(#{rm.payMon})			AS	PAY_MON
                              , TRIM(#{rm.payYm})			AS	PAY_YM
                              , TRIM(#{rm.payNote})			AS	PAY_NOTE
                              , TRIM(#{rm.closeYn})			AS	CLOSE_YN
			      FROM DUAL
		</foreach>
	<![CDATA[
		) S
		ON	(
				T.ENTER_CD	=	S.ENTER_CD
			AND	T.APPL_SEQ	=	S.APPL_SEQ
			AND	T.SABUN   	=	S.SABUN
		)

		WHEN MATCHED THEN
			UPDATE SET T.PAY_YM   	    =	S.PAY_YM
                              , T.PAY_MON    	=	S.PAY_MON
                              , T.PAY_NOTE   	=	S.PAY_NOTE
                              , T.CLOSE_YN   	=	S.CLOSE_YN
				     , T.CHKDATE		=	sysdate
				     , T.CHKID			=	#{ssnSabun}
	]]>
	</update>
</mapper>