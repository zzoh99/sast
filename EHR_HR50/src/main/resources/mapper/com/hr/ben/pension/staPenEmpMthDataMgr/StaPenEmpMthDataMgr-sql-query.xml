<?xml version="1.0" encoding="UTF-8"?>
<!--
 * 국민연금 고지금액관리
 * @author JM
-->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.pension.staPenEmpMthDataMgr">
	
	<select id="getStaPenEmpMthDataMgrList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT B.ORG_NM
			 , B.WORK_TYPE
			 , B.JIKCHAK_CD
			 , B.JIKWEE_CD
			 , B.SABUN
			 , B.NAME
			 , B.MANAGE_CD
			 , B.STATUS_CD
			 , B.EMP_YMD
			 , B.RES_NO
			 , A.ENTER_CD
			 , A.YM
			 , A.MON1
			 , A.MON2
			 , A.MON3
			 , A.MON4
			 , CASE WHEN B.SABUN IS NULL THEN 'N' ELSE 'Y' END REG_YN
			 , A.BIGO
		  FROM TBEN112 A
			 , (
				SELECT X.ENTER_CD
					 , Y.ORG_CD
					 , TRIM(F_COM_GET_ORG_NM(Y.ENTER_CD,Y.ORG_CD,Y.SDATE)) AS ORG_NM
					 , Y.WORK_TYPE
					 , Y.JIKCHAK_CD
					 , Y.JIKWEE_CD
					 , Y.MANAGE_CD
					 , Y.STATUS_CD
					 , X.SABUN
					 , TRIM(X.NAME) AS NAME
					 , X.EMP_YMD
					 , X.GEMP_YMD
					 , CRYPTIT.DECRYPT (X.RES_NO, X.ENTER_CD) AS RES_NO
					 , X.RES_NO AS ORG_RES_NO
					 , X.RET_YMD
				  FROM THRM100 X
					 , THRM151 Y
				 WHERE X.ENTER_CD	= Y.ENTER_CD
				   AND X.SABUN		= Y.SABUN
				   AND X.ENTER_CD	= #{ssnEnterCd} ]]>
				<if test="multiManageCd != null and multiManageCd neq ''">
				   AND Y.MANAGE_CD	IN <foreach collection="multiManageCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
				</if>
				<if test="multiStatusCd != null and multiStatusCd neq ''">
				   AND Y.STATUS_CD	IN <foreach collection="multiStatusCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
				</if>
				<if test="sabunName != null and sabunName neq ''">
				   AND X.SABUN||X.NAME LIKE '%'||trim(#{sabunName})||'%'
				</if>
	<![CDATA[
				   AND Y.SDATE 		= (	SELECT MAX(SDATE)
										  FROM THRM151
										 WHERE ENTER_CD	= Y.ENTER_CD
										   AND SABUN	= Y.SABUN
										   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231'))
				) B
		 WHERE A.ENTER_CD	= #{ssnEnterCd}
		   AND A.YM			= REPLACE(#{ym},'-','')
		   AND A.ENTER_CD	= B.ENTER_CD
		   AND A.SABUN		= B.SABUN
		ORDER BY B.ORG_NM,B.WORK_TYPE,B.JIKCHAK_CD,B.JIKWEE_CD,B.NAME
	]]>
	</select>
		
	<update id="saveStaPenEmpMthDataMgr" parameterType="map">
	<![CDATA[
		MERGE INTO TBEN112 T
		USING	(
				SELECT A.YM
					 , A.SABUN
					 , A.MON1
					 , A.MON2
					 , A.MON3
					 , A.MON4
					 , A.REG_YN
					 , A.BIGO
				FROM (
						SELECT NULL		AS YM
							 , NULL		AS SABUN
							 , NULL		AS MON1
							 , NULL		AS MON2
							 , NULL		AS MON3
							 , NULL		AS MON4
							 , NULL		AS REG_YN
							 , NULL		AS BIGO
						  FROM DUAL ]]>
			<foreach item="rm" collection="mergeRows" >
						UNION ALL
						SELECT TRIM(#{rm.ym})					AS YM
							 , TRIM(#{rm.sabun})				AS SABUN
							 , TRIM(#{rm.mon1})					AS MON1
							 , TRIM(#{rm.mon2})					AS MON2
							 , TRIM(#{rm.mon3})					AS MON3
							 , TRIM(#{rm.mon4})					AS MON4
							 , TRIM(#{rm.regYn})				AS REG_YN
							 , TRIM(#{rm.bigo})					AS BIGO
						  FROM DUAL
			</foreach>
	<![CDATA[
					) A
				 WHERE A.YM IS NOT NULL
				   AND A.SABUN IS NOT NULL
				) S
		ON (	T.ENTER_CD			= #{ssnEnterCd}
			AND	T.YM				= S.YM
			AND	T.SABUN			= S.SABUN
			)
		WHEN MATCHED THEN
			UPDATE SET T.MON1		= S.MON1
					 , T.MON2		= S.MON2
					 , T.MON3		= S.MON3
					 , T.MON4		= S.MON4
					 , T.REG_YN		= S.REG_YN
					 , T.BIGO		= S.BIGO
					 , T.CHKDATE	= SYSDATE
					 , T.CHKID		= #{ssnSabun}
		WHEN NOT MATCHED THEN
			INSERT
			(
				T.ENTER_CD
			  , T.YM
			  , T.SABUN
			  , T.MON1
			  , T.MON2
			  , T.MON3
			  , T.MON4
			  , T.REG_YN
			  , T.BIGO
			  , T.CHKDATE
			  , T.CHKID
			)
			VALUES
			(
				#{ssnEnterCd}
			  , S.YM
			  , S.SABUN
			  , S.MON1
			  , S.MON2
			  , S.MON3
			  , S.MON4
			  , S.REG_YN
			  , S.BIGO
			  , SYSDATE
			  , #{ssnSabun}
			)
	]]>
	</update>
		
	<delete id="deleteStaPenEmpMthDataMgr" parameterType="map">
	<![CDATA[
		DELETE FROM TBEN112
		 WHERE ENTER_CD||'_'||YM||'_'||SABUN IN (  NULL ]]>
			<foreach item="rm" collection="deleteRows">
			,
			<if test="ssnEnterCd != null and ssnEnterCd neq '' and rm.ym != null and rm.ym neq ''
					and rm.sabun != null and rm.sabun neq ''">
				TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.ym})||'_'||TRIM(#{rm.sabun})
			</if>
			</foreach>
				)
	</delete>
		
	<delete id="deleteStaPenEmpMthDataMgrAll" parameterType="map">
	<![CDATA[
		DELETE FROM TBEN112
		 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
		   AND YM = REPLACE(TRIM(#{ym}),'-','')
	]]>
	</delete>
	
</mapper>