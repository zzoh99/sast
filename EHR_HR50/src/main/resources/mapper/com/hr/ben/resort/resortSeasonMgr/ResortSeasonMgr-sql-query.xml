<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.resort.resortSeasonMgr">

	<!-- 성수기리조트 신청기간 조회 -->
	<select id="getResortSeasonMgrList" parameterType="map" resultType="cMap">
	<![CDATA[
			SELECT A.ENTER_CD
			     , A.PLAN_SEQ
			     , A.SEASON_CD
			     , A.APP_SDATE
			     , A.APP_EDATE
			     , A.TITLE
			     , A.USE_SDATE
			     , A.USE_EDATE
			     , A.TARGET_YN
			     , A.CLOSE_YN
			     , A.NOTE
			     , ( SELECT COUNT(*) 
			           FROM TBEN491 X, THRI103 Y
			          WHERE X.ENTER_CD = A.ENTER_CD
			            AND X.PLAN_SEQ = A.PLAN_SEQ
			            AND X.ENTER_CD = Y.ENTER_CD
			            AND X.APPL_SEQ = Y.APPL_SEQ
			            AND Y.APPL_STATUS_CD <> '11'  
			       ) AS APP_CNT
			  FROM TBEN492 A
			 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})]]>
		<if test="searchYear != null and searchYear neq ''">
			   AND A.APP_SDATE LIKE TRIM(#{searchYear}) || '%'
		</if>		
			ORDER BY A.APP_SDATE DESC
	</select>
		
	<!-- 성수기리조트 객실 조회 -->
	<select id="getResortSeasonMgrRoomList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.*
		     , DECODE(APP_CNT, 0, '1', '0') AS S_DELETS_EDIT  
		     , DECODE(CONF_CNT, 0, '1', '2') AS CONF_YN  
		  FROM (
					SELECT A.ENTER_CD
					     , A.PLAN_SEQ
					     , A.RESORT_SEQ
					     , A.COMPANY_CD
					     , A.RESORT_NM
					     , A.ROOM_TYPE
					     , A.SDATE
					     , A.EDATE
					     , A.DAYS
					     , A.RSV_NO1
					     , A.RSV_NO2
					     , A.RESORT_MON
					     , A.COM_MON
					     , A.PSNAL_MON
					     , ( SELECT COUNT(*) 
					           FROM TBEN491 X, THRI103 Y
					          WHERE X.ENTER_CD   = A.ENTER_CD
					            AND X.PLAN_SEQ   = A.PLAN_SEQ
					            AND X.RESORT_SEQ = A.RESORT_SEQ
					            AND X.ENTER_CD   = Y.ENTER_CD
					            AND X.APPL_SEQ   = Y.APPL_SEQ
					            AND Y.APPL_STATUS_CD <> '11'  
					       ) AS APP_CNT
					     , ( SELECT COUNT(*) 
					           FROM TBEN491 X, THRI103 Y
					          WHERE X.ENTER_CD   = A.ENTER_CD
					            AND X.PLAN_SEQ   = A.PLAN_SEQ
					            AND X.RESORT_SEQ = A.RESORT_SEQ
					            AND X.ENTER_CD   = Y.ENTER_CD
					            AND X.APPL_SEQ   = Y.APPL_SEQ
					            AND Y.APPL_STATUS_CD <> '11'
					            AND X.STATUS_CD  = 'Y'
					       ) AS CONF_CNT
						  , '0' AS DETAIL
					  FROM TBEN494 A 
					 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
					   AND A.PLAN_SEQ = TRIM(#{searchPlanSeq})
				) A
		   WHERE 1=1 ]]>
		<if test='searchConfYn != null and searchConfYn eq "Y"'>
		<![CDATA[
			 AND A.CONF_CNT > 0
		]]>
		</if>
		<if test='searchConfYn != null and searchConfYn eq "N"'>
			 AND A.CONF_CNT = 0
		</if>
		ORDER BY A.COMPANY_CD, A.RESORT_NM, A.SDATE 			   
	</select>
		
	<!-- 성수기리조트 신청기간 저장 -->
	<update id="saveResortSeasonMgr" parameterType="map">
	<![CDATA[
		 MERGE INTO TBEN492 T
		 USING ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
		       SELECT TRIM(#{ssnEnterCd})  		AS  ENTER_CD
		            , TRIM(#{rm.planSeq})  		AS  PLAN_SEQ
		            , TRIM(#{rm.appSdate})  	AS  APP_SDATE
		            , TRIM(#{rm.appEdate})  	AS  APP_EDATE
		            , TRIM(#{rm.title})  		AS  TITLE
		            , TRIM(#{rm.seasonCd})  	AS  SEASON_CD
		            , TRIM(#{rm.useSdate})  	AS  USE_SDATE
		            , TRIM(#{rm.useEdate})  	AS  USE_EDATE
		            , TRIM(#{rm.targetYn})  	AS  TARGET_YN
		            , TRIM(#{rm.closeYn})  		AS  CLOSE_YN
		            , TRIM(#{rm.note})  		AS  NOTE
		        FROM DUAL
		</foreach>
	<![CDATA[
		) S
		ON (
		          T.ENTER_CD = S.ENTER_CD
		     AND  T.PLAN_SEQ = S.PLAN_SEQ
		)
		WHEN MATCHED THEN
		   UPDATE SET T.CHKDATE			= sysdate
		            , T.CHKID			= #{ssnSabun}
		            , T.APP_SDATE		= S.APP_SDATE
		            , T.APP_EDATE 		= S.APP_EDATE
		            , T.TITLE			= S.TITLE
		            , T.SEASON_CD       = S.SEASON_CD
		            , T.USE_SDATE 		= S.USE_SDATE
		            , T.USE_EDATE 		= S.USE_EDATE
		            , T.TARGET_YN       = S.TARGET_YN
		            , T.CLOSE_YN 		= S.CLOSE_YN
		            , T.NOTE 			= S.NOTE
		WHEN NOT MATCHED THEN
		   INSERT
		   (
		              T.ENTER_CD
		            , T.PLAN_SEQ
		            , T.APP_SDATE
		            , T.APP_EDATE
		            , T.TITLE
		            , T.SEASON_CD
		            , T.USE_SDATE
		            , T.USE_EDATE
		            , T.TARGET_YN
		            , T.CLOSE_YN
		            , T.NOTE
		            , T.CHKDATE
		            , T.CHKID
		   )
		   VALUES
		   (
		              S.ENTER_CD
		            , S_TBEN492.NEXTVAL
		            , S.APP_SDATE
		            , S.APP_EDATE
		            , S.TITLE
		            , S.SEASON_CD
		            , S.USE_SDATE
		            , S.USE_EDATE
		            , S.TARGET_YN
		            , S.CLOSE_YN
		            , S.NOTE
		            , sysdate
		            , #{ssnSabun}
		   )
	]]>
	</update>
		
	<!-- 성수기리조트 객실 저장 -->
	<update id="saveResortSeasonMgrRoom" parameterType="map">
	<![CDATA[
		 MERGE INTO TBEN494 T 
		 USING ( ]]>
        <foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
		       SELECT TRIM(#{ssnEnterCd})  	     AS  ENTER_CD 
		            , TRIM(#{rm.planSeq})        AS  PLAN_SEQ
		            , TRIM(#{rm.resortSeq})  	 AS  RESORT_SEQ
		            , TRIM(#{rm.companyCd})  	 AS  COMPANY_CD
		            , TRIM(#{rm.resortNm})  	 AS  RESORT_NM
		            , TRIM(#{rm.roomType})  	 AS  ROOM_TYPE
		            , TRIM(#{rm.sdate})  		 AS  SDATE
		            , TRIM(#{rm.edate})  		 AS  EDATE
		            , TRIM(#{rm.days})  		 AS  DAYS
		            , TRIM(#{rm.rsvNo1})  		 AS  RSV_NO1
		            , TRIM(#{rm.rsvNo2})  		 AS  RSV_NO2
		            , TRIM(#{rm.resortMon})  	 AS  RESORT_MON
		            , TRIM(#{rm.comMon})  		 AS  COM_MON
		            , TRIM(#{rm.psnalMon})  	 AS  PSNAL_MON
		        FROM DUAL
		 </foreach>
    <![CDATA[
		) S 
		ON ( 
		          T.ENTER_CD 	= S.ENTER_CD 
		     AND  T.PLAN_SEQ 	= S.PLAN_SEQ 
		     AND  T.RESORT_SEQ 	= S.RESORT_SEQ 
		) 
		WHEN MATCHED THEN 
		   UPDATE SET T.CHKDATE		= sysdate 
		            , T.CHKID		= #{ssnSabun} 
		            , T.COMPANY_CD 	= S.COMPANY_CD 
		            , T.RESORT_NM 	= S.RESORT_NM 
		            , T.ROOM_TYPE 	= S.ROOM_TYPE 
		            , T.SDATE 		= S.SDATE 
		            , T.EDATE 		= S.EDATE 
		            , T.DAYS 		= S.DAYS 
		            , T.RSV_NO1 	= S.RSV_NO1 
		            , T.RSV_NO2 	= S.RSV_NO2 
		            , T.RESORT_MON 	= S.RESORT_MON 
		            , T.COM_MON 	= S.COM_MON 
		            , T.PSNAL_MON 	= S.PSNAL_MON 
		WHEN NOT MATCHED THEN 
		   INSERT 
		   ( 
		              T.ENTER_CD
		            , T.PLAN_SEQ
		            , T.RESORT_SEQ
		            , T.COMPANY_CD
		            , T.RESORT_NM
		            , T.ROOM_TYPE
		            , T.SDATE
		            , T.EDATE
		            , T.DAYS
		            , T.RSV_NO1
		            , T.RSV_NO2
		            , T.RESORT_MON
		            , T.COM_MON
		            , T.PSNAL_MON
		            , T.CHKDATE
		            , T.CHKID
		   ) 
		   VALUES 
		   ( 
		              S.ENTER_CD
		            , S.PLAN_SEQ
		            , S_TBEN494.NEXTVAL
		            , S.COMPANY_CD
		            , S.RESORT_NM
		            , S.ROOM_TYPE
		            , S.SDATE
		            , S.EDATE
		            , S.DAYS
		            , S.RSV_NO1
		            , S.RSV_NO2
		            , S.RESORT_MON
		            , S.COM_MON
		            , S.PSNAL_MON
		            , sysdate
		            , #{ssnSabun}
		   ) 
	]]>
	</update>
				
	<!-- 성수기리조트 신청기간 삭제 -->
	<delete id="deleteResortSeasonMgr" parameterType="map">
	<![CDATA[
		DELETE FROM TBEN492
		 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
		   AND ( PLAN_SEQ ) IN ( ( NULL) ]]>
		<foreach item="rm" collection="deleteRows">
			<if test="rm.planSeq != null and rm.planSeq neq ''">
				, ( TRIM( #{rm.planSeq} ) )
			</if>
		</foreach>
		       )
	</delete>

	<!-- 성수기리조트 신청기간 삭제 -->
	<delete id="deleteResortSeasonMgrRoom" parameterType="map">
		DELETE FROM TBEN494
		WHERE ENTER_CD = TRIM(#{ssnEnterCd})
		AND ( PLAN_SEQ,RESORT_SEQ ) IN ( ( NULL,NULL)
		<foreach item="rm" collection="deleteRows">
			<if test="rm.planSeq != null and !rm.planSeq neq '' and rm.resortSeq != null and !rm.resortSeq neq '' ">
				, ( TRIM( #{rm.planSeq} ),TRIM( #{rm.resortSeq} ) )
			</if>
		</foreach>
		)
	</delete>
		
</mapper>