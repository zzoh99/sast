<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.scholarship.schStd.tab1">

	<!-- 학자금기준관리 > 직책별 지원금액 tab 조회 -->
	<select id="getSchTab1StdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.ENTER_CD
		     , A.SCH_TYPE_CD
		     , A.SCH_SUP_TYPE_CD
		     , A.FAM_CD
		     , A.SDATE
		     , A.JIKCHAK_CD
		     , A.USE_S_YMD
		     , A.USE_E_YMD
		     , A.APPL_MON
		     , A.USE_YN
		     , A.NOTE
		  FROM TBEN752 A 
		 WHERE A.ENTER_CD        = TRIM(#{ssnEnterCd})
		   AND A.SCH_TYPE_CD     = TRIM(#{searchSchTypeCd})
		   AND A.SCH_SUP_TYPE_CD = TRIM(#{searchSchSupTypeCd})
		   AND A.FAM_CD          = TRIM(#{searchFamCd})
		   AND A.SDATE           = TRIM(#{searchSdate})
		 ORDER BY A.SDATE, A.JIKCHAK_CD
	]]>
	</select>


	<!-- 학자금기준관리 > 직책별 지원금액 tab 저장 -->
	<update id="saveSchTab1Std" parameterType="map">
	<![CDATA[
		 MERGE INTO TBEN752 T 
		 USING ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
		       SELECT TRIM(#{ssnEnterCd}) AS ENTER_CD 
		            , TRIM(#{searchSchTypeCd}) AS SCH_TYPE_CD
		            , TRIM(#{searchSchSupTypeCd}) AS SCH_SUP_TYPE_CD
		            , TRIM(#{searchFamCd}) AS FAM_CD
		            , TRIM(#{searchSdate}) AS SDATE
		            , TRIM(#{rm.jikchakCd}) AS JIKCHAK_CD
		            , TRIM(#{rm.useSYmd}) AS USE_S_YMD
		            , TRIM(#{rm.useEYmd}) AS USE_E_YMD
		            , TRIM(#{rm.applMon}) AS APPL_MON
		            , TRIM(#{rm.useYn}) AS USE_YN
		            , TRIM(#{rm.note}) AS NOTE
		        FROM DUAL
		</foreach>
	<![CDATA[
		) S 
		ON ( 
		          T.ENTER_CD        = S.ENTER_CD 
		     AND  T.SCH_TYPE_CD     = S.SCH_TYPE_CD
		     AND  T.SCH_SUP_TYPE_CD = S.SCH_SUP_TYPE_CD
		     AND  T.FAM_CD          = S.FAM_CD
		     AND  T.SDATE           = S.SDATE 
		     AND  T.JIKCHAK_CD      = S.JIKCHAK_CD 
		     AND  T.USE_S_YMD       = S.USE_S_YMD
		) 
		WHEN MATCHED THEN 
		   UPDATE SET T.CHKDATE     = sysdate 
		            , T.CHKID       = #{ssnSabun} 
		            , T.USE_E_YMD   = S.USE_E_YMD 
		            , T.APPL_MON    = S.APPL_MON 
		            , T.USE_YN      = S.USE_YN 
		            , T.NOTE        = S.NOTE 
		WHEN NOT MATCHED THEN 
		   INSERT 
		   ( 
		              T.ENTER_CD
		            , T.SCH_TYPE_CD
		            , T.SCH_SUP_TYPE_CD
		            , T.FAM_CD
		            , T.SDATE
		            , T.JIKCHAK_CD
		            , T.USE_S_YMD
		            , T.USE_E_YMD
		            , T.APPL_MON
		            , T.USE_YN
		            , T.NOTE
		            , T.CHKDATE
		            , T.CHKID
		   ) 
		   VALUES 
		   ( 
		              S.ENTER_CD
		            , S.SCH_TYPE_CD
		            , S.SCH_SUP_TYPE_CD
		            , S.FAM_CD
		            , S.SDATE
		            , S.JIKCHAK_CD
		            , S.USE_S_YMD
		            , S.USE_E_YMD
		            , S.APPL_MON
		            , S.USE_YN
		            , S.NOTE
		            , sysdate
		            , #{ssnSabun}
		   )
	]]>
	</update>

	<!-- 학자금기준관리 > 직책별 지원금액 tab 삭제 -->
	<delete id="deleteSchTab1Std" parameterType="map">
	<![CDATA[
			DELETE FROM TBEN752
			 WHERE ENTER_CD        = TRIM(#{ssnEnterCd})
			   AND SCH_TYPE_CD     = TRIM(#{searchSchTypeCd})
			   AND SCH_SUP_TYPE_CD = TRIM(#{searchSchSupTypeCd})
			   AND FAM_CD          = TRIM(#{searchFamCd})
			   AND SDATE           = TRIM(#{searchSdate})
			   AND ( JIKCHAK_CD, USE_S_YMD ) IN ( ( NULL,NULL )]]>
		<foreach item="rm" collection="deleteRows">
			<if test="rm.jikchakCd != null and rm.jikchakCd neq '' and rm.useSYmd != null and rm.useSYmd neq ''">
				, ( TRIM( #{rm.jikchakCd} ),TRIM( #{rm.useSYmd} ) ) 
			</if> 
		</foreach>
			       )
	</delete>
</mapper>