<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ben.loan.loanApr">

	<!-- 조회 -->
	<select id="getLoanAprList" parameterType="map" resultType="cMap">
	<![CDATA[
		   SELECT A.ENTER_CD
				, A.APPL_SEQ
				, A.SABUN
				, F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd} ) AS NAME -- 성명
				, F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS ORG_NM
				, F_COM_GET_JIKCHAK_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS JIKCHAK_NM
				, F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS JIKWEE_NM
				, F_COM_GET_JIKGUB_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS JIKGUB_NM
				, F_COM_GET_WORKTYPE_NM(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) AS WORKTYPE_NM
			    , A.LOAN_CD
			    , A.LOAN_REQ_PERIOD
			    , A.LOAN_PERIOD
			    , A.REQ_INT_RATE
			    , A.INT_RATE
			    , A.LOAN_REQ_YMD
			    , A.LOAN_REQ_MON
			    , A.BANK_CD
			    , A.ACC_HOLDER
			    , A.ACC_NO
			    , A.NOTE
			    , A.LOAN_YMD
			    , A.LOAN_MON
			    , A.REP_MON 
				, B.APPL_YMD
				, B.APPL_SABUN
				, B.APPL_IN_SABUN
				, B.APPL_STATUS_CD
				, '0' AS DETAIL
				, CASE WHEN B.APPL_STATUS_CD = '99' THEN '0' ELSE '1' END AS ROW_EDIT
		     FROM TBEN623 A, THRI103 B
		    WHERE A.ENTER_CD   = #{ssnEnterCd}
		      AND A.ENTER_CD   = B.ENTER_CD
		      AND A.APPL_SEQ   = B.APPL_SEQ
		      AND B.APPL_STATUS_CD NOT IN ('11') ]]>
		<if test="searchFrom != null and searchFrom neq '' and searchTo != null and searchTo neq ''">
			  AND B.APPL_YMD BETWEEN REPLACE(#{searchFrom}, '-','') AND REPLACE(#{searchTo}, '-','')
		</if>
		<if test="searchApplStatusCd != null and searchApplStatusCd neq ''">
			  AND B.APPL_STATUS_CD = #{searchApplStatusCd}
		</if>
		<if test="searchLoanYm != null and searchLoanYm neq ''">
			  AND A.LOAN_REQ_YMD LIKE REPLACE(#{searchLoanYm}, '-','') || '%'
		</if>
		<if test="searchSabunName != null and searchSabunName neq ''">
			  AND (A.SABUN LIKE '%'||TRIM( #{searchSabunName} )||'%' OR F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd}) LIKE '%'||TRIM( #{searchSabunName} )||'%')
		</if>
		<if test="searchOrgNm != null and searchOrgNm neq ''">
			  AND F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, B.APPL_YMD, #{ssnLocaleCd}) LIKE '%'||TRIM( #{searchOrgNm} )||'%'
		</if>
		    ORDER BY B.APPL_YMD DESC,  A.APPL_SEQ DESC
	</select>

	<!-- 저장 -->
	<update id="saveLoanApr" parameterType="map">
	<![CDATA[
		 MERGE INTO TBEN623 T 
		 USING ( ]]>
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL ">
			   SELECT TRIM(#{ssnEnterCd}) 					AS ENTER_CD 
		            , TRIM(#{rm.applSeq}) 					AS APPL_SEQ
		            , TRIM(#{rm.sabun}) 					AS SABUN
		            , REPLACE(TRIM(#{rm.loanYmd}),'-','') 	AS LOAN_YMD
		            , REPLACE(TRIM(#{rm.loanMon}),',','') 	AS LOAN_MON
		            , REPLACE(TRIM(#{rm.repMon}),',','') 	AS REP_MON
		            , TRIM(#{rm.loanPeriod}) 				AS LOAN_PERIOD
		            , TRIM(#{rm.intRate}) 					AS INT_RATE
		        FROM DUAL
		</foreach>
	<![CDATA[
		) S 
		ON ( 
		          T.ENTER_CD 	= S.ENTER_CD 
		     AND  T.APPL_SEQ 	= S.APPL_SEQ 
		     AND  T.SABUN 		= S.SABUN 
		) 
		WHEN MATCHED THEN 
		   UPDATE SET T.CHKDATE			= sysdate 
		            , T.CHKID	    	= #{ssnSabun} 
		            , T.LOAN_YMD 		= S.LOAN_YMD 
		            , T.LOAN_MON 		= S.LOAN_MON 
		            , T.REP_MON 		= S.REP_MON 
		            , T.LOAN_PERIOD 	= S.LOAN_PERIOD 
		            , T.INT_RATE 		= S.INT_RATE 
	]]>
	</update>
</mapper>