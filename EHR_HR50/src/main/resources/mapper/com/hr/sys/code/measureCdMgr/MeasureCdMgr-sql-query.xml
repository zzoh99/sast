<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.code.measureCdMgr">
<!-- 		척도관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getMeasureCdMgrList">

					SELECT '0' AS DETAIL
						 , GMEASURE_CD
						 , GMEASURE_NM
						 , MEMO
						 , TYPE
						 , GMEASURE_TYPE
						 , LEVEL_TYPE
						 , COMMON_YN
						 , ORDER_SEQ
					  FROM TSYS021
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					 <if test='searchGmeasureNm != null and !searchGmeasureNm.equals("")'>
					   AND GMEASURE_NM LIKE '%'||TRIM(#{searchGmeasureNm})||'%'
					 </if>
					 ORDER BY ORDER_SEQ



		</select>

<!-- 		척도관리 저장 -->
		<update parameterType="map" id="saveMeasureCdMgr">

				<![CDATA[
					MERGE INTO TSYS021 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.GMEASURE_CD
									, A.GMEASURE_NM
									, A.MEMO
									, A.TYPE
									, A.GMEASURE_TYPE
									, A.LEVEL_TYPE
									, A.COMMON_YN
									, A.ORDER_SEQ
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS GMEASURE_CD
											, NULL		AS GMEASURE_NM
											, NULL		AS MEMO
											, NULL		AS TYPE
											, NULL		AS GMEASURE_TYPE
											, NULL		AS LEVEL_TYPE
											, NULL		AS COMMON_YN
											, NULL		AS ORDER_SEQ
									FROM	DUAL
									    ]]>
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  TRIM( #{ssnEnterCd} )	AS ENTER_CD
											, TRIM( #{rm.gmeasureCd} )	AS GMEASURE_CD
											, TRIM( #{rm.gmeasureNm} )	AS GMEASURE_NM
											, TRIM( #{rm.memo} )	AS MEMO
											, TRIM( #{rm.type} )	AS TYPE
											, TRIM( #{rm.gmeasureType} )	AS GMEASURE_TYPE
											, TRIM( #{rm.levelType} ) AS LEVEL_TYPE
											, TRIM( #{rm.commonYn} ) AS COMMON_YN
											, TRIM( #{rm.orderSeq} ) AS ORDER_SEQ
											FROM   DUAL
</foreach>
									) A WHERE A.GMEASURE_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.GMEASURE_CD = S.GMEASURE_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.GMEASURE_NM	= S.GMEASURE_NM
									, T.MEMO	= S.MEMO
									, T.TYPE	= S.TYPE
									, T.GMEASURE_TYPE	= S.GMEASURE_TYPE
									, T.LEVEL_TYPE = S.LEVEL_TYPE
									, T.COMMON_YN = S.COMMON_YN
									, T.ORDER_SEQ = S.ORDER_SEQ
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
						      T.ENTER_CD
							, T.GMEASURE_CD
							, T.GMEASURE_NM
							, T.MEMO
							, T.TYPE
							, T.GMEASURE_TYPE
							, T.LEVEL_TYPE
							, T.COMMON_YN
							, T.ORDER_SEQ
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.GMEASURE_CD
							, S.GMEASURE_NM
							, S.MEMO
							, S.TYPE
							, S.GMEASURE_TYPE
							, S.LEVEL_TYPE
							, S.COMMON_YN
							, S.ORDER_SEQ
							, SYSDATE
							, #{ssnSabun}
						)


		</update>
<!-- 		척도관리 삭제 -->
		<delete parameterType="map" id="deleteMeasureCdMgr">

					DELETE FROM TSYS021
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND ENTER_CD||'_'||GMEASURE_CD IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.gmeasureCd != null and !rm.gmeasureCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.gmeasureCd})
										</if>
</foreach>
										)



		</delete>

<!-- 		척도세부코드관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getMeasureDetailCdMgrList">

				<![CDATA[
					SELECT  GMEASURE_CD
						  , MEASURE_CD
						  , MEASURE_NM
						  , MEMO
						  , JUMSU
						  , S_NUM
						  , E_NUM
						  , KEY_WORD
						  , SEQ
					  FROM TSYS023
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					   AND GMEASURE_CD = TRIM(#{gmeasureCd})
					 ORDER BY SEQ
				]]>


		</select>

<!-- 		척도세부코드관리 저장 -->
		<update parameterType="map" id="saveMeasureDetailCdMgr">

				<![CDATA[
					MERGE INTO TSYS023 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.GMEASURE_CD
									, A.MEASURE_CD
									, A.MEASURE_NM
									, A.MEMO
									, A.JUMSU
									, A.S_NUM
									, A.E_NUM
									, A.KEY_WORD
									, A.SEQ
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS GMEASURE_CD
											, NULL		AS MEASURE_CD
											, NULL		AS MEASURE_NM
											, NULL		AS MEMO
											, NULL		AS JUMSU
											, NULL		AS S_NUM
											, NULL		AS E_NUM
											, NULL		AS KEY_WORD
											, NULL		AS SEQ
									FROM	DUAL
									]]>
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  TRIM( #{ssnEnterCd} )	AS ENTER_CD
											, TRIM( #{rm.gmeasureCd} )	AS GMEASURE_CD
											, TRIM( #{rm.measureCd} )	AS MEASURE_CD
											, TRIM( #{rm.measureNm} )	AS MEASURE_NM
											, TRIM( #{rm.memo} )	AS MEMO
											, TRIM( #{rm.jumsu} )	AS JUMSU
											, TRIM( #{rm.sNum} )	AS S_NUM
											, TRIM( #{rm.eNum} ) AS E_NUM
											, TRIM( #{rm.keyWord} ) AS KEY_WORD
											, TRIM( #{rm.seq} ) AS SEQ
											FROM   DUAL
</foreach>
									) A WHERE A.MEASURE_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.GMEASURE_CD = S.GMEASURE_CD AND T.MEASURE_CD = S.MEASURE_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.MEASURE_NM	= S.MEASURE_NM
									, T.MEMO	= S.MEMO
									, T.JUMSU	= S.JUMSU
									, T.S_NUM	= S.S_NUM
									, T.E_NUM = S.E_NUM
									, T.KEY_WORD = S.KEY_WORD
									, T.SEQ = S.SEQ
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
						      T.ENTER_CD
						  , T.GMEASURE_CD
							, T.MEASURE_CD
							, T.MEASURE_NM
							, T.MEMO
							, T.JUMSU
							, T.S_NUM
							, T.E_NUM
							, T.KEY_WORD
							, T.SEQ
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.GMEASURE_CD
							, S.MEASURE_CD
							, S.MEASURE_NM
							, S.MEMO
							, S.JUMSU
							, S.S_NUM
							, S.E_NUM
							, S.KEY_WORD
							, S.SEQ
							, SYSDATE
							, #{ssnSabun}
						)


		</update>
<!-- 		척도세부코드관리 삭제 -->
		<delete parameterType="map" id="deleteMeasureDetailCdMgr">

					DELETE FROM TSYS023
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND ENTER_CD||'_'||GMEASURE_CD||'_'||MEASURE_CD IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.measureCd != null and !rm.measureCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.gmeasureCd})||'_'||TRIM(#{rm.measureCd})
										</if>
</foreach>
										)



		</delete>


</mapper>