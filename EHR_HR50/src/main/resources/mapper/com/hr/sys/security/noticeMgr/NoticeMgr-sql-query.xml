<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="sys.security.noticeMgr">
		<!-- 알림관리 다건 조회 -->
		<select parameterType="map" resultType="cMap" id="getNoticeMgrList">

				<![CDATA[
					SELECT
					    A.SABUN
					  , A.SEQ
					  , F_COM_GET_ORG_NM2 (A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD')) AS ORG_NM
					  , F_COM_GET_JIKCHAK_NM (A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD')) AS JIKCHAK_NM
					  , F_COM_GET_JIKGUB_NM (A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD')) AS JIKGUB_NM
					  , F_COM_GET_JIKWEE_NM (A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD')) AS JIKWEE_NM
					  , F_COM_GET_NAMES (A.ENTER_CD, A.SABUN) AS NAME
					  , F_COM_GET_NAMES (A.ENTER_CD, A.SABUN, 'ALIAS') AS ALIAS
					  , N_TITLE
					  , N_CONTENT
					  , N_JOB_CD
					  , SDATE
					  , EDATE
					  , DECODE(READ_YN,'Y','1','0') AS READ_YN
					FROM TSYS920 A
					WHERE 1=1
					  AND A.ENTER_CD = #{ssnEnterCd} ]]>
					  <if test="searchYmd != null and !searchYmd.equals('')">
					  AND REPLACE(#{searchYmd},'-','') BETWEEN SDATE AND NVL(EDATE,'99991231')
					  </if>
<if test="searchSabunNameAlias != null and !searchSabunNameAlias.equals('')">
					  AND ( A.SABUN LIKE '%'||TRIM( #{searchSabunNameAlias} )||'%'
					     OR F_COM_GET_NAMES (A.ENTER_CD, A.SABUN) LIKE '%'||TRIM( #{searchSabunNameAlias} )||'%'
					     OR F_COM_GET_NAMES (A.ENTER_CD, A.SABUN, 'ALIAS') LIKE '%'||TRIM( #{searchSabunNameAlias} )||'%' )
</if>



		</select>

		<!-- 알림관리 저장 -->
		<update parameterType="map" id="saveNoticeMgr">

					MERGE INTO TSYS920 T
					USING (
					    SELECT     
					          A.ENTER_CD
					        , A.SABUN
							, A.SEQ
							, A.N_TITLE
							, A.N_CONTENT
							, A.N_JOB_CD
							, A.SDATE
							, A.EDATE
							, A.READ_YN					        
					    FROM  (
					        SELECT     
					              NULL      AS ENTER_CD
					            , NULL      AS SABUN
					            , NULL      AS SEQ
					            , NULL      AS N_TITLE
					            , NULL      AS N_CONTENT
					            , NULL      AS N_JOB_CD
					            , NULL      AS SDATE
					            , NULL      AS EDATE
					            , NULL      AS READ_YN
					        FROM DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
					        UNION ALL
					        SELECT
					              TRIM( #{ssnEnterCd} )    AS ENTER_CD
					            , TRIM( #{rm.sabun} )   AS SABUN
					            , CASE WHEN TRIM(#{rm.seq}) IS NULL OR TRIM(#{rm.seq}) = '0' THEN
										 			(SELECT (NVL(MAX(SEQ),0) + ${icnt}) FROM TSYS920 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = TRIM(#{rm.sabun}))
										 		ELSE TO_NUMBER(#{rm.seq}) END AS	SEQ
					            , TRIM( #{rm.nTitle} )   AS N_TITLE
					            , TRIM( #{rm.nContent} ) AS N_CONTENT
					            , TRIM( #{rm.nJobCd} )   AS N_JOB_CD
					            , TRIM( #{rm.sdate} )    AS SDATE
					            , TRIM( #{rm.edate} )    AS EDATE
					            , DECODE(TRIM( #{rm.readYn} ),'1','Y','N')  AS READ_YN
					        FROM DUAL 
<bind name="icnt" value="icnt + 1" />
</foreach>
					    ) A 
					    WHERE 1=1
					      AND A.ENTER_CD IS NOT NULL
					      AND A.SABUN IS NOT NULL
					      AND A.SEQ IS NOT NULL
					) S
					ON ( 
					        T.ENTER_CD = S.ENTER_CD 
					    AND T.SABUN = S.SABUN
					    AND T.SEQ = S.SEQ
					)
					WHEN MATCHED THEN
					    UPDATE SET
				              T.N_TITLE = S.N_TITLE 
				            , T.N_CONTENT = S.N_CONTENT
				            , T.N_JOB_CD = S.N_JOB_CD
				            , T.SDATE = S.SDATE
				            , T.EDATE = S.EDATE
				            , T.READ_YN = S.READ_YN
					        , T.CHKDATE = SYSDATE
					        , T.CHKID = #{ssnSabun}
					WHEN NOT MATCHED THEN
					    INSERT
					    (
					          T.ENTER_CD
					        , T.SABUN
					        , T.SEQ
					        , T.N_TITLE
					        , T.N_CONTENT
					        , T.N_JOB_CD
					        , T.SDATE
					        , T.EDATE
					        , T.READ_YN
					        , CHKDATE
					        , CHKID
					    )
					    VALUES
					    (
					          S.ENTER_CD
					        , S.SABUN
					        , S.SEQ
					        , S.N_TITLE 					        
					        , S.N_CONTENT 					        
					        , S.N_JOB_CD					        
					        , S.SDATE					        
					        , S.EDATE
					        , S.READ_YN 					        
					        , SYSDATE
					        , #{ssnSabun}
					    )


		</update>

		<!-- 알림관리 삭제 -->
		<delete parameterType="map" id="deleteNoticeMgr">

					DELETE FROM TSYS920
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND ENTER_CD||'_'||SABUN||'_'||SEQ IN ( NULL
<foreach item="rm" collection="deleteRows" >
					    ,
    <if test='rm.sabun != null and !rm.sabun.equals("")
      and rm.seq != null and !rm.seq.equals("")
      and rm.sabun != null and !rm.sabun.equals("")'>
					        TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.sabun})||'_'||TRIM(#{rm.seq})
	</if>
</foreach>
					  )



		</delete>


</mapper>