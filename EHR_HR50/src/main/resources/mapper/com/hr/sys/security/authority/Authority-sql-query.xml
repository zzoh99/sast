<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="sys.security.authority">
<!-- 조회 -->
		<select parameterType="map" resultType="cMap" id="getAuthorityList">

				<![CDATA[
					SELECT	GRP_CD,	GRP_NM,	COMMON_YN,	DATA_RW_TYPE,	ENTER_ALL_YN,	SEARCH_TYPE,	SEQ,	ERROR_ACC_YN,	ERROR_ADMIN_YN
						,	LANGUAGE_CD
						, 	F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys307', LANGUAGE_CD, #{ssnLocaleCd}) AS LANGUAGE_NM
						,	'0'	AS	AUTH_SCOPE
						,	'0'	AS	AUTH_VIEW
						,	'0'	AS	AUTH_HELP
						,   RET_SRCH_YN
						,   PRE_SRCH_YN
						,   RES_SRCH_YN
						,   ADMIN_YN
						,	(SELECT	COUNT(*)	FROM	TSYS313	WHERE	ENTER_CD	=	A.ENTER_CD	AND	GRP_CD	=	A.GRP_CD)	AS	MAN_CNT
						,	(SELECT	COUNT(*)	FROM	(SELECT	ENTER_CD,	GRP_CD,	MAIN_MENU_CD	FROM	TSYS311	GROUP	BY	ENTER_CD,	GRP_CD,	MAIN_MENU_CD)	WHERE	ENTER_CD	=	A.ENTER_CD	AND	GRP_CD	=	A.GRP_CD)	AS	PRO_CNT
							FROM	TSYS307	A
					WHERE	A.ENTER_CD	=	TRIM(#{ssnEnterCd})
					AND	GRP_NM	LIKE	'%'||	TRIM(#{searchGrpNm})	||'%'
					ORDER	BY	SEQ
				]]>


		</select>

<!-- 저장 -->
		<update parameterType="map" id="saveAuthority">

					MERGE INTO TSYS307 T
					USING	(
							SELECT	 GRP_CD
									,GRP_NM
									,COMMON_YN
									,DATA_RW_TYPE
									,ENTER_ALL_YN
									,SEARCH_TYPE
									,SEQ
									,ERROR_ACC_YN
									,ERROR_ADMIN_YN
									,RET_SRCH_YN
									,PRE_SRCH_YN
									,RES_SRCH_YN
									,ADMIN_YN
									,LANGUAGE_CD
							FROM	(
									SELECT	  NULL		AS GRP_CD
											, NULL		AS GRP_NM
											, NULL		AS COMMON_YN
											, NULL		AS DATA_RW_TYPE
											, NULL		AS ENTER_ALL_YN
											, NULL		AS SEARCH_TYPE
											, NULL		AS SEQ
											, NULL		AS ERROR_ACC_YN
											, NULL		AS ERROR_ADMIN_YN
											, NULL      AS RET_SRCH_YN
											, NULL      AS PRE_SRCH_YN
											, NULL      AS RES_SRCH_YN
											, NULL      AS ADMIN_YN
											, NULL		AS LANGUAGE_CD
									FROM	DUAL
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT    TRIM(#{rm.grpCd})			AS GRP_CD
											, TRIM(#{rm.grpNm})			AS GRP_NM
											, TRIM(#{rm.commonYn})		AS COMMON_YN
											, TRIM(#{rm.dataRwType})	AS DATA_RW_TYPE
											, TRIM(#{rm.enterAllYn})	AS ENTER_ALL_YN
											, TRIM(#{rm.searchType})	AS SEARCH_TYPE
											, TRIM(#{rm.seq})			AS SEQ
											, TRIM(#{rm.errorAccYn})			AS ERROR_ACC_YN
											, TRIM(#{rm.errorAdminYn})			AS ERROR_ADMIN_YN
											, TRIM(#{rm.retSrchYn})		AS RET_SRCH_YN
											, TRIM(#{rm.preSrchYn})		AS PRE_SRCH_YN
											, TRIM(#{rm.resSrchYn})		AS RES_SRCH_YN
											, TRIM(#{rm.adminYn})		AS ADMIN_YN
											, TRIM(#{rm.languageCd})			AS LANGUAGE_CD
									FROM   DUAL

</foreach>
									) A WHERE A.GRP_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD		= #{ssnEnterCd}
						AND	T.GRP_CD	= S.GRP_CD

					)
					WHEN MATCHED THEN
						UPDATE SET	  T.GRP_NM		= S.GRP_NM
									, T.COMMON_YN	= S.COMMON_YN
									, T.DATA_RW_TYPE= S.DATA_RW_TYPE
									, T.ENTER_ALL_YN= S.ENTER_ALL_YN
									, T.SEARCH_TYPE	= S.SEARCH_TYPE
									, T.SEQ			= S.SEQ
									, T.ERROR_ACC_YN	= S.ERROR_ACC_YN
									, T.ERROR_ADMIN_YN	= S.ERROR_ADMIN_YN
									, T.RET_SRCH_YN			= S.RET_SRCH_YN
									, T.PRE_SRCH_YN			= S.PRE_SRCH_YN
									, T.RES_SRCH_YN			= S.RES_SRCH_YN
									, T.ADMIN_YN			= S.ADMIN_YN
									, T.LANGUAGE_CD			= S.LANGUAGE_CD
									, T.CHKDATE		= SYSDATE
									, T.CHKID		= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.GRP_CD
							, T.GRP_NM
							, T.COMMON_YN
							, T.DATA_RW_TYPE
							, T.ENTER_ALL_YN
							, T.SEARCH_TYPE
							, T.SEQ
							, T.ERROR_ACC_YN
							, T.ERROR_ADMIN_YN
							, T.RET_SRCH_YN
							, T.PRE_SRCH_YN
							, T.RES_SRCH_YN
							, T.ADMIN_YN
							, T.LANGUAGE_CD
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #{ssnEnterCd}
							, S.GRP_CD
							, S.GRP_NM
							, S.COMMON_YN
							, S.DATA_RW_TYPE
							, S.ENTER_ALL_YN
							, S.SEARCH_TYPE
							, S.SEQ
							, S.ERROR_ACC_YN
							, S.ERROR_ADMIN_YN
							, S.RET_SRCH_YN
							, S.PRE_SRCH_YN
							, S.RES_SRCH_YN
							, S.ADMIN_YN
							, S.LANGUAGE_CD
							, SYSDATE
							, #{ssnSabun}
						)


		</update>
<!-- 		삭제 -->
		<delete parameterType="map" id="deleteAuthority">

					DELETE FROM TSYS307
					WHERE 	ENTER_CD||'_'||GRP_CD IN (  NULL

<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.grpCd != null and !rm.grpCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.grpCd})
										</if>
</foreach>
										)



		</delete>


<!-- 팝업1 Left 조회 -->
		<select parameterType="map" resultType="cMap" id="getAthRangeMgrLeftList">

				<![CDATA[
					SELECT A.GRP_CD
						 , A.AUTH_SCOPE_CD
						 , B.AUTH_SCOPE_NM
						 , '0'  AS AUTH_SCOPE_NM#_Image
						 , DECODE(SCOPE_TYPE, 'SQL', SQL_SYNTAX, PRG_URL) AS SQL_SYNTAX
					FROM TSYS317 A, TSYS315 B
					WHERE	A.ENTER_CD 		= #{ssnEnterCd}
					AND		A.GRP_CD 		= #{athGrpCd}
					AND		A.ENTER_CD 		= B.ENTER_CD
					AND		A.AUTH_SCOPE_CD = B.AUTH_SCOPE_CD
					ORDER BY B.AUTH_SCOPE_NM
				]]>


		</select>
<!-- 팝업1 Right 조회 -->
		<select parameterType="map" resultType="cMap" id="getAthRangeMgrRightList">

				<![CDATA[

					SELECT AUTH_SCOPE_CD
						 , AUTH_SCOPE_NM
						 , '0'  AS AUTH_SCOPE_NM#_Image
						 , DECODE(SCOPE_TYPE, 'SQL', SQL_SYNTAX, PRG_URL) AS SQL_SYNTAX
					FROM (
							SELECT AUTH_SCOPE_CD
								 , AUTH_SCOPE_NM
								 , SCOPE_TYPE
								 , PRG_URL
								 , SQL_SYNTAX
							FROM TSYS315 C
							WHERE C.ENTER_CD 	= #{ssnEnterCd}
							MINUS
							SELECT A.AUTH_SCOPE_CD
								 , B.AUTH_SCOPE_NM
								 , SCOPE_TYPE
								 , PRG_URL
								 , SQL_SYNTAX
							FROM TSYS317 A, TSYS315 B
							WHERE A.ENTER_CD 	= #{ssnEnterCd}
							AND A.GRP_CD 		= #{athGrpCd}
							AND A.ENTER_CD 		= B.ENTER_CD
							AND A.AUTH_SCOPE_CD = B.AUTH_SCOPE_CD
							)
					WHERE AUTH_SCOPE_CD <> 'W20'
					 ORDER BY AUTH_SCOPE_NM
				]]>


		</select>

<!-- 팝업1 등록  -->
		<update parameterType="map" id="insertAthRangeMgr">

					INSERT INTO TSYS317
					(
						  ENTER_CD
						, GRP_CD
						, AUTH_SCOPE_CD
						, CHKDATE
						, CHKID
					)
					SELECT	  S.ENTER_CD
							, S.GRP_CD
							, S.AUTH_SCOPE_CD
							, SYSDATE
							, #{ssnSabun}
					FROM (
							SELECT    NULL 	AS ENTER_CD
									, NULL 	AS GRP_CD
									, NULL 	AS AUTH_SCOPE_CD
							FROM   DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="deleteRows" >
					UNION ALL
							SELECT	  ENTER_CD
									, #{athGrpCd}
									, AUTH_SCOPE_CD
							FROM TSYS315
							WHERE ENTER_CD		= #{ssnEnterCd}
				 			AND AUTH_SCOPE_CD	= TRIM(#{rm.authScopeCd})
</foreach>
						) S
					WHERE S.AUTH_SCOPE_CD IS NOT NULL



		</update>

<!-- 팝업1 삭제  -->
		<delete parameterType="map" id="deleteAthRangeMgr">

            		DELETE FROM TSYS317
					WHERE	1 = 1
					AND ENTER_CD  		= #{ssnEnterCd}
					AND GRP_CD			= #{athGrpCd}
            		AND AUTH_SCOPE_CD IN (  NULL
<foreach item="rm" collection="deleteRows" >
										, TRIM( #{rm.authScopeCd} )
</foreach>
										)



		</delete>



<!-- 팝업2 Left 조회 -->
		<select parameterType="map" resultType="cMap" id="getAthViewMgrLeftList">

				<![CDATA[
					SELECT A.GRP_CD
						 , A.VIEW_CD
						 , B.VIEW_NM
					FROM THRI207 A, THRI205 B
					WHERE	A.ENTER_CD	= #{ssnEnterCd}
					AND		A.GRP_CD	= #{athGrpCd}
					AND		A.VIEW_CD	= B.VIEW_CD
					ORDER BY B.VIEW_NM

				]]>


		</select>
<!-- 팝업2 Right 조회 -->
		<select parameterType="map" resultType="cMap" id="getAthViewMgrRightList">

				<![CDATA[
					SELECT VIEW_CD
						 , VIEW_NM
					FROM (
							SELECT VIEW_CD
								 , VIEW_NM
							FROM THRI205
							MINUS
							SELECT A.VIEW_CD
								 , B.VIEW_NM
							FROM THRI207 A, THRI205 B
							WHERE A.ENTER_CD 	= #{ssnEnterCd}
							AND A.GRP_CD 		= #{athGrpCd}
							AND A.VIEW_CD = B.VIEW_CD
							)
					 ORDER BY VIEW_NM
				]]>


		</select>

<!-- 팝업2 등록  -->
		<insert parameterType="map" id="insertAthViewMgr">


					INSERT INTO THRI207
					(
						  ENTER_CD
						, GRP_CD
						, VIEW_CD
						, CHKDATE
						, CHKID
					)
					SELECT	  S.ENTER_CD
							, S.GRP_CD
							, S.VIEW_CD
							, SYSDATE
							, #{ssnSabun}
					FROM (
							SELECT    NULL 	AS ENTER_CD
									, NULL 	AS GRP_CD
									, NULL 	AS VIEW_CD
							FROM   DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="deleteRows" >
					UNION ALL
							SELECT	 #{ssnEnterCd} AS ENTER_CD
									, #{athGrpCd}
									, VIEW_CD
							FROM THRI205
							WHERE 1 = 1
				 			AND VIEW_CD	= TRIM(#{rm.viewCd})
</foreach>
						) S
					WHERE S.VIEW_CD IS NOT NULL



		</insert>

<!-- 팝업2 삭제  -->
		<delete parameterType="map" id="deleteAthViewMgr">

            		DELETE FROM THRI207
					WHERE	1 = 1
					AND ENTER_CD  		= #{ssnEnterCd}
					AND GRP_CD			= #{athGrpCd}
            		AND VIEW_CD IN (  NULL
<foreach item="rm" collection="deleteRows" >
										, TRIM( #{rm.viewCd} )
</foreach>
										)



		</delete>


</mapper>