<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sys.project.atnatMgr">

    <!-- 휴가 리스트 불러오기-->
    <select id="getAtnatList" resultType="cMap">
        SELECT ENTER_CD
             , APPL_SEQ
             , NAME
             , VACATION_CD
             , VACATION_NM
             , VACATION_SDATE
             , VACATION_EDATE
             , REASON
        FROM TSYS831
        WHERE ENTER_CD = #{ssnEnterCd}
        <if test="searchYm != null and searchYm neq ''">
            AND( SUBSTR(VACATION_SDATE,1,6) = TRIM(#{searchYm}) OR SUBSTR(VACATION_EDATE,1,6) = TRIM(#{searchYm}) )
        </if>
    </select>

    <!-- 휴가신청인 리스트 불러오기 -->
    <select id="getAtnatNameList" parameterType="map" resultType="cMap">
        SELECT NAME AS CODE
            , NAME AS CODE_NM
        FROM TSYS830
        WHERE ENTER_CD = #{ssnEnterCd}
        <if test="workCd != null and workCd neq ''">
            AND WORK_CD = #{workCd}
        </if>
        ORDER BY NAME
    </select>

    <!-- 휴가 저장하기 -->
    <update id="saveAtnatApp">
        MERGE INTO TSYS831 T
                    USING   (
                        <bind name="idx" value="0" />
                        <foreach item="rm" collection="mergeRows" separator=" UNION ALL " >
                            SELECT TRIM(#{ssnEnterCd})  		AS  ENTER_CD
                            <choose>
                                <when test="rm.applSeq != null and rm.applSeq neq ''">
                                    , TRIM(#{rm.applSeq})  		AS  APPL_SEQ
                                </when>
                                <otherwise>
                                    , TO_CHAR( (SELECT (NVL(MAX(APPL_SEQ),0) + (#{idx} + 1)) FROM TSYS831 WHERE ENTER_CD = #{ssnEnterCd} ))  AS APPL_SEQ
                                </otherwise>
                            </choose>
                            , TRIM(#{rm.name}) AS NAME
                            , TRIM(#{rm.vacationCd}) AS VACATION_CD
                            , F_COM_GET_GRCODE_NAME(#{ssnEnterCd}, 'S20020' , #{rm.vacationCd}) AS VACATION_NM
                            , TRIM(#{rm.sYmd}) AS VACATION_SDATE
                            , TRIM(#{rm.eYmd}) AS VACATION_EDATE
                            , TRIM(#{rm.reason}) AS REASON
                            FROM DUAL
                        </foreach>
                                ) S
                                ON (     T.ENTER_CD    = S.ENTER_CD
                                    AND  T.APPL_SEQ   	   = S.APPL_SEQ
                                )
                                WHEN MATCHED THEN
                                    UPDATE SET    T.NAME = S.NAME
                                        , T.VACATION_CD = S.VACATION_CD
                                        , T.VACATION_NM = S.VACATION_NM
                                        , T.VACATION_SDATE = S.VACATION_SDATE
                                        , T.VACATION_EDATE = S.VACATION_EDATE
                                        , T.REASON = S.REASON
                                        , T.CHKDATE  = SYSDATE
                                        , T.CHKID    = #{ssnSabun}
                                        WHEN NOT MATCHED THEN
                                    INSERT
                                        (     T.ENTER_CD
                                            , T.APPL_SEQ
                                            , T.NAME
                                            , T.VACATION_CD
                                            , T.VACATION_NM
                                            , T.VACATION_SDATE
                                            , T.VACATION_EDATE
                                            , T.REASON
                                            , T.CHKDATE
                                            , T.CHKID
                                        )
                                        VALUES
                                    (     S.ENTER_CD
                                        , S.APPL_SEQ
                                        , S.NAME
                                        , S.VACATION_CD
                                        , S.VACATION_NM
                                        , S.VACATION_SDATE
                                        , S.VACATION_EDATE
                                        , S.REASON
                                        , SYSDATE
                                        , #{ssnSabun}
                                    )
    </update>

    <select id="getAtnatAppMap" resultType="cMap">
        SELECT ENTER_CD,
               APPL_SEQ,
               NAME,
               VACATION_CD,
               VACATION_NM,
               VACATION_SDATE,
               VACATION_EDATE,
               REASON
        FROM TSYS831
        WHERE ENTER_CD = #{ssnEnterCd}
          AND APPL_SEQ = #{searchApplSeq}
    </select>

    <delete id="deleteAtnatApp">
        DELETE
        FROM TSYS831
        WHERE ENTER_CD = #{ssnEnterCd}
          AND APPL_SEQ = #{applSeq}
    </delete>

    <select id="getAtnatAppDupCheck" resultType="cMap">
        SELECT COUNT(1) AS DUP_CNT
        FROM TSYS831
        WHERE ENTER_CD = #{ssnEnterCd}
          AND NAME =#{name}
          AND (#{sYmd} BETWEEN VACATION_SDATE AND VACATION_EDATE OR
               #{eYmd} BETWEEN VACATION_SDATE AND VACATION_EDATE
               )
    </select>
</mapper>