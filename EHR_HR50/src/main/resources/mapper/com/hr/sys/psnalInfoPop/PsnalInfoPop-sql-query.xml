<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.psnalInfoPop.psnalWelfarePop">

<!-- 인사기본 공통 조회 -->
		<select parameterType="map" resultType="cMap" id="getPsnalInfoPopCommonCodeList">


 					SELECT CODE, CODE_NM, MEMO, NOTE1, NOTE2, NOTE3
					FROM TSYS005
   					WHERE ENTER_CD = #{enterCd}
     				AND GRCODE_CD = trim( #{grpCd} )
   				<if test='useYn != null and !useYn.equals("")'>
   					AND USE_YN = TRIM( #{useYn} )
				</if>
 					ORDER BY USE_YN DESC, SEQ, CODE, CODE_NM




		</select>

		<select parameterType="map" resultType="cMap" id="getPsnalInfoPopEduYearList">

				<![CDATA[
			  SELECT DISTINCT SUBSTR(EDU_SYMD,0,4) AS CODE
			  		, SUBSTR(EDU_SYMD,0,4) || '년' AS CODE_NM
		        FROM TTRA309
		        WHERE ENTER_CD = #{enterCd}
		          AND SABUN = #{sabun}
		        ORDER BY CODE DESC
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getPsnalInfoPopLocationGbnList">

				<![CDATA[
 					SELECT CODE, CODE_NM, MEMO, NOTE1, NOTE2, NOTE3
					  FROM TSYS005
   					 WHERE ENTER_CD = #{enterCd}
     				   AND GRCODE_CD = 'H90200'
     				   AND USE_YN = 'Y'
     				   AND NOTE1  = '1'
 					ORDER BY USE_YN DESC, SEQ, CODE, CODE_NM
				]]>


		</select>


<!-- 사원검색 상세 조회 -->
		<select parameterType="map" resultType="cMap" id="getPsnalInfoPopEmployeeDetail">

				<![CDATA[
					  SELECT BIR_YMD						--생년월일
							,CNAME							--한자명
							,ENTER_CD						--회사코드
							,TO_CHAR(TO_DATE(EMP_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS EMP_YMD			--입사일
							,EMP_TYPE						--입사구분코드(F10003)
							,JIKWEE_CD						--직위코드(H20030)
							,JIKGUB_CD						--직급코드(H20010)
							,JIKCHAK_CD						--직책코드(H20020)
							,JOB_CD							--직무코드
							,FOREIGN_YN						--외국인여부(Y,	N)
							,TO_CHAR(TO_DATE(GEMP_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS GEMP_YMD		--그룹입사일
							,LOCATION_CD 					--근무지코드
							,LUN_TYPE						--양음구분(1;양, 2:음)
							,MANAGE_CD						--사원구분코드(H10030)
							,NAME							--성명
							,ORG_CD							--조직코드
							,PAY_TYPE						--급여유형코드(H10110)
							,F_COM_GET_RESNO (ENTER_CD, SABUN) AS RES_NO	--주민번호
							,RPAD(SUBSTR(F_COM_GET_RESNO (ENTER_CD, SABUN),0,6),13,'*') AS CRES_NO 	--변경된 주민번호
							,TO_CHAR(TO_DATE(RET_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS RET_YMD			--퇴직일자
							,TO_CHAR(TO_DATE(RMID_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS RMID_YMD		--퇴직금기산일
							,SABUN							--사번
							,SAL_CLASS						--호봉
							,SEX_TYPE						--성별(1;남자, 2:여자)
							,STATUS_CD						--재직상태코드(H10010)
							,STF_TYPE						--채용구분코드(F10001)
							,WORK_TYPE						--직군코드(H10050)
							,WORKORG_CD						--근무소속조직코드
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'F10003' , EMP_TYPE, #{ssnLocaleCd}) AS EMP_TYPE_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'H20030' , JIKWEE_CD, #{ssnLocaleCd}) AS JIKWEE_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'H20010' , JIKGUB_CD, #{ssnLocaleCd}) AS JIKGUB_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'H20020' , JIKCHAK_CD, #{ssnLocaleCd}) AS JIKCHAK_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'H10110' , PAY_TYPE, #{ssnLocaleCd}) AS PAY_TYPE_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'H10030' , MANAGE_CD, #{ssnLocaleCd}) AS MANAGE_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'H10010' , STATUS_CD, #{ssnLocaleCd}) AS STATUS_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'F10001' , STF_TYPE, #{ssnLocaleCd}) AS STF_TYPE_NM
							,F_COM_GET_GRCODE_NAME (ENTER_CD, 'H10050' , WORK_TYPE, #{ssnLocaleCd}) AS WORK_TYPE_NM
							,F_COM_GET_ORG_NM (ENTER_CD, ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd} ) AS ORG_NM
							,F_COM_GET_JOB_NM_201 (ENTER_CD, JOB_CD, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd} ) AS JOB_NM
							,F_COM_GET_ORG_PATH_NM1 (ENTER_CD, SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_PATH
							,F_COM_GET_MAP_NM(A.ENTER_CD, '600', A.SABUN, NULL, #{ssnLocaleCd}) AS LOCATION_NM
							,TO_CHAR(TO_DATE(RMID_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS RMID_YMD
							,TO_CHAR(TO_DATE(YEAR_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS YEAR_YMD
							,NVL(F_COM_GET_MAP_CD (ENTER_CD, '100', SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}),'') AS BUSINESS_PLACE_CD
							,NVL(F_COM_GET_MAP_CD (ENTER_CD, '300', SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}),'') AS CC_CD
						FROM (
							 SELECT A.NAME AS NAME,							--성명
									A.CNAME	AS CNAME,						--한문명
									A.SEX_TYPE AS SEX_TYPE,					--성별(1;남자,	2:여자)
									A.FOREIGN_YN AS	FOREIGN_YN,				--외국인여부(Y, N)
									A.RES_NO,								--주민번호
									A.BIR_YMD AS BIR_YMD,					--생년월일
									A.EMP_YMD AS EMP_YMD,					--입사일
									A.GEMP_YMD AS GEMP_YMD,					--그룹입사일
									A.LUN_TYPE AS LUN_TYPE,					--양음구분(1;양, 2:음)
									A.STF_TYPE AS STF_TYPE,					--채용구분코드(F10001)
									A.EMP_TYPE AS EMP_TYPE,					--입사구분코드(F10003)
									A.RET_YMD AS RET_YMD,					 --퇴직일자
									A.RMID_YMD AS RMID_YMD,					--퇴직금기산일
									A.YEAR_YMD AS YEAR_YMD,
									C.*
							   FROM THRM100 A, THRM151 C
							  WHERE A.ENTER_CD = #{searchEnterCd}
								AND A.SABUN = #{searchUserId}
								AND DECODE( #{searchStatusCd} ,NULL,NULL,'RA',RET_YMD)  IS  NULL
								AND A.ENTER_CD = C.ENTER_CD
								AND A.SABUN = C.SABUN
								AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
								AND ROWNUM = 1
							)
				]]>


		</select>

<!-- 공통탭 정보 다건 조회 -->
		<select parameterType="map" resultType="cMap" id="getPsnalInfoPopTabInfoList">

				<![CDATA[
					SELECT B.PRG_PATH
						 , A.PRG_CD
						 , A.MENU_NM
						 , NVL(A.DATA_PRG_TYPE,'P') AS DATA_PRG_TYPE
						 , NVL(A.DATA_RW_TYPE,'R') AS DATA_RW_TYPE
					  FROM
					  (
						SELECT  /*+INDEX(TSYS311 PK_SYS311)*/ *
			              FROM (
			              		SELECT *
			                      FROM TSYS311
			                 	 WHERE ENTER_CD = #{enterCd}
			                   	   AND MAIN_MENU_CD= #{mainMenuCd}
			                   	   AND GRP_CD = #{grpCd}
								   AND (USE_YN = 'Y' OR USE_YN IS NULL)
			                   	   AND TYPE = 'T'
			                   )
					  )A, TSYS301 B
					 WHERE A.PRG_CD = B.PRG_CD(+)
					 START WITH A.PRIOR_MENU_CD = #{menuCd}
					 CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
						AND PRIOR A.MAIN_MENU_CD = A.MAIN_MENU_CD
						AND PRIOR A.GRP_CD = A.GRP_CD
						AND PRIOR A.MENU_CD = A.PRIOR_MENU_CD
					 ORDER SIBLINGS BY A.PRIOR_MENU_CD, A.SEQ
				]]>


		</select>


</mapper>