<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.research.researchAppMgr">
	<select parameterType="map" resultType="cMap" id="getResearchAppMgrList">

				<![CDATA[
					SELECT 	--  CASE 	WHEN S.STATE_CD = '20' AND ANSWER_YN = 'N' THEN '1' ELSE '0' END	AS DETAIL1,
							--  CASE 	WHEN S.STATE_CD = '30' THEN '1' ELSE '0' END						AS DETAIL2,
							'1' AS DETAIL1,
							'1' AS DETAIL2,
							S.*
					FROM (
							SELECT    A.RESEARCH_SEQ
							        , A.RESEARCH_NM
							        , A.MEMO
							        , A.SIGN_YN
							        , A.OPEN_YN
							        , DECODE(A.OPEN_YN,'Y','공개','N','비공개')			AS OPEN_YN_NM
							        , TO_CHAR(TO_DATE(A.RESEARCH_SYMD,'YYYYMMDD'),'YYYY-MM-DD') 	AS RESEARCH_SYMD
							        , TO_CHAR(TO_DATE(A.RESEARCH_EYMD,'YYYYMMDD'),'YYYY-MM-DD') 	AS RESEARCH_EYMD
							        , A.STATE_CD
							        , F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H60270' , A.STATE_CD, #{ssnLocaleCd}) STATE_CD_NM
							        , A.NOTICE_LVL
							        , A.FILE_SEQ
							        , (	SELECT DECODE(COUNT(*), 0, 'N', 'Y')
							           	FROM TSYS607
							           	WHERE 1=1
							           	AND 	ENTER_CD 		= A.ENTER_CD
							           	AND 	RESEARCH_SEQ 	= A.RESEARCH_SEQ
							           	AND 	ENTER_CD 		= #{ssnEnterCd}
							           	AND 	SABUN 			= #{ssnSabun}
							      	  ) 												AS ANSWER_YN
							     	, DECODE(A.NOTICE_LVL, 'ALL', 'Y', F_SYS_GET_RESEARCH_LEVEL_CHK(A.ENTER_CD, #{ssnSabun}, A.RESEARCH_SEQ, A.NOTICE_LVL)) AS NOTICE_YN
							FROM TSYS601 A
							WHERE 1=1
							AND		A.ENTER_CD = #{ssnEnterCd}
							AND 	A.STATE_CD IN ('20', '30')
							]]>
					<if test='researchNm != null and !researchNm.equals("")'>
							AND     A.RESEARCH_NM LIKE '%' || TRIM( #{researchNm} ) || '%'
					</if>
						) S
					WHERE 1=1
					ORDER BY S.RESEARCH_SEQ DESC



		</select>
		<select parameterType="map" resultType="cMap" id="getResearchAppMgrQuestionList">

				<![CDATA[
					SELECT 	  B.ITEM_SEQ AS CODE
					        , B.ITEM_SEQ
							, B.DISPLAY_SEQ
							, B.ITEM_NM AS CODE_NM
							, B.ITEM_NM
				            , ( SELECT ANSWER FROM TSYS607 Z
				                WHERE Z.ENTER_CD = A.ENTER_CD AND Z.RESEARCH_SEQ = A.RESEARCH_SEQ AND Z.QUESTION_SEQ = A.QUESTION_SEQ AND Z.SABUN = #{ssnSabun}
				               ) AS ANSWER
					FROM TSYS603 A, TSYS605 B
					WHERE 1=1
					AND 	A.ENTER_CD		= #{ssnEnterCd}
					AND 	A.RESEARCH_SEQ  = TO_NUMBER( TRIM( #{researchSeq} ) )
					AND 	A.QUESTION_SEQ  = TO_NUMBER( TRIM( #{questionSeq} ) )
					AND 	A.ENTER_CD 		= B.ENTER_CD(+)
					AND 	A.RESEARCH_SEQ 	= B.RESEARCH_SEQ(+)
					AND 	A.QUESTION_SEQ	= B.QUESTION_SEQ(+)
					ORDER BY A.QUESTION_NO,  B.DISPLAY_SEQ, A.QUESTION_SEQ
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getResearchAppMgrQuestionResultList">

				<![CDATA[
					SELECT 	  A.RESEARCH_SEQ
							, A.QUESTION_SEQ
							, A.QUESTION_NM
							, A.QUESTION_NO
							, A.QUESTION_ITEM_CD
							, A.RIGHT
							, B.ITEM_SEQ
							, B.DISPLAY_SEQ
							, B.ITEM_NM
							, B.RIGHT_POINT
                            , C.ANSWER_AVERAGE
                            , C.ANSWER_AVERAGE_P1
                            , C.ANSWER_CNT
                            , C.TOTAL_PERSON
					FROM TSYS603 A, TSYS605 B,
						(	SELECT 	  A.ENTER_CD
									, A.RESEARCH_SEQ
									, A.QUESTION_SEQ
									, A.ITEM_SEQ
									, NVL(A.ACNT,0)                				AS ANSWER_CNT
									, ROUND((NVL(A.ACNT, 0)/B.TCNT)*100,1) 		AS ANSWER_AVERAGE
									, ROUND((NVL(A.ACNT, 0)/B.TCNT)*100,0) 		AS ANSWER_AVERAGE_P1
									, B.TCNT                           			AS TOTAL_PERSON
							FROM 	(
									    SELECT A.ENTER_CD, A.RESEARCH_SEQ, A.QUESTION_SEQ,A.ITEM_SEQ,COUNT(B.ANSWER_SEQ) ACNT
									    FROM TSYS605 A, TSYS607 B
									    WHERE 1=1
									    AND 	A.ENTER_CD	    = #{ssnEnterCd}
									    AND 	A.RESEARCH_SEQ 	= TO_NUMBER( TRIM( #{researchSeq} ))
									    AND 	A.ENTER_CD		= B.ENTER_CD(+)
									    AND 	A.RESEARCH_SEQ 	= B.RESEARCH_SEQ(+)
									    AND 	A.QUESTION_SEQ 	= B.QUESTION_SEQ(+)
									    AND 	TO_CHAR(A.ITEM_SEQ)     	= B.ANSWER(+)
									    GROUP BY A.ENTER_CD , A.RESEARCH_SEQ,A.QUESTION_SEQ  ,A.ITEM_SEQ 
									) A
									,(
									    SELECT DECODE(COUNT(*), 0,1,COUNT(*)) TCNT FROM (
									        SELECT DISTINCT SABUN
									        FROM TSYS607
									        WHERE 1=1
									        AND 	ENTER_CD 		= #{ssnEnterCd}
									        AND     RESEARCH_SEQ    = TO_NUMBER( TRIM( #{researchSeq} ))
									    )
									) B
						) C
					WHERE 1=1
					AND 	A.ENTER_CD		= #{ssnEnterCd}
					AND 	A.RESEARCH_SEQ  = TO_NUMBER( TRIM( #{researchSeq} ))
					AND 	A.ENTER_CD 		= B.ENTER_CD(+)
					AND 	A.RESEARCH_SEQ 	= B.RESEARCH_SEQ(+)
					AND 	A.QUESTION_SEQ	= B.QUESTION_SEQ(+)
					AND 	B.ENTER_CD      = C.ENTER_CD(+)
                    AND 	B.RESEARCH_SEQ  = C.RESEARCH_SEQ(+)
                    AND 	B.QUESTION_SEQ  = C.QUESTION_SEQ(+)
                    AND 	B.ITEM_SEQ      = C.ITEM_SEQ(+)
					ORDER BY A.QUESTION_NO, B.DISPLAY_SEQ, ITEM_SEQ
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getResearchAppMgrQuestionResultDescList">

				<![CDATA[
					SELECT	  B.RESEARCH_SEQ
							, B.QUESTION_SEQ
							, B.ANSWER_SEQ
							, B.ANSWER
					FROM TSYS603 A, TSYS607 B
					WHERE 1=1
					AND 	A.ENTER_CD 			= #{ssnEnterCd}
					AND 	A.RESEARCH_SEQ 		= TO_NUMBER( TRIM( #{researchSeq} ))
					AND 	A.RESEARCH_SEQ 		= B.RESEARCH_SEQ
					AND 	A.QUESTION_SEQ		= B.QUESTION_SEQ
					AND 	B.ANSWER IS NOT NULL
                    ORDER BY A.QUESTION_NO				
				]]>


		</select>

		<delete parameterType="map" id="deleteResearchAppMgrWrite">

				<![CDATA[
				DELETE FROM TSYS607
				 WHERE ENTER_CD     = #{ssnEnterCd}
				   AND RESEARCH_SEQ = #{researchSeq}
				   AND SABUN        = #{ssnSabun}
				]]>


		</delete>

		<update parameterType="map" id="saveResearchAppMgrWrite">


           			MERGE INTO TSYS607 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.RESEARCH_SEQ
									, A.QUESTION_SEQ
									, A.SABUN
									, A.ANSWER_SEQ
									, A.ANSWER
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS RESEARCH_SEQ
											, NULL		AS QUESTION_SEQ
											, NULL		AS SABUN
											, NULL		AS ANSWER_SEQ
											, NULL		AS ANSWER
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL 
									SELECT
									 		  TRIM(#{ssnEnterCd})			AS	ENTER_CD
											, TRIM(#{rm.researchSeq})		AS	RESEARCH_SEQ
											, TRIM(#{rm.questionSeq}  )		AS	QUESTION_SEQ
											, TRIM(#{ssnSabun})				AS	SABUN
											,CASE WHEN TRIM(#{rm.answerSeq}) IS NULL OR TRIM(#{rm.answerSeq}) = '0'
												THEN (SELECT (NVL(MAX(ANSWER_SEQ),0) + ${icnt}) FROM TSYS607
										  		WHERE ENTER_CD = #{ssnEnterCd}
												  AND RESEARCH_SEQ = TRIM(#{rm.researchSeq})
												  AND QUESTION_SEQ = TRIM(#{rm.questionSeq}))
								 	 			ELSE TO_NUMBER(#{rm.answerSeq}) END ANSWER_SEQ
											, TRIM(#{rm.answer})			AS	ANSWER
									  FROM DUAL
<bind name="icnt" value="icnt + 1" />
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
							) S
					ON ( 		T.ENTER_CD    	= S.ENTER_CD
							AND T.RESEARCH_SEQ	= S.RESEARCH_SEQ
							AND T.QUESTION_SEQ	= S.QUESTION_SEQ
							AND T.SABUN       	= S.SABUN
							AND T.ANSWER_SEQ  	= S.ANSWER_SEQ
						)
					WHEN MATCHED THEN
						UPDATE SET	  T.ANSWER			= S.ANSWER
									, T.CHKDATE			= SYSDATE
									, T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(

							  T.ENTER_CD
							, T.RESEARCH_SEQ
							, T.QUESTION_SEQ
							, T.SABUN
							, T.ANSWER_SEQ
							, T.ANSWER
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.RESEARCH_SEQ
							, S.QUESTION_SEQ
							, S.SABUN
							, S.ANSWER_SEQ
							, S.ANSWER
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
		
		<select parameterType="map" resultType="cMap" id="getResearchAppMgrWriteList">

				<![CDATA[
					SELECT	  A.RESEARCH_SEQ
							, A.QUESTION_SEQ
							, A.QUESTION_NM
							, A.QUESTION_NO
							, A.QUESTION_ITEM_CD
							,( SELECT ANSWER FROM TSYS607 Z
				                             WHERE Z.ENTER_CD = A.ENTER_CD AND Z.RESEARCH_SEQ = A.RESEARCH_SEQ AND Z.QUESTION_SEQ = A.QUESTION_SEQ AND Z.SABUN = #{ssnSabun}) AS ANSWER
				            ,( SELECT ANSWER_SEQ FROM TSYS607 Z
				                             WHERE Z.ENTER_CD = A.ENTER_CD AND Z.RESEARCH_SEQ = A.RESEARCH_SEQ AND Z.QUESTION_SEQ = A.QUESTION_SEQ AND Z.SABUN = #{ssnSabun}) AS ANSWER_SEQ
					FROM TSYS603 A
					WHERE 1=1
					AND 	A.ENTER_CD 			= #{ssnEnterCd}
					AND 	A.RESEARCH_SEQ 		= TO_NUMBER( TRIM( #{researchSeq} ))
			ORDER BY A.QUESTION_NO		
				]]>


	</select>
	

</mapper>
