<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="sys.security.athGrpMenuMgr">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAthGrpMenuMgrGrpCdList">

				<![CDATA[
					SELECT GRP_CD AS CODE
					     , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys307', LANGUAGE_CD, #{ssnLocaleCd}), GRP_NM) AS CODE_NM
					  FROM TSYS307
					 WHERE ENTER_CD = #{ssnEnterCd}
					 ORDER BY SEQ
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getAthGrpMenuMgrCdList">

				<![CDATA[
					SELECT 	  A.MAIN_MENU_CD AS CODE
							, B.MAIN_MENU_NM AS CODE_NM
				  	FROM TSYS311 A, TSYS309 B
				 	WHERE 	A.ENTER_CD 		= #{ssnEnterCd}
				 	AND 	A.ENTER_CD		= B.ENTER_CD
				   	AND 	A.MAIN_MENU_CD 	= B.MAIN_MENU_CD
				   	AND B.USE_YN 		= '1'
				 	GROUP BY A.MAIN_MENU_CD, B.MAIN_MENU_NM, B.SEQ
				 	ORDER BY B.SEQ
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getAthGrpMenuMgrLeftList">

				<![CDATA[
					SELECT 	  '0' AS DETAIL
							, A.MAIN_MENU_CD
							, B.MAIN_MENU_NM
							, B.SEQ
				  	FROM TSYS311 A, TSYS309 B
				 	WHERE 	A.ENTER_CD 		= #{ssnEnterCd}
				 	AND		A.ENTER_CD		= B.ENTER_CD
				   	AND 	A.GRP_CD 		= #{athGrpCd}
				   	AND 	A.MAIN_MENU_CD 	= B.MAIN_MENU_CD
				   	--AND 	B.MAIN_MENU_CD  <> '21'
				   	AND 	B.USE_YN 		= '1'
				 	GROUP BY A.MAIN_MENU_CD, B.MAIN_MENU_NM, B.SEQ
				 	ORDER BY B.SEQ
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getAthGrpMenuMgrRightList">

				<![CDATA[
					SELECT	  '0' AS DETAIL
							, MAIN_MENU_CD
							, MAIN_MENU_NM
							, SEQ
					FROM (
							SELECT	  MAIN_MENU_CD
									, MAIN_MENU_NM
									, SEQ
		  					FROM TSYS309
		  					AND  USE_YN = '1'
		  					AND ENTER_CD = #{ssnEnterCd}
		  					--WHERE MAIN_MENU_CD  <> '21'
					MINUS
							SELECT 	  A.MAIN_MENU_CD
									, B.MAIN_MENU_NM
									, B.SEQ
		  					FROM TSYS311 A, TSYS309 B
			 				WHERE 	A.ENTER_CD 		= #{ssnEnterCd}
			 				AND		A.ENTER_CD		= B.ENTER_CD
		   					AND 	A.GRP_CD 		= #{athGrpCd}
		   					AND 	B.USE_YN 		= '1'
		   					AND 	A.MAIN_MENU_CD 	= B.MAIN_MENU_CD
		 					GROUP BY A.MAIN_MENU_CD, B.MAIN_MENU_NM, B.SEQ
					)
 					ORDER BY SEQ
				]]>


		</select>
<!-- 		삭제 -->
		<insert parameterType="map" id="insertAthGrpMenuMgr">

					INSERT INTO TSYS311
					(
						  ENTER_CD
						, MAIN_MENU_CD
						, PRIOR_MENU_CD
						, MENU_CD
						, MENU_SEQ
						, GRP_CD
						, TYPE
						, MENU_NM
						, PRG_CD
						, SEARCH_SEQ
						, DATA_RW_TYPE
						, DATA_PRG_TYPE
						, USE_YN
						, INQ_S_YMD
						, INQ_E_YMD
						, CNT
						, SEQ
						, APPL_CD
						, CHKDATE
						, CHKID
					)
					SELECT	  S.ENTER_CD
							, S.MAIN_MENU_CD
							, S.PRIOR_MENU_CD
							, S.MENU_CD
							, S.MENU_SEQ
							, S.GRP_CD
							, S.TYPE
							, S.MENU_NM
							, S.PRG_CD
							, S.SEARCH_SEQ
							, S.DATA_RW_TYPE
							, S.DATA_PRG_TYPE
							, S.USE_YN
							, S.INQ_S_YMD
							, S.INQ_E_YMD
							, S.CNT
							, S.SEQ
							, S.APPL_CD
							, SYSDATE
							, #{ssnSabun}
					FROM (
							SELECT    NULL 	AS ENTER_CD
									, NULL 	AS MAIN_MENU_CD
									, NULL 	AS PRIOR_MENU_CD
									, NULL 	AS MENU_CD
									, NULL 	AS MENU_SEQ
									, NULL 	AS GRP_CD
									, NULL 	AS TYPE
									, NULL 	AS MENU_NM
									, NULL 	AS PRG_CD
									, NULL 	AS SEARCH_SEQ
									, NULL 	AS DATA_RW_TYPE
									, NULL 	AS DATA_PRG_TYPE
									, NULL 	AS USE_YN
									, NULL 	AS INQ_S_YMD
									, NULL 	AS INQ_E_YMD
									, NULL 	AS CNT
									, NULL 	AS SEQ
									, NULL  AS APPL_CD
							FROM   DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="deleteRows" >
					UNION ALL
							SELECT 	  ENTER_CD
									, MAIN_MENU_CD
									, PRIOR_MENU_CD
									, MENU_CD
									, MENU_SEQ
				 					, #{athGrpCd}
				 					, TYPE
				 					, MENU_NM
				 					, PRG_CD
				 					, SEARCH_SEQ
				 					, DATA_RW_TYPE
				 					, DATA_PRG_TYPE
				 					, DECODE(TYPE, 'M', '', '1')
				 					, DECODE(TYPE, 'M', '', TO_CHAR(SYSDATE, 'YYYYMMDD'))
				 					, DECODE(TYPE, 'M', '', '99991231')
				 					, CNT
				 					, SEQ
				 					, APPL_CD
							FROM TSYS303
							WHERE ENTER_CD		= #{ssnEnterCd}
				 			AND MAIN_MENU_CD   	= TRIM(#{rm.mainMenuCd})
</foreach>
						) S
					WHERE S.MAIN_MENU_CD IS NOT NULL


		</insert>
		<!-- 		삭제 -->
		<delete parameterType="map" id="deleteAthGrpMenuMgr">

            		DELETE FROM TSYS311
					WHERE	1 = 1
					AND ENTER_CD  		= #{ssnEnterCd}
					AND GRP_CD			= #{athGrpCd}
            		AND MAIN_MENU_CD IN (  NULL
<foreach item="rm" collection="deleteRows" >
										, TRIM( #{rm.mainMenuCd} )
</foreach>
										)



		</delete>

		<select parameterType="map" resultType="cMap" id="getAthGrpMenuMgrRegPopupList">

				<![CDATA[
                SELECT T1.*
                  FROM (
                    SELECT	LEVEL AS "_level", ROWNUM AS rnum
							, AA.*
					FROM (	SELECT TRIM(#{srchMainMenuCd}) AS ENTER_CD
								, MAIN_MENU_CD
								, ''  AS PRIOR_MENU_CD
								, '0' AS MENU_CD
								, 0   AS MENU_SEQ
								, MAIN_MENU_NM AS MENU_NM
								, ''  AS TYPE
								, ''  AS PRG_CD
								, 0   AS SEARCH_SEQ
								, 0   AS CNT
								, 0   AS SEQ
								, ''  AS DATA_RW_TYPE
								, ''  AS DATA_PRG_TYPE
								, ''  AS LANGUAGE_CD
								, ''  AS LANGUAGE_NM
								, ''  AS GRP_CD
								, ''  AS INQ_S_YMD
								, ''  AS INQ_E_YMD
								, ''  AS POPUP_USE_YN
								, ''  AS LAST_SESSION_USE_YN
								, ''  AS SEARCH_USE_YN
								, ''  AS USE_YN
								, ''  AS TMP_USE_YN
								, ''  AS LANGUAGE_CD_YN
								, NULL  AS AUTH_SEARCH_SEQ
								, NULL  AS AUTH_SEARCH_DESC
								, ''  AS APPL_CD
							FROM TSYS309
							WHERE MAIN_MENU_CD = TRIM(#{srchMainMenuCd})
							AND ENTER_CD = #{ssnEnterCd}
							AND USE_YN 		= '1'
							UNION ALL
						   	SELECT A.ENTER_CD
								, A.MAIN_MENU_CD
								, A.PRIOR_MENU_CD
								, A.MENU_CD
								, A.MENU_SEQ
								, nvl(B.MENU_NM, A.MENU_NM) AS MENU_NM
								, A.TYPE
								, A.PRG_CD
								, NVL(B.SEARCH_SEQ, A.SEARCH_SEQ) AS SEARCH_SEQ
								, NVL(B.CNT, A.CNT) AS CNT
								, NVL(B.SEQ, A.SEQ) AS SEQ
								, NVL(B.DATA_RW_TYPE, A.DATA_RW_TYPE) AS DATA_RW_TYPE
								, NVL(B.DATA_PRG_TYPE, A.DATA_PRG_TYPE) AS DATA_PRG_TYPE
								, B.LANGUAGE_CD
								, F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, DECODE(B.LANGUAGE_CD, NULL, 'tsys303', 'tsys311'), NVL(B.LANGUAGE_CD,A.LANGUAGE_CD), #{ssnLocaleCd}) AS LANGUAGE_CD
								, NVL(B.GRP_CD , #{srchAthGrpCd} ) AS GRP_CD
								, B.INQ_S_YMD
								, B.INQ_E_YMD
								, B.POPUP_USE_YN
								, B.LAST_SESSION_USE_YN
								, B.SEARCH_USE_YN
								, B.USE_YN
								, B.USE_YN AS TMP_USE_YN
								, DECODE( B.LANGUAGE_CD, NULL, 'N', 'Y' ) AS LANGUAGE_CD_YN
								, B.AUTH_SEARCH_SEQ
                                , ( SELECT B.SEARCH_DESC
                                      FROM THRI201 B
                                     WHERE B.ENTER_CD   = B.ENTER_CD
                                       AND B.SEARCH_SEQ = B.AUTH_SEARCH_SEQ
                                       AND ROWNUM = 1
                                   ) AS AUTH_SEARCH_DESC
                                , A.APPL_CD
							FROM TSYS303 A, TSYS311 B
							WHERE A.ENTER_CD = #{ssnEnterCd}
							AND A.ENTER_CD = B.ENTER_CD(+)
							AND A.MAIN_MENU_CD = B.MAIN_MENU_CD(+)
							AND A.PRIOR_MENU_CD = B.PRIOR_MENU_CD(+)
							AND A.MENU_CD = B.MENU_CD(+)
							AND A.MENU_SEQ = B.MENU_SEQ(+)
							AND B.GRP_CD(+) = #{srchAthGrpCd}
							AND A.MAIN_MENU_CD = #{srchMainMenuCd})AA
					WHERE 1=1
					START WITH AA.PRIOR_MENU_CD = '0'
					CONNECT BY PRIOR AA.ENTER_CD = AA.ENTER_CD
					AND PRIOR AA.MAIN_MENU_CD = AA.MAIN_MENU_CD
					AND PRIOR AA.MENU_CD = AA.PRIOR_MENU_CD
					ORDER SIBLINGS BY AA.SEQ) T1
				]]>
<if test='searchUseYn != null and searchUseYn.equals("Y")'>
              WHERE USE_YN = '1'
</if>
              ORDER BY RNUM



		</select>

		<update parameterType="map" id="saveAthGrpMenuMgrRegPopup">

					MERGE INTO TSYS311 T
					USING	(
							SELECT	  A.MAIN_MENU_CD
									, A.PRIOR_MENU_CD
									, A.MENU_CD
									, A.MENU_SEQ
									, A.GRP_CD
									, A.TYPE
									, A.MENU_NM
									, A.PRG_CD
									, A.SEARCH_SEQ
									, A.DATA_RW_TYPE
									, A.DATA_PRG_TYPE
									, A.USE_YN
									, A.INQ_S_YMD
									, A.INQ_E_YMD
									, A.CNT
									, A.SEQ
									, A.POPUP_USE_YN
									, A.LAST_SESSION_USE_YN
									, A.SEARCH_USE_YN
									, A.LANGUAGE_CD
									, A.AUTH_SEARCH_SEQ
									, A.APPL_CD
							FROM	(
									SELECT	  NULL		AS MAIN_MENU_CD
											, NULL		AS PRIOR_MENU_CD
											, NULL		AS MENU_CD
											, NULL		AS MENU_SEQ
											, NULL		AS GRP_CD
											, NULL		AS TYPE
											, NULL		AS MENU_NM
											, NULL		AS PRG_CD
											, NULL		AS SEARCH_SEQ
											, NULL		AS DATA_RW_TYPE
											, NULL		AS DATA_PRG_TYPE
											, NULL		AS USE_YN
											, NULL		AS INQ_S_YMD
											, NULL		AS INQ_E_YMD
											, NULL		AS CNT
											, NULL		AS SEQ
											, NULL		AS POPUP_USE_YN
											, NULL		AS LAST_SESSION_USE_YN
											, NULL		AS SEARCH_USE_YN
											, NULL		AS LANGUAGE_CD
											, NULL 	    AS AUTH_SEARCH_SEQ
											, NULL      AS APPL_CD
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  TRIM(#{rm.mainMenuCd})			AS MAIN_MENU_CD
											, TRIM(#{rm.priorMenuCd})		AS PRIOR_MENU_CD
											, TRIM(#{rm.menuCd})				AS MENU_CD
											, DECODE(TO_NUMBER( TRIM(#{rm.menuSeq})), '', (SELECT (NVL(MAX(TO_NUMBER(MENU_SEQ)),0) + ${icnt}) FROM TSYS311), TO_NUMBER( TRIM(#{rm.menuSeq}))) AS MENU_SEQ
											, TRIM(#{rm.grpCd})				AS GRP_CD
											, TRIM(#{rm.type})				AS TYPE
											, TRIM(#{rm.menuNm})				AS MENU_NM
											, TRIM(#{rm.prgCd})				AS PRG_CD
											, TO_NUMBER( TRIM(#{rm.searchSeq}) )	AS SEARCH_SEQ
											, TRIM(#{rm.dataRwType})			AS DATA_RW_TYPE
											, TRIM(#{rm.dataPrgType})		AS DATA_PRG_TYPE
											, TRIM(#{rm.useYn})				AS USE_YN
											, TRIM(#{rm.inqSYmd})			AS INQ_S_YMD
											, TRIM(#{rm.inqEYmd})			AS INQ_E_YMD
											, TO_NUMBER( TRIM(#{rm.cnt}) )	AS CNT
											, TO_NUMBER( TRIM(#{rm.seq}) )	AS SEQ
											, TRIM(#{rm.popupUseYn})			AS POPUP_USE_YN
											, TRIM(#{rm.lastSessionUseYn})	AS LAST_SESSION_USE_YN
											, TRIM(#{rm.searchUseYn})		AS SEARCH_USE_YN
											, TRIM(#{rm.languageCd})			AS LANGUAGE_CD
											, TRIM(#{rm.authSearchSeq})		AS AUTH_SEARCH_SEQ
											, TRIM(#{rm.applCd})			AS APPL_CD
											FROM DUAL
</foreach>
									) A WHERE A.MAIN_MENU_CD IS NOT NULL
							) S
					ON ( 		T.ENTER_CD		= #{ssnEnterCd}
							AND T.MAIN_MENU_CD	= S.MAIN_MENU_CD
							AND T.PRIOR_MENU_CD	= S.PRIOR_MENU_CD
							AND T.MENU_CD		= S.MENU_CD
							AND T.MENU_SEQ 		= S.MENU_SEQ
							AND T.GRP_CD 		= S.GRP_CD
						)
					WHEN MATCHED THEN
						UPDATE SET	  T.TYPE				= S.TYPE
									, T.MENU_NM				= S.MENU_NM
									, T.PRG_CD				= S.PRG_CD
									, T.SEARCH_SEQ	       	= S.SEARCH_SEQ
									, T.DATA_RW_TYPE		= S.DATA_RW_TYPE
									, T.DATA_PRG_TYPE		= S.DATA_PRG_TYPE
									, T.USE_YN				= S.USE_YN
									, T.INQ_S_YMD			= S.INQ_S_YMD
									, T.INQ_E_YMD			= S.INQ_E_YMD
									, T.CNT                	= S.CNT
									, T.SEQ                	= S.SEQ
									, T.POPUP_USE_YN       	= S.POPUP_USE_YN
									, T.LAST_SESSION_USE_YN	= S.LAST_SESSION_USE_YN
									, T.SEARCH_USE_YN      	= S.SEARCH_USE_YN
									, T.LANGUAGE_CD       	= S.LANGUAGE_CD
									, T.AUTH_SEARCH_SEQ     = S.AUTH_SEARCH_SEQ
									, T.APPL_CD             = S.APPL_CD
									, T.CHKDATE				= SYSDATE
									, T.CHKID				= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.MAIN_MENU_CD
							, T.PRIOR_MENU_CD
							, T.MENU_CD
							, T.MENU_SEQ
							, T.GRP_CD
							, T.TYPE
							, T.MENU_NM
							, T.PRG_CD
							, T.SEARCH_SEQ
							, T.DATA_RW_TYPE
							, T.DATA_PRG_TYPE
							, T.USE_YN
							, T.INQ_S_YMD
							, T.INQ_E_YMD
							, T.CNT
							, T.SEQ
							, T.POPUP_USE_YN
							, T.LAST_SESSION_USE_YN
							, T.SEARCH_USE_YN
							, T.LANGUAGE_CD
							, T.AUTH_SEARCH_SEQ
							, T.APPL_CD
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #{ssnEnterCd}
							, S.MAIN_MENU_CD
							, S.PRIOR_MENU_CD
							, S.MENU_CD
							, S.MENU_SEQ
							, S.GRP_CD
							, S.TYPE
							, S.MENU_NM
							, S.PRG_CD
							, S.SEARCH_SEQ
							, S.DATA_RW_TYPE
							, S.DATA_PRG_TYPE
							, S.USE_YN
							, S.INQ_S_YMD
							, S.INQ_E_YMD
							, S.CNT
							, S.SEQ
							, S.POPUP_USE_YN
							, S.LAST_SESSION_USE_YN
							, S.SEARCH_USE_YN
							, S.LANGUAGE_CD
							, S.AUTH_SEARCH_SEQ
							, S.APPL_CD
							, SYSDATE
							, #{ssnSabun}
						)


		</update>



		<update parameterType="map" id="updateAthGrpMenuMgrRegPopup">

					MERGE INTO TSYS311 T
					USING	(
							SELECT	  A.MAIN_MENU_CD
									, A.PRIOR_MENU_CD
									, A.MENU_CD
									, A.MENU_SEQ
									, A.TYPE
									, A.MENU_NM
									, A.PRG_CD
									, A.SEARCH_SEQ
									, A.DATA_RW_TYPE
									, A.DATA_PRG_TYPE
									, A.CNT
									, A.SEQ
							FROM	(
									SELECT	  NULL		AS MAIN_MENU_CD
											, NULL		AS PRIOR_MENU_CD
											, NULL		AS MENU_CD
											, NULL		AS MENU_SEQ
											, NULL		AS TYPE
											, NULL		AS MENU_NM
											, NULL		AS PRG_CD
											, NULL		AS SEARCH_SEQ
											, NULL		AS DATA_RW_TYPE
											, NULL		AS DATA_PRG_TYPE
											, NULL		AS CNT
											, NULL		AS SEQ
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  TRIM(#{rm.mainMenuCd})			AS MAIN_MENU_CD
											, TRIM(#{rm.priorMenuCd})		AS PRIOR_MENU_CD
											, TRIM(#{rm.menuCd})				AS MENU_CD
											, DECODE(TO_NUMBER( TRIM(#{rm.menuSeq})), '', (SELECT (NVL(MAX(TO_NUMBER(MENU_SEQ)),0) + ${icnt}) FROM TSYS311), TO_NUMBER( TRIM(#{rm.menuSeq}))) AS MENU_SEQ
											, TRIM(#{rm.type})				AS TYPE
											, TRIM(#{rm.menuNm})				AS MENU_NM
											, TRIM(#{rm.prgCd})				AS PRG_CD
											, TO_NUMBER( TRIM(#{rm.searchSeq}) )	AS SEARCH_SEQ
											, TRIM(#{rm.dataRwType})			AS DATA_RW_TYPE
											, TRIM(#{rm.dataPrgType})		AS DATA_PRG_TYPE
											, TO_NUMBER( TRIM(#{rm.cnt}) )	AS CNT
											, TO_NUMBER( TRIM(#{rm.seq}) )	AS SEQ
											FROM DUAL

</foreach>
									) A WHERE A.MAIN_MENU_CD IS NOT NULL
							) S
					ON ( 		T.ENTER_CD		= #{ssnEnterCd}
							AND T.MAIN_MENU_CD	= S.MAIN_MENU_CD
							AND T.PRIOR_MENU_CD	= S.PRIOR_MENU_CD
							AND T.MENU_CD		= S.MENU_CD
							AND T.MENU_SEQ 		= S.MENU_SEQ

						)
					WHEN MATCHED THEN
						UPDATE SET	  T.TYPE				= S.TYPE
									, T.MENU_NM				= S.MENU_NM
									, T.PRG_CD				= S.PRG_CD
									, T.SEARCH_SEQ	       	= S.SEARCH_SEQ
									, T.DATA_RW_TYPE		= S.DATA_RW_TYPE
									, T.DATA_PRG_TYPE		= S.DATA_PRG_TYPE
									, T.CNT                	= S.CNT
									, T.SEQ                	= S.SEQ
									, T.CHKDATE				= SYSDATE
									, T.CHKID				= #{ssnSabun}



		</update>

<!-- 		삭제 -->
		<delete parameterType="map" id="deleteAthGrpMenuMgrRegPopup">

					DELETE FROM TSYS311
					WHERE 	(ENTER_CD, MAIN_MENU_CD, PRIOR_MENU_CD, MENU_CD, MENU_SEQ)
					  IN 	(  ( NULL, NULL , NULL , NULL , 0 )
				<foreach item="rm" collection="deleteRows" >
						, 	( 	#{ssnEnterCd}
								, TRIM( #{rm.mainMenuCd} )
								, TRIM( #{rm.priorMenuCd} )
								, TRIM( #{rm.menuCd} )
								, TO_NUMBER(TRIM( #{rm.menuSeq} ))
							)
				</foreach>
					)



		</delete>


		<select parameterType="map" resultType="cMap" id="getAthGrpMenuMgrNoneRegPopupList">

				<![CDATA[
					SELECT	  LVL AS "_level"
							, A.MAIN_MENU_CD
							, A.PRIOR_MENU_CD
							, A.MENU_CD
							, A.MENU_SEQ
							, A.TYPE
							, A.MENU_NM
							, A.PRG_CD
							, A.SEARCH_SEQ
							, B.SEARCH_DESC
							, A.DATA_RW_TYPE
							, A.DATA_PRG_TYPE
							, A.SEQ
							, A.CNT
  					FROM (
							SELECT 	'0' AS LEVEL_SEQ,
	        						 0 AS LVL, #{ssnEnterCd} AS ENTER_CD, MAIN_MENU_CD, '' AS PRIOR_MENU_CD, '0' AS MENU_CD, 0 AS MENU_SEQ, '' AS TYPE, MAIN_MENU_NM AS MENU_NM, '' AS PRG_CD, 0 AS SEARCH_SEQ, '' AS DATA_RW_TYPE, '' AS DATA_PRG_TYPE, 0 AS SEQ, 0 AS CNT
			          		FROM TSYS309
					 		WHERE MAIN_MENU_CD = #{mainMenuCd}
					 		AND USE_YN = '1'
			        		UNION ALL
							SELECT F_SYS_MAIN_MENU_PRG_LEVEL_SEQ(ENTER_CD, MAIN_MENU_CD, PRIOR_MENU_CD, MENU_CD) AS LEVEL_SEQ,
	       						LEVEL AS LVL, ENTER_CD, MAIN_MENU_CD, PRIOR_MENU_CD, MENU_CD, MENU_SEQ, TYPE, MENU_NM, PRG_CD, SEARCH_SEQ, DATA_RW_TYPE, DATA_PRG_TYPE, SEQ, CNT
	 						FROM TSYS303
			 				WHERE ENTER_CD = #{ssnEnterCd}
	   						AND MAIN_MENU_CD = #{mainMenuCd}
	 						START WITH PRIOR_MENU_CD = '0'
	 						CONNECT BY PRIOR ENTER_CD = ENTER_CD
							AND PRIOR MAIN_MENU_CD = MAIN_MENU_CD
							AND PRIOR MENU_CD = PRIOR_MENU_CD
						) A, THRI201 B
		 			WHERE A.ENTER_CD = B.ENTER_CD(+)
   					AND A.SEARCH_SEQ = B.SEARCH_SEQ(+)
 					ORDER BY A.LEVEL_SEQ
				]]>


		</select>
		
		<!-- 권한그룹프로그램관리 그룹기준 전체 삭제 -->
		<delete parameterType="map" id="deleteAthGrpMenuMgrAll">

				<![CDATA[
            		DELETE FROM TSYS311
					WHERE	1 = 1
					AND ENTER_CD  		= #{ssnEnterCd}
					AND GRP_CD			= TRIM( #{tarGrpCd} )
					AND MAIN_MENU_CD	= TRIM( #{srchMainMenuCd} )
				]]>


		</delete>
		
		<!-- 권한그룹프로그램관리 그룹간 전체 복사 -->
		<insert parameterType="map" id="copyAthGrpMenuMgrAll">

				<![CDATA[
					INSERT INTO TSYS311
					(
						  ENTER_CD
						, MAIN_MENU_CD
						, PRIOR_MENU_CD
						, MENU_CD
						, MENU_SEQ
						, GRP_CD
						, MENU_NM
						, TYPE
						, PRG_CD
						, SEARCH_SEQ
						, CNT
						, SEQ
						, DATA_RW_TYPE
						, DATA_PRG_TYPE
						, INQ_S_YMD
						, INQ_E_YMD
						, USE_YN
						, POPUP_USE_YN
						, LAST_SESSION_USE_YN
						, SEARCH_USE_YN
						, CHKID
						, LANGUAGE_CD
						, AUTH_SEARCH_SEQ
					)
					SELECT 
						  ENTER_CD
						, MAIN_MENU_CD
						, PRIOR_MENU_CD
						, MENU_CD
						, MENU_SEQ
						, TRIM( #{tarGrpCd} )
						, MENU_NM
						, TYPE
						, PRG_CD
						, SEARCH_SEQ
						, CNT
						, SEQ
						, DATA_RW_TYPE
						, DATA_PRG_TYPE
						, INQ_S_YMD
						, INQ_E_YMD
						, USE_YN
						, POPUP_USE_YN
						, LAST_SESSION_USE_YN
						, SEARCH_USE_YN
						, #{ssnSabun}
						, LANGUAGE_CD
						, AUTH_SEARCH_SEQ
					  FROM TSYS311
					 WHERE ENTER_CD  	= #{ssnEnterCd}
					   AND GRP_CD    	= TRIM( #{oldGrpCd} )
					   AND MAIN_MENU_CD	= TRIM( #{srchMainMenuCd} )
				]]>


		</insert>

</mapper>