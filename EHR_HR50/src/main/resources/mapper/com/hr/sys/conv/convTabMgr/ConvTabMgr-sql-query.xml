<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.conv.convTabMgr">

<!-- 이관테이블관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getConvTabMgrList">

					SELECT A.OWNER
						 , A.TAB_NM
					     , A.TAB_COMMENT
					     , A.NUM_ROWS
					     , A.CONV_TYPE
					     , A.CONV_YN
					     , A.COMP_YN
					     , A.ERR_MSG
						 , A.DEST_TAB_NM
					     , A.DEST_TAB_COMMENT
					     , A.ATTR1
					     , A.ATTR2
					     , A.ATTR3
					     , A.ATTR4
					     , A.COPY_NUM_ROWS
					     , TO_CHAR(CHKDATE, 'YYYY-MM-DD HH:SS') AS CHKDATE
					  FROM CONV001 A
					 WHERE A.OWNER = #{searchOwner}
					<if test='searchTabNm != null and !searchTabNm.equals("")'>
					   AND A.TAB_NM LIKE #{searchTabNm} ||'%'
					</if>
					<if test='searchTabComment != null and !searchTabComment.equals("")'>
					   AND A.TAB_COMMENT LIKE #{searchTabComment} ||'%'
					</if>
					<if test='searchDestTabNm != null and !searchDestTabNm.equals("")'>
					   AND A.DEST_TAB_NM LIKE #{searchDestTabNm} ||'%'
					</if>
					<if test='searchDestTabComment != null and !searchDestTabComment.equals("")'>
					   AND A.DEST_TAB_COMMENT LIKE #{searchDestTabComment} ||'%'
					</if>
					<if test='searchConvType != null and !searchConvType.equals("")'>
					   AND A.CONV_TYPE = #{searchConvType}
					</if>
					<if test='searchConvYn != null and !searchConvYn.equals("")'>
					   AND A.CONV_YN = #{searchConvYn}
					</if>
					<if test='searchCompYn != null and !searchCompYn.equals("")'>
					   AND A.COMP_YN = #{searchCompYn}
					</if>
				     ORDER BY A.OWNER, A.TAB_NM


		</select>

<!-- 이관테이블관리 저장 -->
		<update parameterType="map" id="saveConvTabMgr">


					MERGE INTO CONV001 T
					USING	(
							SELECT	A.OWNER
								,	A.TAB_NM
								,	A.TAB_COMMENT
								,	A.NUM_ROWS
								,	A.CONV_TYPE
								,	A.CONV_YN
								,	A.COMP_YN
								,	A.ERR_MSG
								, 	A.DEST_TAB_NM
							    , 	A.DEST_TAB_COMMENT
								,	A.ATTR1
								,	A.ATTR2
								,	A.ATTR3
								,	A.ATTR4
								,	A.COPY_NUM_ROWS
							FROM	(
									SELECT NULL AS OWNER
										 , NULL AS TAB_NM
										 , NULL AS TAB_COMMENT
										 , NULL AS NUM_ROWS
									     , NULL AS CONV_TYPE
									     , NULL AS CONV_YN
									     , NULL AS COMP_YN
									     , NULL AS ERR_MSG
									     , NULL AS DEST_TAB_NM
									     , NULL AS DEST_TAB_COMMENT
									     , NULL AS ATTR1
									     , NULL AS ATTR2
									     , NULL AS ATTR3
									     , NULL AS ATTR4
									     , NULL AS COPY_NUM_ROWS
									FROM DUAL
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											TRIM(#{rm.owner})			AS	OWNER
										,	TRIM(#{rm.tabNm})			AS	TAB_NM
										,	TRIM(#{rm.tabComment})		AS	TAB_COMMENT
										,	TRIM(#{rm.numRows})			AS	NUM_ROWS
										,	TRIM(#{rm.convType})		AS	CONV_TYPE
										,	TRIM(#{rm.convYn})			AS	CONV_YN
										,	TRIM(#{rm.compYn})			AS	COMP_YN
										,	TRIM(#{rm.errMsg})			AS	ERR_MSG
										,	TRIM(#{rm.destTabNm})		AS	DEST_TAB_NM
										,	TRIM(#{rm.destTabComment})	AS	DEST_TAB_COMMENT
										,	TRIM(#{rm.attr1})			AS	ATTR1
										,	TRIM(#{rm.attr2})			AS	ATTR2
										,	TRIM(#{rm.attr3})			AS	ATTR3
										,	TRIM(#{rm.attr4})			AS	ATTR4
										,	TRIM(#{rm.copyNumRows})		AS	COPY_NUM_ROWS
									FROM	DUAL
</foreach>
									) A WHERE A.OWNER	IS NOT NULL
										  AND A.TAB_NM	IS NOT NULL
							) S
					ON (
								T.OWNER		=	S.OWNER
							AND	T.TAB_NM	=	S.TAB_NM
						)
					WHEN MATCHED THEN
						UPDATE SET	  T.TAB_COMMENT			=	S.TAB_COMMENT
									, T.NUM_ROWS   			=	S.NUM_ROWS
									, T.CONV_TYPE  			=	S.CONV_TYPE
									, T.CONV_YN  			=	S.CONV_YN
									, T.COMP_YN  			=	S.COMP_YN
									, T.ERR_MSG  			=	S.ERR_MSG
									, T.DEST_TAB_NM  		=	S.DEST_TAB_NM
									, T.DEST_TAB_COMMENT  	=	S.DEST_TAB_COMMENT
									, T.ATTR1      			=	S.ATTR1
									, T.ATTR2      			=	S.ATTR2
									, T.ATTR3      			=	S.ATTR3
									, T.ATTR4      			=	S.ATTR4
									, T.COPY_NUM_ROWS      	=	S.COPY_NUM_ROWS
									, T.CHKDATE				=	SYSDATE
									, T.CHKID				=	#{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.OWNER
							, T.TAB_NM
							, T.TAB_COMMENT
							, T.NUM_ROWS
							, T.CONV_TYPE
							, T.CONV_YN
							, T.COMP_YN
							, T.ERR_MSG
							, T.DEST_TAB_NM
							, T.DEST_TAB_COMMENT
							, T.ATTR1
							, T.ATTR2
							, T.ATTR3
							, T.ATTR4
							, T.COPY_NUM_ROWS
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.OWNER
							, S.TAB_NM
							, S.TAB_COMMENT
							, S.NUM_ROWS
							, S.CONV_TYPE
							, S.CONV_YN
							, S.COMP_YN
							, S.ERR_MSG
							, S.DEST_TAB_NM
							, S.DEST_TAB_COMMENT
							, S.ATTR1
							, S.ATTR2
							, S.ATTR3
							, S.ATTR4
							, S.COPY_NUM_ROWS
							, SYSDATE
							, #{ssnSabun}
						)
		</update>

<!-- 이관테이블관리 삭제 -->
		<delete parameterType="map" id="deleteConvTabMgr1">


					DELETE FROM CONV001
					 WHERE OWNER||'_'||TAB_NM IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.owner != null and !rm.owner.equals("") and rm.tabNm != null and !rm.tabNm.equals("")'>
											TRIM( #{rm.owner} )||'_'||TRIM( #{rm.tabNm} )
										</if>
</foreach>
										)



		</delete>

<!-- 이관테이블관리 이관컬럼 삭제 -->
		<delete parameterType="map" id="deleteConvTabMgr2">


					DELETE FROM CONV002
					 WHERE OWNER||'_'||TAB_NM IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.owner != null and !rm.owner.equals("") and rm.tabNm != null and !rm.tabNm.equals("")'>
											TRIM( #{rm.owner} )||'_'||TRIM( #{rm.tabNm} )
										</if>
</foreach>
										)
		</delete>

<!-- 이관테이블관리(이관테이블 생성) 프로시저 -->
		<update parameterType="map" id="prcConvTabMgr" statementType="CALLABLE">
		<![CDATA[
			{CALL PRC_CONV_TABLE_INS(
				#{sqlCode,mode=OUT,jdbcType=VARCHAR},
				#{sqlErrm,mode=OUT,jdbcType=VARCHAR},
				#{searchOwner,mode=IN,jdbcType=VARCHAR},
				#{searchTabNm,mode=IN,jdbcType=VARCHAR},
				#{ssnSabun,mode=IN,jdbcType=VARCHAR})}
		]]>
		</update>

<!-- 이관테이블관리(이관 실행) 프로시저 -->
		<update parameterType="map" id="prcConvTabMgrApp" statementType="CALLABLE">
		<![CDATA[
			{CALL PRC_CONV_DATA_COPY(
				#{sqlCode,mode=OUT,jdbcType=VARCHAR},
				#{sqlErrm,mode=OUT,jdbcType=VARCHAR},
				#{searchOwner,mode=IN,jdbcType=VARCHAR},
				#{searchTabNm,mode=IN,jdbcType=VARCHAR},
				#{ssnSabun,mode=IN,jdbcType=VARCHAR})}
		]]>
		</update>


</mapper>