<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.pwrSrch.pwrSrchAdminUser">
		<select parameterType="map" resultType="cMap" id="getPwrSrchAdminUserDetailDescMap">

				<![CDATA[
					/* thri211 */
					SELECT A.SEARCH_TYPE
					     , A.SEARCH_DESC
					     , REPLACE(A.CONDITION_DESC, CHR(13), '</BR>') CONDITION_DESC_CONV
					     , A.CHART_TYPE
					     , A.CHART_DIS_VALUE
					     , (SELECT MAX(Z.COLUMN_NM) FROM THRI213 Z WHERE Z.ENTER_CD = A.ENTER_CD AND Z.SEARCH_SEQ = A.SEARCH_SEQ AND Z.CHART_STD = 'KEY' ) AS CHART_KEY
					     , (SELECT MAX(Z.COLUMN_NM) FROM THRI213 Z WHERE Z.ENTER_CD = A.ENTER_CD AND Z.SEARCH_SEQ = A.SEARCH_SEQ AND Z.CHART_STD = 'VALUE' ) AS CHART_VALUE
					     , (SELECT MAX(Z.COLUMN_NM) FROM THRI213 Z WHERE Z.ENTER_CD = A.ENTER_CD AND Z.SEARCH_SEQ = A.SEARCH_SEQ AND Z.CHART_STD = 'PER' ) AS CHART_PER
					     , A.CONDITION_DESC
					     , A.SQL_SYNTAX
					     , A.ADMIN_SQL_SYNTAX
					     , C.VIEW_NM
					     , A.INDIVIDUAL_YN
					  FROM THRI201 A
					     , THRI205 C
					 WHERE 1 = 1
					   AND A.ENTER_CD   = #{ssnEnterCd}
					   AND A.SEARCH_SEQ = #{srchSeq}
					   AND A.VIEW_CD    = C.VIEW_CD(+)
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getPwrSrchAdminUserSht1List">

				<![CDATA[
     				SELECT 	  SEARCH_SEQ
     						, COLUMN_NM
     						, SEQ
     						, ORDER_BY_SEQ
     						, ASC_DESC
     						, INQ_TYPE
  					FROM THRI213 
 					WHERE 1 = 1
 					AND ENTER_CD	= #{ssnEnterCd}
   					AND SEARCH_SEQ	= #{srchSeq}
					ORDER BY SEQ
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getPwrSrchAdminUserSht2List">

				<![CDATA[
					SELECT 	  A.SEARCH_SEQ
							, A.COLUMN_NM
							, A.OPERATOR
							, NVL(C.INPUT_VALUE, A.INPUT_VALUE ) AS INPUT_VALUE
							, NVL(C.INPUT_VALUE_DESC, A.INPUT_VALUE_DESC ) AS INPUT_VALUE_DESC
							, A.AND_OR
							, A.VALUE_TYPE
							, A.SEQ, A.COND_TYPE
		       				, B.SEARCH_ITEM_NM
		       				, B.SEARCH_ITEM_CD
		       				, B.ITEM_MAP_TYPE
		       				, B.PRG_URL
		       				, B.SQL_SYNTAX
		       				, A.VIEW_YN
				  	     FROM THRI215 A, THRI203 B, THRI219 C
				 	    WHERE 1 = 1
				 	      AND A.ENTER_CD       = #{ssnEnterCd}
				  	      AND A.SEARCH_SEQ	   = #{srchSeq}
				   	      AND A.COND_TYPE	   = #{srchCondType}
				   	      AND A.ENTER_CD	   = B.ENTER_CD(+)
				   	      AND A.SEARCH_ITEM_CD = B.SEARCH_ITEM_CD(+)
				   	      -- 개인별 조건항목
				   	      AND A.ENTER_CD       = C.ENTER_CD(+)
				   	      AND A.SEARCH_SEQ     = C.SEARCH_SEQ(+)
				   	      AND A.COLUMN_NM      = C.COLUMN_NM(+)
				   	      AND TRIM(#{ssnSabun})  = C.SABUN(+)
                  	ORDER BY SEQ
				]]>


		</select>
		<update parameterType="map" id="savePwrSrchAdminUser215">

   					MERGE INTO THRI215 TARGETTABLE
                  	USING (
               				SELECT    A.SEARCH_SEQ			AS SEARCH_SEQ	
               						, A.COLUMN_NM			AS COLUMN_NM	
                                	, A.SEARCH_ITEM_CD		AS SEARCH_ITEM_CD	
                                	, A.SEQ					AS SEQ				
                                	, A.COND_TYPE			AS COND_TYPE		
                                	, A.OPERATOR			AS OPERATOR		
                                	, A.INPUT_VALUE			AS INPUT_VALUE		
                                	, A.INPUT_VALUE_DESC	AS INPUT_VALUE_DESC
                                	, A.AND_OR				AS AND_OR			
                                	, A.VALUE_TYPE			AS VALUE_TYPE		
                     		FROM   (
                               		SELECT    NULL			AS SEARCH_SEQ	
                               				, NULL			AS COLUMN_NM		
                                			, NULL			AS SEARCH_ITEM_CD	
                                			, NULL			AS SEQ				
                                			, NULL			AS COND_TYPE		
                                			, NULL			AS OPERATOR		
                                			, NULL			AS INPUT_VALUE		
                                			, NULL			AS INPUT_VALUE_DESC
                                			, NULL			AS AND_OR			
                                			, NULL			AS VALUE_TYPE		
                                	FROM   DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
                  	UNION ALL
                                	SELECT   
                                			  TO_NUMBER(TRIM(#{rm.searchSeq}))	AS SEARCH_SEQ
                                			, TRIM(#{rm.columnNm})  		AS COLUMN_NM
                                			, TRIM(#{rm.searchItemCd})  	AS SEARCH_ITEM_CD
                                			, TRIM(#{rm.seq})  				AS SEQ
                                			, TRIM(#{rm.condType})  		AS COND_TYPE
                                      		, TRIM(#{rm.operator})  		AS OPERATOR
                                       		, TRIM(#{rm.inputValue})		AS INPUT_VALUE
                                       		, TRIM(#{rm.inputValueDesc})	AS INPUT_VALUE_DESC
                                       		, TRIM(#{rm.andOr})				AS AND_OR
                                       		, TRIM(#{rm.valueType})			AS VALUE_TYPE
                                	FROM   DUAL
</foreach>
									) A
							WHERE A.SEARCH_SEQ IS NOT NULL
							AND A.COLUMN_NM IS NOT NULL 
                           ) SOURCETABLE
                        ON (		TARGETTABLE.ENTER_CD		= #{ssnEnterCd}
                               	AND	TARGETTABLE.SEARCH_SEQ 		= SOURCETABLE.SEARCH_SEQ
                         		AND TARGETTABLE.COLUMN_NM 		= SOURCETABLE.COLUMN_NM
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    TARGETTABLE.SEARCH_ITEM_CD	= SOURCETABLE.SEARCH_ITEM_CD	
                        			, TARGETTABLE.SEQ				= SOURCETABLE.SEQ				
                                  	, TARGETTABLE.COND_TYPE			= SOURCETABLE.COND_TYPE			
                                  	, TARGETTABLE.OPERATOR			= SOURCETABLE.OPERATOR			
                                  	, TARGETTABLE.INPUT_VALUE		= SOURCETABLE.INPUT_VALUE		
                                  	, TARGETTABLE.INPUT_VALUE_DESC	= SOURCETABLE.INPUT_VALUE_DESC	
                                  	, TARGETTABLE.AND_OR			= SOURCETABLE.AND_OR			
                                  	, TARGETTABLE.VALUE_TYPE		= SOURCETABLE.VALUE_TYPE		
                                  	, TARGETTABLE.CHKDATE			= SYSDATE
                                  	, TARGETTABLE.CHKID				= #{ssnSabun}
      				WHEN NOT MATCHED THEN         		
               			INSERT
               			(
               				  TARGETTABLE.ENTER_CD				
               				, TARGETTABLE.SEARCH_SEQ			
                			, TARGETTABLE.COLUMN_NM		
                			, TARGETTABLE.SEARCH_ITEM_CD		
                          	, TARGETTABLE.SEQ							
                          	, TARGETTABLE.COND_TYPE				
                          	, TARGETTABLE.OPERATOR				
                          	, TARGETTABLE.INPUT_VALUE			
                          	, TARGETTABLE.INPUT_VALUE_DESC
                          	, TARGETTABLE.AND_OR					
                          	, TARGETTABLE.VALUE_TYPE			
                          	, TARGETTABLE.CHKDATE					
                          	, TARGETTABLE.CHKID						
               			) 
               			VALUES 
               			(
               				  #{ssnEnterCd}
               				, SOURCETABLE.SEARCH_SEQ	
               				, SOURCETABLE.COLUMN_NM		
               				, SOURCETABLE.SEARCH_ITEM_CD	
               				, SOURCETABLE.SEQ				
               				, SOURCETABLE.COND_TYPE		
               				, SOURCETABLE.OPERATOR		
               				, SOURCETABLE.INPUT_VALUE		
               				, SOURCETABLE.INPUT_VALUE_DESC
               				, SOURCETABLE.AND_OR			
               				, SOURCETABLE.VALUE_TYPE		
               				, SYSDATE
               				, #{ssnSabun}
               			)


		</update>
		
<!-- 개인별 조건항목 저장 2020.06.04 -->		
		<update parameterType="map" id="savePwrSrchAdminUser219">

   					MERGE INTO THRI219 T
                  	USING (
   
<foreach item="rm" collection="mergeRows" separator=" UNION ALL " >
                                	SELECT   #{ssnEnterCd}						AS ENTER_CD
                                			, TO_NUMBER(TRIM(#{rm.searchSeq}))	AS SEARCH_SEQ
                                			, #{ssnSabun}							AS SABUN
                                			, TRIM(#{rm.columnNm})  			AS COLUMN_NM
                                			, TRIM(#{rm.inputValue})			AS INPUT_VALUE
                                       		, TRIM(#{rm.inputValueDesc})		AS INPUT_VALUE_DESC
                                	FROM   DUAL

</foreach>
                           ) S
                        ON (		T.ENTER_CD		= S.ENTER_CD
                               	AND	T.SEARCH_SEQ 	= S.SEARCH_SEQ
                         		AND T.SABUN 		= S.SABUN
                         		AND T.COLUMN_NM 	= S.COLUMN_NM
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    T.INPUT_VALUE			= S.INPUT_VALUE		
                                  	, T.INPUT_VALUE_DESC	= S.INPUT_VALUE_DESC		
                                  	, T.CHKDATE				= SYSDATE
                                  	, T.CHKID				= #{ssnSabun}
      				WHEN NOT MATCHED THEN         		
               			INSERT
               			(
               				  T.ENTER_CD				
               				, T.SEARCH_SEQ			
                			, T.COLUMN_NM				
                			, T.SABUN			
                          	, T.INPUT_VALUE			
                          	, T.INPUT_VALUE_DESC			
                          	, T.CHKDATE					
                          	, T.CHKID						
               			) 
               			VALUES 
               			(
               				  #{ssnEnterCd}
               				, S.SEARCH_SEQ	
               				, S.COLUMN_NM		
               				, S.SABUN	
               				, S.INPUT_VALUE		
               				, S.INPUT_VALUE_DESC
               				, SYSDATE
               				, #{ssnSabun}
               			)


		</update>
		<select parameterType="map" resultType="cMap" id="getPwrSrchAdminUserDetail">

				<![CDATA[
   					SELECT 	  SEARCH_ITEM_CD
		   					, SEARCH_ITEM_NM
		   					, SEARCH_ITEM_DESC
		   					, ITEM_MAP_TYPE
		   					, PRG_URL
		   					, SQL_SYNTAX
				  	FROM THRI203
					WHERE 	ENTER_CD 		= #{ssnEnterCd}
				   	AND 	SEARCH_ITEM_CD	= #{searchItemCd}
				]]>


		</select>
		<update parameterType="map" id="updatePwrSrchAdminUserInit">

				<![CDATA[/* thri211 */
					UPDATE THRI201 SET 
						  ADMIN_SQL_SYNTAX = EMPTY_CLOB()
						, CHKDATE 		= SYSDATE
						, CHKID 		= #{ssnSabun}
					WHERE ENTER_CD = #{ssnEnterCd}
					AND SEARCH_SEQ = #{srchSeq}
				]]>


		</update>
		<select parameterType="map" resultType="cMap" id="getPwrSrchAdminUserSyntax">

				<![CDATA[/* thri211 */
					SELECT ADMIN_SQL_SYNTAX
					FROM THRI201
					WHERE ENTER_CD = #{ssnEnterCd}
					AND SEARCH_SEQ = #{srchSeq}
					FOR UPDATE
				]]>


		</select>
		<update parameterType="map" id="updatePwrSrchAdminUserSyntax">

				<![CDATA[/* thri211 */
					UPDATE THRI201 SET 
						  ADMIN_SQL_SYNTAX = #{adminSqlSyntax}
						, CHKDATE 		= SYSDATE
						, CHKID 		= #{ssnSabun}
					WHERE ENTER_CD = #{ssnEnterCd}
					AND SEARCH_SEQ = #{srchSeq}
				]]>


		</update>
		<update parameterType="map" id="updatePwrSrchAdminUserNormal">

				<![CDATA[/* thri211 */
					UPDATE THRI201 SET 
						  SQL_SYNTAX = #{SqlSyntax}
						, CHKDATE 		= SYSDATE
						, CHKID 		= #{ssnSabun}
					WHERE ENTER_CD = #{ssnEnterCd}
					AND SEARCH_SEQ = #{searchSeq}
				]]>


		</update>

</mapper>

