<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.loginMenu.loginMenuMgr">

		<select parameterType="map" resultType="cMap" id="getLoginMenuMgrGrpCdComboList">

				<![CDATA[
				SELECT GRP_CD AS CODE, NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys307', LANGUAGE_CD, #{ssnLocaleCd}), GRP_NM) AS CODE_NM
				  FROM TSYS307
				 WHERE ENTER_CD = #{ssnEnterCd}
				 ORDER BY SEQ
				]]>


		</select>
		
		<select parameterType="map" resultType="cMap" id="getLoginMenuMgrComboList">

				<![CDATA[
				SELECT MAIN_MENU_CD AS CODE, MAIN_MENU_NM AS CODE_NM
				  FROM TSYS309
				 WHERE USE_YN = '1'
				   AND ENTER_CD = #{ssnEnterCd}
				 ORDER BY SEQ
				]]>


		</select>
		
		<select parameterType="map" resultType="cMap" id="getLoginMenuMgrFirstList">

				<![CDATA[
				SELECT	A.ENTER_CD			/*	회사구분(TORG900)	*/
					,	A.GRP_CD			/*	그룹코드(TSYS307)	*/
					,	A.MENU_GRP_CD		/*	그룹코드(S90300)	*/	
					,	A.PRT_MENU_NM		/*	출력명			*/	
					,	A.IMG_PATH			/*	첨부파일순번		*/	
					,	A.IMG_PATH	AS	IMG
					,	A.ORDER_NO			/*	순서				*/	
					,	A.CHKDATE			/*	최종수정시간		*/	
					,	A.CHKID				/*	최종수정자			*/	
					,	A.LANGUAGE_CD
					,	F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys975', A.LANGUAGE_CD, #{ssnLocaleCd}) AS LANGUAGE_NM
				FROM	TSYS975	A
				WHERE	A.ENTER_CD		=	#{ssnEnterCd}
				AND		A.GRP_CD		=	#{searchGrpCd}
				ORDER	BY
						A.MENU_GRP_CD
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getLoginMenuMgrSecondList">

				<![CDATA[
				SELECT	A.ENTER_CD			/*	회사구분(TORG900)		*/
					,	A.GRP_CD			/*	그룹코드(TSYS307)		*/
					,	A.SEQ_NO			/*	메인메뉴코드(TSYS303)	*/
					,	A.MENU_GRP_CD		/*	그룹코드(S90300)		*/
					,	A.PRT_MENU_NM		/*	출력명				*/
					,	A.IMG_CLASS			/*	이미지클래스			*/
					,	'<p class="icon"><i class="' || A.IMG_CLASS	|| '"></i></p>' AS	IMG
					,	A.ORDER_NO			/*	순서					*/
					,	A.CHKDATE			/*	최종수정시간			*/
					,	A.CHKID				/*	최종수정자				*/
					,	A.LANGUAGE_CD
					,	F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys973', A.LANGUAGE_CD, #{ssnLocaleCd}) AS LANGUAGE_NM
				FROM	TSYS973	A
				WHERE	A.ENTER_CD		=	#{ssnEnterCd}
				AND		A.GRP_CD		=	#{searchGrpCd}
				ORDER	BY
						A.MENU_GRP_CD
					,	A.ORDER_NO
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getLoginMenuMgrThirdList">

				<![CDATA[
				SELECT	A.ENTER_CD				/*	회사구분(TORG900)		*/
					,	A.GRP_CD				/*	그룹코드(TSYS307)		*/
					,	A.SEQ_NO				/*	메인메뉴코드(TSYS303)	*/
					,	A.MENU_GRP_CD			/*	그룹코드(S90300)		*/
					,	A.PRG_CD				/*	메뉴코드				*/
					,	B.PRG_NM
					,	A.PRT_MENU_NM			/*	출력명				*/
					,	A.ORDER_NO				/*	순서					*/
					,	A.USE_YN				/*	사용여부				*/
					,	A.STR_YN				/*	강조표시여부			*/
					,	A.CHKDATE				/*	최종수정시간			*/
					,	A.CHKID					/*	최종수정자				*/
					,	A.LANGUAGE_CD
					,	F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys974', A.LANGUAGE_CD, #{ssnLocaleCd}) AS LANGUAGE_NM
				FROM	TSYS974	A
					,	TSYS301	B
				WHERE	A.PRG_CD		=	B.PRG_CD
				AND		A.ENTER_CD		=	#{ssnEnterCd}
				AND		A.GRP_CD		=	#{searchGrpCd}
				AND		A.SEQ_NO	=	#{searchSeqNo}
				AND		A.MENU_GRP_CD	=	#{searchMenuGrpCd}
				ORDER	BY
						A.ORDER_NO
				]]>


		</select>
		
		<update parameterType="map" id="saveLoginMenuMgrFirst">

						MERGE INTO TSYS975	T
						USING	
						(
									SELECT	ENTER_CD
										,	GRP_CD
										,	MENU_GRP_CD
										,	PRT_MENU_NM
										,	IMG_PATH
										,	ORDER_NO
										,	LANGUAGE_CD
										,	CHKDATE
										,	CHKID
							FROM	(
									SELECT	NULL		AS	ENTER_CD
										,	NULL		AS	GRP_CD
										,	NULL		AS	MENU_GRP_CD
										,	NULL		AS	PRT_MENU_NM
										,	NULL		AS	IMG_PATH
										,	NULL		AS	ORDER_NO
										,	NULL		AS	LANGUAGE_CD
										,	NULL		AS	CHKDATE
										,	NULL		AS	CHKID
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
								UNION ALL
									SELECT	TRIM(#{ssnEnterCd})				AS	ENTER_CD
										,	TRIM(#{rm.grpCd})				AS	GRP_CD
										,	TRIM(#{rm.menuGrpCd})				AS	MENU_GRP_CD
										,	TRIM(#{rm.prtMenuNm})				AS	PRT_MENU_NM
										,	TRIM(#{rm.imgPath})				AS	IMG_PATH
										,	TRIM(#{rm.orderNo})				AS	ORDER_NO
										,	TRIM(#{rm.languageCd})				AS	LANGUAGE_CD
										,	SYSDATE						AS	CHKDATE
										,	#{ssnSabun}						AS	CHKID
									FROM	DUAL
</foreach>
									)	WHERE	ENTER_CD IS NOT NULL
										AND	GRP_CD IS NOT NULL
										AND	MENU_GRP_CD IS NOT NULL
						) S
					ON	(
								T.ENTER_CD				=		S.ENTER_CD
							AND	T.GRP_CD				=		S.GRP_CD
							AND	T.MENU_GRP_CD				=		S.MENU_GRP_CD
						)
					WHEN MATCHED THEN 
					UPDATE SET	
							T.PRT_MENU_NM		=	S.PRT_MENU_NM
						,	T.IMG_PATH			=	S.IMG_PATH
						,	T.ORDER_NO			=	S.ORDER_NO
						,	T.LANGUAGE_CD		=	S.LANGUAGE_CD
						,	T.CHKDATE			=	S.CHKDATE
						,	T.CHKID				=	S.CHKID
					WHEN NOT MATCHED THEN
					INSERT
					( 
							T.ENTER_CD
						,	T.GRP_CD
						,	T.MENU_GRP_CD
						,	T.PRT_MENU_NM
						,	T.IMG_PATH
						,	T.ORDER_NO
						,	T.LANGUAGE_CD
						,	T.CHKDATE
						,	T.CHKID
					)
					VALUES
					(
							S.ENTER_CD
						,	S.GRP_CD
						,	S.MENU_GRP_CD
						,	S.PRT_MENU_NM
						,	S.IMG_PATH
						,	S.ORDER_NO
						,	S.LANGUAGE_CD
						,	S.CHKDATE
						,	S.CHKID
					)


		</update>

		<update parameterType="map" id="saveLoginMenuMgrSecond">

						MERGE INTO TSYS973	T
						USING	
						(
									SELECT	ENTER_CD
										,	GRP_CD
										,	SEQ_NO
										,	MENU_GRP_CD
										,	PRT_MENU_NM
										,	IMG_CLASS
										,	ORDER_NO
										,	LANGUAGE_CD
										,	CHKDATE
										,	CHKID
							FROM	(
									SELECT	NULL		AS	ENTER_CD
										,	NULL		AS	GRP_CD
										,	NULL		AS	SEQ_NO
										,	NULL		AS	MENU_GRP_CD
										,	NULL		AS	PRT_MENU_NM
										,	NULL		AS	IMG_CLASS
										,	NULL		AS	ORDER_NO
										,	NULL		AS	LANGUAGE_CD
										,	NULL		AS	CHKDATE
										,	NULL		AS	CHKID
									FROM	DUAL
<foreach item="rm" collection="mergeRows" index="idx">
								UNION ALL
									SELECT	TRIM(#{ssnEnterCd})				AS	ENTER_CD
										,	TRIM(#{rm.grpCd})				AS	GRP_CD
										--증가가 되는 키인경우 키가 공백이면 들어온 값을 삽입
										<choose><when test='rm.seqNo != null and !rm.seqNo.equals("")'>
										,	TRIM(#{rm.seqNo}) 			AS SEQ_NO
										--증가가 되는 키인경우 키가 공백이 아니면 증가된 값을 삽입
										</when><otherwise>
										,	TO_CHAR( (SELECT (NVL(MAX(TO_NUMBER(SEQ_NO)),0) + (${idx} + 1)) FROM TSYS973) )	AS SEQ_NO
										</otherwise>
										</choose>
										,	TRIM(#{rm.menuGrpCd})				AS	MENU_GRP_CD
										,	TRIM(#{rm.prtMenuNm})				AS	PRT_MENU_NM
										,	TRIM(#{rm.imgClass})				AS	IMG_CLASS
										,	TRIM(#{rm.orderNo})				AS	ORDER_NO
										,	TRIM(#{rm.languageCd})				AS	LANGUAGE_CD
										,	SYSDATE						AS	CHKDATE
										,	#{ssnSabun}						AS	CHKID
									FROM	DUAL
</foreach>
									)	WHERE	ENTER_CD IS NOT NULL
										AND	GRP_CD IS NOT NULL
										AND	SEQ_NO IS NOT NULL
										AND	MENU_GRP_CD IS NOT NULL
						) S
					ON	(
								T.ENTER_CD				=		S.ENTER_CD
							AND	T.GRP_CD				=		S.GRP_CD
							AND	T.SEQ_NO				=		S.SEQ_NO
							AND	T.MENU_GRP_CD				=		S.MENU_GRP_CD
						)
					WHEN MATCHED THEN 
					UPDATE SET	
							T.PRT_MENU_NM			=	S.PRT_MENU_NM
						,	T.IMG_CLASS			=	S.IMG_CLASS
						,	T.ORDER_NO			=	S.ORDER_NO
						,	T.LANGUAGE_CD			=	S.LANGUAGE_CD
						,	T.CHKDATE			=	S.CHKDATE
						,	T.CHKID			=	S.CHKID
					WHEN NOT MATCHED THEN
					INSERT
					( 
							T.ENTER_CD
						,	T.GRP_CD
						,	T.SEQ_NO
						,	T.MENU_GRP_CD
						,	T.PRT_MENU_NM
						,	T.IMG_CLASS
						,	T.ORDER_NO
						,	T.LANGUAGE_CD
						,	T.CHKDATE
						,	T.CHKID
					)
					VALUES
					(
							S.ENTER_CD
						,	S.GRP_CD
						,	S.SEQ_NO
						,	S.MENU_GRP_CD
						,	S.PRT_MENU_NM
						,	S.IMG_CLASS
						,	S.ORDER_NO
						,	S.LANGUAGE_CD
						,	S.CHKDATE
						,	S.CHKID
					)



		</update>

		<update parameterType="map" id="saveLoginMenuMgrThird">

						MERGE INTO TSYS974	T
						USING	
						(
									SELECT	ENTER_CD
										,	GRP_CD
										,	SEQ_NO
										,	MENU_GRP_CD
										,	PRG_CD
										,	PRT_MENU_NM
										,	ORDER_NO
										,	USE_YN
										,	STR_YN
										,	MAIN_MENU_CD
										,	LANGUAGE_CD
										,	CHKDATE
										,	CHKID
							FROM	(
									SELECT	NULL		AS	ENTER_CD
										,	NULL		AS	GRP_CD
										,	NULL		AS	SEQ_NO
										,	NULL		AS	MENU_GRP_CD
										,	NULL		AS	PRG_CD
										,	NULL		AS	PRT_MENU_NM
										,	NULL		AS	ORDER_NO
										,	NULL		AS	USE_YN
										,	NULL		AS	STR_YN
										,	NULL		AS	MAIN_MENU_CD
										,	NULL		AS	LANGUAGE_CD
										,	NULL		AS	CHKDATE
										,	NULL		AS	CHKID
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
								UNION ALL
									SELECT	TRIM(#{ssnEnterCd})				AS	ENTER_CD
										,	TRIM(#{rm.grpCd})				AS	GRP_CD
										,	TRIM(#{rm.seqNo})				AS	SEQ_NO
										,	TRIM(#{rm.menuGrpCd})				AS	MENU_GRP_CD
										,	TRIM(#{rm.prgCd})				AS	PRG_CD
										,	TRIM(#{rm.prtMenuNm})				AS	PRT_MENU_NM
										,	TRIM(#{rm.orderNo})				AS	ORDER_NO
										,	NVL(TRIM(#{rm.useYn}),'N')		AS	USE_YN
										,	NVL(TRIM(#{rm.strYn}),'N')		AS	STR_YN
										,	TRIM(#{rm.mainMenuCd})				AS	MAIN_MENU_CD
										,	TRIM(#{rm.languageCd})				AS	LANGUAGE_CD
										,	SYSDATE						AS	CHKDATE
										,	#{ssnSabun}						AS	CHKID
									FROM	DUAL
</foreach>
									)	WHERE	ENTER_CD IS NOT NULL
										AND	GRP_CD IS NOT NULL
										AND	SEQ_NO IS NOT NULL
										AND	MENU_GRP_CD IS NOT NULL
										AND	PRG_CD IS NOT NULL
						) S
					ON	(
								T.ENTER_CD				=		S.ENTER_CD
							AND	T.GRP_CD				=		S.GRP_CD
							AND	T.SEQ_NO				=		S.SEQ_NO
							AND	T.MENU_GRP_CD				=		S.MENU_GRP_CD
							AND	T.PRG_CD				=		S.PRG_CD
						)
					WHEN MATCHED THEN 
					UPDATE SET	
							T.PRT_MENU_NM			=	S.PRT_MENU_NM
						,	T.ORDER_NO			=	S.ORDER_NO
						,	T.USE_YN			=	S.USE_YN
						,	T.STR_YN			=	S.STR_YN
						,	T.MAIN_MENU_CD			=	S.MAIN_MENU_CD
						,	T.LANGUAGE_CD			=	S.LANGUAGE_CD
						,	T.CHKDATE			=	S.CHKDATE
						,	T.CHKID			=	S.CHKID
					WHEN NOT MATCHED THEN
					INSERT
					( 
							T.ENTER_CD
						,	T.GRP_CD
						,	T.SEQ_NO
						,	T.MENU_GRP_CD
						,	T.PRG_CD
						,	T.PRT_MENU_NM
						,	T.ORDER_NO
						,	T.USE_YN
						,	T.STR_YN
						,	T.MAIN_MENU_CD
						,	T.LANGUAGE_CD
						,	T.CHKDATE
						,	T.CHKID
					)
					VALUES
					(
							S.ENTER_CD
						,	S.GRP_CD
						,	S.SEQ_NO
						,	S.MENU_GRP_CD
						,	S.PRG_CD
						,	S.PRT_MENU_NM
						,	S.ORDER_NO
						,	S.USE_YN
						,	S.STR_YN
						,	S.MAIN_MENU_CD
						,	S.LANGUAGE_CD
						,	S.CHKDATE
						,	S.CHKID
					)
		</update>
		
		<delete parameterType="map" id="deleteLoginMenuMgrFirstFirst">

					DELETE	FROM TSYS975
					WHERE	(ENTER_CD, GRP_CD, MENU_GRP_CD) IN ((NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.grpCd != null and !rm.grpCd.equals("")'>
										<if test='rm.menuGrpCd != null and !rm.menuGrpCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.grpCd} ) , TRIM( #{rm.menuGrpCd} ) )
										</if>
										</if>
										</if>
</foreach>
										)
		</delete>
		
		<delete parameterType="map" id="deleteLoginMenuMgrFirstSecond">

					DELETE	FROM TSYS973
					WHERE	(ENTER_CD, GRP_CD, MENU_GRP_CD) IN ((NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.grpCd != null and !rm.grpCd.equals("")'>
										<if test='rm.menuGrpCd != null and !rm.menuGrpCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.grpCd} ) , TRIM( #{rm.menuGrpCd} ) )
										</if>
										</if>
										</if>
</foreach>
										)
		</delete>
		
		<delete parameterType="map" id="deleteLoginMenuMgrFirstThird">


					DELETE	FROM TSYS974
					WHERE	(ENTER_CD, GRP_CD, MENU_GRP_CD) IN ((NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.grpCd != null and !rm.grpCd.equals("")'>
										<if test='rm.menuGrpCd != null and !rm.menuGrpCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.grpCd} ) , TRIM( #{rm.menuGrpCd} ) )
										</if>
										</if>
										</if>
</foreach>

										)
		</delete>

		<delete parameterType="map" id="deleteLoginMenuMgrSecondFirst">


					DELETE	FROM TSYS973
					WHERE	(ENTER_CD, GRP_CD, SEQ_NO, MENU_GRP_CD) IN ((NULL, NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.grpCd != null and !rm.grpCd.equals("")'>
										<if test='rm.seqNo != null and !rm.seqNo.equals("")'>
										<if test='rm.menuGrpCd != null and !rm.menuGrpCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.grpCd} ) , TRIM( #{rm.seqNo} ) , TRIM( #{rm.menuGrpCd} ) )
										</if>
										</if>
										</if>
										</if>
</foreach>

										)
		</delete>

		<delete parameterType="map" id="deleteLoginMenuMgrSecondSecond">


					DELETE	FROM TSYS974
					WHERE	(ENTER_CD, GRP_CD, SEQ_NO, MENU_GRP_CD) IN ((NULL, NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.grpCd != null and !rm.grpCd.equals("")'>
										<if test='rm.seqNo != null and !rm.seqNo.equals("")'>
										<if test='rm.menuGrpCd != null and !rm.menuGrpCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.grpCd} ) , TRIM( #{rm.seqNo} ) , TRIM( #{rm.menuGrpCd} ) )
										</if>
										</if>
										</if>
										</if>
</foreach>

										)
		</delete>

		<delete parameterType="map" id="deleteLoginMenuMgrThird">


					DELETE	FROM TSYS974
					WHERE	(ENTER_CD, GRP_CD, SEQ_NO, MENU_GRP_CD, PRG_CD) IN ((NULL, NULL, NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.grpCd != null and !rm.grpCd.equals("")'>
										<if test='rm.seqNo != null and !rm.seqNo.equals("")'>
										<if test='rm.menuGrpCd != null and !rm.menuGrpCd.equals("")'>
										<if test='rm.prgCd != null and !rm.prgCd.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.grpCd} ) , TRIM( #{rm.seqNo} ) , TRIM( #{rm.menuGrpCd} ) , TRIM( #{rm.prgCd} ) )
										</if>
										</if>
										</if>
										</if>
										</if>
</foreach>

										)
		</delete>
		
		<!-- 메뉴관리 메인세부그룹 상세 그룹기준 삭제 -->
		<delete parameterType="map" id="deleteLoginMenuMgrAllThird">


					DELETE	FROM TSYS974
					WHERE	(ENTER_CD, GRP_CD) IN (
								(NULL, NULL)
<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
<if test='oldGrpCd != null and !oldGrpCd.equals("")'>
								,( TRIM( #{ssnEnterCd} ) , TRIM( #{tarGrpCd} ) )
</if>
</if>

							)


		</delete>
		
		<!-- 메뉴관리 메인세부그룹 마스터 그룹기준 삭제 -->
		<delete parameterType="map" id="deleteLoginMenuMgrAllSecond">


					DELETE	FROM TSYS973
					WHERE	(ENTER_CD, GRP_CD) IN (
								(NULL, NULL)
<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
<if test='oldGrpCd != null and !oldGrpCd.equals("")'>
								,( TRIM( #{ssnEnterCd} ) , TRIM( #{tarGrpCd} ) )
</if>
</if>
							)
		</delete>
		
		<!-- 메뉴관리 메인그룹관리 그룹기준 삭제 -->
		<delete parameterType="map" id="deleteLoginMenuMgrAllFirst">


					DELETE	FROM TSYS975
					WHERE	(ENTER_CD, GRP_CD) IN (
								(NULL, NULL)
<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
<if test='oldGrpCd != null and !oldGrpCd.equals("")'>
								,( TRIM( #{ssnEnterCd} ) , TRIM( #{tarGrpCd} ) )
</if>
</if>

							)
		</delete>
		
		<!-- 메뉴관리 메인그룹관리 그룹간 전체 복사 -->
		<insert parameterType="map" id="copyLoginMenuMgrAllFirst">

				<![CDATA[
					INSERT INTO TSYS975
					(
						  ENTER_CD
						, GRP_CD
						, MENU_GRP_CD
						, PRT_MENU_NM
						, IMG_PATH
						, LANGUAGE_CD
						, ORDER_NO
						, CHKID
					)
					SELECT 
						  ENTER_CD
						, TRIM( #{tarGrpCd} )
						, MENU_GRP_CD
						, PRT_MENU_NM
						, IMG_PATH
						, LANGUAGE_CD
						, ORDER_NO
						, #{ssnSabun}
					  FROM TSYS975
					 WHERE ENTER_CD  = #{ssnEnterCd}
					   AND GRP_CD    = TRIM( #{oldGrpCd} )
				]]>


		</insert>
		
		<!-- 메뉴관리 메인세부그룹 마스터 그룹간 전체 복사 -->
		<insert parameterType="map" id="copyLoginMenuMgrAllSecond">

				<![CDATA[
					INSERT INTO TSYS973
					(
						  ENTER_CD
						, GRP_CD
						, SEQ_NO
						, MENU_GRP_CD
						, PRT_MENU_NM
						, IMG_CLASS
						, LANGUAGE_CD
						, ORDER_NO
						, CHKID
					)
					SELECT 
						  ENTER_CD
						, TRIM( #{tarGrpCd} )
						, SEQ_NO
						, MENU_GRP_CD
						, PRT_MENU_NM
						, IMG_CLASS
						, LANGUAGE_CD
						, ORDER_NO
						, #{ssnSabun}
					  FROM TSYS973
					 WHERE ENTER_CD  = #{ssnEnterCd}
					   AND GRP_CD    = TRIM( #{oldGrpCd} )
				]]>


		</insert>
		
		<!-- 메뉴관리 메인세부그룹 상세 그룹간 전체 복사 -->
		<insert parameterType="map" id="copyLoginMenuMgrAllThird">

				<![CDATA[
					INSERT INTO TSYS974
					(
						  ENTER_CD
						, GRP_CD
						, SEQ_NO
						, MENU_GRP_CD
						, PRG_CD
						, PRT_MENU_NM
						, ORDER_NO
						, USE_YN
						, STR_YN
						, MAIN_MENU_CD
						, LANGUAGE_CD
						, CHKID
					)
					SELECT 
						  ENTER_CD
						, TRIM( #{tarGrpCd} )
						, SEQ_NO
						, MENU_GRP_CD
						, PRG_CD
						, PRT_MENU_NM
						, ORDER_NO
						, USE_YN
						, STR_YN
						, MAIN_MENU_CD
						, LANGUAGE_CD
						, #{ssnSabun}
					  FROM TSYS974
					 WHERE ENTER_CD  = #{ssnEnterCd}
					   AND GRP_CD    = TRIM( #{oldGrpCd} )
				]]>


		</insert>

</mapper>