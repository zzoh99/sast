<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.system.requirement.reqDefinitionPop">
		<update parameterType="map" id="saveReqDefinitionPop">


						MERGE INTO TSYS799	T
						USING
						(
									SELECT	TRIM(#{ssnEnterCd})				AS	ENTER_CD
										,	TRIM(#{mainMenuCd})				AS	MAIN_MENU_CD
										,	TRIM(#{priorMenuCd})				AS	PRIOR_MENU_CD
										,	TRIM(#{menuCd})				AS	MENU_CD
										,	TRIM(#{menuSeq})				AS	MENU_SEQ
										,	TRIM(#{grpCd})				AS	GRP_CD
										,	TO_CHAR( (SELECT (NVL(MAX(TO_NUMBER(SEQ_NO)),0) + 1) FROM TSYS799) )	AS SEQ_NO
										,	(	SELECT	MENU_NM
												FROM	TSYS303
												WHERE	ENTER_CD		=	#{ssnEnterCd}
												AND		MAIN_MENU_CD	=	#{mainMenuCd}
												AND		PRIOR_MENU_CD	=	#{priorMenuCd}
												AND		MENU_CD			=	#{menuCd}
												AND		MENU_SEQ		=	#{menuSeq}
											)	AS	MENU_NM
										,	TRIM(#{prgCd})						AS	PRG_CD
										,	TRIM(#{regName})						AS	REG_NAME
										,	REPLACE( TRIM(#{regYmd}), '-', '')	AS	REG_YMD
										,	TRIM(#{regNote})						AS	REG_NOTE
										,	TRIM(#{searchRegCd})					AS	REG_SEC_CD
										,	TRIM(#{proName})						AS	PRO_NAME
										,	TRIM(#{proYmd})						AS	PRO_YMD
										,	TRIM(#{proNote})						AS	PRO_NOTE
										,	TRIM(#{proSecCd})						AS	PRO_SEC_CD
										,	SYSDATE								AS	CHKDATE
										,	#{ssnSabun}							AS	CHKID
										, 	#{fileSeq}							AS FILE_SEQ
									FROM	DUAL
						) S
					ON	(
								T.ENTER_CD				=		S.ENTER_CD
							AND	T.MAIN_MENU_CD				=		S.MAIN_MENU_CD
							AND	T.PRIOR_MENU_CD				=		S.PRIOR_MENU_CD
							AND	T.MENU_CD				=		S.MENU_CD
							AND	T.MENU_SEQ				=		S.MENU_SEQ
							AND	T.GRP_CD				=		S.GRP_CD
							AND	T.SEQ_NO				=		S.SEQ_NO
						)
					WHEN MATCHED THEN
					UPDATE SET
							T.MENU_NM			=	S.MENU_NM
						,	T.PRG_CD			=	S.PRG_CD
						,	T.REG_NAME			=	S.REG_NAME
						,	T.REG_YMD			=	S.REG_YMD
						,	T.REG_NOTE			=	S.REG_NOTE
						,	T.REG_SEC_CD			=	S.REG_SEC_CD
						,	T.PRO_NAME			=	S.PRO_NAME
						,	T.PRO_YMD			=	S.PRO_YMD
						,	T.PRO_NOTE			=	S.PRO_NOTE
						,	T.PRO_SEC_CD			=	S.PRO_SEC_CD
						,	T.CHKDATE			=	S.CHKDATE
						,	T.CHKID			=	S.CHKID
						,	T.FILE_SEQ		=	S.FILE_SEQ
					WHEN NOT MATCHED THEN
					INSERT
					(
							T.ENTER_CD
						,	T.MAIN_MENU_CD
						,	T.PRIOR_MENU_CD
						,	T.MENU_CD
						,	T.MENU_SEQ
						,	T.GRP_CD
						,	T.SEQ_NO
						,	T.MENU_NM
						,	T.PRG_CD
						,	T.REG_NAME
						,	T.REG_YMD
						,	T.REG_NOTE
						,	T.REG_SEC_CD
						,	T.PRO_NAME
						,	T.PRO_YMD
						,	T.PRO_NOTE
						,	T.PRO_SEC_CD
						,	T.CHKDATE
						,	T.CHKID
						,	T.FILE_SEQ
					)
					VALUES
					(
							S.ENTER_CD
						,	S.MAIN_MENU_CD
						,	S.PRIOR_MENU_CD
						,	S.MENU_CD
						,	S.MENU_SEQ
						,	S.GRP_CD
						,	S.SEQ_NO
						,	S.MENU_NM
						,	S.PRG_CD
						,	S.REG_NAME
						,	S.REG_YMD
						,	S.REG_NOTE
						,	S.REG_SEC_CD
						,	S.PRO_NAME
						,	S.PRO_YMD
						,	S.PRO_NOTE
						,	S.PRO_SEC_CD
						,	S.CHKDATE
						,	S.CHKID
						,	S.FILE_SEQ
					)
		</update>

</mapper>