<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="sys.system.processMapMgr">



<!-- 		프로세스맵 관리 메인화면 조회- 권한그룹코드 조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessMapMgrAuthGrpList">
				<![CDATA[
					SELECT GRP_CD 
                         , GRP_NM 
                      FROM TSYS307
                     WHERE ENTER_CD = #{ssnEnterCd}
                     ORDER BY SEQ			 
				]]>
		</select>


<!-- 		프로세스맵 관리 메인화면 조회- 메인메뉴 목록조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessMapMgrMainMenuList">
				<![CDATA[
					SELECT MAIN_MENU_CD 
					     , MAIN_MENU_NM 
					     , SEQ
					     , PROCESS_ICON_CLASS AS ICON
					FROM TSYS309
					WHERE ENTER_CD = #{ssnEnterCd}
					AND USE_YN ='1'
					ORDER BY SEQ		 
				]]>
		</select>

<!-- 		프로세스맵 관리 메인화면 조회- 메인메뉴에 해당하는 프로세스맵 목록조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessMapMgrMainMenuChildrenList">
				<![CDATA[
                   SELECT A.PROC_MAP_SEQ 
                        , A.MAIN_MENU_CD 
                        , A.STATUS 
                        , A.PROC_MAP_NM 
                        , A.FAVORITE_YN
                        , A.GRP_CD
                        , B.GRP_NM 
                        , A.SEQ
                        , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
                    FROM PSMT001 A
                    JOIN TSYS307 B
                      ON A.GRP_CD = B.GRP_CD
                     AND A.ENTER_CD = B.ENTER_CD 
				   WHERE A.ENTER_CD = #{ssnEnterCd}
					 AND A.MAIN_MENU_CD = #{mainMenuCd}
				]]>	
				<if test='isFavoriteCheck != null and isFavoriteCheck.equals("Y")'>
						   AND A.STATUS ='Y'
				</if>
				<if test='grpCd != null and !grpCd.equals("")'>
						   AND A.GRP_CD = #{grpCd}
				</if>
				<![CDATA[
				ORDER BY A.PROC_MAP_NM
				]]>	
		</select>
		
		
	<!-- 		프로세스맵 관리 메인화면 조회- (모달)즐겨찾기 목록조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessMapMgrMainMenuFavoriteList">
				<![CDATA[
                   SELECT A.PROC_MAP_SEQ 
                        , A.MAIN_MENU_CD 
                        , A.STATUS 
                        , A.PROC_MAP_NM 
                        , A.FAVORITE_YN
                        , A.GRP_CD
                        , B.GRP_NM 
                        , A.SEQ
                        , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
                     FROM PSMT001 A
                     JOIN TSYS307 B
                       ON A.GRP_CD = B.GRP_CD
                      AND A.ENTER_CD = B.ENTER_CD
                    WHERE A.ENTER_CD = #{ssnEnterCd}
                      AND A.FAVORITE_YN = 'Y'
                      AND A.STATUS = 'Y'
				]]>
				<if test='grpCd != null and !grpCd.equals("")'>
                      AND A.GRP_CD = #{grpCd}
				</if>
				<![CDATA[
				ORDER BY A.PROC_MAP_NM
				]]>						
		</select>
		
		
		
		
<!-- 	프로세스맵 관리 메인화면- (모달)프로세스맵 즐겨찾기 수정/저장 하기 전 사전 작업으로 해당 EnterCd, GrpCd의 즐겨찾기 N으로 업데이트-->	
		<update parameterType="map" id="savePreUpdateProcessMapFavorite">
               UPDATE PSMT001
                  SET FAVORITE_YN ='N'
                           ,CHKID = #{ssnSabun}
                         ,CHKDATE = SYSDATE
                WHERE FAVORITE_YN ='Y'
                  AND ENTER_CD = #{ssnEnterCd}
                  AND GRP_CD = #{grpCd}
		</update>		
				
		
		
		
		
<!-- 	프로세스맵 관리 메인화면- (모달)프로세스맵 즐겨찾기 수정/저장 -->	
		<update parameterType="map" id="saveProcessMapFavorite">
               UPDATE PSMT001
                  SET FAVORITE_YN ='Y'
                           ,CHKID = #{ssnSabun}
                         ,CHKDATE = SYSDATE
                WHERE PROC_MAP_SEQ IN
           	<foreach item="processMapSeq" index='index' open='(' close=')' separator=',' collection="favoriteProcMapSeqList">
                        TRIM(#{processMapSeq})
            </foreach>
                  AND ENTER_CD = #{ssnEnterCd}
                  AND GRP_CD = #{grpCd}
		</update>		
		


<!-- 		프로세스맵 생성 시, ID(SEQUENCE)채번 하기 -->
		<select parameterType="map" resultType="cMap" id="getProcessMapNewId">
				<![CDATA[
                   SELECT PROCESS_MAP_SEQ.NEXTVAL AS NEW_PROC_ID
                     FROM DUAL		 
				]]>
		</select>		



<!-- 		프로세스맵 뷰어 화면, 프로세스맵 기초데이터 조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessMapSeqInfo">
                <![CDATA[
                   SELECT A.ENTER_CD 
                        , A.MAIN_MENU_CD
                        , B.MAIN_MENU_NM 
                        , A.STATUS 
                        , A.PROC_MAP_NM 
                        , A.PROC_MAP_SEQ 
                        , A.FAVORITE_YN 
                        , A.GRP_CD
                        , C.GRP_NM
                    FROM PSMT001 A
                    JOIN TSYS309 B
                      ON A.MAIN_MENU_CD = B.MAIN_MENU_CD 
                     AND A.ENTER_CD = B.ENTER_CD 
                    JOIN TSYS307 C
                      ON C.GRP_CD = A.GRP_CD 
                     AND C.ENTER_CD = A.ENTER_CD 
                   WHERE A.PROC_MAP_SEQ = #{procMapSeq}
				]]>
		</select>	



<!-- 		프로세스맵 생성 시, 왼쪽 메인메뉴 및 하위 메뉴 목록 조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessMapMenuList">
                <![CDATA[
                 SELECT T1.*
                 	  , CASE WHEN EXISTS (
							     	   SELECT 1
					                     FROM PSMT002 K
					                     JOIN TSYS303 Q
					                       ON K.MAIN_MENU_CD = Q.MAIN_MENU_CD
					                      AND K.MENU_CD = Q.MENU_CD 
					                    WHERE K.PROC_MAP_SEQ = #{procMapSeq}
					                      AND Q.ENTER_CD = #{ssnEnterCd}
					                      AND T1.ENTER_CD = K.ENTER_CD 
					                      AND T1.MAIN_MENU_CD = K.MAIN_MENU_CD 
					                      AND T1.MENU_CD = K.MENU_CD 
					                      AND T1.PRIOR_MENU_CD = K.PRIOR_MENU_CD
					                      AND K.ACTIVE_YN ='Y'
				     	                ) THEN 'Y'
				                          ELSE 'N'
				                        END AS CHECKED_YN
                  FROM (
                     SELECT LEVEL AS "_level"
                          , ROWNUM AS rnum
                          , AA.*
                      FROM (    SELECT A.ENTER_CD
                                     , A.MAIN_MENU_CD
                                     , A.PRIOR_MENU_CD
                                     , A.MENU_CD
                                     , nvl(B.MENU_NM, A.MENU_NM) AS MENU_NM
                                     , A.TYPE
                                     , NVL(B.SEQ, A.SEQ) AS SEQ
                                     , NVL(B.GRP_CD , #{grpCd} ) AS GRP_CD
                                 FROM TSYS303 A, TSYS311 B
                                WHERE A.ENTER_CD = #{ssnEnterCd}
                                  AND A.ENTER_CD = B.ENTER_CD(+)
                                  AND A.MAIN_MENU_CD = B.MAIN_MENU_CD(+)
                                  AND A.PRIOR_MENU_CD = B.PRIOR_MENU_CD(+)
                                  AND A.MENU_CD = B.MENU_CD(+)
                                  AND A.MENU_SEQ = B.MENU_SEQ(+)
                                  AND B.GRP_CD(+) = #{grpCd}
                                  AND A.MAIN_MENU_CD = #{mainMenuCd}
                                  AND B.USE_YN = '1'
                                  AND A.TYPE != 'T'
                                  )AA
                     WHERE 1=1
                     START WITH AA.PRIOR_MENU_CD = '0'
                     CONNECT BY PRIOR AA.ENTER_CD = AA.ENTER_CD
                     AND PRIOR AA.MAIN_MENU_CD = AA.MAIN_MENU_CD
                     AND PRIOR AA.MENU_CD = AA.PRIOR_MENU_CD
                     ORDER SIBLINGS BY AA.SEQ) T1
               ORDER BY RNUM
				]]>
		</select>	



<!-- 		프로세스맵에 해당하는 프로세스 목록 조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessList">
                <![CDATA[
                   SELECT A.PROC_SEQ
                        , C.PROC_MAP_NM
                        , A.PROC_MAP_SEQ 
                        , A.PROC_NM
                        , A.ENTER_CD 
                        , A.MAIN_MENU_CD 
                        , A.PRIOR_MENU_CD 
                        , A.MENU_CD
                        , A.MENU_SEQ
                        , A.SEQ
                        , A.HELP_TXT_TITLE 
                        , A.HELP_TXT_CONTENT 
                        , A.MEMO 
                        , A.FILE_SEQ
                        , B.PRG_CD AS PRG_PATH
                        , C.GRP_CD
                     FROM PSMT002 A
                     JOIN TSYS303 B
                       ON A.MAIN_MENU_CD = B.MAIN_MENU_CD
                      AND A.MENU_CD = B.MENU_CD
					  AND A.ENTER_CD = B.ENTER_CD
                     JOIN PSMT001 C
                       ON C.PROC_MAP_SEQ = A.PROC_MAP_SEQ
                      AND C.ENTER_CD = A.ENTER_CD
                      -- AND C.MAIN_MENU_CD = A.MAIN_MENU_CD
                    WHERE A.PROC_MAP_SEQ = #{procMapSeq}
                      AND B.ENTER_CD = #{ssnEnterCd}
                      AND A.ACTIVE_YN='Y'
                    ORDER BY A.SEQ
				]]>
		</select>
		
		
		
		
		
		
		

<!-- 		프로세스맵에 해당하는 프로세스 목록 조회 -->
		<select parameterType="map" resultType="cMap" id="getMenuLocationList">
        <![CDATA[
            SELECT DM.*
				 , ISU_BLOCK_ENCRYPT('{"subGrpCd":"'||GRP_CD||'","mainMenuCd":"'|| MAIN_MENU_CD ||'"}', #{ssnEncodedKey}) AS MURL
                 , MAIN_MENU_CD || PRIOR_MENU_CD || MENU_CD || MENU_SEQ || GRP_CD AS MENU_ID
			     , REPLACE(REPLACE(
			           ISU_BLOCK_ENCRYPT('{
			               "url": "'||PRG_CD||'"
			              ,"dataPrgType":"'||DATA_PRG_TYPE||'"
			              ,"dataRwType":"'||DATA_RW_TYPE||'"
			              ,"cnt":"'||CNT||'"
			              ,"mainMenuCd":"'||MAIN_MENU_CD||'"
			              ,"priorMenuCd":"'||PRIOR_MENU_CD||'"
			              ,"type":"'||TYPE||'"
			              ,"menuCd":"'||MENU_CD||'"
			              ,"menuSeq":"'||MENU_SEQ||'"
			              ,"grpCd":"'||GRP_CD||'"
			              ,"prgCd":"'||PRG_CD||'"
			              ,"srchSeq":"'||SRCH_SEQ||'"
			              ,"popupUseYn":"'||POPUP_USE_YN||'"
			              ,"helpUseYn":"'||HELP_USE_YN||'"
			              ,"myMenu":"'||MY_MENU||'"
			              ,"searchUseYn":"'||SEARCH_USE_YN||'"
			              ,"applCd":"'||APPL_CD||'"
			              }', #{ssnEncodedKey})
			       , CHR(13), ''), CHR(10), '') AS SURL
			  FROM (
			        SELECT LEVEL AS LVL
			             , A.MAIN_MENU_CD
			             , A.PRIOR_MENU_CD
			             , A.MENU_CD
			             , A.MENU_SEQ
			             , A.GRP_CD
			             , A.TYPE
			             , CASE WHEN NVL(#{ssnLocaleCd},'') = '' THEN A.MENU_NM
			                    ELSE NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, DECODE(A.LANGUAGE_CD, NULL, 'tsys303', 'tsys311'), NVL(A.LANGUAGE_CD,C.LANGUAGE_CD), #{ssnLocaleCd}), A.MENU_NM)
			                END AS MENU_NM
			             , C.PRG_CD
			             , NVL(C.SEARCH_SEQ, '') AS SRCH_SEQ
			             , A.DATA_RW_TYPE
			             , A.DATA_PRG_TYPE
			             , A.SEQ
			             , A.CNT
			             , A.USE_YN
			             , A.INQ_S_YMD
			             , A.INQ_E_YMD
			             , (SELECT NVL(F_COM_GET_LANGUAGE_MAPPING(ENTER_CD,'tsys309',LANGUAGE_CD,#{ssnLocaleCd}),MAIN_MENU_NM) AS MAIN_MENU_NM
			                  FROM TSYS309
			                 WHERE MAIN_MENU_CD = A.MAIN_MENU_CD
			                   AND ENTER_CD	=	#{ssnEnterCd}
			                   AND USE_YN = '1') AS MAIN_MENU_NM
			             , POPUP_USE_YN
			             , LAST_SESSION_USE_YN
			             , SEARCH_USE_YN
			             , CASE WHEN INSTR(NVL(H.MGR_HELP_YN, 'N')||NVL(H.EMP_HELP_YN, 'N'), 'Y') > 0 THEN '1' ELSE '0' END AS HELP_USE_YN
			             , DECODE((SELECT 'Y'
			                         FROM TSYS331 D
			                        WHERE D.ENTER_CD = A.ENTER_CD
			                          AND D.MENU_SEQ = A.MENU_SEQ
			                          AND D.PRIOR_MENU_CD = A.PRIOR_MENU_CD
			                          AND D.MENU_CD       = A.MENU_CD
			                          AND D.MAIN_MENU_CD  = A.MAIN_MENU_CD
			                          AND D.GRP_CD = A.GRP_CD
			                          AND D.SABUN  = #{ssnSabun}
			                          AND D.GRP_CD = #{procGrpCd}
			                          AND ROWNUM = 1 ),NULL, 'N','Y') AS MY_MENU
			             , CASE WHEN A.AUTH_SEARCH_SEQ IS NOT NULL THEN F_COM_GET_SEARCH_YN(A.ENTER_CD, #{ssnSabun}, A.AUTH_SEARCH_SEQ, TO_CHAR(sysdate,'YYYYMMDD') ) ELSE 1 END AS AUTH_YN
			             , C.APPL_CD
			          FROM TSYS311 A
			             , TSYS303 C
			             , TSYS395 H
			         WHERE A.ENTER_CD      = C.ENTER_CD
			           AND A.MENU_SEQ      = C.MENU_SEQ
			           AND A.PRIOR_MENU_CD = C.PRIOR_MENU_CD
			           AND A.MENU_CD       = C.MENU_CD
			           AND A.MAIN_MENU_CD  = C.MAIN_MENU_CD
			           AND C.ENTER_CD      = H.ENTER_CD(+)
			           AND C.PRG_CD        = H.PRG_CD(+)
			           AND A.USE_YN = '1'
			           AND A.TYPE <> 'T'
			         START WITH A.PRIOR_MENU_CD = '0'
			                AND A.ENTER_CD      =  #{ssnEnterCd}
			                AND A.MAIN_MENU_CD  =  #{procMainMenuCd}
			                AND A.GRP_CD        =  #{procGrpCd}
			        CONNECT BY PRIOR A.ENTER_CD  = A.ENTER_CD
			               AND PRIOR A.MAIN_MENU_CD = A.MAIN_MENU_CD
			               AND PRIOR A.GRP_CD       = A.GRP_CD
			               AND PRIOR A.MENU_CD      = A.PRIOR_MENU_CD
			               AND PRIOR A.USE_YN       = A.USE_YN
			         ORDER SIBLINGS BY A.PRIOR_MENU_CD, A.SEQ
			       ) DM
			 WHERE DM.AUTH_YN > 0
		 ]]>
		</select>
		
		
		
		
		
		
		

		
		

<!-- 		프로세스맵에 해당하는 프로세스 목록 조회 -->
		<select parameterType="map" resultType="cMap" id="getProcessListForFavorite">
                <![CDATA[
                   SELECT A.PROC_SEQ 
                        , A.PROC_MAP_SEQ 
                        , A.PROC_NM
                        , A.ENTER_CD 
                        , A.MAIN_MENU_CD 
                     FROM PSMT002 A
                     JOIN TSYS303 B
                       ON A.MAIN_MENU_CD = B.MAIN_MENU_CD
                      AND A.MENU_CD = B.MENU_CD 
                    WHERE A.PROC_MAP_SEQ = #{procMapSeq}
                      AND B.ENTER_CD = #{ssnEnterCd}
                      AND A.ACTIVE_YN='Y'                     
                    ORDER BY A.SEQ
				]]>
		</select>
		
		
		
				
		
<!-- 	프로세스 도움말 수정/저장 -->	
		<update parameterType="map" id="saveProcessMapHelp">
			   UPDATE PSMT002
                  SET HELP_TXT_TITLE  = TRIM( #{helpTxtTitle} )
                    , HELP_TXT_CONTENT = #{helpTxtContent}
				    , CHKDATE = SYSDATE 
				    , CHKID =  TRIM(#{ssnSabun})
           <if test='fileSeq != null and !fileSeq.equals("")'>
                    , FILE_SEQ =  TRIM(#{fileSeq})
		   </if>
                WHERE PROC_SEQ = #{procSeq}
                  AND PROC_MAP_SEQ = #{procMapSeq}
             
		</update>		
				
		
				
		
<!-- 	프로세스 도움말 수정/저장 -->	
		<update parameterType="map" id="saveProcessMapMemo">
			   UPDATE PSMT002
                  SET MEMO  = TRIM( #{memo} )
				    , CHKDATE = SYSDATE 
				    , CHKID =  #{ssnSabun}
                WHERE PROC_SEQ = #{procSeq}
                  AND PROC_MAP_SEQ = #{procMapSeq}
             
		</update>
		
	
	
	
<!-- 		프로세스 생성 시, ID(SEQUENCE)채번 하기 -->
		<select parameterType="map" resultType="cMap" id="getProcessNewId">
				<![CDATA[
                   SELECT PROCESS_SEQ.NEXTVAL AS NEW_PROCESS_ID
                     FROM DUAL		 
				]]>
		</select>		




		
<!-- 		프로세스 생성 시, activeYn=N기준으로 DB데이터 생성하기 -->	
		<insert  parameterType="map" id="createProcess">
            INSERT INTO PSMT002 (PROC_SEQ, PROC_MAP_SEQ, ENTER_CD, MAIN_MENU_CD, PRIOR_MENU_CD, MENU_CD,MENU_SEQ,PROC_NM,CHKID, HELP_TXT_CONTENT)
                 VALUES(#{procSeq}, #{procMapSeq}, #{ssnEnterCd}, #{mainMenuCd}, #{priorMenuCd}, #{menuCd}, #{menuSeq}, TRIM(#{procNm}), #{ssnSabun}, EMPTY_CLOB())
		</insert>




<!-- 	프로세스맵 저장 -->	
		<update parameterType="map" id="saveProcessMap">
		MERGE 
		 INTO PSMT001 A
		 USING DUAL
		    ON (A.PROC_MAP_SEQ = #{procMapSeq} AND A.ENTER_CD = #{ssnEnterCd})
		 WHEN MATCHED THEN
		        UPDATE SET A.STATUS = TRIM(#{status})
		                 , A.PROC_MAP_NM = TRIM(#{procMapNm})
		                 , A.MAIN_MENU_CD = #{mainMenuCd}
		                 , A.GRP_CD = #{grpCd}
		                 , A.CHKID = #{ssnSabun}
		                 , A.CHKDATE = SYSDATE
		        <if test='status != null and status.equals("T")'> 
                         , A.FAVORITE_YN = 'N'
                </if>
		 WHEN NOT MATCHED THEN
		        INSERT (
		                A.PROC_MAP_SEQ
		              , A.ENTER_CD
		              , A.MAIN_MENU_CD
		              , A.GRP_CD
		              , A.STATUS
		              , A.PROC_MAP_NM
		              , A.CHKID
		        <if test='status != null and status.equals("T")'> 
                      ,A.FAVORITE_YN
                </if>
		              )
		        VALUES ( 
		                 #{procMapSeq}
		               , #{ssnEnterCd}
		               , #{mainMenuCd}
		               , #{grpCd}
		               , TRIM(#{status})
		               , TRIM(#{procMapNm})
		               , #{ssnSabun}
		        <if test='status != null and status.equals("T")'> 
                       , 'N'
                </if>
		               )          
		</update>




<!-- 	프로세스맵 생성/수정 시 생성되었던 임시 프로세스 데이터 삭제 -->	
		<delete parameterType="map" id="deleteTempProcess">		
			  DELETE FROM PSMT002 
	  				WHERE PROC_SEQ IN 
			    <foreach item="procSeq" index='index' open='(' close=')' separator=',' collection="deleteProcSeqList">
	                        TRIM(#{procSeq})
	            </foreach>
		</delete>
		
		
		
		
		
		
<!-- 	프로세스맵 저장시, 해당 프로세스 정보 수정/저장 -->	
		<update parameterType="map" id="saveProcessList">
               UPDATE PSMT002
                  SET ACTIVE_YN ='Y'                   
                     , SEQ = #{seq}
                     , CHKID = #{ssnSabun}
                     , CHKDATE = SYSDATE
                <if test='helpTxtTitle != null'>
                    , HELP_TXT_TITLE = TRIM(#{helpTxtTitle})
		        </if>
                <if test='helpTxtContent != null'>
                     , HELP_TXT_CONTENT = #{helpTxtContent}
		        </if>
                <if test='memo != null'>
                    , MEMO = TRIM(#{memo})
		        </if>
                <if test='fileSeq != null'>
                    , FILE_SEQ =  TRIM(#{fileSeq})
		        </if>
                WHERE PROC_MAP_SEQ = #{procMapSeq}
                  AND PROC_SEQ = #{procSeq} 
                  AND ENTER_CD = #{ssnEnterCd}
		</update>	
		
		
		
		
		
		
		

<!-- 	프로세스맵 삭제 -->	
		<delete parameterType="map" id="deleteProcessMap">		
			DELETE FROM PSMT001 
			 WHERE PROC_MAP_SEQ = #{procMapSeq}
			   AND ENTER_CD = #{ssnEnterCd}
		</delete>
		

<!-- 	프로세스맵의 프로세스 삭제 -->	
		<delete parameterType="map" id="deleteProcessMapProcess">		
           DELETE FROM PSMT002 
            WHERE PROC_MAP_SEQ = #{procMapSeq}
              AND ENTER_CD = #{ssnEnterCd}
		</delete>
		
				





<!-- 	프로세스맵의 불필요한 프로세스 삭제 -->	
		<delete parameterType="map" id="deleteProcessMapDataForClear">		
                DELETE FROM PSMT002
                WHERE PROC_SEQ IN (SELECT P2.PROC_SEQ 
               						 FROM PSMT002 P2
                					WHERE P2.ENTER_CD = #{ssnEnterCd}
                					  AND NOT EXISTS (SELECT 1
                										FROM PSMT001 P1
                										WHERE P1.PROC_MAP_SEQ = P2.PROC_MAP_SEQ))
		</delete>
		
				
</mapper>