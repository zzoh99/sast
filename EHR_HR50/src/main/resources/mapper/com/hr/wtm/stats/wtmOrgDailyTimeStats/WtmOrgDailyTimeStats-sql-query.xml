<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wtm.stats.wtmOrgDailyTimeStats">

	<select parameterType="map" resultType="cMap" id="getWtmOrgDailyTimeStatsHeaderList">
		<![CDATA[
			SELECT 'M_CNT'||A.GNT_CD AS SAVE_NAME1
			     , 'Y_CNT'||A.GNT_CD AS SAVE_NAME2
			     , 'mCnt'||A.GNT_CD AS SAVE_NAME1_DISP
			     , 'yCnt'||A.GNT_CD AS SAVE_NAME2_DISP
			     , NVL(F_COM_GET_LANGUAGE_MAPPING(A.ENTER_CD, 'ttim014', A.LANGUAGE_CD, #{ssnLocaleCd}), A.GNT_NM) AS GNT_NM
			     , A.GNT_CD
			  FROM TWTM041 A
			 WHERE A.ENTER_CD = #{ssnEnterCd}
			   AND EXISTS
			       (
			           SELECT 1
			             FROM TSYS005
			            WHERE ENTER_CD = A.ENTER_CD
			              AND GRCODE_CD = 'T10003'
			              AND CODE = A.GNT_GUBUN_CD
			              AND NOTE1 = 'Y'
				   )
			 ORDER BY TO_NUMBER(A.SEQ)
		]]>
	</select>

<!-- 부서원근태현황 조회 -->
	<select parameterType="map" resultType="cMap" id="getWtmOrgDailyTimeStatsList">
		<![CDATA[
			SELECT LEVEL AS "_level"
				 , A.*
			  FROM (
				       SELECT Z.ORG_CD
				            , Z.PRIOR_ORG_CD
				            , Z.ORG_NM
				            , Z.LOCATION_CD
				            , Z.LOCATION_NM
				            , Z.ORG_LEVEl
				            , Z.SEQ
				            , COUNT(X.SABUN) AS EMP_CNT
				            , COUNT(X.IN_HM) AS WORK_EMP_CNT
		]]>
<foreach item="rtitles" collection="titles" >
				            , SUM(CASE WHEN Y.${rtitles.saveName1}  = 0 THEN NULL ELSE Y.${rtitles.saveName1}  END) AS ${rtitles.saveName1}
</foreach>
				         FROM (
				                  SELECT A.PRIOR_ORG_CD
				                       , A.ORG_CD
				                       , NVL(F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, REPLACE(TRIM( #{sYmd} ),'-',''), #{ssnLocaleCd}), B.ORG_NM) AS ORG_NM
				                       , F_COM_GET_LOCATION_CD(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS LOCATION_CD
				                       , F_COM_GET_LOCATION_NM(A.ENTER_CD, F_COM_GET_LOCATION_CD(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD'))) AS LOCATION_NM
				                       , A.ORDER_SEQ
				                       , A.ORG_LEVEL
				                       , A.SEQ
				                    FROM TORG105 A, TORG101 B
				                   WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
				                     AND A.ENTER_CD = B.ENTER_CD
				                     AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
				                     AND A.ORG_CD = B.ORG_CD
				                     AND A.SDATE =
				                         (
				                             SELECT MAX(SDATE)
				                               FROM TORG103
				                              WHERE ENTER_CD = A.ENTER_CD
				                                AND REPLACE(TRIM( #{sYmd} ),'-','') BETWEEN SDATE AND EDATE
				                         )
<choose>
	<when test='searchOrgType == null or searchOrgType neq "Y"'>
		<choose>
			<when test ='orgCd != null and orgCd.equals("")'>
				                     AND PRIOR_ORG_CD = '0'
			</when>
			<otherwise>
				                     AND A.ORG_CD = #{orgCd}
			</otherwise>
		</choose>
	</when>
</choose>
				              ) Z
				         LEFT OUTER JOIN
				              (
				                  SELECT A.SABUN, A.ENTER_CD, A.ORG_CD, D.IN_HM, D.OUT_HM
				                    FROM (
				                             SELECT ENTER_CD, SABUN, ORG_CD
				                               FROM THRM151
				                              WHERE (ENTER_CD, SABUN, SDATE) IN
				                                    (
				                                        SELECT ENTER_CD, SABUN, MAX(SDATE)
				                                          FROM THRM151
				                                         WHERE ENTER_CD = #{ssnEnterCd}
				                                           AND REPLACE(TRIM( #{sYmd} ),'-','') BETWEEN SDATE AND NVL(EDATE, '99991231')
				                                         GROUP BY ENTER_CD, SABUN
				                                    )
				                                AND F_COM_GET_STATUS_CD(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) != 'RAA'
		<if test='multiWorkTypeCd != null and !multiWorkTypeCd.equals("")'>
				                                AND A.WORK_TYPE IN
			<foreach collection="multiWorkTypeCd" item="item" index="index" open="(" close=")" separator=",">
				                                	#{item}
			</foreach>
		</if>
				                         ) A
				                   INNER JOIN THRM100 C
				                      ON C.ENTER_CD = A.ENTER_CD
				                     AND C.SABUN = A.SABUN
				                     AND (C.RET_YMD IS NULL OR C.RET_YMD > REPLACE(TRIM( #{sYmd} ),'-','') )
				                    LEFT OUTER JOIN TWTM101 D
				                      ON D.ENTER_CD = A.ENTER_CD
				                     AND D.SABUN = A.SABUN
				                     AND D.YMD = REPLACE(TRIM( #{sYmd} ),'-','')
				                   WHERE A.SABUN IN
				                         (
				                             SELECT SABUN
				                               FROM TABLE(THRM151_AUTH(#{ssnEnterCd}, #{ssnSearchType}, #{ssnSabun}, #{ssnGrpCd}, TO_CHAR(SYSDATE, 'YYYYMMDD')))
				                         )
				              ) X
				           ON X.ORG_CD = Z.ORG_CD
				         LEFT OUTER JOIN
				              (
				                  SELECT H.SABUN, 0
<foreach item="rtitles" collection="titles" >
						+${rtitles.saveName1}
</foreach>
						AS ABSENCE_FLAG
<foreach item="rtitles" collection="titles" >
						,${rtitles.saveName1}
</foreach>
				                    FROM (
				                             SELECT A.SABUN
<foreach item="rtitles" collection="titles" >
				                                  , SUM(CASE WHEN A.YMD = REPLACE(TRIM( #{sYmd} ),'-','') AND A.GNT_CD = #{rtitles.gntCd} THEN 1 ELSE 0 END) AS ${rtitles.saveName1}
</foreach>
				                               FROM TWTM103 A
				                              WHERE A.ENTER_CD = #{ssnEnterCd}
				                                AND A.YMD = REPLACE(TRIM( #{sYmd} ),'-','')
				                                AND EXISTS
				                                    (
				                                        SELECT 1
				                                          FROM THRI103
				                                         WHERE ENTER_CD = A.ENTER_CD
				                                           AND APPL_SEQ = A.APPL_SEQ
				                                           AND APPL_STATUS_CD = '99'
				                                    )
				                              GROUP BY A.SABUN
				                         ) H
				              ) Y
				           ON Y.SABUN = X.SABUN
				        WHERE 1 = 1
				        GROUP BY Z.ORG_CD, Z.ORG_NM, Z.LOCATION_CD, Z.LOCATION_NM, Z.ORDER_SEQ, Z.PRIOR_ORG_CD, Z.SEQ, Z.ORG_LEVEL
				   ) A
			 WHERE 1=1
<if test=' searchLocationCd != null and !searchLocationCd.equals("")'>
			   AND A.LOCATION_CD = #{searchLocationCd}
</if>
	<choose>
		<when test ='orgCd == null or orgCd.equals("")'>
			START WITH A.PRIOR_ORG_CD = '0'
		</when>
		<otherwise>
			START WITH A.ORG_CD = #{orgCd}
		</otherwise>
	</choose>
			CONNECT BY PRIOR A.ORG_CD = A.PRIOR_ORG_CD

			ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL
	</select>
</mapper>