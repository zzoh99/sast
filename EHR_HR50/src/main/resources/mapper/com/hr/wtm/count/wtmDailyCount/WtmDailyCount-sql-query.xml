<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wtm.count.wtmDailyCount">

	<!-- 자동 생성 근무 삭제 -->
	<delete parameterType="map" id="deleteWtmDailyCountAutoCreWork">
		DELETE TWTM102
		 WHERE ENTER_CD = TRIM(#{enterCd})
		   AND WRK_DTL_ID = TRIM(#{wrkDtlId})
		   AND YMD = TRIM(#{ymd})
		   AND SABUN = TRIM(#{sabun})
		   AND WORK_CD = TRIM(#{workCd})
	</delete>

	<!-- 자동 생성 근무 삭제 -->
	<delete parameterType="map" id="saveWtmDailyCountAutoCreWork">
		INSERT INTO TWTM102 (ENTER_CD,
		                     WRK_DTL_ID,
		                     YMD,
		                     SABUN,
		                     WORK_CD,
		                     PLAN_SYMD,
		                     PLAN_SHM,
		                     PLAN_EYMD,
		                     PLAN_EHM,
		                     PLAN_MM,
		                     REAL_SYMD,
		                     REAL_SHM,
		                     REAL_EYMD,
		                     REAL_EHM,
		                     REAL_MM,
		                     AUTO_CRE_YN,
		                     INSDATE,
		                     INSID,
		                     CHKDATE,
		                     CHKID)
		 VALUES (TRIM(#{enterCd}),
				 TRIM(#{wrkDtlId}),
				 TRIM(#{ymd}),
				 TRIM(#{sabun}),
				 TRIM(#{workCd}),
				 TRIM(#{planSymd}),
				 TRIM(#{planShm}),
				 TRIM(#{planEymd}),
				 TRIM(#{planEhm}),
				 TRIM(#{planMm}),
				 TRIM(#{realSymd}),
				 TRIM(#{realShm}),
				 TRIM(#{realEymd}),
				 TRIM(#{realEhm}),
				 TRIM(#{realMm}),
				 TRIM(#{autoCreYn}),
				 SYSDATE,
				 'SYS_D_COUNT',
				 SYSDATE,
				 'SYS_D_COUNT'
		         )
	</delete>

	<!-- 일근태/근무집계 인정 근무 시간 저장 -->
	<update parameterType="map" id="saveWtmDailyCountRealTime">
		UPDATE TWTM102
		   SET REAL_SYMD = TRIM(#{realSymd})
			 , REAL_SHM = TRIM(#{realShm})
			 , REAL_EYMD = TRIM(#{realEymd})
			 , REAL_EHM = TRIM(#{realEhm})
			 , REAL_MM = TRIM(#{realMm})
			 , CHKDATE = SYSDATE
			 , CHKID = 'SYS_D_COUNT'
		 WHERE ENTER_CD = TRIM(#{enterCd})
		   AND WRK_DTL_ID = TRIM(#{wrkDtlId})
		   AND WORK_CD = TRIM(#{workCd})
		   AND YMD = TRIM(#{ymd})
		   AND SABUN = TRIM(#{sabun})
	</update>

	<!-- 일근태/근무집계 집계 자료 저장 -->
	<update parameterType="map" id="saveWtmDailyCountWorkSummary">
		 MERGE INTO TWTM101 T
		 USING (
		    	SELECT TRIM(#{enterCd}) AS ENTER_CD
		    	     , TRIM(#{ymd}) AS YMD
		    	     , TRIM(#{sabun}) AS SABUN
		    	     , TRIM(#{workClassCd}) AS WORK_CLASS_CD
		    	     , TRIM(#{inYmd}) AS IN_YMD
		    	     , TRIM(#{inHm}) AS IN_HM
		    	     , TRIM(#{outYmd}) AS OUT_YMD
		    	     , TRIM(#{outHm}) AS OUT_HM
		    	     , TRIM(#{dayType}) AS DAY_TYPE
		    	     , TRIM(#{basicMm}) AS BASIC_MM
		    	     , TRIM(#{otMm}) AS OT_MM
		    	     , TRIM(#{ltnMm}) AS LTN_MM
		    	     , TRIM(#{vacationMm}) AS VACATION_MM
		    	     , TRIM(#{lateYn}) AS LATE_YN
		    	     , TRIM(#{leaveEarlyYn}) AS LEAVE_EARLY_YN
		    	     , TRIM(#{absenceYn}) AS ABSENCE_YN
		    	  FROM DUAL
			  ) S
		   ON (
		        	T.ENTER_CD = S.ENTER_CD
                AND T.YMD = S.YMD
                AND T.SABUN = S.SABUN
              )
		 WHEN MATCHED THEN
	   UPDATE
		  SET T.WORK_CLASS_CD = S.WORK_CLASS_CD
		    , T.IN_YMD = S.IN_YMD
		    , T.IN_HM = S.IN_HM
		    , T.OUT_YMD = S.OUT_YMD
		    , T.OUT_HM = S.OUT_HM
		    , T.DAY_TYPE = S.DAY_TYPE
		    , T.BASIC_MM = S.BASIC_MM
		    , T.OT_MM = S.OT_MM
		    , T.LTN_MM = S.LTN_MM
		    , T.VACATION_MM = S.VACATION_MM
		    , T.LATE_YN = S.LATE_YN
		    , T.LEAVE_EARLY_YN = S.LEAVE_EARLY_YN
		    , T.ABSENCE_YN = S.ABSENCE_YN
		    , CHKDATE = SYSDATE
		    , CHKID = 'SYS_D_COUNT'
		 WHEN NOT MATCHED THEN
	   INSERT (
		       T.ENTER_CD,
	           T.YMD,
	           T.SABUN,
	           T.WORK_CLASS_CD,
	           T.IN_YMD,
	           T.IN_HM,
	           T.OUT_YMD,
	           T.OUT_HM,
	           T.DAY_TYPE,
	           T.BASIC_MM,
	           T.OT_MM,
	           T.LTN_MM,
	           T.VACATION_MM,
	           T.LATE_YN,
	           T.LEAVE_EARLY_YN,
	           T.ABSENCE_YN,
		   	   INSDATE,
		   	   INSID,
			   CHKDATE,
			   CHKID
			  )
	   VALUES (
	           S.ENTER_CD,
	           S.YMD,
	           S.SABUN,
	           S.WORK_CLASS_CD,
			   S.IN_YMD,
			   S.IN_HM,
			   S.OUT_YMD,
			   S.OUT_HM,
	           S.DAY_TYPE,
	           S.BASIC_MM,
	           S.OT_MM,
	           S.LTN_MM,
	           S.VACATION_MM,
			   S.LATE_YN,
			   S.LEAVE_EARLY_YN,
			   S.ABSENCE_YN,
			   SYSDATE,
			   'SYS_D_COUNT',
			   SYSDATE,
			   'SYS_D_COUNT'
			  )
	</update>

	<!-- 근무시간 유형별 일집계 삭제 -->
	<delete parameterType="map" id="deleteWtmDailyCountWorkTime">
		DELETE TWTM104
		 WHERE ENTER_CD = TRIM(#{enterCd})
		   AND YMD = TRIM(#{ymd})
		   AND SABUN = TRIM(#{sabun})
	</delete>

	<!-- 근무시간 유형별 일집계 처리 -->
	<update parameterType="map" id="saveWtmDailyCountWorkTime">
		INSERT INTO TWTM104 (ENTER_CD, YMD, SABUN, WORK_TIME_TYPE, WORK_MM, INSDATE, INSID, CHKDATE, CHKID)
		SELECT A.ENTER_CD, B.YMD, B.SABUN, WORK_TIME_TYPE, SUM(REAL_MM) AS WORK_MM, SYSDATE, 'SYS_D_COUNT', SYSDATE, 'SYS_D_COUNT'
		  FROM TWTM051 A
		  JOIN TWTM102 B
			ON A.ENTER_CD = B.ENTER_CD
		   AND A.WORK_CD = B.WORK_CD
		 WHERE A.ENTER_CD = TRIM(#{enterCd})
		   AND B.YMD = TRIM(#{ymd})
		   AND B.SABUN = TRIM(#{sabun})
		 GROUP BY A.ENTER_CD, B.SABUN, B.YMD, WORK_TIME_TYPE
	</update>

</mapper>