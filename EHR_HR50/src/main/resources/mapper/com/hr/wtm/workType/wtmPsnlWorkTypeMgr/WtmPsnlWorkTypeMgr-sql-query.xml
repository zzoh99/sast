<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wtm.workType.wtmPsnlWorkTypeMgr">

    <!-- 전체 근무유형 개수 및 인원수 조회-->
    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTypeMgrTotWorkClassInfo">
        SELECT (
                SELECT COUNT(*)
                  FROM THRM100 A
                  JOIN THRM151 B
                    ON A.ENTER_CD = B.ENTER_CD
                   AND A.SABUN = B.SABUN
                   AND B.STATUS_CD NOT IN ('RA', 'RAA')
        <choose>
            <when test="searchDate != null and searchDate eq ''">
                   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
            </when>
            <otherwise>
                   AND REPLACE(#{searchDate}, '-', '') BETWEEN B.SDATE AND B.EDATE
            </otherwise>
        </choose>
                 WHERE A.ENTER_CD = #{ssnEnterCd}
               ) AS TOT_EMP_CNT
             , (
                SELECT COUNT(*)
                  FROM TWTM021
                 WHERE ENTER_CD = #{ssnEnterCd}
        <if test="searchDate != null and searchDate neq ''">
                   AND REPLACE(#{searchDate}, '-', '') BETWEEN SDATE AND EDATE
        </if>
               ) AS TOT_WORK_CLASS_CNT
          FROM DUAL
    </select>

    <!-- 근무유형 리스트 조회-->
    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTypeMgrWorkClassList">
        SELECT A.ENTER_CD, A.WORK_CLASS_CD, A.WORK_CLASS_NM, A.WORK_TYPE_CD
             , UPPER(A.WORK_DAY)    AS WORK_DAY
             , A.WORK_TIME_F
             , A.WORK_TIME_T
             , CASE
               WHEN A.WORK_CLASS_DEF_YN = 'Y'
                   THEN
                    (
                        SELECT
                            COUNT(TB.SABUN)
                        FROM THRM100 TA
                        INNER JOIN THRM151 TB
                        ON TA.ENTER_CD = TB.ENTER_CD
                        AND TA.SABUN = TB.SABUN
                        WHERE TB.ENTER_CD = A.ENTER_CD
                        AND TB.STATUS_CD NOT IN ('RA', 'RAA')
                        AND REPLACE(#{searchDate}, '-', '') BETWEEN TB.SDATE AND TB.EDATE
                    ) - (
                        SELECT
                            COUNT(TB.SABUN)
                        FROM TWTM021 TA
                        INNER JOIN TWTM022 TB
                            ON TA.ENTER_CD = TB.ENTER_CD
                            AND TA.WORK_CLASS_CD = TB.WORK_CLASS_CD
                        INNER JOIN THRM100 AA
                            ON TB.ENTER_CD = AA.ENTER_CD
                            AND TB.SABUN = AA.SABUN
                        INNER JOIN THRM151 BB
                            ON TB.ENTER_CD = BB.ENTER_CD
                            AND TB.SABUN = BB.SABUN
                            AND BB.STATUS_CD NOT IN ('RA', 'RAA')
                            AND REPLACE(#{searchDate}, '-', '') BETWEEN BB.SDATE AND BB.EDATE
                        WHERE TB.ENTER_CD = A.ENTER_CD
                        AND TB.WORK_CLASS_CD NOT IN ('R0001')
                        AND REPLACE(#{searchDate}, '-', '') BETWEEN TB.SDATE AND TB.EDATE
                    )
               ELSE COUNT(TB.SABUN)
               END AS EMP_CNT
             , C.CODE_NM AS WORK_TYPE_NM

                , CASE
                WHEN A.WORK_TYPE_CD = 'A' OR A.WORK_TYPE_CD = 'C' THEN '단위기간'
                WHEN A.WORK_TYPE_CD = 'B' THEN '표준근무시간'
                WHEN A.WORK_TYPE_CD = 'D' THEN ''
                WHEN A.WORK_TYPE_CD = 'R' THEN '근무시간'
                END AS TYPE_LABEL
                , CASE
                WHEN A.WORK_TYPE_CD = 'A' OR A.WORK_TYPE_CD = 'C'
                THEN (SELECT  CODE_NM FROM TSYS005 WHERE ENTER_CD = A.ENTER_CD AND CODE = A.INTERVAL_CD AND GRCODE_CD = 'T90200')
                WHEN A.WORK_TYPE_CD = 'B' THEN A.WORK_HOURS || '시간'
                WHEN A.WORK_TYPE_CD = 'D'
                THEN (
                SELECT COUNT(*)
                FROM TWTM032
                WHERE ENTER_CD = #{ssnEnterCd}
                AND WORK_CLASS_CD = A.WORK_CLASS_CD
                ) || '조' ||
                (
                SELECT COUNT(*)
                FROM TWTM031
                WHERE ENTER_CD = #{ssnEnterCd}
                AND WORK_CLASS_CD = A.WORK_CLASS_CD
                AND SYSDATE BETWEEN TO_DATE(SDATE, 'YYYYMMDD') AND TO_DATE(EDATE, 'YYYYMMDD')
                AND SYSTEM_CD_YN = 'N'
                ) || '교대'
                WHEN A.WORK_TYPE_CD = 'R'
                THEN '(' || SUBSTR(A.WORK_TIME_F, 1, 2) || ':' || SUBSTR(A.WORK_TIME_F, 3, 2) || ' ~ ' || SUBSTR(A.WORK_TIME_T, 1, 2) || ':' || SUBSTR(A.WORK_TIME_T, 3, 2) ||')'
                END AS TYPE_VALUE
          FROM TWTM021 A
          LEFT JOIN TWTM022 B
              ON A.ENTER_CD = B.ENTER_CD
              AND A.WORK_CLASS_CD = B.WORK_CLASS_CD
        <if test="searchDate != null and searchDate neq ''">
            AND REPLACE(#{searchDate}, '-', '') BETWEEN B.SDATE AND B.EDATE
        </if>
          LEFT JOIN THRM100 TA
              ON TA.ENTER_CD = B.ENTER_CD
              AND TA.SABUN = B.SABUN
          LEFT JOIN THRM151 TB
              ON TA.ENTER_CD = TB.ENTER_CD
              AND TA.SABUN = TB.SABUN
              AND TB.STATUS_CD NOT IN ('RA', 'RAA')
            <if test="searchDate != null and searchDate neq ''">
                AND REPLACE(#{searchDate}, '-', '') BETWEEN TB.SDATE AND TB.EDATE
            </if>
          JOIN TSYS005 C
            ON A.ENTER_CD = C.ENTER_CD
           AND A.WORK_TYPE_CD = C.CODE
           AND C.GRCODE_CD = 'T10002'
          LEFT JOIN THRM151 D
            ON A.ENTER_CD = D.ENTER_CD
           AND B.SABUN = D.SABUN
           AND D.STATUS_CD NOT IN ('RA', 'RAA')
            <if test="searchDate != null and searchDate neq ''">
                AND REPLACE(#{searchDate}, '-', '') BETWEEN D.SDATE AND D.EDATE
            </if>
         WHERE A.ENTER_CD = #{ssnEnterCd}
         GROUP BY A.ENTER_CD, A.WORK_CLASS_CD, A.WORK_CLASS_DEF_YN, A.WORK_CLASS_NM, A.WORK_TYPE_CD, A.WORK_DAY, A.WORK_TIME_F, A.WORK_TIME_T, A.INTERVAL_CD, A.WORK_HOURS, C.CODE_NM
    </select>

    <!-- 근무유형별 대표 인원 조회(상위 5명만) -->
    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTypeMgrWorkClassEmpList">
        SELECT *
          FROM (
                SELECT ENTER_CD, SABUN, WORK_CLASS_CD
                    , ROW_NUMBER() OVER(PARTITION BY WORK_CLASS_CD ORDER BY F_COM_JIKJE_SORT(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))) AS RN
                 FROM (
                       SELECT A.ENTER_CD, A.SABUN
                            , C.WORK_CLASS_CD
                         FROM THRM100 A
                         JOIN THRM151 B
                           ON A.ENTER_CD = B.ENTER_CD
                          AND A.SABUN = B.SABUN
                <choose>
                    <when test="searchDate != null and searchDate eq ''">
                          AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
                    </when>
                    <otherwise>
                          AND REPLACE(#{searchDate}, '-', '') BETWEEN B.SDATE AND B.EDATE
                    </otherwise>
                </choose>
                         LEFT JOIN (
                            SELECT T1.ENTER_CD, T1.SABUN
                                 , T1.WORK_CLASS_CD, T2.WORK_CLASS_NM, T2.WORK_TYPE_CD
                              FROM TWTM022 T1
                              JOIN TWTM021 T2
                                ON T1.ENTER_CD = T2.ENTER_CD
                               AND T1.WORK_CLASS_CD = T2.WORK_CLASS_CD
                        <if test="searchDate != null and searchDate neq ''">
                             WHERE REPLACE(#{searchDate}, '-', '') BETWEEN T1.SDATE AND T1.EDATE
                        </if>
                              ) C
                           ON B.ENTER_CD = C.ENTER_CD
                          AND B.SABUN = C.SABUN
                         LEFT JOIN TWTM021 D
                           ON A.ENTER_CD = D.ENTER_CD
                          AND D.WORK_CLASS_DEF_YN = 'Y'
                        <if test="searchDate != null and searchDate neq ''">
                          AND REPLACE(#{searchDate}, '-', '') BETWEEN D.SDATE AND D.EDATE
                        </if>
                        WHERE A.ENTER_CD = #{ssnEnterCd}
                          AND B.STATUS_CD NOT IN ('RA', 'RAA')
                      )
               )
         WHERE RN <![CDATA[ <= 5 ]]>
         AND WORK_CLASS_CD IS NOT NULL
         ORDER BY WORK_CLASS_CD
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTypeMgrList">
        WITH EMP_BASE AS (
            SELECT A.ENTER_CD
                 , A.SABUN
                 , A.NAME
                 , B.JIKWEE_NM
                 , B.ORG_CD
                 , F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, B.SDATE) AS ORG_NM
                 , F_COM_GET_BP_CD(A.ENTER_CD, A.SABUN, B.SDATE) AS BP_CD
                 , F_COM_GET_BP_NM(A.ENTER_CD, A.SABUN, B.SDATE) AS BP_NM
                 , C.WORK_CLASS_CD
                 , C.WORK_CLASS_NM
                 , C.WORK_GROUP_CD
                 , C.WORK_GROUP_NM
                 , A.EMP_YMD
        FROM THRM100 A
              JOIN THRM151 B
                ON A.ENTER_CD = B.ENTER_CD
               AND A.SABUN = B.SABUN
               AND TO_CHAR(LAST_DAY(TO_DATE(SUBSTR(REPLACE(#{searchDate}, '-', ''), 1, 6)||'01','YYYYMMDD')),'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
               AND B.STATUS_CD NOT IN ('RA', 'RAA')
                <if test="searchDate != null and searchDate neq ''">
                    AND REPLACE(#{searchDate}, '-', '') BETWEEN B.SDATE AND B.EDATE
                </if>
              LEFT JOIN (
                    SELECT X.ENTER_CD
                         , X.WORK_CLASS_CD
                         , X.WORK_CLASS_NM
                         , Y.WORK_GROUP_CD
                         , Y.WORK_GROUP_NM
                      FROM TWTM021 X
                      LEFT JOIN TWTM032 Y
                        ON X.ENTER_CD = Y.ENTER_CD
                       AND X.WORK_CLASS_CD = Y.WORK_CLASS_CD
                     WHERE X.ENTER_CD = #{ssnEnterCd}
                       AND X.WORK_CLASS_DEF_YN = 'Y'
                   ) C
                ON A.ENTER_CD = C.ENTER_CD
             WHERE A.ENTER_CD = #{ssnEnterCd}
        )
        SELECT EMP.ENTER_CD
             , EMP.SABUN
             , EMP.NAME
             , EMP.JIKWEE_NM
             , EMP.ORG_CD
             , EMP.ORG_NM
             , EMP.BP_CD
             , EMP.BP_NM
             , EMP.WORK_CLASS_CD AS BASE_WORK_CLASS_CD
             , EMP.WORK_CLASS_NM AS BASE_WORK_CLASS_NM
             , EMP.WORK_GROUP_CD AS BASE_WORK_GROUP_CD
             , EMP.WORK_GROUP_NM AS BASE_WORK_GROUP_NM
             , NVL(B.WORK_CLASS_CD, EMP.WORK_CLASS_CD) AS WORK_CLASS_CD
             , NVL(B.WORK_CLASS_NM, EMP.WORK_CLASS_NM) AS WORK_CLASS_NM
             , C.WORK_GROUP_CD
             , C.WORK_GROUP_NM
             , TO_CHAR(TO_DATE(NVL(A.SDATE, EMP.EMP_YMD)), 'YYYY.MM.DD') AS SDATE
             , TO_CHAR(TO_DATE(NVL(A.EDATE, '29991231')), 'YYYY.MM.DD') AS EDATE
             , COUNT(EMP.SABUN) OVER (PARTITION BY A.ENTER_CD) AS CNT
          FROM EMP_BASE EMP
          LEFT JOIN TWTM022 A
            ON EMP.ENTER_CD = A.ENTER_CD
           AND EMP.SABUN = A.SABUN
           AND REPLACE(#{searchDate}, '-', '') BETWEEN A.SDATE AND A.EDATE
          LEFT JOIN TWTM021 B
            ON A.ENTER_CD = B.ENTER_CD
           AND A.WORK_CLASS_CD = B.WORK_CLASS_CD
          LEFT JOIN (
              SELECT
                    X.ENTER_CD
                  , X.WORK_CLASS_CD
                  , X.WORK_GROUP_CD
                  , X.WORK_GROUP_NM
                  , Y.SABUN
                  , Y.SDATE
              FROM TWTM032 X
              LEFT JOIN TWTM033 Y
              ON X.ENTER_CD = Y.ENTER_CD
                  AND X.WORK_CLASS_CD = Y.WORK_CLASS_CD
                  AND X.WORK_GROUP_CD = Y.WORK_GROUP_CD
          ) C
            ON A.ENTER_CD = C.ENTER_CD
           AND A.WORK_CLASS_CD = C.WORK_CLASS_CD
           AND A.SABUN = C.SABUN
           AND C.SDATE = A.SDATE
         WHERE EMP.ENTER_CD = #{ssnEnterCd}
        <if test='searchOrgNm != null and searchOrgNm neq ""'>
           AND (UPPER(EMP.ORG_CD) LIKE '%'|| UPPER(#{searchOrgNm}) ||'%' OR UPPER(EMP.ORG_NM) LIKE '%'|| UPPER(#{searchOrgNm}) ||'%')
        </if>
        <if test='searchSabunName != null and searchSabunName neq ""'>
           AND (UPPER(EMP.SABUN) LIKE '%'|| UPPER(#{searchSabunName}) ||'%' OR UPPER(EMP.NAME) LIKE '%'|| UPPER(#{searchSabunName}) ||'%')
        </if>
        <if test='searchWorkClassCd != null and searchWorkClassCd neq ""'>
           AND (A.WORK_CLASS_CD = #{searchWorkClassCd} OR (A.WORK_CLASS_CD IS NULL AND 'Y' = (SELECT NVL(WORK_CLASS_DEF_YN, 'N') FROM TWTM021 WHERE ENTER_CD = #{ssnEnterCd} AND WORK_CLASS_CD = #{searchWorkClassCd})))
        </if>
         ORDER BY F_COM_JIKJE_SORT(EMP.ENTER_CD, EMP.SABUN, TO_CHAR(LAST_DAY(TO_DATE(SUBSTR(REPLACE(#{searchDate}, '-', ''), 1, 6)||'01','YYYYMMDD')),'YYYYMMDD')), A.SDATE
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTypeMgrDet">
        WITH EMP_BASE AS (
            SELECT A.ENTER_CD
                 , A.SABUN
                 , A.NAME
                 , B.JIKWEE_NM
                 , B.ORG_CD
                 , F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, B.SDATE) AS ORG_NM
                 , F_COM_GET_BP_CD(A.ENTER_CD, A.SABUN, B.SDATE) AS BP_CD
                 , F_COM_GET_BP_NM(A.ENTER_CD, A.SABUN, B.SDATE) AS BP_NM
                 , C.WORK_CLASS_CD
                 , C.WORK_CLASS_NM
                 , C.WORK_GROUP_CD
                 , C.WORK_GROUP_NM
              FROM THRM100 A
              JOIN THRM151 B
                ON A.ENTER_CD = B.ENTER_CD
               AND A.SABUN = B.SABUN
               AND B.STATUS_CD NOT IN ('RA', 'RAA')
               AND REPLACE(#{searchDate}, '-', '') BETWEEN B.SDATE AND B.EDATE
              LEFT JOIN (
                    SELECT X.ENTER_CD
                         , X.WORK_CLASS_CD
                         , X.WORK_CLASS_NM
                         , Y.WORK_GROUP_CD
                         , Y.WORK_GROUP_NM
                      FROM TWTM021 X
                      LEFT JOIN TWTM032 Y
                        ON X.ENTER_CD = Y.ENTER_CD
                       AND X.WORK_CLASS_CD = Y.WORK_CLASS_CD
                     WHERE X.ENTER_CD = #{ssnEnterCd}
                       AND X.WORK_CLASS_DEF_YN = 'Y'
                   ) C
                ON A.ENTER_CD = C.ENTER_CD
             WHERE A.ENTER_CD = #{ssnEnterCd}
        )
        SELECT EMP.ENTER_CD
             , EMP.SABUN
             , EMP.NAME
             , EMP.JIKWEE_NM
             , EMP.ORG_CD
             , EMP.ORG_NM
             , EMP.BP_CD
             , EMP.BP_NM
             , EMP.WORK_CLASS_CD AS BASE_WORK_CLASS_CD
             , EMP.WORK_CLASS_NM AS BASE_WORK_CLASS_NM
             , EMP.WORK_GROUP_CD AS BASE_WORK_GROUP_CD
             , EMP.WORK_GROUP_NM AS BASE_WORK_GROUP_NM
             , A.WORK_CLASS_CD
             , B.WORK_CLASS_NM
             , C.WORK_GROUP_CD
             , C.WORK_GROUP_NM
             , TO_CHAR(TO_DATE(A.SDATE), 'YYYY.MM.DD') AS SDATE
             , TO_CHAR(TO_DATE(A.EDATE), 'YYYY.MM.DD') AS EDATE
             , COUNT(EMP.SABUN) OVER (PARTITION BY A.ENTER_CD) AS CNT
             , D.CODE_NM AS WORK_TYPE_NM
             , A.NOTE
          FROM EMP_BASE EMP
          LEFT JOIN TWTM022 A
            ON EMP.ENTER_CD = A.ENTER_CD
           AND EMP.SABUN = A.SABUN
           AND REPLACE(#{searchDate}, '-', '') BETWEEN A.SDATE AND A.EDATE
          LEFT JOIN TWTM021 B
            ON A.ENTER_CD = B.ENTER_CD
           AND A.WORK_CLASS_CD = B.WORK_CLASS_CD
          JOIN TSYS005 D
               ON B.ENTER_CD = D.ENTER_CD
                   AND B.WORK_TYPE_CD = D.CODE
                   AND D.GRCODE_CD = 'T10002'
          LEFT JOIN (
              SELECT
                    X.ENTER_CD
                  , X.WORK_CLASS_CD
                  , X.WORK_GROUP_CD
                  , X.WORK_GROUP_NM
                  , Y.SABUN
                  , Y.SDATE
              FROM TWTM032 X
              LEFT JOIN TWTM033 Y
              ON X.ENTER_CD = Y.ENTER_CD
                  AND X.WORK_CLASS_CD = Y.WORK_CLASS_CD
                  AND X.WORK_GROUP_CD = Y.WORK_GROUP_CD
          ) C
            ON A.ENTER_CD = C.ENTER_CD
           AND A.WORK_CLASS_CD = C.WORK_CLASS_CD
           AND A.SABUN = C.SABUN
           AND A.SDATE = C.SDATE
         WHERE EMP.ENTER_CD = #{ssnEnterCd}
        AND A.WORK_CLASS_CD = #{searchWorkClassCd}
        AND A.SABUN = #{searchSabun}
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTypeMgrDetBase">
        SELECT A.ENTER_CD
             , C.SABUN
             , C.NAME
             , C.JIKWEE_NM
             , C.ORG_CD
             , F_COM_GET_ORG_NM2(A.ENTER_CD, C.SABUN, C.SDATE) AS ORG_NM
             , F_COM_GET_BP_CD(A.ENTER_CD, C.SABUN, C.SDATE) AS BP_CD
             , F_COM_GET_BP_NM(A.ENTER_CD, C.SABUN, C.SDATE) AS BP_NM
             , A.WORK_CLASS_CD AS BASE_WORK_CLASS_CD
             , A.WORK_CLASS_NM AS BASE_WORK_CLASS_NM
             , A.WORK_CLASS_CD AS WORK_CLASS_CD
             , A.WORK_CLASS_NM AS WORK_CLASS_NM
             , TO_CHAR(TO_DATE(NVL(B.SDATE, C.EMP_YMD)), 'YYYY.MM.DD') AS SDATE
             , TO_CHAR(TO_DATE(NVL(B.EDATE, '29991231')), 'YYYY.MM.DD') AS EDATE
             , COUNT(B.SABUN) OVER (PARTITION BY A.ENTER_CD) AS CNT
--      , E.CODE_NM AS WORK_TYPE_NM
             , NVL(B.NOTE, '') AS NOTE
        FROM TWTM021 A
        LEFT OUTER JOIN TWTM022 B
            ON A.ENTER_CD = B.ENTER_CD
            AND A.WORK_CLASS_CD = B.WORK_CLASS_CD
            AND B.SABUN = #{searchSabun}
        LEFT OUTER JOIN (
            SELECT
                   X.*, Y.NAME, Y.EMP_YMD
            FROM THRM151 X
            INNER JOIN THRM100 Y
                ON X.ENTER_CD = #{ssnEnterCd}
                AND X.ENTER_CD = Y.ENTER_CD
                AND X.SABUN = Y.SABUN
                AND REPLACE(#{searchDate}, '-', '') BETWEEN X.SDATE AND X.EDATE
            ) C
            ON A.ENTER_CD = C.ENTER_CD
        WHERE A.ENTER_CD = #{ssnEnterCd}
          AND A.WORK_CLASS_CD = #{searchWorkClassCd}
          AND C.SABUN = #{searchSabun}
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkType">
        SELECT
            A.WORK_CLASS_CD
             , A.WORK_CLASS_NM
             , A.SDATE
             , A.EDATE
             , A.WORK_TYPE_CD
        FROM TWTM021 A
        WHERE A.ENTER_CD = #{ssnEnterCd}
          AND SYSDATE BETWEEN TO_DATE(A.SDATE, 'YYYYMMDD') AND TO_DATE(A.EDATE, 'YYYYMMDD')
        ORDER BY WORK_CLASS_CD
    </select>

    <!-- 근무유형 대상자 리스트 조회-->
    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTargetList">
        SELECT A.ENTER_CD
        , 'EMP' AS TYPE
        , A.SABUN AS TARGET_CD
        , A.NAME AS TARGET_NM
        , B.JIKWEE_NM AS NOTE1
        , F_COM_GET_ORG_NM(A.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS NOTE2
        , C.SDATE
        , C.EDATE
        , NVL2(C.WORK_CLASS_CD, 'Y' , 'N') AS CHECK_YN
        FROM THRM100 A
        JOIN THRM151 B
            ON A.ENTER_CD = B.ENTER_CD
            AND A.SABUN = B.SABUN
            AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE

        <choose>
            <when test="workClassCd != null and workClassCd neq '' and workClassCd.substring(0, 1) == 'D'.toString()">
                LEFT JOIN
                    ( SELECT C1.ENTER_CD, C1.SABUN, C1.WORK_CLASS_CD, C2.WORK_GROUP_CD, C2.SDATE, C2.EDATE
                        FROM TWTM022 C1
                           , TWTM033 C2
                       WHERE C1.ENTER_CD = C2.ENTER_CD
                         AND C1.WORK_CLASS_CD = C2.WORK_CLASS_CD
                         AND C1.SABUN = C2.SABUN
                         AND REPLACE(#{searchDate}, '-', '') BETWEEN C1.SDATE AND C1.EDATE
                         AND REPLACE(#{searchDate}, '-', '') BETWEEN C2.SDATE AND C2.EDATE ) C
                ON B.ENTER_CD = C.ENTER_CD
                AND B.SABUN = C.SABUN
                AND C.WORK_CLASS_CD = #{workClassCd}
                AND C.WORK_GROUP_CD = #{workGroupCd}
            </when>
            <otherwise>
                LEFT JOIN TWTM022 C
                ON B.ENTER_CD = C.ENTER_CD
                AND B.SABUN = C.SABUN
                AND C.WORK_CLASS_CD = #{workClassCd}
                AND REPLACE(#{searchDate}, '-', '') BETWEEN C.SDATE AND C.EDATE
            </otherwise>
        </choose>
        WHERE A.ENTER_CD =  #{ssnEnterCd}
        <if test='searchKey != null and !searchKey.equals("")'>
            AND (A.SABUN LIKE '%' || #{searchKey} || '%' OR A.NAME LIKE '%' || #{searchKey} || '%')
        </if>
        ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkTargetOrgList">
        SELECT A."_level" AS "_level"
             , A.ENTER_CD
             , A.PRIOR_ORG_CD
             , A.PRIOR_ORG_NM
             , A.ORG_CD
             , A.ORG_NM
             , '' AS DATA_ID
             , 'N' AS CHECK_YN
             , 'N' AS CHECKED_YN
             , ROW_NUMBER() OVER (ORDER BY ROWNUM) AS ROW_NUM
             , 1 AS SORT
        FROM (
                 SELECT LEVEL AS "_level"
                      , A.ENTER_CD
                      , A.PRIOR_ORG_CD
                      , F_COM_GET_ORG_NM(A.ENTER_CD, A.PRIOR_ORG_CD, A.SDATE, #{ssnLocaleCd}) AS PRIOR_ORG_NM
                      , A.ORG_CD
                      , F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, A.SDATE, #{ssnLocaleCd}) AS ORG_NM
                      , A.SEQ
                 FROM (
                          SELECT A.*
                          FROM TORG105 A
                          WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                            AND A.SDATE = (SELECT MAX(AA.SDATE)
                                           FROM TORG103 AA
                                           WHERE AA.ENTER_CD = A.ENTER_CD
                                             AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN AA.SDATE AND NVL(AA.EDATE, '29991231'))
                      ) A
                     START WITH A.PRIOR_ORG_CD = '0'
                 CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
                        AND PRIOR A.SDATE = A.SDATE
                        AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
                 ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ
             ) A
        UNION ALL
        SELECT (A."_level" + 1)
             , A.ENTER_CD
             , A.PRIOR_ORG_CD
             , A.PRIOR_ORG_NM
             , B.SABUN
             , B.NAME
             , 'EMP|' || B.SABUN AS DATA_ID
--              , NVL2(D.WORK_CLASS_CD, 'Y' , 'N') AS CHECK_YN
--              , NVL2(D.WORK_CLASS_CD, 'Y' , 'N') AS CHECKED_YN
             , 'N' AS CHECK_YN
             , 'N' AS CHECKED_YN
             , A.ROW_NUM
             , 2 AS SORT
        FROM (
                 SELECT A.*
                      , ROW_NUMBER() OVER (ORDER BY ROWNUM) AS ROW_NUM
                 FROM (
                          SELECT LEVEL AS "_level"
                               , A.ENTER_CD
                               , A.SDATE
                               , A.PRIOR_ORG_CD
                               , F_COM_GET_ORG_NM(A.ENTER_CD, A.PRIOR_ORG_CD, A.SDATE, #{ssnLocaleCd}) AS PRIOR_ORG_NM
                               , A.ORG_CD
                               , F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, A.SDATE, #{ssnLocaleCd}) AS ORG_NM
                               , A.SEQ
                          FROM (
                                   SELECT A.*
                                   FROM TORG105 A
                                   WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                                     AND A.SDATE = (SELECT MAX(AA.SDATE)
                                                    FROM TORG103 AA
                                                    WHERE AA.ENTER_CD = A.ENTER_CD
                                                      AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN AA.SDATE AND NVL(AA.EDATE, '29991231'))
                               ) A
                              START WITH A.PRIOR_ORG_CD = '0'
                          CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
                                 AND PRIOR A.SDATE = A.SDATE
                                 AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
                          ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ
                      ) A
             ) A
                 JOIN THRM100 B
                      ON A.ENTER_CD = B.ENTER_CD
                 JOIN THRM151 C
                      ON B.ENTER_CD = C.ENTER_CD
                          AND B.SABUN = C.SABUN
                          AND A.ORG_CD = C.ORG_CD
                          AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.SDATE AND C.EDATE
                          AND C.STATUS_CD NOT IN ('RA', 'RAA')
            <choose>
                <when test="workClassCd != null and workClassCd neq '' and workClassCd.substring(0, 1) == 'D'.toString()">
                    LEFT JOIN TWTM033 D
                    ON B.ENTER_CD = D.ENTER_CD
                    AND B.SABUN = D.SABUN
                    AND REPLACE(#{searchDate}, '-', '') BETWEEN D.SDATE AND D.EDATE
                    AND D.WORK_CLASS_CD = #{workClassCd}
                    AND D.WORK_GROUP_CD = #{workGroupCd}
                </when>
                <otherwise>
                    LEFT JOIN TWTM022 D
                    ON B.ENTER_CD = D.ENTER_CD
                    AND B.SABUN = D.SABUN
                    AND REPLACE(#{searchDate}, '-', '') BETWEEN D.SDATE AND D.EDATE
                    AND D.WORK_CLASS_CD = #{workClassCd}
                </otherwise>
            </choose>
        ORDER BY ROW_NUM, SORT
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkClassCdList">
        SELECT A.WORK_CLASS_CD, A.WORK_CLASS_NM, A.WORK_TYPE_CD
        FROM TWTM021 A
        WHERE A.ENTER_CD = #{ssnEnterCd}
          AND SYSDATE BETWEEN TO_DATE(A.SDATE, 'YYYYMMDD') AND TO_DATE(A.EDATE, 'YYYYMMDD')
        ORDER BY WORK_CLASS_CD
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkGroupCdList">
        SELECT A.WORK_CLASS_CD, A.WORK_GROUP_CD, A.WORK_GROUP_NM
        FROM TWTM032 A
        WHERE A.ENTER_CD = #{ssnEnterCd}
          AND A.WORK_CLASS_CD = #{workClassCd}
          AND SYSDATE BETWEEN TO_DATE(A.SDATE, 'YYYYMMDD') AND TO_DATE(A.EDATE, 'YYYYMMDD')
        ORDER BY WORK_GROUP_CD
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkList">
        SELECT
            A.ENTER_CD
             , A.SABUN
             , A.WORK_CLASS_CD
             , A.SDATE
             , NVL(
                TO_CHAR(
                            TO_DATE(LAG(A.SDATE) OVER (PARTITION BY ENTER_CD, SABUN  ORDER BY ENTER_CD, SDATE DESC),'YYYYMMDD')-1
                    ,'YYYYMMDD'
                    )
            ,(SELECT EDATE FROM TWTM021 WHERE ENTER_CD = A.ENTER_CD AND WORK_CLASS_CD = A.WORK_CLASS_CD)
            ) AS EDATE
        FROM TWTM022 A
        WHERE A.ENTER_CD = #{ssnEnterCd}
          AND A.SABUN = #{searchSabun}
        ORDER BY A.SDATE
    </select>

    <update parameterType="map" id="saveWtmPsnlWorkTypeMgr">
        MERGE INTO TWTM022 T
            USING (SELECT #{ssnEnterCd}     AS ENTER_CD,
                          #{workClassCd}    AS WORK_CLASS_CD,
                          #{searchSabun}    AS SABUN,
                          REPLACE(#{sdate}, '-', '')          AS SDATE,
                          REPLACE(#{edate}, '-', '')          AS EDATE,
                          #{note}           AS NOTE,
                          SYSDATE           AS CHKDATE,
                          #{ssnSabun}       AS CHKID
                   FROM DUAL
            ) S
            ON (
                T.ENTER_CD = S.ENTER_CD
                AND T.WORK_CLASS_CD = S.WORK_CLASS_CD
                AND T.SABUN = S.SABUN
                AND T.SDATE = S.SDATE
            )
            WHEN MATCHED THEN
                UPDATE SET
                    T.NOTE = S.NOTE,
                    T.CHKDATE = S.CHKDATE,
                    T.CHKID = S.CHKID
            WHEN NOT MATCHED THEN
                INSERT (ENTER_CD,
                        WORK_CLASS_CD,
                        SABUN,
                        SDATE,
                        EDATE,
                        NOTE,
                        INSID,
                        CHKDATE,
                        CHKID)
                    VALUES (S.ENTER_CD,
                            S.WORK_CLASS_CD,
                            S.SABUN,
                            S.SDATE,
                            S.EDATE,
                            S.NOTE,
                            #{ssnSabun},
                            S.CHKDATE,
                            S.CHKID)
    </update>

    <update parameterType="map" id="saveWtmWorkGroupShiftTarget">
            MERGE INTO TWTM033 T
                USING (SELECT #{ssnEnterCd}     AS ENTER_CD,
                              #{workClassCd}    AS WORK_CLASS_CD,
                              #{searchSabun}    AS SABUN,
                              REPLACE(#{sdate}, '-', '')          AS SDATE,
                              NVL((
                                      SELECT
                                          TO_CHAR(TO_DATE(MIN(SDATE), 'YYYYMMDD')-1, 'yyyyMMdd')
                                      FROM TWTM033
                                      where ENTER_CD = #{ssnEnterCd}
                                        and WORK_CLASS_CD = #{workClassCd}
                                        and SABUN = #{searchSabun}
                                        and SDATE > TO_CHAR(TO_DATE(#{sdate}, 'yyyy-MM-dd'), 'yyyyMMdd')
                                  ), '29991231'
                                  )        AS EDATE,
                              SYSDATE           AS CHKDATE,
                              #{ssnSabun}       AS CHKID
                       FROM DUAL
                ) S
                ON (
                            T.ENTER_CD = S.ENTER_CD
                        AND T.WORK_CLASS_CD = S.WORK_CLASS_CD
                        AND T.SABUN = S.SABUN
                        AND T.SDATE = S.SDATE
                    )
                WHEN MATCHED THEN
                    UPDATE SET
                        T.WORK_GROUP_CD = #{workGroupCd},
                        T.CHKDATE = S.CHKDATE,
                        T.CHKID = S.CHKID
                WHEN NOT MATCHED THEN
                    INSERT (ENTER_CD,
                            WORK_CLASS_CD,
                            SABUN,
                            SDATE,
                            EDATE,
                            WORK_GROUP_CD,
                            CHKDATE,
                            CHKID)
                        VALUES (S.ENTER_CD,
                                S.WORK_CLASS_CD,
                                S.SABUN,
                                S.SDATE,
                                S.EDATE,
                                #{workGroupCd},
                                S.CHKDATE,
                                S.CHKID)
    </update>

    <update parameterType="map" id="deleteWtmPsnlOldClass">
        DELETE FROM TWTM022
        WHERE ENTER_CD = #{ssnEnterCd}
          AND SABUN = #{searchSabun}
          AND WORK_CLASS_CD = #{oldClassCd}
          AND SDATE = TO_CHAR(TO_DATE(#{oldSdate}, 'yyyy-MM-dd'), 'yyyyMMdd')
    </update>

    <update parameterType="map" id="deletePsnlClassBySabun">
        DELETE FROM TWTM022
        WHERE ENTER_CD = #{ssnEnterCd}
          AND SABUN = #{searchSabun}
    </update>

    <update parameterType="map" id="updatePsnlContEdate">
        UPDATE TWTM022
        SET EDATE = #{edate},
            CHKDATE = SYSDATE,
            CHKID = #{ssnSabun}
        WHERE ENTER_CD = #{ssnEnterCd}
          AND SABUN = #{sabun}
          AND WORK_CLASS_CD = #{workClassCd}
          AND SDATE = #{sdate}
    </update>

    <update parameterType="map" id="updatePsnlContGroup">
        WITH GRP022 AS (
            SELECT
                ENTER_CD
                 , SABUN
                 , WORK_CLASS_CD
                 , SDATE
                 , EDATE
                 , SUM(CASE
                     WHEN LAG(END) OVER (PARTITION BY WORK_CLASS_CD ORDER BY SDATE) = SDATE - 1 THEN 0
                     ELSE 1
                     END
                 ) OVER (PARTITION BY WORK_CLASS_CD BY SDATE) AS GRP
            FROM TWTM022
        )
        SELECT
            ENTER_CD
             , SABUN
             , WORK_CLASS_CD
             , SDATE
             , EDATE
        FROM GRP022
        GROUP BY WORK_CLASS_CD
        ORDER BY SDATE

    </update>

    <update parameterType="map" id="updatePsnlOldClassEdateTarget">
        UPDATE TWTM022
        SET
            EDATE = TO_CHAR(TO_DATE(#{sdate})-1, 'YYYYMMDD'),
            CHKDATE = SYSDATE,
            CHKID = #{ssnSabun}
        WHERE ENTER_CD = #{ssnEnterCd}
          AND WORK_CLASS_CD = #{target.oldClassCd}
          AND SABUN = #{target.targetCd}
          AND (REPLACE(#{sdate}, '-', '') BETWEEN SDATE AND NVL(EDATE, '29991231') OR REPLACE(#{target.edate}, '-', '') BETWEEN SDATE AND NVL(EDATE, '29991231'))
    </update>

    <update parameterType="map" id="saveWtmPsnlWorkTarget">
        INSERT ALL
        <foreach collection="targets" item="target">
            INTO TWTM022 (
            ENTER_CD, WORK_CLASS_CD, SABUN, NOTE, SDATE, EDATE, INSDATE, INSID
            ) VALUES (
            #{ssnEnterCd}, #{workClassCd}, #{target.targetCd}, #{note},
            TO_CHAR(TO_DATE(#{sdate}, 'yyyy-MM-dd'), 'yyyyMMdd'),
            NVL((
                SELECT
                    TO_CHAR(TO_DATE(MIN(SDATE), 'YYYYMMDD')-1, 'yyyyMMdd')
                FROM TWTM022
                where ENTER_CD = #{ssnEnterCd}
                and SABUN = #{target.targetCd}
                and SDATE > TO_CHAR(TO_DATE(#{sdate}, 'yyyy-MM-dd'), 'yyyyMMdd')
            ), '29991231'),
            SYSDATE, #{ssnSabun}
            )
        </foreach>
        SELECT 1 FROM DUAL
    </update>

    <delete parameterType="map" id="deleteWtmPsnlWorkMgr">
        DELETE
        FROM TWTM022
        WHERE ENTER_CD = #{ssnEnterCd}
          AND SABUN = #{searchSabun}
          AND WORK_CLASS_CD = #{searchWorkClassCd}
          AND SDATE = REPLACE(REPLACE(#{sdate}, '.', ''), '-', '')
    </delete>

    <delete parameterType="map" id="deleteWtmPsnlWorkTarget">
        DELETE
        FROM TWTM022
        WHERE ENTER_CD = #{ssnEnterCd}
          AND WORK_CLASS_CD = #{workClassCd}
          AND SDATE = REPLACE(REPLACE(#{sdate}, '.', ''), '-', '')
          AND SABUN IN
        <foreach collection="sabunList" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <delete parameterType="map" id="deleteWtmPsnlWorkClassTarget">
        DELETE FROM TWTM022 A
        WHERE A.ENTER_CD = #{ssnEnterCd}
          AND A.WORK_CLASS_CD = #{workClassCd}
          AND REPLACE(REPLACE(#{sdate}, '.', ''), '-', '') BETWEEN A.SDATE AND A.EDATE
          AND A.SABUN IN
            <foreach collection="sabuns" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
          <if test="workGroupCd != null and workGroupCd neq ''">
              AND EXISTS (
                  SELECT 1 FROM TWTM033
                  WHERE ENTER_CD = A.ENTER_CD
                  AND SABUN = A.SABUN
                  AND SDATE = A.SDATE
                  AND WORK_CLASS_CD = A.WORK_CLASS_CD
                  AND WORK_GROUP_CD = #{workGroupCd}
              )
          </if>
    </delete>

    <delete parameterType="map" id="deleteWtmPsnlWorkGroupTarget">
        DELETE FROM TWTM033
        WHERE ENTER_CD = #{ssnEnterCd}
          AND WORK_CLASS_CD = #{workClassCd}
          AND WORK_GROUP_CD = #{workGroupCd}
          AND REPLACE(REPLACE(#{sdate}, '.', ''), '-', '') BETWEEN SDATE AND EDATE
          AND SABUN IN
              <foreach collection="sabuns" item="item" index="index" open="(" close=")" separator=",">
                  #{item}
              </foreach>
    </delete>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkClassPeriodList">
        SELECT A.ENTER_CD, B.WORK_CLASS_CD, A.SABUN, B.SHIFT_WORK_YN
             , B.OLD_SDATE, B.OLD_EDATE
             , GREATEST(A.EMP_YMD, B.SDATE) AS SDATE, LEAST(NVL(A.RET_YMD, '99991231'), NVL(B.EDATE, '99991231')) AS EDATE
          FROM THRM100 A
          LEFT JOIN
               (
                   SELECT B1.ENTER_CD, B1.WORK_CLASS_CD, B2.SABUN
                        , GREATEST(B1.SDATE, B2.SDATE) AS SDATE, LEAST(NVL(B1.EDATE, '99991231'), NVL(B2.EDATE, '99991231')) AS EDATE
                        , B2.SDATE AS OLD_SDATE, B2.EDATE AS OLD_EDATE
                        , CASE WHEN B1.WORK_TYPE_CD = 'D' THEN 'Y' ELSE 'N' END AS SHIFT_WORK_YN
                     FROM TWTM021 B1
                        , TWTM022 B2
                    WHERE B1.ENTER_CD = B2.ENTER_CD
                      AND B1.WORK_CLASS_CD = B2.WORK_CLASS_CD
               ) B
            ON B.ENTER_CD = A.ENTER_CD
           AND B.SABUN = A.SABUN
         WHERE A.ENTER_CD = #{ssnEnterCd}
           AND A.SABUN = #{searchSabun}
         ORDER BY B.OLD_SDATE
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkGroupPeriodList">
        SELECT A.ENTER_CD, B.WORK_CLASS_CD, B.WORK_GROUP_CD, A.SABUN
             , B.OLD_SDATE, B.OLD_EDATE
             , GREATEST(A.EMP_YMD, B.SDATE) AS SDATE, LEAST(NVL(A.RET_YMD, '99991231'), NVL(B.EDATE, '99991231')) AS EDATE
          FROM THRM100 A
          LEFT JOIN
               (
                   SELECT B1.ENTER_CD, B1.WORK_CLASS_CD, B2.WORK_GROUP_CD, B3.SABUN
                        , GREATEST(B1.SDATE, B2.SDATE, B3.SDATE) AS SDATE, LEAST(NVL(B1.EDATE, '99991231'), NVL(B2.EDATE, '99991231'), NVL(B3.EDATE, '99991231')) AS EDATE
                        , B3.SDATE AS OLD_SDATE, B3.EDATE AS OLD_EDATE
                     FROM TWTM021 B1
                        , TWTM032 B2
                        , TWTM033 B3
                    WHERE B1.ENTER_CD = B2.ENTER_CD
                      AND B1.WORK_CLASS_CD = B2.WORK_CLASS_CD
                      AND B2.ENTER_CD = B3.ENTER_CD
                      AND B2.WORK_CLASS_CD = B3.WORK_CLASS_CD
                      AND B2.WORK_GROUP_CD = B3.WORK_GROUP_CD
               ) B
            ON B.ENTER_CD = A.ENTER_CD
           AND B.SABUN = A.SABUN
         WHERE A.ENTER_CD = #{ssnEnterCd}
           AND A.SABUN = #{searchSabun}
           AND B.WORK_CLASS_CD = #{workClassCd}
    </select>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkNextClassSdate">
        SELECT NVL(MIN(A.SDATE), '99991231') AS SDATE
          FROM TWTM022 A
         WHERE A.ENTER_CD = #{ssnEnterCd}
           AND A.SABUN = #{searchSabun}
           AND A.SDATE > REPLACE(#{sdate}, '-', '')
    </select>

    <delete parameterType="map" id="deleteWtmPsnlWorkClasses">
        DELETE FROM TWTM022
         WHERE (ENTER_CD, SABUN, WORK_CLASS_CD, SDATE) IN
                <foreach collection="deleteRows" item="rm" open="(" close=")" separator=", ">
                    (#{rm.enterCd}, #{rm.sabun}, #{rm.workClassCd}, #{rm.oldSdate})
                </foreach>
    </delete>

    <delete parameterType="map" id="deleteWtmPsnlWorkGroups">
        DELETE FROM TWTM033
         WHERE (ENTER_CD, SABUN, WORK_CLASS_CD, WORK_GROUP_CD, SDATE) IN
                <foreach collection="deleteRows" item="rm" open="(" close=")" separator=", ">
                    (#{rm.enterCd}, #{rm.sabun}, #{rm.workClassCd}, #{rm.workGroupCd}, #{rm.oldSdate})
                </foreach>
    </delete>

    <delete parameterType="map" id="deleteWtmPsnlOldGroup">
        DELETE FROM TWTM033
         WHERE ENTER_CD = #{ssnEnterCd}
           AND SABUN = #{searchSabun}
           AND WORK_CLASS_CD = #{oldClassCd}
           AND WORK_GROUP_CD = #{oldGroupCd}
           AND SDATE = TO_CHAR(TO_DATE(#{oldSdate}, 'yyyy-MM-dd'), 'yyyyMMdd')
    </delete>

    <update parameterType="map" id="saveWtmPsnlWorkClasses">
        MERGE INTO TWTM022 T
        USING
        (
            SELECT ENTER_CD, WORK_CLASS_CD, SABUN, SDATE, EDATE, INSDATE, INSID, CHKDATE, CHKID
              FROM (
                        <foreach collection="mergeRows" item="rm" separator=" UNION ALL ">
                            SELECT #{ssnEnterCd} AS ENTER_CD
                                 , #{rm.workClassCd} AS WORK_CLASS_CD
                                 , #{rm.sabun} AS SABUN
                                 , #{rm.sdate} AS SDATE
                                 , #{rm.edate} AS EDATE
                                 , SYSDATE AS INSDATE
                                 , #{ssnSabun} AS INSID
                                 , SYSDATE AS CHKDATE
                                 , #{ssnSabun} AS CHKID
                              FROM DUAL
                        </foreach>
                   )
             WHERE ENTER_CD IS NOT NULL
               AND WORK_CLASS_CD IS NOT NULL
               AND SABUN IS NOT NULL
               AND SDATE IS NOT NULL
        ) S
        ON
        (
                T.ENTER_CD = S.ENTER_CD
            AND T.WORK_CLASS_CD = S.WORK_CLASS_CD
            AND T.SABUN = S.SABUN
            AND T.SDATE = S.SDATE
        )
        WHEN MATCHED THEN
            UPDATE SET T.EDATE = S.EDATE
                     , T.CHKDATE = S.CHKDATE
                     , T.CHKID = S.CHKID
        WHEN NOT MATCHED THEN
            INSERT
            (
                  T.ENTER_CD
                , T.WORK_CLASS_CD
                , T.SABUN
                , T.SDATE
                , T.EDATE
                , T.INSDATE
                , T.INSID
                , T.CHKDATE
                , T.CHKID
            )
            VALUES
            (
                  S.ENTER_CD
                , S.WORK_CLASS_CD
                , S.SABUN
                , S.SDATE
                , S.EDATE
                , S.INSDATE
                , S.INSID
                , S.CHKDATE
                , S.CHKID
            )
    </update>

    <update parameterType="map" id="saveWtmPsnlWorkGroups">
        MERGE INTO TWTM033 T
        USING
        (
            SELECT ENTER_CD, WORK_CLASS_CD, WORK_GROUP_CD, SABUN, SDATE, EDATE, CHKDATE, CHKID
              FROM (
                        <foreach collection="mergeRows" item="rm" separator=" UNION ALL ">
                            SELECT #{ssnEnterCd} AS ENTER_CD
                                 , #{rm.workClassCd} AS WORK_CLASS_CD
                                 , #{rm.workGroupCd} AS WORK_GROUP_CD
                                 , #{rm.sabun} AS SABUN
                                 , #{rm.sdate} AS SDATE
                                 , #{rm.edate} AS EDATE
                                 , SYSDATE AS CHKDATE
                                 , #{ssnSabun} AS CHKID
                              FROM DUAL
                        </foreach>
                   )
             WHERE ENTER_CD IS NOT NULL
               AND WORK_CLASS_CD IS NOT NULL
               AND WORK_GROUP_CD IS NOT NULL
               AND SABUN IS NOT NULL
               AND SDATE IS NOT NULL
        ) S
        ON
        (
                T.ENTER_CD = S.ENTER_CD
            AND T.WORK_CLASS_CD = S.WORK_CLASS_CD
            AND T.WORK_GROUP_CD = S.WORK_GROUP_CD
            AND T.SABUN = S.SABUN
            AND T.SDATE = S.SDATE
        )
        WHEN MATCHED THEN
            UPDATE SET T.EDATE = S.EDATE
                     , T.CHKDATE = S.CHKDATE
                     , T.CHKID = S.CHKID
        WHEN NOT MATCHED THEN
            INSERT
            (
                  T.ENTER_CD
                , T.WORK_CLASS_CD
                , T.WORK_GROUP_CD
                , T.SABUN
                , T.SDATE
                , T.EDATE
                , T.CHKDATE
                , T.CHKID
            )
            VALUES
            (
                  S.ENTER_CD
                , S.WORK_CLASS_CD
                , S.WORK_GROUP_CD
                , S.SABUN
                , S.SDATE
                , S.EDATE
                , S.CHKDATE
                , S.CHKID
            )
    </update>

    <update parameterType="map" id="updateWtmPsnlShiftWorkSchedule1">
        UPDATE TWTM102 A
           SET A.REAL_SYMD = NULL
             , A.REAL_SHM = NULL
             , A.REAL_EYMD = NULL
             , A.REAL_EHM = NULL
             , A.REAL_MM = NULL
             , A.CHKDATE = SYSDATE
             , A.CHKID = #{ssnSabun}
         WHERE A.ENTER_CD = #{ssnEnterCd}
           AND EXISTS
               (
                   SELECT 1
                     FROM TWTM035 T
                    WHERE T.ENTER_CD = A.ENTER_CD
                      AND T.SABUN = A.SABUN
                      AND T.YMD = A.YMD
                      AND T.WRK_DTL_ID = A.WRK_DTL_ID
                      AND T.SABUN IN
                            <foreach collection="deleteRows" item="rm" open="(" close=")" separator=", ">
                                #{rm.sabun}
                            </foreach>
                      AND NOT EXISTS
                          (
                              SELECT 1
                                FROM TWTM033
                               WHERE ENTER_CD = T.ENTER_CD
                                 AND SABUN = T.SABUN
                                 AND WORK_CLASS_CD = T.WORK_CLASS_CD
                                 AND T.YMD BETWEEN SDATE AND NVL(EDATE, '99991231')
                          )
               )
    </update>

    <delete parameterType="map" id="deleteWtmPsnlShiftWorkSchedule2">
        DELETE FROM TWTM035 A
         WHERE A.ENTER_CD = #{ssnEnterCd}
           AND A.SABUN IN
               <foreach collection="deleteRows" item="rm" open="(" close=")" separator=", ">
                   #{rm.sabun}
               </foreach>
           AND NOT EXISTS
               (
                   SELECT 1
                     FROM TWTM033
                    WHERE ENTER_CD = A.ENTER_CD
                      AND SABUN = A.SABUN
                      AND WORK_CLASS_CD = A.WORK_CLASS_CD
                      AND A.YMD BETWEEN SDATE AND NVL(EDATE, '99991231')
               )
    </delete>

    <select parameterType="map" resultType="cMap" id="getWtmPsnlWorkClassMaxYmd">
        SELECT MAX(LEAST(NVL(A.RET_YMD, '99991231'), NVL(B.YMD, TO_CHAR(SYSDATE, 'YYYYMMDD')))) AS MAX_YMD
          FROM THRM100 A
          LEFT JOIN TWTM101 B
            ON B.ENTER_CD = A.ENTER_CD
           AND B.SABUN = A.SABUN
           AND B.YMD BETWEEN REPLACE(#{sdate}, '-', '') AND REPLACE(#{edate}, '-', '')
        WHERE A.ENTER_CD = #{enterCd}
          AND A.SABUN = #{sabun}
    </select>
</mapper>