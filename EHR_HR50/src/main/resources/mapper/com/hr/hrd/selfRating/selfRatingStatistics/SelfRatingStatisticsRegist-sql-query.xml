<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrd.selfRating.selfRatingStatistics.regist">
		<select parameterType="map" resultType="cMap" id="getApprovalStatusListForSearching">

				<![CDATA[
					SELECT '3' AS CODE, '승인' AS CODE_NM FROM DUAL
					 UNION ALL
					SELECT '1' AS CODE, '요청' AS CODE_NM FROM DUAL
					 UNION ALL
					SELECT '99' AS CODE, '미등록' AS CODE_NM FROM DUAL
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getSelfRatingStatisticsRegistList">

				<![CDATA[
						SELECT T1.NAME
							 , T1.SABUN
							 , T1.ACTIVE_START_YMD
							 , T1.ORG_CD
							 , F_COM_GET_ORG_NM(T1.ENTER_CD,
												F_COM_GET_ORG_CD(T1.ENTER_CD, T1.SABUN, T1.ACTIVE_START_YMD),
												T1.ACTIVE_START_YMD,
												#{ssnLocaleCd})                                                  AS ORG_NM
							 , F_COM_GET_JIKGUB_CD(T1.ENTER_CD, T1.SABUN, T1.ACTIVE_START_YMD)                 AS JIKGUB_CD
							 , F_COM_GET_JIKWEE_CD(T1.ENTER_CD, T1.SABUN, T1.ACTIVE_START_YMD)                 AS JIKWEE_CD
							 , F_COM_GET_JIKCHAK_CD(T1.ENTER_CD, T1.SABUN, T1.ACTIVE_START_YMD)                AS JIKCHAK_CD
							 , F_COM_GET_JIKGUB_NM(T1.ENTER_CD, T1.SABUN, T1.ACTIVE_START_YMD,  #{ssnLocaleCd})  AS JIKGUB_NM
							 , F_COM_GET_JIKWEE_NM(T1.ENTER_CD, T1.SABUN, T1.ACTIVE_START_YMD,  #{ssnLocaleCd})  AS JIKWEE_NM
							 , F_COM_GET_JIKCHAK_NM(T1.ENTER_CD, T1.SABUN, T1.ACTIVE_START_YMD, #{ssnLocaleCd})  AS JIKCHAK_NM
							 , T2.ENTER_CD
							 , T2.ACTIVE_YYYY
							 , T2.HALF_GUBUN_TYPE
							 , T2.APPROVAL_REQ_YMD
							 , T2.APPROVAL_STATUS
							 , T2.APPROVAL_MAIN_ORG_CD
							 , T2.APPROVAL_ORG_CD
							 , T2.APPROVAL_EMP_NO
							 , NVL(T2.APPROVAL_EMP_NAME, F_COM_GET_NAMES(T2.ENTER_CD, T2.APPROVAL_EMP_NO, T1.ACTIVE_START_YMD)) AS APPROVAL_EMP_NAME
							 , T2.APPROVAL_YMD
	                         , CASE WHEN T2.APPROVAL_STATUS IS NOT NULL THEN 0 ELSE -1 END AS REGISTED
						FROM (SELECT A.ENTER_CD
								   , A.SABUN
								   , A.NAME
								   , B.ACTIVE_YYYY
								   , B.HALF_GUBUN_TYPE
								   , B.ACTIVE_START_YMD
								   , B.ACTIVE_END_YMD
								   , F_COM_GET_ORG_CD(B.ENTER_CD, A.SABUN, B.ACTIVE_START_YMD) AS ORG_CD
							  FROM THRM100 A,
								   (SELECT *
									FROM TCDPV000
									WHERE ENTER_CD        = #{ssnEnterCd}
									  AND ACTIVE_YYYY     = #{searchActiveYyyy}
									  AND HALF_GUBUN_TYPE = #{searchHalfGubunType}) B
							 WHERE A.ENTER_CD = B.ENTER_CD
							   AND F_COM_GET_STATUS_CD(A.ENTER_CD, A.SABUN, B.ACTIVE_START_YMD) = 'AA'
							 ) T1 LEFT OUTER JOIN
							 (SELECT *
								FROM TCDPV101 A
							  WHERE A.ENTER_CD        = #{ssnEnterCd}
								AND A.ACTIVE_YYYY     = #{searchActiveYyyy}
								AND A.HALF_GUBUN_TYPE = #{searchHalfGubunType}) T2
							 ON T1.ENTER_CD = T2.ENTER_CD
							AND T1.SABUN = T2.SABUN
							AND T1.ACTIVE_YYYY = T2.ACTIVE_YYYY
							AND T1.HALF_GUBUN_TYPE = T2.HALF_GUBUN_TYPE
						WHERE 1=1
						          ]]>
					<if test='searchOrgCd != null and !searchOrgCd.equals("")'>
			    		  AND T1.ORG_CD = TRIM(#{searchOrgCd})
					</if>
					<if test='searchSabunName != null and !searchSabunName.equals("")'>
			    		  AND (T1.SABUN LIKE '%' || #{searchSabunName} || '%' OR T1.NAME LIKE '%' || #{searchSabunName} || '%')
					</if>
					<if test='searchApprovalStatus != null and !searchApprovalStatus.equals("")'>
			    		  AND NVL(T2.APPROVAL_STATUS, '99') = TRIM(#{searchApprovalStatus})
					</if>
						ORDER BY CASE WHEN T2.APPROVAL_STATUS IS NOT NULL THEN 1 ELSE 2 END, T1.SABUN


		</select>

</mapper>
