<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="hrd.selfDevelopment.selfDevelopmentApp">
		<select parameterType="map" resultType="cMap" id="getWorkJobList">

                <![CDATA[
                	SELECT B.EDU_COURSE_NM
						      , (SELECT EDU_ORG_NM FROM TTRA001 WHERE ENTER_CD = B.ENTER_CD AND EDU_ORG_CD = B.EDU_ORG_CD) AS EDU_ORG_NM
						      , F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'L10010', B.EDU_BRANCH_CD) AS  EDU_BRANCH_NM 
						      , B.JOB_CD
						      , (CASE WHEN (SELECT COUNT(1) FROM TTRA301 C WHERE B.ENTER_CD = C.ENTER_CD AND B.EDU_SEQ = C.EDU_SEQ) > 0 THEN 'Y'ELSE 'N' END) AS COMP_YN
						      , D.CNT
						  FROM TTRA101 B -- survey
						     , (
						        SELECT ENTER_CD, EDU_SEQ, COUNT(1) AS CNT 
								  FROM TTRA121
								 WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN APPL_S_YMD AND APPL_E_YMD
								   AND ENTER_CD = TRIM(#{ssnEnterCd})
								 GROUP BY ENTER_CD, EDU_SEQ
						       ) D
						  WHERE B.ENTER_CD = TRIM(#{ssnEnterCd})
						    AND B.ENTER_CD = D.ENTER_CD(+)
						    AND B.EDU_SEQ  = D.EDU_SEQ(+) 
						            ]]>
					<if test='workAssignList != null and !workAssignList.equals("")'>
						    AND B.JOB_CD IN (
														                    SELECT AAA.JOB_CD
																			  FROM TCDPW501 AAA
																			 WHERE AAA.ENTER_CD    = #{ssnEnterCd}
																			   AND AAA.PRIOR_WORK_ASSIGN_CD IN (
																			   		SELECT PRIOR_WORK_ASSIGN_CD
																			   		  FROM TCDPW501 BBB
																			   		 WHERE BBB.ENTER_CD = #{ssnEnterCd}
																			   		   AND REGEXP_LIKE(BBB.WORK_ASSIGN_CD, REPLACE(#{workAssignList}, ',', '|'))
																			   )
																			   
																		  )
					</if>
						    AND B.EDU_SEQ NOT IN (SELECT BB.EDU_SEQ
						                                FROM TTRA301 AA, TTRA101 BB, TTRA121 CC
						                                WHERE AA.ENTER_CD = BB.ENTER_CD
						                                  AND AA.EDU_SEQ = BB.EDU_SEQ
						                                  AND AA.ENTER_CD = CC.ENTER_CD
						                                  AND AA.EDU_SEQ = CC.EDU_SEQ
						                                  AND AA.EDU_EVENT_SEQ = CC.EDU_EVENT_SEQ
						                                  AND AA.EDU_CONFIRM_TYPE = '1' /*수료여부 (고정값) */
						                                  AND AA.ENTER_CD = TRIM(#{ssnEnterCd}) /*회사코드*/
						                                  AND AA.SABUN = #{searchApplSabun} /*회사코드*/
						                           <if test='workAssignList != null and !workAssignList.equals("")'>
						                                  AND AA.JOB_CD IN (
														                    SELECT AAA.JOB_CD
																			  FROM TCDPW501 AAA
																			 WHERE AAA.ENTER_CD    = #{ssnEnterCd}
																			   AND AAA.PRIOR_WORK_ASSIGN_CD IN (
																			   		SELECT PRIOR_WORK_ASSIGN_CD
																			   		  FROM TCDPW501 BBB
																			   		 WHERE BBB.ENTER_CD = #{ssnEnterCd}
																			   		   AND REGEXP_LIKE(BBB.WORK_ASSIGN_CD, REPLACE(#{workAssignList}, ',', '|'))
																			   )
																			   
																		  )
												   </if>
						                                )
    					
		</select>
        <select parameterType="map" resultType="cMap" id="getSelfDevelopmentList">

                <![CDATA[
                    SELECT A.ACTIVE_YYYY, A.HALF_GUBUN_TYPE, A.SABUN, A.APPROVAL_REQ_YMD, A.APPROVAL_STATUS, B.MAIN_ORG_CD AS APPROVAL_MAIN_ORG_CD, B.MAIN_ORG_NM AS APPROVAL_MAIN_ORG_NM, C.ORG_CD AS APPROVAL_ORG_CD, C.ORG_NM AS APPROVAL_ORG_NM, A.APPROVAL_EMP_NO, A.APPROVAL_EMP_NAME, A.APPROVAL_YMD
                      ,A.APPROVAL_REQ_MEMO, A.APPROVAL_RETURN_MEMO
                      , F_COM_GET_PRIOR_ORG_NM(A.ENTER_CD, C.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS PRIOR_ORG_NM
                      FROM TCDPV301 A, TCDPW909 B, TORG101 C  -- TCDPW909(본부부점정보)를 관리하지 않음 (추후 사용하게 될 수도 있으니 쿼리에서 테이블을 걷어내진 않음)
                     WHERE A.ENTER_CD = #{ssnEnterCd}
                       AND A.ACTIVE_YYYY BETWEEN TRIM(#{sYear}) AND TRIM(#{eYear})
                       AND A.SABUN = TRIM(#{searchSabun})
                       AND A.ENTER_CD = B.ENTER_CD(+)
                       AND A.APPROVAL_MAIN_ORG_CD = B.MAIN_ORG_CD(+)
                       AND A.ENTER_CD = C.ENTER_CD (+)
                       AND A.APPROVAL_ORG_CD = C.ORG_CD (+)
                       AND NVL(A.APPROVAL_REQ_YMD,TO_CHAR(SYSDATE,'YYYYMMDD')) BETWEEN C.SDATE(+) AND NVL(C.EDATE(+),'99991231')
                     ORDER BY A.ACTIVE_YYYY, A.HALF_GUBUN_TYPE, A.SABUN
				]]>


        </select>


        <select parameterType="map" resultType="cMap" id="getSelfDevelopmentPrevStepStatusList">

                <![CDATA[
					SELECT T.ENTER_CD
					     , T.ACTIVE_YYYY || '_' || T.HALF_GUBUN_TYPE AS KEY_NM
					     , T.ACTIVE_YYYY
					     , T.HALF_GUBUN_TYPE
					     , CASE WHEN T.REPORT_REG_CNT > 0 THEN 'Y' ELSE 'N' END REPORT_COMPLETE_YN
					     , CASE WHEN (T.RATING_KNOWLEDGE_CNT + T.RATING_SKILL_CNT) > 0 AND T.RATING_APPROVAL_STATUS = '3' THEN 'Y' ELSE 'N' END RATING_COMPLETE_YN
					  FROM (
					        SELECT C.ENTER_CD
					             , C.ACTIVE_YYYY
					             , C.HALF_GUBUN_TYPE
					             , (SELECT COUNT(*)
					                  FROM TCDPV201 A
					                 WHERE A.ENTER_CD = C.ENTER_CD
					                   AND A.ACTIVE_YYYY = C.ACTIVE_YYYY
					                   AND A.HALF_GUBUN_TYPE = C.HALF_GUBUN_TYPE
					                   AND SABUN = C.SABUN
					               ) AS REPORT_REG_CNT
					             , (SELECT APPROVAL_STATUS
					                  FROM TCDPV101 A
					                 WHERE A.ENTER_CD = C.ENTER_CD
					                   AND A.ACTIVE_YYYY = C.ACTIVE_YYYY
					                   AND A.HALF_GUBUN_TYPE = C.HALF_GUBUN_TYPE
					                   AND A.SABUN = C.SABUN
					               ) AS RATING_APPROVAL_STATUS
					             , (SELECT COUNT(*)
					                  FROM TCDPV101 A
					                     , TCDPV102 B
					                 WHERE A.ENTER_CD = B.ENTER_CD
					                   AND A.ACTIVE_YYYY = B.ACTIVE_YYYY
					                   AND A.HALF_GUBUN_TYPE = B.HALF_GUBUN_TYPE
					                   AND A.SABUN = B.SABUN
					                   AND A.ENTER_CD = C.ENTER_CD
					                   AND A.ACTIVE_YYYY = C.ACTIVE_YYYY
					                   AND A.HALF_GUBUN_TYPE = C.HALF_GUBUN_TYPE
					                   AND A.SABUN = C.SABUN
					               ) AS RATING_KNOWLEDGE_CNT
					             , (SELECT COUNT(*)
					                  FROM TCDPV101 A
					                     , TCDPV104 B
					                 WHERE A.ENTER_CD = B.ENTER_CD
					                   AND A.ACTIVE_YYYY = B.ACTIVE_YYYY
					                   AND A.HALF_GUBUN_TYPE = B.HALF_GUBUN_TYPE
					                   AND A.SABUN = B.SABUN
					                   AND A.ENTER_CD = C.ENTER_CD
					                   AND A.ACTIVE_YYYY = C.ACTIVE_YYYY
					                   AND A.HALF_GUBUN_TYPE = C.HALF_GUBUN_TYPE
					                   AND A.SABUN = C.SABUN
					               ) AS RATING_SKILL_CNT
					          FROM (
					                SELECT G.ENTER_CD
					                     , G.ACTIVE_YYYY
					                     , G.HALF_GUBUN_TYPE
					                     , G.SABUN
					                  FROM (
					                        SELECT ENTER_CD
					                             , ACTIVE_YYYY
					                             , HALF_GUBUN_TYPE
					                             , SABUN
					                          FROM TCDPV101
					                         WHERE ENTER_CD = #{ssnEnterCd}
					                           AND SABUN = #{searchSabun}
					                         UNION ALL
					                        SELECT ENTER_CD
					                             , ACTIVE_YYYY
					                             , HALF_GUBUN_TYPE
					                             , SABUN
					                          FROM TCDPV201
					                         WHERE ENTER_CD = #{ssnEnterCd}
					                           AND SABUN = #{searchSabun}
					                       ) G
					                 GROUP BY G.ENTER_CD, G.ACTIVE_YYYY, G.HALF_GUBUN_TYPE, G.SABUN
					               ) C
					       ) T
					 ORDER BY T.ACTIVE_YYYY DESC, T.HALF_GUBUN_TYPE DESC
                ]]>


        </select>


        <select parameterType="map" resultType="cMap" id="getWorkAssignList">

                <![CDATA[
                    -- getWorkAssignList  자기계발계획서 작성/승인 화면에서 공동사용하므로 수정시 유의바랍니다.
                    SELECT A.SABUN,
                                 A.WORK_ASSIGN_CD,
                                 A.APPROVAL_SEQ,
                                 A.WORK_ASSIGN_CD_LARGE,
                                 B.WORK_ASSIGN_NM AS WORK_ASSIGN_NM_LARGE,
                                 A.WORK_ASSIGN_CD_MIDDLE,
                                 C.WORK_ASSIGN_NM AS WORK_ASSIGN_NM_MIDDLE,
                                 D.WORK_ASSIGN_NM,
                                 A.DETAIL_NM,
                                 A.ST_YMD,
                                 A.ED_YMD,
                                 A.EXE_YN,
                                 A.APPROVAL_TYPE,
                                 A.APPROVAL_REQ_YMD,
                                 A.APPROVAL_REQ_MEMO,
                                 A.APPROVAL_STATUS,
                                 A.APPROVAL_MAIN_ORG_CD,
                                 E.MAIN_ORG_NM AS APPROVAL_MAIN_ORG_NM,
                                 F_COM_GET_PRIOR_ORG_NM(A.ENTER_CD, A.APPROVAL_ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS PRIOR_ORG_NM,
                                 A.APPROVAL_ORG_CD,
                                 F.ORG_NM AS APPROVAL_ORG_NM,
                                 A.APPROVAL_EMP_NO,
                                 A.APPROVAL_EMP_NAME,
                                 A.APPROVAL_YMD,
                                 A.APPROVAL_RETURN_MEMO,
                                 A.ORDER_EMP_NO,
                                 A.ORDER_EMP_NAME,
                                 A.ORDER_YMD,
                                 A.ORDER_RETURN_MEMO,
                                 A.DETAIL_CD,
                                 '0' AS WORK_NOTE
                       FROM TCDPU161 A, TCDPW501 B, TCDPW501 C, TCDPW501 D, TCDPW909 E, TORG101 F, TCDPW505 G  -- TCDPW909(본부부점정보)를 관리하지 않음 (추후 사용하게 될 수도 있으니 쿼리에서 테이블을 걷어내진 않음)
                        WHERE A.ENTER_CD = #{ssnEnterCd}
                          AND A.SABUN = #{searchSabun}
                          AND A.WORK_ASSIGN_CD LIKE '%' || #{searchWorkAssignCd} || '%'
                          AND A.EXE_YN LIKE #{searchExeYn}
                          AND ( A.APPROVAL_STATUS = '5' OR A.APPROVAL_STATUS IS NULL )
                          AND A.ENTER_CD = B.ENTER_CD
                          AND A.WORK_ASSIGN_CD_LARGE = B.WORK_ASSIGN_CD
                          AND A.ENTER_CD = C.ENTER_CD
                          AND A.WORK_ASSIGN_CD_MIDDLE = C.WORK_ASSIGN_CD
                          AND A.ENTER_CD = D.ENTER_CD
                          AND A.WORK_ASSIGN_CD = D.WORK_ASSIGN_CD
                          AND A.ENTER_CD = E.ENTER_CD(+)
                          AND A.APPROVAL_MAIN_ORG_CD = E.MAIN_ORG_CD(+)
                          AND A.ENTER_CD = F.ENTER_CD(+)
                          AND A.APPROVAL_ORG_CD = F.ORG_CD(+)
                          AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN F.SDATE(+) AND NVL(F.EDATE(+),'99991231')
                          AND A.ENTER_CD = G.ENTER_CD(+)
                          AND A.WORK_ASSIGN_CD = G.WORK_ASSIGN_CD(+)
                     ORDER BY A.ST_YMD DESC, B.WORK_ASSIGN_NM, A.APPROVAL_TYPE DESC, A.ED_YMD DESC



				]]>


        </select>

        <select parameterType="map" resultType="cMap" id="getSelfSkillAndDevPlanList">

                <![CDATA[
                	-- getSelfSkillAndDevPlanList  자기계발계획서 작성/승인 화면에서 공동사용하므로 수정시 유의바랍니다.
                    SELECT XX.*, #{searchYyyy} AS ACTIVE_YYYY, #{searchHalfGubunType} AS HALF_GUBUN_TYPE, #{searchSabun} AS SABUN, YY.*
                    FROM (
                            SELECT X.ORDERNO, X.GUBUN, X.GUBUN_CODE, X.CODE, Y.CODE_NM, SELF_GRADE, WORK_GRADE ,HOPE1_GRADE,HOPE2_GRADE, HOPE3_GRADE
                            FROM (
                                    SELECT ORDERNO, GUBUN, GUBUN_CODE, CODE,
                                             MAX(SELF_GRADE) AS SELF_GRADE ,
                                             MAX(WORK_GRADE) AS WORK_GRADE ,
                                             MAX(HOPE1_GRADE)  AS HOPE1_GRADE ,
                                             MAX(HOPE2_GRADE)  AS HOPE2_GRADE ,
                                             MAX(HOPE3_GRADE)  AS HOPE3_GRADE
                                    FROM
                                    (
                                         SELECT ORDERNO, GUBUN,  GUBUN_CODE, CODE||'' AS CODE, RATING_GRADE  AS SELF_GRADE, NULL AS WORK_GRADE, '' AS HOPE1_GRADE , '' AS HOPE2_GRADE , '' AS HOPE3_GRADE
                                         FROM TCDPV101 A
                                                   ,(
                                                    SELECT TO_CHAR(BB.SEQ) AS ORDERNO
					                                     , BB.TRM_GUBUN_NM AS GUBUN
					                                     , BB.TRM_GUBUN_CD AS GUBUN_CODE
					                                     , AA.ENTER_CD
					                                     , AA.ACTIVE_YYYY
					                                     , AA.HALF_GUBUN_TYPE
					                                     , AA.SABUN
					                                     , AA.KNOWLEDGE_CD AS CODE
					                                     , RATING_GRADE
					                                FROM TCDPV102 AA, TCDPW200 BB
					                                WHERE AA.ENTER_CD = BB.ENTER_CD
					                                  AND BB.TRM_GUBUN_CD = 'T'
					                                  AND AA.ENTER_CD = #{ssnEnterCd}
					                                  AND AA.ACTIVE_YYYY = #{searchYyyy}
					                                  AND AA.HALF_GUBUN_TYPE = #{searchHalfGubunType}
					                                  AND AA.SABUN = #{searchSabun}
                                                    UNION ALL
                                                    SELECT TO_CHAR(BB.SEQ) AS ORDERNO
					                                     , BB.TRM_GUBUN_NM AS GUBUN
					                                     , BB.TRM_GUBUN_CD AS GUBUN_CODE
	                                                     , AA.ENTER_CD
	                                                     , AA.ACTIVE_YYYY
	                                                     , AA.HALF_GUBUN_TYPE
	                                                     , AA.SABUN
	                                                     , AA.SKILL_CD  AS CODE
	                                                     , RATING_GRADE
                                                    FROM TCDPV104 AA, TCDPW200 BB
                                                    WHERE AA.ENTER_CD = BB.ENTER_CD
					                                  AND BB.TRM_GUBUN_CD = 'S'
					                                  AND AA.ENTER_CD = #{ssnEnterCd}
					                                  AND AA.ACTIVE_YYYY = #{searchYyyy}
					                                  AND AA.HALF_GUBUN_TYPE = #{searchHalfGubunType}
					                                  AND AA.SABUN = #{searchSabun}
                                                    ) B
                                        WHERE A.ENTER_CD = B.ENTER_CD
                                              AND A.ACTIVE_YYYY = B.ACTIVE_YYYY  AND  A.HALF_GUBUN_TYPE = B.HALF_GUBUN_TYPE AND A.SABUN = B.SABUN
                                              AND  A.ENTER_CD = #{ssnEnterCd} AND   A.ACTIVE_YYYY = #{searchYyyy} AND   A.HALF_GUBUN_TYPE = #{searchHalfGubunType} AND A.SABUN = #{searchSabun}

                                         UNION ALL


                                         SELECT ORDERNO, GUBUN,  GUBUN_CODE, CODE,  '' AS SELF_GRADE, WORK_GRADE, '' AS HOPE1_GRADE , '' AS HOPE2_GRADE , '' AS HOPE3_GRADE
                                         FROM (
                                                SELECT ORDERNO, GUBUN,  GUBUN_CODE, CODE,  MAX(HOLD_LEVEL)  AS WORK_GRADE
                                                FROM
                                                        ( SELECT DISTINCT  SABUN, KNOWLEDGE_CD AS CODE, HOLD_LEVEL, TECH_BIZ_TYPE AS GUBUN_CODE,
                                                                                        (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = B.ENTER_CD AND TRM_GUBUN_CD = B.TECH_BIZ_TYPE) AS GUBUN,
                                                                                        DECODE(TECH_BIZ_TYPE,'T','2','3') AS ORDERNO
                                                          FROM  TCDPU161 A, TCDPW513 B
                                                          WHERE A.ENTER_CD = B.ENTER_CD AND  A.WORK_ASSIGN_CD = B.WORK_ASSIGN_CD
                                                                AND A.ENTER_CD = #{ssnEnterCd}  AND A.SABUN = #{searchSabun} AND A.EXE_YN  = 'Y'
                                                                AND ( A.APPROVAL_STATUS = '5' OR A.APPROVAL_STATUS IS NULL )
                                                          UNION ALL
                                                          SELECT DISTINCT SABUN, SKIL_CD AS CODE, HOLD_LEVEL, 'S' AS GUBUN_CODE, (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = B.ENTER_CD AND TRM_GUBUN_CD = 'S') AS GUBUN,
                                                                          '1' AS ORDERNO
                                                          FROM  TCDPU161 A,  TCDPW514 B
                                                          WHERE A.ENTER_CD = B.ENTER_CD AND  A.WORK_ASSIGN_CD = B.WORK_ASSIGN_CD
                                                                AND A.ENTER_CD = #{ssnEnterCd}  AND A.SABUN = #{searchSabun} AND A.EXE_YN  = 'Y'
                                                                AND ( A.APPROVAL_STATUS = '5' OR A.APPROVAL_STATUS IS NULL )  ) B
                                                 GROUP BY 	ORDERNO, GUBUN,  GUBUN_CODE, CODE	)

                                        UNION ALL

                                        SELECT  ORDERNO, GUBUN, GUBUN_CODE,   CODE,  '' AS SELF_GRADE, '' AS WORK_GREADE, HOPE1_GRADE , HOPE2_GRADE, HOPE3_GRADE
                                        FROM (
                                                SELECT  ORDERNO, GUBUN, GUBUN_CODE,  CODE,  HOPE1_GRADE, NULL AS HOPE2_GRADE, NULL AS HOPE3_GRADE
                                                FROM  TCDPV201 A, TCDPW501 B,
                                                            (SELECT  DISTINCT ENTER_CD, WORK_ASSIGN_CD, KNOWLEDGE_CD AS CODE, TECH_BIZ_TYPE AS GUBUN_CODE ,
                                                                          (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = A.ENTER_CD AND TRM_GUBUN_CD = A.TECH_BIZ_TYPE) AS GUBUN , HOLD_LEVEL  AS HOPE1_GRADE
                                                                          , DECODE(TECH_BIZ_TYPE,'T','2','3') AS ORDERNO
                                                             FROM  TCDPW513 A
                                                             UNION ALL
                                                             SELECT DISTINCT ENTER_CD, WORK_ASSIGN_CD, SKIL_CD AS CODE, 'S' AS GUBUN_CODE ,  (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = B.ENTER_CD AND TRM_GUBUN_CD = 'S') AS GUBUN ,  HOLD_LEVEL   AS HOPE1_GRADE
                                                                    , '1' AS ORDERNO
                                                             FROM  TCDPW514 B
                                                             ) D
                                                WHERE A.ENTER_CD = B.ENTER_CD AND  A.WORK_ASSIGN_CD_1 = B.WORK_ASSIGN_CD
                                                        AND B.ENTER_CD = D.ENTER_CD AND  B.WORK_ASSIGN_CD = D.WORK_ASSIGN_CD
                                                        AND B.USE_YN = 'Y'
                                                        AND  A.ENTER_CD = #{ssnEnterCd} AND   A.ACTIVE_YYYY = #{searchYyyy} AND   A.HALF_GUBUN_TYPE = #{searchHalfGubunType} AND A.SABUN = #{searchSabun}
                                                UNION ALL
                                                SELECT  ORDERNO, GUBUN, GUBUN_CODE,   CODE, NULL AS   HOPE1_GRADE, HOPE2_GRADE, NULL AS HOPE3_GRADE
                                                FROM  TCDPV201 A, TCDPW501 B,
                                                            (SELECT  DISTINCT ENTER_CD, WORK_ASSIGN_CD, KNOWLEDGE_CD AS CODE, TECH_BIZ_TYPE AS GUBUN_CODE ,
                                                                          (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = A.ENTER_CD AND TRM_GUBUN_CD = A.TECH_BIZ_TYPE) AS GUBUN , HOLD_LEVEL  AS HOPE2_GRADE
                                                                          , DECODE(TECH_BIZ_TYPE,'T','2','3') AS ORDERNO
                                                             FROM  TCDPW513 A
                                                             UNION ALL
                                                             SELECT DISTINCT ENTER_CD, WORK_ASSIGN_CD, SKIL_CD AS CODE, 'S' AS GUBUN_CODE ,  (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = B.ENTER_CD AND TRM_GUBUN_CD = 'S') AS GUBUN ,  HOLD_LEVEL   AS HOPE1_GRADE
                                                                    , '1' AS ORDERNO
                                                             FROM  TCDPW514 B
                                                             ) D
                                                WHERE A.ENTER_CD = B.ENTER_CD AND  A.WORK_ASSIGN_CD_2 = B.WORK_ASSIGN_CD
                                                        AND B.ENTER_CD = D.ENTER_CD AND  B.WORK_ASSIGN_CD = D.WORK_ASSIGN_CD
                                                        AND B.USE_YN = 'Y'
                                                        AND  A.ENTER_CD = #{ssnEnterCd} AND   A.ACTIVE_YYYY = #{searchYyyy} AND   A.HALF_GUBUN_TYPE = #{searchHalfGubunType} AND A.SABUN = #{searchSabun}
                                                UNION ALL
                                                SELECT  ORDERNO, GUBUN, GUBUN_CODE,   CODE,   NULL AS HOPE1_GRADE, NULL AS HOPE2_GRADE, HOPE3_GRADE
                                                FROM  TCDPV201 A, TCDPW501 B,
                                                            (SELECT  DISTINCT ENTER_CD, WORK_ASSIGN_CD, KNOWLEDGE_CD AS CODE, TECH_BIZ_TYPE AS GUBUN_CODE ,
                                                                          (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = A.ENTER_CD AND TRM_GUBUN_CD = A.TECH_BIZ_TYPE) AS GUBUN , HOLD_LEVEL  AS HOPE3_GRADE
                                                                          , DECODE(TECH_BIZ_TYPE,'T','2','3') AS ORDERNO
                                                             FROM  TCDPW513 A
                                                             UNION ALL
                                                             SELECT DISTINCT ENTER_CD, WORK_ASSIGN_CD, SKIL_CD AS CODE, 'S' AS GUBUN_CODE ,  (SELECT TRM_GUBUN_NM FROM TCDPW200 WHERE ENTER_CD = B.ENTER_CD AND TRM_GUBUN_CD = 'S') AS GUBUN ,  HOLD_LEVEL   AS HOPE1_GRADE
                                                                    , '1' AS ORDERNO
                                                             FROM  TCDPW514 B
                                                             ) D
                                                WHERE A.ENTER_CD = B.ENTER_CD AND  A.WORK_ASSIGN_CD_3 = B.WORK_ASSIGN_CD
                                                        AND B.ENTER_CD = D.ENTER_CD AND  B.WORK_ASSIGN_CD = D.WORK_ASSIGN_CD
                                                        AND B.USE_YN = 'Y'
                                                        AND  A.ENTER_CD = #{ssnEnterCd} AND   A.ACTIVE_YYYY = #{searchYyyy} AND   A.HALF_GUBUN_TYPE = #{searchHalfGubunType} AND A.SABUN = #{searchSabun}
                                        ) AA
                                    ) BB
                                    GROUP BY ORDERNO, GUBUN, GUBUN_CODE, CODE
                            )  X
                            ,
                            (SELECT TECH_BIZ_TYPE AS GUBUN_CODE,  KNOWLEDGE_CD AS CODE, KNOWLEDGE_NM  AS CODE_NM FROM  TCDPW201 WHERE ENTER_CD = #{ssnEnterCd} AND USE_YN = 'Y'
                             UNION ALL
                             SELECT 'S' AS GUBUN_CODE,  SKILL_CD, SKILL_NM  FROM  TCDPW203 WHERE ENTER_CD = #{ssnEnterCd} AND  USE_YN = 'Y'
                             ) Y

                            WHERE X.GUBUN_CODE = Y.GUBUN_CODE
                                  AND X.CODE = Y.CODE
                        ORDER BY GUBUN DESC , CODE
                        ) XX,
                        (
                            SELECT  --A.ACTIVE_YYYY, A.HALF_GUBUN_TYPE, A.SABUN,
                                    B.TRM_CD, B.EDUCATION,  B.POINT,  B.EDU_PRE_YMD
                                    , B.EDU_DEV_PLAN , DECODE(B.CONFIRM_STATUS,'1','1','0') AS CONFIRM_STATUS
                            FROM TCDPV301 A , TCDPV302 B 
                            WHERE A.ENTER_CD = B.ENTER_CD
                                  AND A.ACTIVE_YYYY =  B.ACTIVE_YYYY
                                  AND A.HALF_GUBUN_TYPE = B.HALF_GUBUN_TYPE
                                  AND A.SABUN = B.SABUN
                                 
                                  AND A.ENTER_CD = #{ssnEnterCd}
                                  AND A.ACTIVE_YYYY = #{searchYyyy}
                                  AND A.HALF_GUBUN_TYPE = #{searchHalfGubunType}
                                  AND A.SABUN = #{searchSabun}

                         ) YY
                    WHERE XX.CODE = YY.TRM_CD(+)
                    ORDER BY ORDERNO, CODE

				]]>


        </select>

        <select parameterType="map" resultType="cMap" id="getSelfReportMoveHopeList">

                <![CDATA[
                    -- getSelfReportMoveHopeList  자기계발계획서 작성/승인 화면에서 공동사용하므로 수정시 유의바랍니다.
                    SELECT A.ACTIVE_YYYY, A.HALF_GUBUN_TYPE, A.SABUN,
                           A.CAREER_TARGET_CD,
                           D.CAREER_MAP,
                           A.WORK_ASSIGN_CD_1, A.WORK_ASSIGN_CD_2, A.WORK_ASSIGN_CD_3,
                           A.MOVE_HOPE_TIME, A.MOVE_HOPE_CD, A.MOVE_HOPE_DESC,
                           A.MAIN_ORG_CD_1, A.MAIN_ORG_CD_2, A.MAIN_ORG_CD_3,
                           ( SELECT MAIN_ORG_NM FROM TCDPW909 WHERE ENTER_CD = A.ENTER_CD AND MAIN_ORG_CD = A.MAIN_ORG_CD_1 ) AS MAIN_ORG_NM_1,
                           ( SELECT MAIN_ORG_NM FROM TCDPW909 WHERE ENTER_CD = A.ENTER_CD AND MAIN_ORG_CD = A.MAIN_ORG_CD_2 ) AS MAIN_ORG_NM_2,
                           ( SELECT MAIN_ORG_NM FROM TCDPW909 WHERE ENTER_CD = A.ENTER_CD AND MAIN_ORG_CD = A.MAIN_ORG_CD_2 ) AS MAIN_ORG_NM_3,
                           A.MAIN_ORG_CD_MOVE_HOPE_TIME, A.MAIN_ORG_CD_MOVE_HOPE_CD, A.MAIN_ORG_CD_MOVE_HOPE_DESC,
                           A.TRANSFER_EMP_NO, A.TRANSFER_DESC,
                           A.SUCCESSOR_EMP_NO_1, A.SUCCESSOR_DESC_1,
                           A.SUCCESSOR_EMP_NO_2, A.SUCCESSOR_DESC_2,
                           A.SUCCESSOR_EMP_NO_3, A.SUCCESSOR_DESC_3,
                           A.APPROVAL_REQ_YMD, A.APPROVAL_STATUS,
                           A.APPROVAL_MAIN_ORG_CD, B.MAIN_ORG_NM AS APPROVAL_MAIN_ORG_NM,
                           A.APPROVAL_ORG_CD, C.ORG_NM AS APPROVAL_ORG_NM,
                           A.APPROVAL_EMP_NO, A.APPROVAL_EMP_NAME, A.APPROVAL_YMD,
                           D.CAREER_TARGET_NM, D.CAREER_TARGET_TYPE, D.CAREER_TARGET_DESC,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_TYPE    = 'G'
                                AND ROWNUM = 1
                              START WITH WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_1
                            CONNECT BY WORK_ASSIGN_CD   = PRIOR PRIOR_WORK_ASSIGN_CD
                           ) AS WORK_ASSIGN_NM_LARGE_1,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_TYPE    = 'M'
                                AND ROWNUM = 1
                              START WITH WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_1
                            CONNECT BY WORK_ASSIGN_CD   = PRIOR PRIOR_WORK_ASSIGN_CD
                           ) AS WORK_ASSIGN_NM_MIDDLE_1,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_CD      = A.WORK_ASSIGN_CD_1
                           ) AS WORK_ASSIGN_NM_1,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_TYPE    = 'G'
                                AND ROWNUM = 1
                              START WITH WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_2
                            CONNECT BY WORK_ASSIGN_CD   = PRIOR PRIOR_WORK_ASSIGN_CD
                           ) AS WORK_ASSIGN_NM_LARGE_2,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_TYPE    = 'M'
                                AND ROWNUM = 1
                              START WITH WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_2
                            CONNECT BY WORK_ASSIGN_CD   = PRIOR PRIOR_WORK_ASSIGN_CD
                           ) AS WORK_ASSIGN_NM_MIDDLE_2,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_CD      = A.WORK_ASSIGN_CD_2
                           ) AS WORK_ASSIGN_NM_2,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_TYPE    = 'G'
                                AND ROWNUM = 1
                              START WITH WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_3
                            CONNECT BY WORK_ASSIGN_CD   = PRIOR PRIOR_WORK_ASSIGN_CD
                           ) AS WORK_ASSIGN_NM_LARGE_3,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_TYPE    = 'M'
                                AND ROWNUM = 1
                              START WITH WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_3
                            CONNECT BY WORK_ASSIGN_CD   = PRIOR PRIOR_WORK_ASSIGN_CD
                           ) AS WORK_ASSIGN_NM_MIDDLE_3,
                           ( SELECT WORK_ASSIGN_NM
                               FROM TCDPW501
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_CD      = A.WORK_ASSIGN_CD_3
                           ) AS WORK_ASSIGN_NM_3,
                           ( SELECT COUNT(*)
                               FROM TCDPV201
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND ACTIVE_YYYY         = A.ACTIVE_YYYY
                                AND HALF_GUBUN_TYPE     = A.HALF_GUBUN_TYPE
                                AND WORK_ASSIGN_CD_1    = A.WORK_ASSIGN_CD_1
                           ) AS WORK_ASSIGN_APP_CNT_1,
                           ( SELECT COUNT(*)
                               FROM TCDPU161
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_CD      = A.WORK_ASSIGN_CD_1
                                AND EXE_YN              = 'Y'
                                AND ( APPROVAL_STATUS   = '5' OR APPROVAL_STATUS IS NULL )
                           ) AS WORK_ASSIGN_CUR_CNT_1,
                           (
                                SELECT DECODE(SUBSTR(TERM, 0,INSTR(NVL(TERM,0),'.')-1),'','', SUBSTR(TERM, 0,INSTR(NVL(TERM,0),'.')-1)||'년') ||
                                       DECODE(SUBSTR(TERM, INSTR(NVL(TERM,0),'.')+1, LENGTH(TERM)),'','', SUBSTR(TERM, INSTR(NVL(TERM,0),'.')+1, LENGTH(TERM))||'개월') AS WORK_ASSIGN_WRK_EXP_1
                                FROM (
                                        SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD ,
                                               ROUND(ROUND(SUM(MONTHS_BETWEEN(TO_DATE(DECODE(ED_YMD,'99991231',TO_CHAR(SYSDATE,'YYYYMMDD'),ED_YMD),'YYYYMMDD') , TO_DATE(ST_YMD,'YYYYMMDD')))) / 12 , 1)   AS TERM
                                        FROM (
                                            SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            FROM TCDPU161
                                            WHERE ENTER_CD = #{ssnEnterCd}
                                            AND ED_YMD > '20070630'
                                            AND APPROVAL_TYPE <> '3'
                                            AND APPROVAL_STATUS = '5'
                                            GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            UNION ALL
                                            SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            FROM TCDPU161
                                            WHERE ENTER_CD = #{ssnEnterCd}
                                            AND ED_YMD <= '20070630'
                                            AND APPROVAL_STATUS = '5'
                                            GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                        )
                                        GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD
                                    )
                                WHERE  ENTER_CD = A.ENTER_CD
                                    AND SABUN = A.SABUN
                                    AND WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_1
                            ) AS WORK_ASSIGN_WRK_EXP_1,
                           ( SELECT COUNT(*)
                               FROM TCDPV201
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND ACTIVE_YYYY         = A.ACTIVE_YYYY
                                AND HALF_GUBUN_TYPE     = A.HALF_GUBUN_TYPE
                                AND WORK_ASSIGN_CD_2    = A.WORK_ASSIGN_CD_2
                           ) AS WORK_ASSIGN_APP_CNT_2,
                           ( SELECT COUNT(*)
                               FROM TCDPU161
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_CD      = A.WORK_ASSIGN_CD_2
                                AND EXE_YN              = 'Y'
                                AND ( APPROVAL_STATUS   = '5' OR APPROVAL_STATUS IS NULL )
                           ) AS WORK_ASSIGN_CUR_CNT_2,
                           ( SELECT DECODE(SUBSTR(TERM, 0,INSTR(NVL(TERM,0),'.')-1),'','', SUBSTR(TERM, 0,INSTR(NVL(TERM,0),'.')-1)||'년') ||
                                       DECODE(SUBSTR(TERM, INSTR(NVL(TERM,0),'.')+1, LENGTH(TERM)),'','', SUBSTR(TERM, INSTR(NVL(TERM,0),'.')+1, LENGTH(TERM))||'개월') AS WORK_ASSIGN_WRK_EXP_1
                                FROM (
                                        SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD ,
                                               ROUND(ROUND(SUM(MONTHS_BETWEEN(TO_DATE(DECODE(ED_YMD,'99991231',TO_CHAR(SYSDATE,'YYYYMMDD'),ED_YMD),'YYYYMMDD') , TO_DATE(ST_YMD,'YYYYMMDD')))) / 12 , 1)   AS TERM
                                        FROM (
                                            SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            FROM TCDPU161
                                            WHERE ENTER_CD = #{ssnEnterCd}
                                            AND ED_YMD > '20070630'
                                            AND APPROVAL_TYPE <> '3'
                                            AND APPROVAL_STATUS = '5'
                                            GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            UNION ALL
                                            SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            FROM TCDPU161
                                            WHERE ENTER_CD = #{ssnEnterCd}
                                            AND ED_YMD <= '20070630'
                                            AND APPROVAL_STATUS = '5'
                                            GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                        )
                                        GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD
                                    )
                                WHERE  ENTER_CD = A.ENTER_CD
                                    AND SABUN = A.SABUN
                                    AND WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_2
                           ) AS WORK_ASSIGN_WRK_EXP_2,
                           ( SELECT COUNT(*)
                               FROM TCDPV201
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND ACTIVE_YYYY         = A.ACTIVE_YYYY
                                AND HALF_GUBUN_TYPE     = A.HALF_GUBUN_TYPE
                                AND WORK_ASSIGN_CD_3    = A.WORK_ASSIGN_CD_3
                           ) AS WORK_ASSIGN_APP_CNT_3,
                           ( SELECT COUNT(*)
                               FROM TCDPU161
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND WORK_ASSIGN_CD      = A.WORK_ASSIGN_CD_3
                                AND EXE_YN              = 'Y'
                                AND ( APPROVAL_STATUS   = '5' OR APPROVAL_STATUS IS NULL )
                           ) AS WORK_ASSIGN_CUR_CNT_3,
                           ( SELECT DECODE(SUBSTR(TERM, 0,INSTR(NVL(TERM,0),'.')-1),'','', SUBSTR(TERM, 0,INSTR(NVL(TERM,0),'.')-1)||'년') ||
                                       DECODE(SUBSTR(TERM, INSTR(NVL(TERM,0),'.')+1, LENGTH(TERM)),'','', SUBSTR(TERM, INSTR(NVL(TERM,0),'.')+1, LENGTH(TERM))||'개월') AS WORK_ASSIGN_WRK_EXP_1
                                FROM (
                                        SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD ,
                                               ROUND(ROUND(SUM(MONTHS_BETWEEN(TO_DATE(DECODE(ED_YMD,'99991231',TO_CHAR(SYSDATE,'YYYYMMDD'),ED_YMD),'YYYYMMDD') , TO_DATE(ST_YMD,'YYYYMMDD')))) / 12 , 1)   AS TERM
                                        FROM (
                                            SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            FROM TCDPU161
                                            WHERE ENTER_CD = #{ssnEnterCd}
                                            AND ED_YMD > '20070630'
                                            AND APPROVAL_TYPE <> '3'
                                            AND APPROVAL_STATUS = '5'
                                            GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            UNION ALL
                                            SELECT ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                            FROM TCDPU161
                                            WHERE ENTER_CD = #{ssnEnterCd}
                                            AND ED_YMD <= '20070630'
                                            AND APPROVAL_STATUS = '5'
                                            GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD, ST_YMD, ED_YMD
                                        )
                                        GROUP BY ENTER_CD, SABUN, WORK_ASSIGN_CD
                                    )
                                WHERE  ENTER_CD = A.ENTER_CD
                                    AND SABUN = A.SABUN
                                    AND WORK_ASSIGN_CD = A.WORK_ASSIGN_CD_3
                           ) AS WORK_ASSIGN_WRK_EXP_3,
                           ( SELECT COUNT(*)
                               FROM TCDPV201
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND ACTIVE_YYYY         = A.ACTIVE_YYYY
                                AND HALF_GUBUN_TYPE     = A.HALF_GUBUN_TYPE
                                AND MAIN_ORG_CD_1       = A.MAIN_ORG_CD_1
                           ) AS MAIN_ORG_APP_CNT_1,
                           ( SELECT COUNT(*)
                               FROM TCDPV201
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND ACTIVE_YYYY         = A.ACTIVE_YYYY
                                AND HALF_GUBUN_TYPE     = A.HALF_GUBUN_TYPE
                                AND MAIN_ORG_CD_2       = A.MAIN_ORG_CD_2
                           ) AS MAIN_ORG_APP_CNT_2,
                           ( SELECT COUNT(*)
                               FROM TCDPV201
                              WHERE ENTER_CD            = A.ENTER_CD
                                AND ACTIVE_YYYY         = A.ACTIVE_YYYY
                                AND HALF_GUBUN_TYPE     = A.HALF_GUBUN_TYPE
                                AND MAIN_ORG_CD_3       = A.MAIN_ORG_CD_3
                           ) AS MAIN_ORG_APP_CNT_3
                      FROM TCDPV201 A, TCDPW909 B, TORG101 C, TCDPV200 D  -- TCDPW909(본부부점정보)를 관리하지 않음 (추후 사용하게 될 수도 있으니 쿼리에서 테이블을 걷어내진 않음)
                     WHERE A.ENTER_CD         = #{ssnEnterCd}
                       AND A.ACTIVE_YYYY      = #{searchYyyy}
                       AND A.HALF_GUBUN_TYPE  = #{searchHalfGubunType}
                       AND A.SABUN            = #{searchSabun}
                       AND B.ENTER_CD(+)      = A.ENTER_CD
                       AND B.MAIN_ORG_CD(+)   = A.APPROVAL_MAIN_ORG_CD
                       AND C.ENTER_CD(+)      = A.ENTER_CD
                       AND C.ORG_CD(+)        = A.APPROVAL_ORG_CD
                       AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.SDATE(+) AND NVL(C.EDATE(+),'99991231')
                       AND A.ENTER_CD         = D.ENTER_CD(+)
                       AND A.CAREER_TARGET_CD = D.CAREER_TARGET_CD(+)
                     ORDER BY A.ACTIVE_YYYY, A.HALF_GUBUN_TYPE, A.SABUN



				]]>


        </select>


        <update parameterType="map" id="saveSelfDevelopmentApp">

                    MERGE INTO TCDPV301 T
                        USING (
                                SELECT A.ENTER_CD
                                     , A.ACTIVE_YYYY
                                     , A.HALF_GUBUN_TYPE
                                     , A.SABUN
                                     , A.APPROVAL_REQ_YMD
                                     , A.APPROVAL_REQ_MEMO
                                     , A.APPROVAL_STATUS
                                     , A.APPROVAL_MAIN_ORG_CD
                                     , A.APPROVAL_ORG_CD
                                     , A.APPROVAL_EMP_NO
                                     , A.APPROVAL_EMP_NAME
                                     , A.APPROVAL_YMD
                                     , A.APPROVAL_RETURN_MEMO
                                     , A.CHKDATE
                                     , A.CHKID
                                  FROM (
                                        SELECT NULL AS ENTER_CD
                                             , NULL AS ACTIVE_YYYY
                                             , NULL AS HALF_GUBUN_TYPE
                                             , NULL AS SABUN
                                             , NULL AS APPROVAL_REQ_YMD
                                             , NULL AS APPROVAL_REQ_MEMO
                                             , NULL AS APPROVAL_STATUS
                                             , NULL AS APPROVAL_MAIN_ORG_CD
                                             , NULL AS APPROVAL_ORG_CD
                                             , NULL AS APPROVAL_EMP_NO
                                             , NULL AS APPROVAL_EMP_NAME
                                             , NULL AS APPROVAL_YMD
                                             , NULL AS APPROVAL_RETURN_MEMO
                                             , NULL AS CHKDATE
                                             , NULL AS CHKID
                                          FROM DUAL
                                        <foreach item="rm" collection="mergeRows" >
                                         UNION ALL
                                        SELECT TRIM( #{ssnEnterCd} )              AS ENTER_CD
                                             , TRIM( #{rm.activeYyyy})          AS ACTIVE_YYYY
                                             , TRIM( #{rm.halfGubunType})       AS HALF_GUBUN_TYPE
                                             , TRIM( #{rm.sabun})               AS SABUN
                                             , TRIM( #{rm.approvalReqYmd})      AS APPROVAL_REQ_YMD
                                             , TRIM( #{rm.approvalReqMemo})     AS APPROVAL_REQ_MEMO
                                             , TRIM( #{rm.approvalStatus})      AS APPROVAL_STATUS
                                             , TRIM( #{rm.approvalMainOrgCd})   AS APPROVAL_MAIN_ORG_CD
                                             , TRIM( #{rm.approvalOrgCd})       AS APPROVAL_ORG_CD
                                             , TRIM( #{rm.approvalEmpNo})       AS APPROVAL_EMP_NO
                                             , TRIM( #{rm.approvalEmpName})     AS APPROVAL_EMP_NAME
                                             , TRIM( #{rm.approvalYmd})         AS APPROVAL_YMD
                                             , TRIM( #{rm.approvalReturnMemo})  AS APPROVAL_RETURN_MEMO
                                             , SYSDATE                          AS CHKDATE
                                             , #{ssnSabun}                        AS CHKID
                                          FROM DUAL
                                        </foreach>
                                       ) A WHERE A.ENTER_CD IS NOT NULL
                              ) S
                           ON ( T.ENTER_CD = S.ENTER_CD AND T.ACTIVE_YYYY = S.ACTIVE_YYYY AND T.HALF_GUBUN_TYPE = S.HALF_GUBUN_TYPE AND T.SABUN = S.SABUN )
                         WHEN MATCHED THEN
                              UPDATE SET T.APPROVAL_REQ_YMD     = S.APPROVAL_REQ_YMD
                                       , T.APPROVAL_REQ_MEMO    = S.APPROVAL_REQ_MEMO
                                       , T.APPROVAL_STATUS      = S.APPROVAL_STATUS
                                       , T.APPROVAL_MAIN_ORG_CD = S.APPROVAL_MAIN_ORG_CD
                                       , T.APPROVAL_ORG_CD      = S.APPROVAL_ORG_CD
                                       , T.APPROVAL_EMP_NO      = S.APPROVAL_EMP_NO
                                       , T.APPROVAL_EMP_NAME    = S.APPROVAL_EMP_NAME
                                       , T.APPROVAL_YMD         = S.APPROVAL_YMD
                                       , T.APPROVAL_RETURN_MEMO = S.APPROVAL_RETURN_MEMO
                                       , T.CHKDATE              = S.CHKDATE
                                       , T.CHKID                = S.CHKID
                         WHEN NOT MATCHED THEN
                              INSERT ( T.ENTER_CD     , T.ACTIVE_YYYY     , T.HALF_GUBUN_TYPE     , T.SABUN     , T.APPROVAL_REQ_YMD     , T.APPROVAL_REQ_MEMO     , T.APPROVAL_STATUS     , T.APPROVAL_MAIN_ORG_CD     , T.APPROVAL_ORG_CD     , T.APPROVAL_EMP_NO     , T.APPROVAL_EMP_NAME     , T.APPROVAL_YMD     , T.APPROVAL_RETURN_MEMO     , T.CHKDATE     , T.CHKID)
                              VALUES ( S.ENTER_CD     , S.ACTIVE_YYYY     , S.HALF_GUBUN_TYPE     , S.SABUN     , S.APPROVAL_REQ_YMD     , S.APPROVAL_REQ_MEMO     , S.APPROVAL_STATUS     , S.APPROVAL_MAIN_ORG_CD     , S.APPROVAL_ORG_CD     , S.APPROVAL_EMP_NO     , S.APPROVAL_EMP_NAME     , S.APPROVAL_YMD     , S.APPROVAL_RETURN_MEMO     , S.CHKDATE     , S.CHKID)

        </update>

        <delete parameterType="map" id="deleteSelfDevelopmentApp">

                    DELETE FROM TCDPV301
                     WHERE ENTER_CD||'_'||ACTIVE_YYYY||'_'||HALF_GUBUN_TYPE||'_'||SABUN IN ( NULL
<foreach item="rm" collection="deleteRows" >  ,
    <if test='ssnEnterCd != null and !ssnEnterCd.equals("") and rm.activeYyyy != null and !rm.activeYyyy.equals("") and rm.halfGubunType != null and !rm.halfGubunType.equals("") and rm.sabun != null and !rm.sabun.equals("")'>
                          TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.activeYyyy})||'_'||TRIM(#{rm.halfGubunType})||'_'||TRIM(#{rm.sabun})
    </if>
</foreach>
                    )



        </delete>



        <update parameterType="map" id="saveSelfSkillAndDevPlanApp">


                   MERGE INTO TCDPV302 T
                   USING (
                          SELECT A.ENTER_CD
                               , A.ACTIVE_YYYY
                               , A.HALF_GUBUN_TYPE
                               , A.SABUN
                               , A.TRM_CD
                               , A.EDUCATION
                               , A.EDU_DEV_PLAN
                               , A.EDU_PRE_YMD
                               , A.POINT
                               , A.GUBUN
                               , A.TOTAL_TIME
                               , A.CONFIRM_STATUS
                               , A.CHKDATE
                               , A.CHKID
                           FROM (
                                  SELECT NULL AS ENTER_CD
                                       , NULL AS ACTIVE_YYYY
                                       , NULL AS HALF_GUBUN_TYPE
                                       , NULL AS SABUN
                                       , NULL AS TRM_CD
                                       , NULL AS EDUCATION
                                       , NULL AS EDU_DEV_PLAN
                                       , NULL AS EDU_PRE_YMD
                                       , NULL AS POINT
                                       , NULL AS GUBUN
                                       , NULL AS TOTAL_TIME
                                       , NULL AS CONFIRM_STATUS
                                       , NULL AS CHKDATE
                                       , NULL AS CHKID
                                    FROM DUAL
                                <bind name="icnt" value="1" />
                                <foreach item="rm" collection="mergeRows" >
                                  UNION ALL
                                 SELECT TRIM( #{ssnEnterCd}         ) AS ENTER_CD
                                      , TRIM( #{rm.activeYyyy}    ) AS ACTIVE_YYYY
                                      , TRIM( #{rm.halfGubunType} ) AS HALF_GUBUN_TYPE
                                      , TRIM( #{rm.sabun}         ) AS SABUN
                                      , TRIM( #{rm.code}         ) AS TRM_CD
                                      <choose><when test='rm.education != null and !rm.education.equals("")'>
							 		   , TO_NUMBER(TRIM(#{rm.education})) AS EDUCATION
                                      </when><otherwise>
									   , (SELECT NVL(MAX(TO_NUMBER(EDUCATION)),0) + ${icnt} FROM TCDPV302 WHERE ENTER_CD = #{ssnEnterCd} AND ACTIVE_YYYY = #{rm.activeYyyy} AND HALF_GUBUN_TYPE = #{rm.halfGubunType} AND SABUN = #{rm.sabun})  AS EDUCATION
									  <bind name="icnt" value="icnt + 1" />
                                      </otherwise>
                                      </choose>
                                      , TRIM( #{rm.eduDevPlan}     ) AS EDU_DEV_PLAN
                                      , TRIM( #{rm.eduPreYmd}     ) AS EDU_PRE_YMD
                                      , TRIM( #{rm.point}         ) AS POINT
                                      , TRIM( #{rm.gubunCode}     ) AS GUBUN
                                      , TRIM( #{rm.time}          ) AS TOTAL_TIME
                                      , TRIM( #{rm.confirmStatus} ) AS CONFIRM_STATUS
                                      , SYSDATE                     AS CHKDATE
                                      , #{ssnSabun}                   AS CHKID
                                   FROM DUAL
                                </foreach>
                               ) A WHERE A.ENTER_CD IS NOT NULL
                         ) S
                      ON ( T.ENTER_CD  = S.ENTER_CD AND T.ACTIVE_YYYY = S.ACTIVE_YYYY AND T.HALF_GUBUN_TYPE = S.HALF_GUBUN_TYPE AND T.SABUN = S.SABUN AND T.TRM_CD = S.TRM_CD AND T.EDUCATION = S.EDUCATION AND T.GUBUN = S.GUBUN )
                    WHEN MATCHED THEN
                         UPDATE SET T.EDU_PRE_YMD    = S.EDU_PRE_YMD
                                  , T.POINT          = S.POINT
                                  , T.TOTAL_TIME     = S.TOTAL_TIME
                                  , T.CONFIRM_STATUS = S.CONFIRM_STATUS
                                  , T.EDU_DEV_PLAN   = S.EDU_DEV_PLAN
                                  , T.CHKDATE        = S.CHKDATE
                                  , T.CHKID          = S.CHKID
                    WHEN NOT MATCHED THEN
                         INSERT ( T.ENTER_CD, T.ACTIVE_YYYY, T.HALF_GUBUN_TYPE, T.SABUN, T.TRM_CD, T.EDUCATION, T.EDU_DEV_PLAN, T.EDU_PRE_YMD, T.POINT, T.GUBUN, T.TOTAL_TIME, T.CONFIRM_STATUS, T.CHKDATE, T.CHKID)
                         VALUES ( S.ENTER_CD, S.ACTIVE_YYYY, S.HALF_GUBUN_TYPE, S.SABUN, S.TRM_CD, S.EDUCATION, S.EDU_DEV_PLAN, S.EDU_PRE_YMD, S.POINT, S.GUBUN, S.TOTAL_TIME, S.CONFIRM_STATUS, S.CHKDATE, S.CHKID)
        </update>

        <delete parameterType="map" id="deleteSelfSkillAndDevPlanApp">

                    DELETE FROM TCDPV302
                     WHERE ENTER_CD||'_'||ACTIVE_YYYY||'_'||HALF_GUBUN_TYPE||'_'||SABUN||'_'||TRM_CD||'_'||EDUCATION IN ( NULL
<foreach item="rm" collection="deleteRows" >  ,
    <if test=' ssnEnterCd != null      and !ssnEnterCd.equals("")          and
          rm.activeYyyy != null and !rm.activeYyyy.equals("")       and
          rm.halfGubunType != null and !rm.halfGubunType.equals("")    and
          rm.sabun != null and !rm.sabun.equals("")            and
          rm.trmCd != null and !rm.trmCd.equals("")            and
          rm.education != null and !rm.education.equals("")        '>
                          TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.activeYyyy})||'_'||TRIM(#{rm.halfGubunType})||'_'||TRIM(#{rm.sabun})||'_'||TRIM(#{rm.trmCd})||'_'||TRIM(#{rm.education})
    </if>
</foreach>
                    )

        </delete>


</mapper>
