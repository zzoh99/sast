<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main.main">
	
	<select id="getMainMajorMenuInitList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT    src.MAIN_MENU_CD
					, src.SEQ
					, src.GRP_CD
					, NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys309',  src.MAIN_MENU_CD , #{ssnLocaleCd}), src.MAIN_MENU_NM) AS MAIN_MENU_NM
					, src.ENTER_CD
				FROM (
					SELECT    DISTINCT B.MAIN_MENU_CD
							, C.SEQ
							, B.GRP_CD
							, C.MAIN_MENU_NM
							, B.ENTER_CD
						FROM TSYS307 A, TSYS311 B, TSYS309 C
					WHERE 1=1
						AND A.ENTER_CD = #{ssnEnterCd}
						AND A.COMMON_YN 	= 'Y'
						AND A.ENTER_CD 		= B.ENTER_CD
						AND A.GRP_CD 		= B.GRP_CD
						AND B.ENTER_CD 		= C.ENTER_CD
						AND B.MAIN_MENU_CD 	= C.MAIN_MENU_CD
						AND C.USE_YN 		= '1'
				UNION
					SELECT 	  DISTINCT B.MAIN_MENU_CD
							, C.SEQ
							, B.GRP_CD
							, C.MAIN_MENU_NM
							, B.ENTER_CD
						FROM TSYS313 A, TSYS311 B, TSYS309 C
					WHERE 1=1
						AND A.ENTER_CD 		= #{ssnEnterCd}
						AND A.SABUN 		= #{ssnSabun}
						AND A.ENTER_CD 		= B.ENTER_CD
						AND A.GRP_CD 		= B.GRP_CD
						AND B.ENTER_CD		= C.ENTER_CD
						AND B.MAIN_MENU_CD 	= C.MAIN_MENU_CD
						AND C.USE_YN 		= '1'
				) src,
				(
					SELECT GRP_CD, ROWNUM as rnum
					  FROM (
						SELECT GRP_CD , SEQ FROM TSYS307 WHERE ENTER_CD = #{ssnEnterCd} AND COMMON_YN = 'Y'
						UNION  ALL
						SELECT A.GRP_CD , SEQ FROM TSYS313 A, TSYS307 B
						WHERE 1=1
							AND A.ENTER_CD 	= #{ssnEnterCd}
							AND A.SABUN 	= #{ssnSabun}
							AND A.ENTER_CD 	= B.ENTER_CD
							AND A.GRP_CD 	= B.GRP_CD
						ORDER BY SEQ
					)
				WHERE ROWNUM <= 1
				) grp
			WHERE src.grp_cd = grp.grp_cd
			ORDER BY src.SEQ
		]]>
	</select>
	
	<select id="getMainMajorMenuInitListCount2021" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT COUNT(*) AS COUNT2021
			FROM (
				SELECT    src.MAIN_MENU_CD
						, src.SEQ
						, src.GRP_CD
						, NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys309',  src.MAIN_MENU_CD , #{ssnLocaleCd}), src.MAIN_MENU_NM) AS MAIN_MENU_NM
						, src.ENTER_CD
					FROM (
						SELECT    DISTINCT B.MAIN_MENU_CD
								, C.SEQ
								, B.GRP_CD
								, C.MAIN_MENU_NM
								, B.ENTER_CD
							FROM TSYS307 A, TSYS311 B, TSYS309 C
						WHERE 1=1
							AND A.ENTER_CD		= #{ssnEnterCd}
							AND A.COMMON_YN 	= 'Y'
							AND A.ENTER_CD 		= B.ENTER_CD
							AND A.GRP_CD 		= B.GRP_CD
							AND B.ENTER_CD 		= C.ENTER_CD
							AND B.MAIN_MENU_CD 	= C.MAIN_MENU_CD
							AND C.USE_YN 		= '1'
					UNION
						SELECT 	  DISTINCT B.MAIN_MENU_CD
								, C.SEQ
								, B.GRP_CD
								, C.MAIN_MENU_NM
								, B.ENTER_CD
							FROM TSYS313 A, TSYS311 B, TSYS309 C
						WHERE 1=1
							AND A.ENTER_CD 		= #{ssnEnterCd}
							AND A.SABUN 		= #{ssnSabun}
							AND A.ENTER_CD 		= B.ENTER_CD
							AND A.GRP_CD 		= B.GRP_CD
							AND B.ENTER_CD		= C.ENTER_CD
							AND B.MAIN_MENU_CD 	= C.MAIN_MENU_CD
							AND C.USE_YN 		= '1'
					) src,
					(
						SELECT GRP_CD, ROWNUM as rnum
						  FROM (
							SELECT 	  GRP_CD
								, SEQ
								FROM TSYS307
							WHERE 1=1
							  AND ENTER_CD 	= #{ssnEnterCd}
							  AND COMMON_YN = 'Y'
							UNION  ALL
							SELECT A.GRP_CD, SEQ
							  FROM TSYS313 A, TSYS307 B
							 WHERE 1=1
								AND A.ENTER_CD 	= #{ssnEnterCd}
								AND A.SABUN 	= #{ssnSabun}
								AND A.ENTER_CD 	= B.ENTER_CD
								AND A.GRP_CD 	= B.GRP_CD
							ORDER BY SEQ
						)
					WHERE ROWNUM <= 1
					) grp
				WHERE src.grp_cd = grp.grp_cd
				  AND src.MAIN_MENU_CD IN ('20','21')
			)
		]]>
	</select>
	
	<select id="getPanalAlertList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT NVL(F_COM_GET_SEARCH_VAL(A.ENTER_CD, #{ssnSabun}, A.SEARCH_SEQ, TO_CHAR(sysdate,'YYYYMMDD'), 'TITLE' ) , A.TITLE ) AS TITLE
			     , A.LINK_URL
				 , TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI') AS REG_DATE
			  FROM TSYS813 A
			 WHERE A.ENTER_CD =  TRIM(#{ssnEnterCd})
			   AND A.SEARCH_SEQ IS NOT NULL
			   AND NVL(A.USE_YN, 'N') = 'Y'
			   AND F_COM_GET_SEARCH_YN(A.ENTER_CD, #{ssnSabun}, A.SEARCH_SEQ, TO_CHAR(sysdate,'YYYYMMDD') ) > 0
		]]>
	</select>
	
	<select id="tsys399SelectList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.ENTER_CD,
						B.ENTER_NM,
						B.SEQ
				FROM  TSYS399 A, TORG900 B
			WHERE A.TO_ENTER_CD = B.ENTER_CD
				AND A.SABUN = #{ssnSabun}
			    AND A.FR_ENTER_CD = #{ssnEnterCd}
				AND A.GRP_EMP_TYPE = 'SYS'
			GROUP BY B.ENTER_CD, B.ENTER_NM, B.SEQ
			ORDER BY B.SEQ
		]]>
	</select>
	
	<select id="getMainCalendarListMap" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT TYPE, RANK() OVER (PARTITION BY TYPE ORDER BY DBMS_RANDOM.VALUE ) AS RK, TITLE, PERIOD, MEMO, SCH_GUBUN_NM, SABUN, ORG_CD
			FROM (
					SELECT 1 AS TYPE,  GNT_NM AS TITLE
						 , F_COM_GET_NAMES( TRIM(#{ssnEnterCd}) ,A.SABUN, 'ALIAS') ||' ' || DECODE(LUN_TYPE,'1', TO_CHAR(TO_DATE(CH_YMD,'YYYYMMDD'),'MM.DD')||'[+]'
						 , TO_CHAR(TO_DATE(CH_YMD,'YYYYMMDD'),'MM.DD')||'[-]') AS PERIOD, '' AS MEMO, '' AS SCH_GUBUN_NM, A.SABUN, B.ORG_CD
					  FROM (
					    SELECT ENTER_CD
					    	 , SABUN
					    	 , ORG_YMD
					    	 , LUN_TYPE
					    	 , CASE WHEN LUN_TYPE = '2' AND MOON_DATE IS NOT NULL THEN MOON_DATE ELSE CH_YMD END AS CH_YMD
					    	 , '생일' AS GNT_NM
					      FROM(
	                        SELECT A.ENTER_CD, A.SABUN, B.SUN_DATE AS CH_YMD, A.BIR_YMD AS ORG_YMD, NVL(A.LUN_TYPE,'1') AS LUN_TYPE, B.MOON_DATE
	                          FROM THRM100 A,
	                             ( SELECT SUN_DATE, MOON_DATE
	                                 FROM TSYS007
	                                WHERE MOON_SEQ = 1 
	                                  AND SUBSTR(SUN_DATE,1,6) = TO_CHAR(TO_DATE(TRIM(#{mainDate}),'YYYYMMDD'),'YYYYMM')
	                             ) B
	                         WHERE B.SUN_DATE = TO_CHAR(SYSDATE, 'YYYY')||SUBSTR(A.BIR_YMD,5,4)
	                           AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
	                           AND NVL(A.LUN_TYPE,'1') = '1'
	                           AND A.ENTER_CD = TRIM(#{ssnEnterCd})
	                        UNION ALL
	                        SELECT A.ENTER_CD, A.SABUN, B.SUN_DATE  AS CH_YMD, A.BIR_YMD AS ORG_YMD, A.LUN_TYPE, B.MOON_DATE
	                          FROM THRM100 A,
	                             ( SELECT SUN_DATE, MOON_DATE
	                                 FROM TSYS007
	                                WHERE MOON_SEQ = 1 
	                                  AND SUBSTR(SUN_DATE,1,6) = TO_CHAR(TO_DATE(TRIM(#{mainDate}),'YYYYMMDD'),'YYYYMM')
	                             ) B
	                         WHERE B.MOON_DATE = TO_CHAR(SYSDATE, 'YYYY')||SUBSTR(A.BIR_YMD,5,4)
	                           AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
	                           AND A.LUN_TYPE = '2'
	                           AND A.ENTER_CD = TRIM(#{ssnEnterCd})
					         )
					       WHERE CH_YMD = TRIM(#{mainDate})
					     )A
					     , THRM151 B
					   WHERE A.ENTER_CD = B.ENTER_CD
	                     AND A.SABUN = B.SABUN
	                     AND B.STATUS_CD <> 'RA'
	                     AND B.SDATE = (SELECT MAX(SDATE)
	                                      FROM THRM151
	                                     WHERE ENTER_CD = A.ENTER_CD
	                                       AND SABUN = A.SABUN
	                                       AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
	                                    )
						UNION ALL 
						SELECT 1 AS TYPE,  GNT_NM AS TITLE
							, F_COM_GET_NAMES( TRIM(#{ssnEnterCd}) ,SABUN, 'ALIAS')
								||' ' || DECODE(LUN_TYPE,'1', TO_CHAR(TO_DATE(ORG_YMD,'YYYYMMDD'),'MM.DD')||'[+]'
												, TO_CHAR(TO_DATE(ORG_YMD,'YYYYMMDD'),'MM.DD')||'[-]') AS PERIOD, '' AS MEMO, '' AS SCH_GUBUN_NM, SABUN, ORG_CD
						  FROM (
						    SELECT A.ENTER_CD, A.SABUN, A.ORG_YMD, A.LUN_TYPE, A.CH_YMD, '기념일' GNT_NM, B.ORG_CD
						      FROM(
		                        SELECT A.ENTER_CD, A.SABUN, '' CH_YMD, A.WED_YMD AS ORG_YMD, NVL(A.LUN_TYPE,'1') AS LUN_TYPE
		                          FROM THRM100 A
		                         WHERE (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
		                           AND A.WED_YMD IS NOT NULL
		                           AND A.ENTER_CD = TRIM(#{ssnEnterCd})
		                           AND TO_CHAR(TO_DATE(A.WED_YMD, 'YYYYMMDD'),'MMDD')  = TO_CHAR(TO_DATE(TRIM(#{mainDate}), 'YYYYMMDD'),'MMDD')
						     )A
						     , THRM151 B
						   WHERE A.ENTER_CD = B.ENTER_CD
		                     AND A.SABUN = B.SABUN
		                     AND B.STATUS_CD <> 'RA'
		                     AND B.SDATE = (SELECT MAX(SDATE)
		                                      FROM THRM151
		                                     WHERE ENTER_CD = A.ENTER_CD
		                                       AND SABUN = A.SABUN
		                                       AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
		                                    )
						 )
						 UNION ALL
                                   SELECT                                    
                                       0 AS TYPE
                                       ,F_COM_GET_GRCODE_NAME(#{ssnEnterCd}, 'S90008', A.SCH_GUBUN_CD, '') AS TITLE
                                       ,TITLE||' '||TO_CHAR(TO_DATE(A.DATES,'YYYYMMDD'),'MM.DD') AS PERIOD
                                       ,'' AS MEMO
                                       ,'' AS SCH_GUBUN_NM
                                       ,'' AS SABUN
                                       ,'' AS ORG_CD  
                                  FROM
                                  (
                                  
                                  SELECT    
                                      DATES
                                      ,ENTER_CD
                                      ,SCH_GUBUN_CD
                                      ,TITLE
                                  FROM
                                  (
                                  SELECT   
                                      DISTINCT to_char(to_date(B.SDATE,'yyyymmdd') + (LEVEL-1),'yyyymmdd') AS DATES
                                     ,ENTER_CD
                                     ,SCH_GUBUN_CD
                                     ,TITLE
                                  FROM
                                  (                 
                                      SELECT     
                                               X.ENTER_CD
                                              , X.SEQ
                                              , X.SCH_GUBUN_CD
                                              , X.SDATE
                                              , X.EDATE
                                              , X.TITLE
                                              , X.MEMO
                                      FROM TSYS811 X
                                      WHERE X.ENTER_CD = TRIM(#{ssnEnterCd})
                                                                     
                                      ) B  
                                      CONNECT BY LEVEL <= (to_date(B.EDATE,'yyyymmdd') - to_date(B.SDATE,'yyyymmdd') + 1)
                                      ORDER BY DATES
                                  ) 
                                  WHERE DATES  = TRIM(#{mainDate})                                     
                                  ) A
					 )
			WHERE	1=1
			  AND	(
			  			( #{ssnAdminGrpYn} = 'Y' )
			  			OR ( #{ssnAdminGrpYn} = 'N' AND ORG_CD = #{ssnOrgCd} )
			  		)
		]]>
	</select>

	<select id="getMainCalendarListMap3" parameterType="map" resultType="cMap">
	<![CDATA[
	    SELECT 1 AS TYPE
			 , TITLE
			 , TO_CHAR(TO_DATE(SDATE, 'YYYYMMDD'), 'MM.DD') || '~' || TO_CHAR(TO_DATE(EDATE, 'YYYYMMDD'), 'MM.DD') AS PERIOD
			 , '일정'                                                                                                AS GNT_NM
			 , TO_CHAR(TO_DATE(SDATE, 'YYYYMMDD'), 'YYYY-MM-DD')                                                   AS S_YMD
			 , TO_CHAR(TO_DATE(EDATE, 'YYYYMMDD'), 'YYYY-MM-DD')                                                   AS E_YMD
		  FROM TSYS811 X
		 WHERE X.ENTER_CD = TRIM(#{ssnEnterCd})
		   AND (SDATE LIKE TRIM(#{mainDate} ) || '%' OR EDATE LIKE TRIM(#{mainDate} ) || '%')
		 UNION ALL
		SELECT 2 AS TYPE
			 , F_COM_GET_NAMES(TRIM(#{ssnEnterCd}), SABUN, #{ssnLocaleCd})    AS TITLE
			 , DECODE(LUN_TYPE, '1', TO_CHAR(TO_DATE(CH_YMD, 'YYYYMMDD'), 'MM.DD') || '[+]',
					  TO_CHAR(TO_DATE(CH_YMD, 'YYYYMMDD'), 'MM.DD') || '[-]') AS PERIOD
			 , GNT_NM
			 , TO_CHAR(TO_DATE(CH_YMD, 'YYYYMMDD'), 'YYYY-MM-DD')             AS S_YMD
			 , TO_CHAR(TO_DATE(CH_YMD, 'YYYYMMDD'), 'YYYY-MM-DD')             AS E_YMD
		  FROM (SELECT SABUN
					 , ORG_YMD
					 , LUN_TYPE
					 , CH_YMD
					 , '생일' GNT_NM
				  FROM (SELECT A.ENTER_CD
							 , A.SABUN
							 , B.SUN_DATE           AS CH_YMD
							 , A.BIR_YMD            AS ORG_YMD
							 , NVL(A.LUN_TYPE, '1') AS LUN_TYPE
						  FROM THRM100 A
							 , (SELECT SUN_DATE, MOON_DATE
								  FROM TSYS007
								 WHERE MOON_SEQ = 1 AND SUN_DATE LIKE TRIM(#{mainDate} ) || '%') B
						 WHERE B.SUN_DATE = TO_CHAR(SYSDATE, 'YYYY') || SUBSTR(A.BIR_YMD, 5, 4)
						   AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
						   AND NVL(A.LUN_TYPE, '1') = '1'
						   AND A.ENTER_CD = TRIM(#{ssnEnterCd})
						 UNION ALL
						SELECT A.ENTER_CD
							 , A.SABUN
							 , B.MOON_DATE AS CH_YMD
							 , A.BIR_YMD   AS ORG_YMD
							 , A.LUN_TYPE
						  FROM THRM100 A
							 , (SELECT SUN_DATE, MOON_DATE
								  FROM TSYS007
								 WHERE MOON_SEQ = 1 AND SUN_DATE LIKE TRIM(#{mainDate} ) || '%') B
						 WHERE B.MOON_DATE = TO_CHAR(SYSDATE, 'YYYY') || SUBSTR(A.BIR_YMD, 5, 4)
						   AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
						   AND A.LUN_TYPE = '2'
						   AND A.ENTER_CD = TRIM(#{ssnEnterCd}))
				 WHERE CH_YMD LIKE TRIM(#{mainDate}) || '%')
		 UNION ALL
		SELECT 3 AS "TYPE"
			 , F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd}) AS TITLE
			 , TO_CHAR(TO_DATE(S_YMD, 'YYYY-MM-DD'), 'MM.DD') || '~' || TO_CHAR(TO_DATE(E_YMD, 'YYYY-MM-DD'), 'MM.DD') AS PERIOD
			 , GNT_NM
			 , S_YMD
			 , E_YMD
		  FROM (SELECT A.ENTER_CD
					 , A.SABUN
					 , A.GNT_NM
					 , CASE
						   WHEN A.S_YMD < TRIM(#{mainDate}) || '01'
							   THEN SUBSTR(TRIM(#{mainDate}), 1, 4) || '-' || SUBSTR(TRIM(#{mainDate}), 5, 6) || '-01'
						   ELSE TO_CHAR(TO_DATE(A.S_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') END AS S_YMD
					 , CASE
						   WHEN A.E_YMD > TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#{mainDate}) || '01', 'YYYYMMDD'), 1) - 1, 'YYYYMMDD')
							   THEN TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#{mainDate}) || '01', 'YYYYMMDD'), 1), 'YYYY-MM-DD')
						   ELSE TO_CHAR(TO_DATE(A.E_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') END AS E_YMD
				  FROM (SELECT A.ENTER_CD
							 , A.SABUN  AS SABUN
							 , A.S_YMD
							 , A.E_YMD
							 , C.GNT_NM AS TITLE
							 , C.GNT_NM
						  FROM TTIM301 A
							 , THRI103 B
							 , TTIM014 C
						 WHERE A.ENTER_CD = #{ssnEnterCd}
						   AND A.ENTER_CD = B.ENTER_CD
						   AND A.APPL_SEQ = B.APPL_SEQ
						   AND B.APPL_STATUS_CD = '99'
						   AND B.APPL_CD IN ('22' , '121') /*근태신청, 대체휴가신청*/
						   AND ( SUBSTR(A.S_YMD,1,6) = TRIM(#{mainDate}) OR SUBSTR(A.E_YMD,1,6) = TRIM(#{mainDate}) )
						   AND A.ENTER_CD = C.ENTER_CD
						   AND A.GNT_CD   = C.GNT_CD
						   AND A.UPDATE_YN ='N'
						 UNION ALL
						SELECT A.ENTER_CD
							 , A.SABUN AS SABUN
							 , A.YMD AS S_YMD
							 , A.YMD AS E_YMD
							 , '당직 ' || SUBSTR(A.REQ_S_HM, 0, 2)||':'||SUBSTR(A.REQ_S_HM, 3, 2) || ' ~ '||SUBSTR(A.REQ_E_HM, 0, 2)||':'||SUBSTR(A.REQ_E_HM, 3, 2) AS TITLE
							 , '당직' AS GNT_NM
						  FROM TTIM621 A, THRI103 B
						 WHERE A.ENTER_CD = #{ssnEnterCd}
						   AND A.ENTER_CD = B.ENTER_Cd
						   AND A.APPL_SEQ = B.APPL_SEQ
						   AND B.APPL_STATUS_CD = '99'
						   AND SUBSTR(A.YMD,1,6) = TRIM(#{mainDate})) A
					 , THRM151 B
				 WHERE A.ENTER_CD = #{ssnEnterCd}
				   AND A.ENTER_CD = B.ENTER_CD
				   AND A.SABUN    = B.SABUN
				   AND B.SDATE    = (SELECT MAX(SDATE)
									   FROM THRM151
									  WHERE ENTER_CD = B.ENTER_CD
										AND SABUN    = B.SABUN
										AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231') )
										AND A.SABUN IN (SELECT SABUN FROM TABLE(THRM151_AUTH(#{ssnEnterCd}, #{ssnSearchType}, #{ssnSabun}, #{ssnGrpCd}, TO_CHAR(SYSDATE, 'YYYYMMDD'))) )) A
    ]]>
	</select>

	<select id="getMainCalendarListMap2" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT * FROM (
				SELECT TYPE, RK, TITLE, PERIOD, MEMO, SCH_GUBUN_NM, ROWNUM AS NUM  FROM (
					SELECT TYPE, RANK() OVER (PARTITION BY TYPE ORDER BY DBMS_RANDOM.VALUE ) AS RK,
					   TITLE, PERIOD, MEMO, SCH_GUBUN_NM, ROWNUM AS NUM FROM (
				 SELECT 0 AS TYPE, TITLE, TO_CHAR(TO_DATE(SDATE,'YYYYMMDD'),'MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(EDATE, 'YYYYMMDD'),'MM.DD') AS PERIOD, MEMO, F_COM_GET_GRCODE_NAME(ENTER_CD, 'S90008',SCH_GUBUN_CD, #{ssnLocaleCd}) AS SCH_GUBUN_NM, '' AS  CH_YMD
				   FROM TSYS811 X
				  WHERE X.ENTER_CD = TRIM(#{ssnEnterCd})
					AND (SDATE LIKE TRIM( #{mainDate} ) || '%' OR EDATE LIKE TRIM( #{mainDate} ) || '%')
				    AND SCH_GUBUN_CD IN('001','002','003')
				UNION ALL
				 SELECT 2 ASTYPE,  TITLE, TO_CHAR(TO_DATE(SDATE,'YYYYMMDD'),'MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(EDATE, 'YYYYMMDD'),'MM.DD') AS PERIOD, MEMO, F_COM_GET_GRCODE_NAME(ENTER_CD, 'S90008',SCH_GUBUN_CD, #{ssnLocaleCd}) AS SCH_GUBUN_NM, '' AS  CH_YMD
				   FROM TSYS811 X
				  WHERE X.ENTER_CD = TRIM(#{ssnEnterCd})
					AND (SDATE LIKE TRIM( #{mainDate} ) || '%' OR EDATE LIKE TRIM( #{mainDate} ) || '%')
				    AND SCH_GUBUN_CD = '004'
				UNION ALL
				SELECT 1 AS TYPE,  GNT_NM AS TITLE
					, F_COM_GET_NAMES( TRIM(#{ssnEnterCd}) ,SABUN, #{ssnLocaleCd})
						||' ' || DECODE(LUN_TYPE,'1', TO_CHAR(TO_DATE(CH_YMD,'YYYYMMDD'),'MM.DD')||'[+]'
										, TO_CHAR(TO_DATE(CH_YMD,'YYYYMMDD'),'MM.DD')||'[-]') AS PERIOD, '' AS MEMO, '' AS SCH_GUBUN_NM, CH_YMD
				  FROM (
				    SELECT SABUN, ORG_YMD, LUN_TYPE, CH_YMD, '생일' GNT_NM
				      FROM(
                        SELECT A.ENTER_CD, A.SABUN, B.SUN_DATE AS CH_YMD, A.BIR_YMD AS ORG_YMD, NVL(A.LUN_TYPE,'1') AS LUN_TYPE
                          FROM THRM100 A,
                             ( SELECT SUN_DATE, MOON_DATE
                                 FROM TSYS007
                                WHERE MOON_SEQ = 1 
                                  AND SUN_DATE LIKE TRIM( #{mainDate} ) || '%'
                             ) B
                         WHERE B.SUN_DATE = TO_CHAR(SYSDATE, 'YYYY')||SUBSTR(A.BIR_YMD,5,4)
                           AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                           AND NVL(A.LUN_TYPE,'1') = '1'
                           AND A.ENTER_CD = TRIM(#{ssnEnterCd})
                        UNION ALL
                        SELECT A.ENTER_CD, A.SABUN, B.MOON_DATE AS CH_YMD, A.BIR_YMD AS ORG_YMD, A.LUN_TYPE
                          FROM THRM100 A,
                             ( SELECT SUN_DATE, MOON_DATE
                                 FROM TSYS007
                                WHERE MOON_SEQ = 1 
                                  AND SUN_DATE LIKE TRIM( #{mainDate} ) || '%'
                             ) B
                         WHERE B.MOON_DATE = TO_CHAR(SYSDATE, 'YYYY')||SUBSTR(A.BIR_YMD,5,4)
                           AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                           AND A.LUN_TYPE = '2'
                           AND A.ENTER_CD = TRIM(#{ssnEnterCd})
				         )
				       WHERE CH_YMD LIKE TRIM(#{mainDate}) || '%'
				     )A
				 ) ORDER BY CH_YMD
			   )
			) ]]>
		<if test="countAnniv != null and countAnniv != ''">
		<![CDATA[
		WHERE NUM BETWEEN (TO_NUMBER(#{page}) -1) * TO_NUMBER(#{countAnniv}) + 1  and (TO_NUMBER( #{page} ) ) * TO_NUMBER(#{countAnniv})
		]]>
		</if>
	</select>
	
	<select id="tsys007SelectScheduleMap" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT TO_CHAR (TO_DATE (SDATE, 'YYYYMMDD'), 'DD') AS DAY
			  FROM (
			    SELECT DISTINCT TO_CHAR(TO_DATE(B.SDATE, 'yyyymmdd') + (LEVEL- 1), 'yyyymmdd') AS SDATE
			    FROM
			    (                   
                   SELECT     
                            ENTER_CD
                           , SEQ
                           , SCH_GUBUN_CD
                           , SDATE
                           , EDATE
                           , TITLE
                           , MEMO
                   FROM TSYS811 X
			    WHERE ENTER_CD = TRIM(#{ssnEnterCd})
			      AND EDATE >= TO_CHAR(TO_DATE(TRIM(#{mainDate}),'YYYYMMDD'),'YYYYMM')||'01'
			      AND SDATE <= TO_CHAR(LAST_DAY(TO_DATE( TRIM(#{mainDate}),'YYYYMMDD')),'YYYYMMDD')
			      AND SCH_GUBUN_CD IN('001','002','003', '004')
                   ) B  
                    CONNECT BY LEVEL <= (to_date(B.EDATE,'yyyymmdd') - to_date(B.SDATE,'yyyymmdd') + 1)
			   UNION ALL
			   SELECT SUN_DATE
			     FROM (
			      SELECT A.ENTER_CD, A.SABUN, B.SUN_DATE
			        FROM THRM100 A,
			           ( SELECT SUN_DATE, MOON_DATE
			               FROM TSYS007
			              WHERE MOON_SEQ = 1 
			                AND SUBSTR(SUN_DATE,1,6) = TO_CHAR(TO_DATE(TRIM(#{mainDate}),'YYYYMMDD'),'YYYYMM')
			           ) B
			       WHERE B.SUN_DATE = TO_CHAR(SYSDATE, 'YYYY')||SUBSTR(A.BIR_YMD,5,4)
			         AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
			         AND NVL(A.LUN_TYPE,'1') = '1'
			         AND A.ENTER_CD = TRIM(#{ssnEnterCd})
			      UNION ALL
			      SELECT A.ENTER_CD, A.SABUN, B.SUN_DATE
			        FROM THRM100 A,
			           ( SELECT SUN_DATE, MOON_DATE
			               FROM TSYS007
			              WHERE MOON_SEQ = 1 
			                AND SUBSTR(SUN_DATE,1,6) = TO_CHAR(TO_DATE(TRIM(#{mainDate}),'YYYYMMDD'),'YYYYMM')
			           ) B
			       WHERE B.MOON_DATE = TO_CHAR(SYSDATE, 'YYYY')||SUBSTR(A.BIR_YMD,5,4)
			         AND (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
			         AND A.LUN_TYPE = '2'
			         AND A.ENTER_CD = TRIM(#{ssnEnterCd})
					UNION ALL
                              SELECT ENTER_CD, SABUN, ORG_YMD
                                FROM (
                                  SELECT A.ENTER_CD, A.SABUN, A.ORG_YMD, A.LUN_TYPE, A.CH_YMD, '기념일' GNT_NM, B.ORG_CD
                                    FROM(
                                        SELECT A.ENTER_CD, A.SABUN, '' CH_YMD, A.WED_YMD AS ORG_YMD, NVL(A.LUN_TYPE,'1') AS LUN_TYPE
                                          FROM THRM100 A
                                         WHERE (A.RET_YMD IS NULL OR A.RET_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                                           AND A.WED_YMD IS NOT NULL
                                           AND A.ENTER_CD = TRIM(#{ssnEnterCd})
                                           AND TO_CHAR(TO_DATE(A.WED_YMD, 'YYYYMMDD'),'MM')  = TO_CHAR(TO_DATE(TRIM(#{mainDate}), 'YYYYMMDD'), 'MM')
                                   )A
                                   , THRM151 B
                                 WHERE A.ENTER_CD = B.ENTER_CD
                                   AND A.SABUN = B.SABUN
                                   AND B.STATUS_CD <> 'RA'
                                   AND B.SDATE = (SELECT MAX(SDATE)
                                                    FROM THRM151
                                                   WHERE ENTER_CD = A.ENTER_CD
                                                     AND SABUN = A.SABUN
                                                     AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
                                                  )
                                      )
			     ) A
			     , THRM151 B
			   WHERE A.ENTER_CD = B.ENTER_CD
                    AND A.SABUN = B.SABUN
                    AND B.STATUS_CD <> 'RA'
                    AND B.SDATE = (SELECT MAX(SDATE)
                                     FROM THRM151
                                    WHERE ENTER_CD = A.ENTER_CD
                                      AND SABUN = A.SABUN
                                      AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
                                   )
				AND	(
				  			( #{ssnAdminGrpYn} = 'Y' )
				  			OR ( #{ssnAdminGrpYn} = 'N' AND ORG_CD = #{ssnOrgCd} )
				  		)
				)
			 GROUP BY SDATE
			 ORDER BY SDATE
		]]>
	</select>
	
	<select id="getMainMajorMenuGrpList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT MAIN_MENU_CD, SEQ, GRP_CD,
			NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys309',  LANGUAGE_CD , #{ssnLocaleCd}), MAIN_MENU_NM) AS MAIN_MENU_NM,
			ISU_BLOCK_ENCRYPT('{"subGrpCd":"'||GRP_CD||'","mainMenuCd":"'|| MAIN_MENU_CD ||'"}', #{ssnEncodedKey}) AS MURL
			FROM (
					SELECT DISTINCT B.MAIN_MENU_CD AS MAIN_MENU_CD, C.SEQ AS SEQ, B.GRP_CD, C.MAIN_MENU_NM, C.LANGUAGE_CD
					FROM TSYS307 A
					INNER JOIN (
			                      SELECT A.MAIN_MENU_CD
			                          , A.GRP_CD
			                          , A.USE_YN
			                          ,A.ENTER_CD
			                      FROM TSYS311 A
			                      INNER JOIN TSYS303 C
			                        ON A.ENTER_CD   	= C.ENTER_CD
			                      AND A.MENU_SEQ 		= C.MENU_SEQ
			                      AND A.PRIOR_MENU_CD = C.PRIOR_MENU_CD
			                      AND A.MENU_CD 		= C.MENU_CD
			                      AND A.MAIN_MENU_CD 	= C.MAIN_MENU_CD
			                      WHERE 1 = 1
			                      AND A.USE_YN = '1'
			                      AND A.TYPE <> 'T'
			                      START WITH A.PRIOR_MENU_CD = '0'
			                      AND A.ENTER_CD      =  #{ssnEnterCd}
			                      AND A.GRP_CD        =  #{ssnGrpCd}
			                      CONNECT BY PRIOR A.ENTER_CD  = A.ENTER_CD
			                      AND PRIOR A.MAIN_MENU_CD     = A.MAIN_MENU_CD
			                      AND PRIOR A.GRP_CD           = A.GRP_CD
			                      AND PRIOR A.MENU_CD          = A.PRIOR_MENU_CD
			                      AND PRIOR A.USE_YN           = A.USE_YN
			                      ORDER SIBLINGS BY A.PRIOR_MENU_CD, A.SEQ) B
                       ON A.ENTER_CD = B.ENTER_CD
                      AND A.GRP_CD = B.GRP_CD
                     INNER JOIN TSYS309 C
                       ON B.MAIN_MENU_CD = C.MAIN_MENU_CD
                       AND B.ENTER_CD = C.ENTER_CD
					WHERE A.ENTER_CD = #{ssnEnterCd}
					AND A.GRP_CD = #{ssnGrpCd}
					AND C.USE_YN 		= '1'
					AND B.USE_YN 		= '1'
			)
			ORDER BY SEQ
		]]>
	</select>
	
	<select id="getMainMajorMenuGrpListCount2021" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT COUNT(*) AS COUNT2021
			FROM ( 
					SELECT MAIN_MENU_CD, SEQ, GRP_CD,
					NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys309',  LANGUAGE_CD , #{ssnLocaleCd}), MAIN_MENU_NM) AS MAIN_MENU_NM,
					ISU_BLOCK_ENCRYPT('{"subGrpCd":"'||GRP_CD||'","mainMenuCd":"'|| LANGUAGE_CD ||'"}', #{ssnEncodedKey}) AS MURL
					FROM (
							SELECT DISTINCT B.MAIN_MENU_CD AS MAIN_MENU_CD, C.SEQ AS SEQ, B.GRP_CD, C.MAIN_MENU_NM, C.LANGUAGE_CD
							FROM TSYS307 A
							INNER JOIN (
					                      SELECT A.MAIN_MENU_CD
					                          , A.GRP_CD
					                          , A.USE_YN
					                          ,A.ENTER_CD
					                      FROM TSYS311 A
					                      INNER JOIN TSYS303 C
					                        ON A.ENTER_CD   	= C.ENTER_CD
					                      AND A.MENU_SEQ 		= C.MENU_SEQ
					                      AND A.PRIOR_MENU_CD = C.PRIOR_MENU_CD
					                      AND A.MENU_CD 		= C.MENU_CD
					                      AND A.MAIN_MENU_CD 	= C.MAIN_MENU_CD
					                      WHERE 1 = 1
					                      AND A.USE_YN = '1'
					                      AND A.TYPE <> 'T'
					                      START WITH A.PRIOR_MENU_CD = '0'
					                      AND A.ENTER_CD      =  #{ssnEnterCd}
					                      AND A.GRP_CD        =  #{ssnGrpCd}
					                      CONNECT BY PRIOR A.ENTER_CD  = A.ENTER_CD
					                      AND PRIOR A.MAIN_MENU_CD     = A.MAIN_MENU_CD
					                      AND PRIOR A.GRP_CD           = A.GRP_CD
					                      AND PRIOR A.MENU_CD          = A.PRIOR_MENU_CD
					                      AND PRIOR A.USE_YN           = A.USE_YN
					                      ORDER SIBLINGS BY A.PRIOR_MENU_CD, A.SEQ) B
	                        ON A.ENTER_CD = B.ENTER_CD
	                       AND A.GRP_CD = B.GRP_CD
	                      INNER JOIN TSYS309 C
	                        ON B.MAIN_MENU_CD = C.MAIN_MENU_CD
	                        AND B.ENTER_CD = C.ENTER_CD
							WHERE A.ENTER_CD = #{ssnEnterCd}
							AND A.GRP_CD = #{ssnGrpCd}
							AND C.USE_YN 		= '1'
							AND B.USE_YN 		= '1'
					)
					WHERE MAIN_MENU_CD IN ( '20','21')
				)
		]]>
	</select>
	
	<select id="getSelectMap_TSYS313" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT GRP_NM, GRP_CD, DATA_RW_TYPE, SEARCH_TYPE, ERROR_ACC_YN, ERROR_ADMIN_YN, ADMIN_YN, ENTER_ALL_YN, RET_SRCH_YN, PRE_SRCH_YN, RES_SRCH_YN
				FROM (
					SELECT a.GRP_NM, b.GRP_CD, b.DATA_RW_TYPE, b.SEARCH_TYPE, a.ERROR_ACC_YN, a.ERROR_ADMIN_YN, a.ADMIN_YN, a.ENTER_ALL_YN, a.RET_SRCH_YN, a.PRE_SRCH_YN, a.RES_SRCH_YN
					  FROM TSYS307 a , TSYS313 b
					WHERE a.ENTER_CD = TRIM(#{ssnEnterCd})
					  AND a.ENTER_CD = b.ENTER_CD
					  AND a.GRP_CD = b.GRP_CD
					  AND a.GRP_CD = TRIM(#{subGrpCd})
					  AND b.SABUN =  TRIM(#{ssnSabun})
					UNION ALL
					SELECT GRP_NM, GRP_CD, DATA_RW_TYPE, SEARCH_TYPE, ERROR_ACC_YN, ERROR_ADMIN_YN, ADMIN_YN, ENTER_ALL_YN, RET_SRCH_YN, PRE_SRCH_YN, RES_SRCH_YN
					  FROM TSYS307
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					   AND COMMON_YN  = 'Y'
					   AND GRP_CD = TRIM(#{subGrpCd})
				)
			]]>
	</select>
	
	<select id="getPayYmMap" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT TO_CHAR(TO_DATE(PAY_YM, 'YYYYMM'), 'YYYY') AS PAY_YYYY
			     , TO_CHAR(TO_DATE(PAY_YM, 'YYYYMM'), 'MM') AS PAY_MM
			  FROM TCPN201
			 WHERE ENTER_CD = #{ssnEnterCd}
			   AND PAY_ACTION_CD = (SELECT MAX(A.PAY_ACTION_CD)
			                          FROM TCPN201 A
			                             , TCPN051 B
			                             , TCPN981 C
			                             , TCPN203 D
			                             , TCPN991 E
			                         WHERE A.ENTER_CD        = B.ENTER_CD
			                           AND A.PAY_CD          = B.PAY_CD
			                           AND A.ENTER_CD        = C.ENTER_CD
			                           AND A.PAY_ACTION_CD   = C.PAY_ACTION_CD
			                           AND A.ENTER_CD        = D.ENTER_CD
			                           AND A.PAY_ACTION_CD   = D.PAY_ACTION_CD
			                           AND A.PAY_CD          = E.PAY_CD(+)
			                           AND A.ENTER_CD        = E.ENTER_CD(+)
			                           AND A.ENTER_CD        = #{ssnEnterCd}
			                           AND NVL(C.CLOSE_YN, 'N') = 'Y'
			                           AND D.SABUN              = #{ssnSabun}
			                           AND A.PAYMENT_YMD = (SELECT MAX(AA.PAYMENT_YMD)
			                                                FROM TCPN201 AA, TCPN203 BB
			                                                WHERE AA.ENTER_CD = A.ENTER_CD
			                                                   AND AA.PAY_YM   = A.PAY_YM
			                                                   AND AA.ENTER_CD = BB.ENTER_CD
			                                                   AND AA.PAY_ACTION_CD = BB.PAY_ACTION_CD
			                                                   AND BB.SABUN = D.SABUN
			                                                   AND ROWNUM   = 1
			                                                   )
			                           AND SUBSTR(B.PAY_CD,1,1) NOT IN ('S','Y')
			                           AND (CASE WHEN B.RUN_TYPE IN ('R0001','R0002','R0003') THEN -1
			                                     ELSE CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDD') > TO_CHAR((TO_DATE(A.PAYMENT_YMD, 'YYYYMMDD') + TO_NUMBER(NVL(E.OPEN_DD,0))),'YYYYMMDD') THEN -1
			                                               WHEN TO_CHAR(SYSDATE,'YYYYMMDD') = TO_CHAR((TO_DATE(A.PAYMENT_YMD, 'YYYYMMDD') + TO_NUMBER(NVL(E.OPEN_DD,0))),'YYYYMMDD') THEN
			                                                    CASE WHEN E.OPEN_HM <= TO_CHAR(SYSDATE,'HH24MI') THEN -1 ELSE 0 END
			                                               ELSE 0
			                                           END
			                                 END
			                               ) < 0)
		]]>
	</select>
	
	<select id="getVacationUsedMap" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT NVL(SUM(NVL(CRE_CNT,0)),0) AS CRE_CNT, 
			       NVL(SUM(NVL(USED_CNT,0)),0) AS USED_CNT,
			       CASE WHEN NVL(SUM(NVL(USED_CNT,0)),0) = 0  AND NVL(SUM(NVL(CRE_CNT,0)),0) = 0 THEN 0 ELSE TRUNC( NVL(SUM(NVL(USED_CNT,0)),0)/NVL(SUM(NVL(CRE_CNT,0)),0)*100, 0) END AS USED_RATE
			  FROM TTIM511
			 WHERE ENTER_CD = #{ssnEnterCd}
			   AND GNT_CD IN ('14','15','16','17','18','19')
			   AND SABUN = #{ssnSabun}
			   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
		]]>
	</select>
	
	<select id="getVacationSmmrUsedMap" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT NVL(SUM(NVL(CRE_CNT,0)),0)  AS CRE_CNT, 
			       NVL(SUM(NVL(USED_CNT,0)),0) AS USED_CNT,
			       CASE WHEN NVL(SUM(NVL(USED_CNT,0)),0) = 0  AND NVL(SUM(NVL(CRE_CNT,0)),0) = 0 THEN 0 ELSE TRUNC( NVL(SUM(NVL(USED_CNT,0)),0)/NVL(SUM(NVL(CRE_CNT,0)),0)*100, 0) END AS USED_RATE
			  FROM TTIM511
			 WHERE ENTER_CD = #{ssnEnterCd}
			   AND GNT_CD IN ('20','21','22')
			   AND SABUN = #{ssnSabun}
			   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
		]]>
	</select>
	
	<select id="getEduLrngTmMap" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT NVL(SUM(NVL(B.EDU_HOUR,0)),0) AS LEARNING_TIME
			  FROM TTRA301 A, TTRA121 B
			 WHERE A.ENTER_CD = #{ssnEnterCd}
			   AND A.ENTER_CD = B.ENTER_CD
			   AND A.SABUN = #{ssnSabun}
			   AND A.EDU_SEQ = B.EDU_SEQ
			   AND A.EDU_EVENT_SEQ = B.EDU_EVENT_SEQ
			   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.EDU_S_YMD AND B.EDU_S_YMD
		]]>
	</select>

	<select id="getMainEssAppl" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT MAX(APPL_PROG_CNT) AS APPL_PROG_CNT
				 , MAX(APPL_FIN_CNT) AS APPL_FIN_CNT
				 , MAX(APPL_AGREE_CNT) AS APPL_AGREE_CNT
			FROM (
					 -- 기안한 문서 중 결재/수신중 문서 개수
					 SELECT COUNT(*) AS APPL_PROG_CNT
						  , 0 AS APPL_FIN_CNT
						  , 0 AS APPL_AGREE_CNT
					 FROM THRI103 A
						, THRI101 B
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.APPL_CD = B.APPL_CD
					   AND A.ENTER_CD = #{ssnEnterCd}
					   AND A.APPL_SABUN = #{ssnSabun}
					   AND B.USE_YN = 'Y'
					   AND A.APPL_STATUS_CD IN ('21', '31')
					 UNION ALL
					 -- 30일 내 기안한 문서중 결재완료 문서 개수
					 SELECT 0 AS APPL_PROG_CNT
						  , COUNT(*) AS APPL_FIN_CNT
						  , 0 AS APPL_AGREE_CNT
					 FROM THRI103 A
						, THRI101 B
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.APPL_CD = B.APPL_CD
					   AND A.ENTER_CD = #{ssnEnterCd}
					   AND A.APPL_SABUN = #{ssnSabun}
					   AND B.USE_YN = 'Y'
					   AND A.APPL_STATUS_CD IN ('99')
					   AND TO_CHAR(SYSDATE-30, 'YYYYMMDD') <= A.APPL_YMD
					 UNION ALL
					 -- 기안할 문서 개수
					 SELECT 0 AS APPL_PROG_CNT
						  , 0 AS APPL_FIN_CNT
						  , COUNT(*) AS APPL_AGREE_CNT
					 FROM THRI107 A
						, THRI103 B
						, THRI101 C
						, THRI120 D
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.APPL_SEQ = B.APPL_SEQ
					   AND A.ENTER_CD = C.ENTER_CD
					   AND B.APPL_CD = C.APPL_CD
					   AND C.USE_YN = 'Y'
					   AND A.ENTER_CD = D.ENTER_CD (+)
					   AND A.AGREE_SABUN = D.AGREE_SABUN (+)
					   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN D.SDATE(+) AND NVL(D.EDATE(+), '99991231')
					   AND A.ENTER_CD = #{ssnEnterCd}
					   AND A.AGREE_STATUS_CD = '10'
					   AND B.APPL_STATUS_CD IN ('21','31')
					   AND 'Y' = (CASE WHEN B.APPL_STATUS_CD = '31' AND VISUAL_YN = 'N' THEN 'N' ELSE 'Y' END)
					   AND ((A.AGREE_SABUN = #{ssnSabun} OR F_COM_GET_ORG_CD(#{ssnEnterCd},#{ssnSabun},TO_CHAR(SYSDATE,'YYYYMMDD')) = A.AGREE_SABUN ) OR D.DEPUTY_SABUN = #{ssnSabun})
				 )
		]]>
	</select>

	<select id="getMainEssWorkTime" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT NVL(WORK_HH_A, 0) + (NVL(WORK_MM_A, 0)/60) AS WT_HOUR --기본근무
				 , NVL(WORK_HH_B, 0) + (NVL(WORK_MM_B, 0)/60) AS OT_HOUR --연장근무
				 , NVL(WORK_HH_A, 0) + (NVL(WORK_MM_A, 0)/60) + NVL(WORK_HH_B, 0) + (NVL(WORK_MM_B, 0)/60) AS TOT_HOUR
				 , (SELECT NVL2(IN_HM, SUBSTR(IN_HM, 0, 2)||':'||SUBSTR(IN_HM, 3), NULL) FROM TTIM335 WHERE ENTER_CD = A.ENTER_CD AND SABUN = A.SABUN AND YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ST
				 , (SELECT NVL2(IN_HM, SUBSTR(IN_HM, 0, 2)||':'||SUBSTR(IN_HM, 3), NULL) FROM  TTIM730 WHERE ENTER_CD = A.ENTER_CD AND YMD = TO_CHAR(SYSDATE, 'YYYYMMDD') AND SABUN = A.SABUN ) AS EHR_IN_HM
				 , (SELECT NVL2(OUT_HM, SUBSTR(OUT_HM, 0, 2)||':'||SUBSTR(OUT_HM, 3), NULL) FROM TTIM730 WHERE ENTER_CD = A.ENTER_CD AND YMD = TO_CHAR(SYSDATE, 'YYYYMMDD') AND SABUN = A.SABUN ) AS EHR_OUT_HM
			FROM (
					 SELECT X.ENTER_CD, X.SABUN
						  , NVL(SUM(DECODE( Y.DAY_TYPE, '101', X.WORK_HH, 0)),0) AS WORK_HH_A  --기본근무
						  , NVL(SUM(DECODE( Y.DAY_TYPE, '101', X.WORK_MM, 0)),0) AS WORK_MM_A  --기본근무
						  , NVL(SUM(DECODE( Y.DAY_TYPE, '101', 0, X.WORK_HH)),0) AS WORK_HH_B  --연장근무
						  , NVL(SUM(DECODE( Y.DAY_TYPE, '101', 0, X.WORK_MM)),0) AS WORK_MM_B  --연장근무
					 FROM TTIM337 X, TTIM015 Y
					 WHERE X.ENTER_CD = #{ssnEnterCd}
					   AND X.SABUN = #{ssnSabun}
					   AND X.YMD BETWEEN TO_CHAR(NEXT_DAY(TRUNC(SYSDATE, 'MM') - 1, 2),'YYYYMMDD') AND TO_CHAR(NEXT_DAY(TRUNC(SYSDATE, 'MM') - 1, 1) + 7,'YYYYMMDD')
					   AND X.ENTER_CD = Y.ENTER_CD
					   AND X.WORK_CD  = Y.WORK_CD
					   AND Y.DAY_TYPE IN ('101', '105', '205' ) --  정규근무(101),야간근무(103),연장근무(105),휴일야간근무(203),휴일연장근무(205)
					 GROUP BY X.ENTER_CD, X.SABUN
				 ) A
		]]>
	</select>

	<update parameterType="map" id="prcMainEssWorkTime" statementType="CALLABLE">
		<![CDATA[
		{CALL P_TIM_TIMECARD_EHR_INS(
				#{sqlCode,mode=OUT,jdbcType=VARCHAR},
				#{sqlErrm,mode=OUT,jdbcType=VARCHAR},
				#{ssnEnterCd,mode=IN,jdbcType=VARCHAR},
				#{gubun,mode=IN,jdbcType=VARCHAR},
				#{ip,mode=IN,jdbcType=VARCHAR},
				#{ssnSabun,mode=IN,jdbcType=VARCHAR})}
		]]>
	</update>

	<select id="getOverseaDeployment" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT
				A.ENTER_CD
			     , A.SABUN
				 , F_COM_GET_NAMES( A.ENTER_CD ,A.SABUN, 'ALIAS') AS NAME
				 , F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), '') AS ORG_NM
				 , F_COM_GET_JIKCHAK_NM( A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), '') AS JIKCHAK_NM
				 , F_COM_GET_JIKWEE_NM (A.ENTER_CD, A.SABUN, TO_CHAR(sysdate, 'YYYYMMDD'), '') AS JIKWEE_NM
				 , TRUNC(SYSDATE) - TO_DATE(A.ORD_E_YMD, 'YYYYMMDD') AS period
				 , A.ORD_E_YMD
			 FROM THRM191 A
			   , THRM151 B
			WHERE A.ENTER_CD = B.ENTER_CD
			  AND A.SABUN    = B.SABUN
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
			  AND A.ENTER_CD = #{ssnEnterCd}
			  AND ORD_TYPE_CD = 'C' -- 휴직
			  AND TRUNC(SYSDATE) - TO_DATE(A.ORD_E_YMD, 'YYYYMMDD') <= 0
			  ]]>
			<if test='option.equals("3")'>
			AND  TO_DATE(A.ORD_E_YMD, 'YYYYMMDD') BETWEEN SYSDATE AND ADD_MONTHS(SYSDATE ,3)
			</if>
			<if test='option.equals("6")'>
			AND  TO_DATE(A.ORD_E_YMD, 'YYYYMMDD') BETWEEN SYSDATE AND ADD_MONTHS(SYSDATE ,6)
			</if>
	</select>

	<select id="getProbationStatus" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT
				A.ENTER_CD
				 , A.NAME
			     , A.SABUN
				 , A.TRA_YMD
				 , F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), '') AS ORG_NM
				 , F_COM_GET_JIKCHAK_NM( A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), '') AS JIKCHAK_NM
				 , F_COM_GET_JIKWEE_NM (A.ENTER_CD, A.SABUN, TO_CHAR(sysdate, 'YYYYMMDD'), '') AS JIKWEE_NM
				 , TRUNC(SYSDATE) - TO_DATE(A.TRA_YMD, 'YYYYMMDD') AS period
			 FROM THRM100 A
			WHERE A.ENTER_CD = #{ssnEnterCd}
			  AND TRA_YMD IS NOT NULL
			  AND TRUNC(SYSDATE) - TO_DATE(A.TRA_YMD, 'YYYYMMDD') <= 0
		]]>
	</select>

	<!-- ESS MAIN 동료 일정 조회 -->
	<select parameterType="map" resultType="cMap" id="getMainEssPsnlTime">

		<![CDATA[
			SELECT A.ENTER_CD
				 , F_COM_GET_NAMES(A.ENTER_CD, A.SABUN) AS NAME
				 , A.SABUN
				 , A.GNT_NM
			     , A.GNT_GUBUN_CD
			FROM (
				--근태
				SELECT A.ENTER_CD
					 , A.SABUN AS SABUN
					 , A.S_YMD
					 , A.E_YMD
					 , C.GNT_NM
					 , C.GNT_GUBUN_CD
				  FROM TTIM301 A
				     , THRI103 B
				     , TTIM014 C
				 WHERE A.ENTER_CD = #{ssnEnterCd}
				   AND A.ENTER_CD = B.ENTER_CD
				   AND A.APPL_SEQ = B.APPL_SEQ
				   AND B.APPL_STATUS_CD = '99'
				   AND B.APPL_CD IN ('22' , '121') /*근태신청, 대체휴가신청*/
				   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.S_YMD AND A.E_YMD
				   AND A.ENTER_CD = C.ENTER_CD
				   AND A.GNT_CD   = C.GNT_CD
				 UNION ALL
				--당직신청
				SELECT A.ENTER_CD
					 , A.SABUN AS SABUN
					 , A.YMD AS S_YMD
					 , A.YMD AS E_YMD
					 , '당직' AS GNT_NM
				     , '' AS GNT_GUBUN_CD
				  FROM TTIM621 A, THRI103 B
				 WHERE A.ENTER_CD = #{ssnEnterCd}
				   AND A.ENTER_CD = B.ENTER_Cd
				   AND A.APPL_SEQ = B.APPL_SEQ
				   AND B.APPL_STATUS_CD = '99'
				   AND A.YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
			   ) A
			   , THRM151 B
			WHERE A.ENTER_CD = #{ssnEnterCd}
			  AND A.ENTER_CD = B.ENTER_CD
			  AND A.SABUN    = B.SABUN
			  AND B.SDATE    = (SELECT MAX(SDATE)
								FROM THRM151
								WHERE ENTER_CD = B.ENTER_CD
								  AND SABUN    = B.SABUN
								  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231') )
								  AND F_COM_GET_ORG_CD(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) IN
																											  (SELECT ORG_CD
																											   FROM (SELECT ENTER_CD, SDATE, PRIOR_ORG_CD, ORG_CD, SEQ
																													 FROM TORG105 X
																													 WHERE ENTER_CD = #{ssnEnterCd}
																													   AND SDATE = (SELECT MAX(S.SDATE)
																																	FROM TORG103 S
																																	WHERE S.ENTER_CD = X.ENTER_CD
																																	  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S.SDATE AND NVL(S.EDATE, '99991231')))
																													 START WITH ORG_CD = TRIM (#{ssnOrgCd})
																												   CONNECT BY PRIOR ENTER_CD = ENTER_CD
																													   AND PRIOR SDATE = SDATE
																													   AND PRIOR ORG_CD = PRIOR_ORG_CD
																													)
			 ORDER BY 1, 2, 3
		]]>
	</select>

	<!-- ESS MAIN 연간 일정 조회 -->
	<select parameterType="map" resultType="cMap" id="getMainEssAnnualPlan">
		<![CDATA[
			SELECT TITLE
				 , NVL2(SDATE, SUBSTR(SDATE, 3, 2) || '.' || SUBSTR(SDATE, 5, 2) || '.' || SUBSTR(SDATE, 7, 2) , '') || NVL2(EDATE, ' - ' || SUBSTR(EDATE, 3, 2) || '.' || SUBSTR(EDATE, 5, 2) || '.' || SUBSTR(EDATE, 7, 2), '') AS PERIOD
				 , NVL2(SDATE, SUBSTR(SDATE, 1, 4) || '.' || SUBSTR(SDATE, 5, 2) || '.' || SUBSTR(SDATE, 7, 2) , '') AS SDATE
				 , NVL2(EDATE, SUBSTR(EDATE, 1, 4) || '.' || SUBSTR(EDATE, 5, 2) || '.' || SUBSTR(EDATE, 7, 2) , '') AS EDATE
				 , CASE
					   WHEN SCH_GUBUN_CD = '004' THEN '06' -- 평가
					   WHEN SCH_GUBUN_CD = '005' THEN '07' -- 급여
					   WHEN SCH_GUBUN_CD = '006' THEN '08' -- 근태
				   END AS MAIN_MENU_CD
			 FROM TSYS811
			WHERE ENTER_CD = #{ssnEnterCd}
			  AND SCH_GUBUN_CD IN ('004', '005', '006')
			ORDER BY SDATE
		]]>
	</select>

	<!-- ESS MAIN 즐겨찾기 저장 -->
	<update parameterType="map" id="saveMainEssBookmark">
		MERGE INTO TSYS333 T
			USING (
				SELECT #{ssnEnterCd}		AS ENTER_CD
					 , #{ssnSabun}		AS SABUN
					 , #{mainMenuCd}		AS MAIN_MENU_CD
					 , #{priorMenuCd}		AS PRIOR_MENU_CD
					 , #{menuCd}		AS MENU_CD
					 , #{menuSeq}		AS MENU_SEQ
					 , #{ssnGrpCd}		AS GRP_CD
					 , #{prgCd}			AS PRG_CD
					 , NULL		AS SEQ
				FROM DUAL
			) S
			ON (
				T.ENTER_CD = S.ENTER_CD
					AND T.SABUN = S.SABUN
					AND T.MAIN_MENU_CD = S.MAIN_MENU_CD
					AND T.PRIOR_MENU_CD = S.PRIOR_MENU_CD
					AND T.MENU_CD = S.MENU_CD
					AND T.MENU_SEQ = S.MENU_SEQ
					AND T.GRP_CD	= S.GRP_CD
				)
			WHEN MATCHED THEN
		<choose>
			<when test='bookMarkYn != null and bookMarkYn eq "Y"'>
				UPDATE SET T.CHKDATE = SYSDATE
			</when>
			<otherwise>
				UPDATE SET T.CHKDATE = SYSDATE
				DELETE WHERE 1=1
			</otherwise>
		</choose>
			WHEN NOT MATCHED THEN
				INSERT (
						T.ENTER_CD
					, T.SABUN
					, T.MAIN_MENU_CD
					, T.PRIOR_MENU_CD
					, T.MENU_CD
					, T.MENU_SEQ
					, T.GRP_CD
					, T.PRG_CD
					, T.SEQ
					, T.CHKDATE
					, T.CHKID
					)
					VALUES (
							 S.ENTER_CD
						   , S.SABUN
						   , S.MAIN_MENU_CD
						   , S.PRIOR_MENU_CD
						   , S.MENU_CD
						   , S.MENU_SEQ
						   , S.GRP_CD
						   , S.PRG_CD
						   , S.SEQ
						   , SYSDATE
						   , #{ssnSabun}
						   )
	</update>

	<select id="getListBox501EduInfo" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT T4.TOTAL_CNT
				 , T4.CMPLT_CNT
				 , ROUND(T4.CMPLT_CNT / T4.TOTAL_CNT * 100, 2) AS RATE_CNT
			FROM (
					SELECT COUNT(*) AS TOTAL_CNT
						 , SUM(DECODE(T3.EDU_CONFIRM_TYPE, 1, 1, 0)) AS CMPLT_CNT
						 , SUM(DECODE(T3.EDU_CONFIRM_TYPE, 0, 1, 0)) AS RATE_CNT
					FROM (
							 SELECT T1.SABUN
								  , T1.EDU_EVENT_SEQ
								  , T2.EDU_S_YMD -- 교육 시작일
								  , T2.EDU_E_YMD -- 교육 종료일
								  , T2.EDU_HOUR  -- 교육 시간
								  , T2.EDU_DAY   -- 교육일
								  , T1.EDU_CONFIRM_TYPE -- 0:미수료, 1:수료
							 FROM TTRA301 T1, TTRA121 T2
							 WHERE T1.ENTER_CD = T2.ENTER_CD
							   AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
							   AND T2.EDU_STATUS_CD = '10030' -- 운영중
							   AND T1.ENTER_CD = #{ssnEnterCd}
							   AND T1.SABUN  = #{ssnSabun}
						 ) T3
				 ) T4
		]]>
	</select>

	<select id="getListBox502EduInfo" parameterType="map" resultType="cMap">
		-- TTRA301 테이블에 직급, 성명 등 데이터가 추가되면 조회컬럼 변경해야함 (20240216 작업일 기준 NULL이라 THRM151에서 조회)
		<![CDATA[
		WITH STD AS (
			SELECT T1.SABUN
				 , T1.EDU_EVENT_SEQ
				 , T2.EDU_S_YMD -- 교육 시작일
				 , T2.EDU_E_YMD -- 교육 종료일
				 , T2.EDU_HOUR  -- 교육 시간
				 , T2.EDU_DAY   -- 교육일
				 , T1.EDU_CONFIRM_TYPE -- 0:미수료, 1:수료
			FROM TTRA301 T1, TTRA121 T2
			WHERE T1.ENTER_CD = T2.ENTER_CD
			  AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
			  AND T1.ENTER_CD = #{ssnEnterCd}
		)
		SELECT T1.TOTAL_HOUR
			 , DECODE(T1.TOTAL12, 0, 0, ROUND(T1.TOTAL11/T1.TOTAL12,0)) TOTAL_AVG_HOUR
			 , T1.JIKGUB_HOUR
			 , DECODE(T1.TOTAL22, 0, 0, ROUND(T1.TOTAL21/T1.TOTAL22,0)) JIKGUB_AVG_HOUR
			 , NOW_YEAR_HOUR
			 , DECODE(T1.TOTAL32, 0, 0, ROUND(T1.TOTAL31/T1.TOTAL32,0)) NOW_YEAR_AVG_HOUR
			 , T1.JIKWEE_NM
		FROM (
				 SELECT NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND SABUN = A.SABUN), 0) AS TOTAL_HOUR
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND SABUN = A.SABUN AND A.SDATE BETWEEN EDU_S_YMD AND EDU_E_YMD), 0) AS JIKGUB_HOUR
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND SABUN = A.SABUN AND TO_CHAR(SYSDATE, 'YYYY') BETWEEN SUBSTR(EDU_S_YMD,0,4) AND SUBSTR(EDU_E_YMD,0,4)), 0) NOW_YEAR_HOUR
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE EDU_CONFIRM_TYPE = 1), 0) AS TOTAL11
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD ), 0) AS TOTAL12
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND A.SDATE BETWEEN EDU_S_YMD AND EDU_E_YMD), 0) AS TOTAL21
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE A.SDATE BETWEEN EDU_S_YMD AND EDU_E_YMD), 0) AS TOTAL22
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND TO_CHAR(SYSDATE, 'YYYY') BETWEEN SUBSTR(EDU_S_YMD,0,4) AND SUBSTR(EDU_E_YMD,0,4)), 0) AS TOTAL31
					  , NVL((SELECT SUM(NVL(EDU_HOUR, 0)) FROM STD WHERE TO_CHAR(SYSDATE, 'YYYY') BETWEEN SUBSTR(EDU_S_YMD,0,4) AND SUBSTR(EDU_E_YMD,0,4)), 0) AS TOTAL32
					  , A.JIKWEE_NM
				 FROM THRM151 A
				 WHERE A.ENTER_CD = #{ssnEnterCd}
				   AND A.SABUN  = #{ssnSabun}
				   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND A.EDATE
			 ) T1
		]]>
	</select>

	<select id="getListBox503EduInfo" parameterType="map" resultType="cMap">
		<![CDATA[
		WITH STD AS (
			SELECT T1.SABUN
				 , T1.EDU_EVENT_SEQ
				 , T2.EDU_S_YMD -- 교육 시작일
				 , T2.EDU_E_YMD -- 교육 종료일
				 , T2.EDU_HOUR  -- 교육 시간
				 , T2.EDU_DAY   -- 교육일
				 , T1.EDU_CONFIRM_TYPE -- 0:미수료, 1:수료
			FROM TTRA301 T1, TTRA121 T2
			WHERE T1.ENTER_CD = T2.ENTER_CD
			  AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
			  AND T1.ENTER_CD = #{ssnEnterCd}
		)
		SELECT T1.TOTAL_CNT
			 ,DECODE(T1.TOTAL12, 0, 0, ROUND(T1.TOTAL11/T1.TOTAL12,0)) TOTAL_AVG_CNT
			 ,T1.JIKGUB_CNT
			 ,DECODE(T1.TOTAL22, 0, 0, ROUND(T1.TOTAL21/T1.TOTAL22,0)) JIKGUB_AVG_CNT
			 ,NOW_YEAR_CNT
			 ,DECODE(T1.TOTAL32, 0, 0, ROUND(T1.TOTAL31/T1.TOTAL32,0)) NOW_YEAR_AVG_CNT
			 ,T1.JIKWEE_NM
		FROM (
				 SELECT NVL((SELECT COUNT(*) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND SABUN = A.SABUN), 0) AS TOTAL_CNT
					  , NVL((SELECT COUNT(*) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND SABUN = A.SABUN AND A.SDATE BETWEEN EDU_S_YMD AND EDU_E_YMD), 0) AS JIKGUB_CNT
					  , NVL((SELECT COUNT(*) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND SABUN = A.SABUN AND TO_CHAR(SYSDATE, 'YYYY') BETWEEN SUBSTR(EDU_S_YMD,0,4) AND SUBSTR(EDU_E_YMD,0,4)), 0) NOW_YEAR_CNT
					  , NVL((SELECT COUNT(*) FROM STD WHERE EDU_CONFIRM_TYPE = 1), 0) AS TOTAL11
					  , NVL((SELECT COUNT(*) FROM STD ), 0) AS TOTAL12
					  , NVL((SELECT COUNT(*) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND A.SDATE BETWEEN EDU_S_YMD AND EDU_E_YMD), 0) AS TOTAL21
					  , NVL((SELECT COUNT(*) FROM STD WHERE A.SDATE BETWEEN EDU_S_YMD AND EDU_E_YMD), 0) AS TOTAL22
					  , NVL((SELECT COUNT(*) FROM STD WHERE EDU_CONFIRM_TYPE = 1 AND TO_CHAR(SYSDATE, 'YYYY') BETWEEN SUBSTR(EDU_S_YMD,0,4) AND SUBSTR(EDU_E_YMD,0,4)), 0) AS TOTAL31
					  , NVL((SELECT COUNT(*) FROM STD WHERE TO_CHAR(SYSDATE, 'YYYY') BETWEEN SUBSTR(EDU_S_YMD,0,4) AND SUBSTR(EDU_E_YMD,0,4)), 0) AS TOTAL32
					  , A.JIKWEE_NM
				 FROM THRM151 A
				 WHERE A.ENTER_CD = #{ssnEnterCd}
				   AND A.SABUN  = #{ssnSabun}
				   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND A.EDATE
			 ) T1
		]]>
	</select>

	<select id="getListBox504EduUserList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.SABUN
				 , B.NAME
				 , B.ORG_CD
				 , B.ORG_NM
				 , TRUNC(B.EDU_HOUR) || '시간 ' || LPAD(ROUND(MOD(B.EDU_HOUR, 1)*60,0), 2, 0) || '분' AS EDU_HOUR
			FROM
				(
					SELECT A.SABUN
						 , A.NAME
						 , A.ORG_CD
						 , A.ORG_NM
						 , SUM(A.EDU_HOUR) AS EDU_HOUR
					FROM (
							 SELECT T1.SABUN
								  ,T4.NAME
								  ,T1.EDU_EVENT_SEQ
								  ,T2.EDU_S_YMD -- 교육 시작일
								  ,T2.EDU_E_YMD -- 교육 종료일
								  ,NVL(T2.EDU_HOUR,0) AS EDU_HOUR  -- 교육 시간
								  ,T2.EDU_DAY   -- 교육일
								  ,T1.EDU_CONFIRM_TYPE -- 0:미수료, 1:수료
								  ,T3.ORG_CD
								  ,F_COM_GET_ORG_NM(T1.ENTER_CD, T3.ORG_CD, T3.SDATE) AS ORG_NM
							 FROM TTRA301 T1, TTRA121 T2, THRM151 T3, THRM100 T4
							 WHERE T1.ENTER_CD = T2.ENTER_CD
							   AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
							   AND T1.ENTER_CD = #{ssnEnterCd}
							   AND T1.ENTER_CD = T3.ENTER_CD
							   AND T1.SABUN = T3.SABUN
							   AND T1.ENTER_CD = T4.ENTER_CD
							   AND T1.SABUN = T4.SABUN
							   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T3.SDATE AND T3.EDATE
							   AND T1.EDU_CONFIRM_TYPE = 1
						 ) A
					GROUP BY A.SABUN, A.NAME, A.ORG_CD, A.ORG_NM
					ORDER BY EDU_HOUR DESC
				) B
			WHERE ROWNUM <= 3
		]]>
	</select>

	<select id="getListBox504EduOrgList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.ORG_CD
				 , B.ORG_NM
				 , TRUNC(B.EDU_HOUR) || '시간 ' || LPAD(ROUND(MOD(B.EDU_HOUR, 1)*60,0), 2, 0) || '분' AS EDU_HOUR
			FROM (
					 SELECT A.ORG_CD
						  , A.ORG_NM
						  , SUM(A.EDU_HOUR) AS EDU_HOUR
					 FROM (
							  SELECT T1.SABUN
								   , T1.EDU_EVENT_SEQ
								   , T2.EDU_S_YMD -- 교육 시작일
								   , T2.EDU_E_YMD -- 교육 종료일
								   , NVL(T2.EDU_HOUR, 0) AS EDU_HOUR  -- 교육 시간
								   , T2.EDU_DAY   -- 교육일
								   , T1.EDU_CONFIRM_TYPE -- 0:미수료, 1:수료
								   , T3.ORG_CD
								   , F_COM_GET_ORG_NM(T1.ENTER_CD, T3.ORG_CD, T3.SDATE) AS ORG_NM
							  FROM TTRA301 T1, TTRA121 T2, THRM151 T3
							  WHERE T1.ENTER_CD = T2.ENTER_CD
								AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
								AND T1.ENTER_CD = #{ssnEnterCd}
								AND T1.ENTER_CD = T3.ENTER_CD
								AND T1.SABUN = T3.SABUN
								AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T3.SDATE AND T3.EDATE
								AND T1.EDU_CONFIRM_TYPE = 1
						  ) A
					 GROUP BY A.ORG_CD, A.ORG_NM
					 ORDER BY EDU_HOUR DESC
				 ) B
			WHERE ROWNUM <= 3
		]]>
	</select>
	
	<select id="getListBox708Map" parameterType="map" resultType="cMap">
	<![CDATA[
		        SELECT  A.SABUN -- 사번
		               ,TO_CHAR(TO_DATE(A.EMP_YMD, 'YYYYMMDD'), 'YYYY.MM.DD') AS EMP_YMD -- 입사일
		               ,(A.WKP_YEAR||'년 '||A.WKP_MONTH||'개월 ') AS WKP_D_CNT -- 근속기간
					   , TO_CHAR(A.AVG_MON, 'FM999,999,999,999') AS AVG_MON -- 월평균임금
					   , TO_CHAR(substr(A.EARNING_MON,0, length(A.EARNING_MON)-4), 'FM999,999,999,999') AS EARNING_MON -- 예상퇴직금
		          FROM TCPN771 A
		              ,TCPN203 B
		              ,TCPN755 C
		         WHERE A.ENTER_CD         = #{ssnEnterCd}
		           AND A.PAY_ACTION_CD    = 'R' || SUBSTR(TRIM(#{sabun}), 2,9)
		           AND A.SABUN            = TRIM(#{sabun})
		           AND B.ENTER_CD(+)      = A.ENTER_CD
		           AND B.PAY_ACTION_CD(+) = A.PAY_ACTION_CD
		           AND B.SABUN(+)         = A.SABUN
		           AND B.ENTER_CD         = C.ENTER_CD
		           AND B.PAY_ACTION_CD    = C.PAY_ACTION_CD
		           AND B.SABUN            = C.SABUN
		    ]]>
	</select>
	
	<update id="prcP_CPN_SEP_SIMULATION" parameterType="map" statementType="CALLABLE">
	<![CDATA[
	            CALL P_CPN_SEP_SIMULATION(
	                #{sqlcode,mode=OUT,jdbcType=VARCHAR},
	                #{sqlerrm,mode=OUT,jdbcType=VARCHAR},
	                #{ssnEnterCd,mode=IN,jdbcType=VARCHAR},
	                #{sabun,mode=IN,jdbcType=VARCHAR},
	                #{ymd,mode=IN,jdbcType=VARCHAR},
	                #{ssnSabun,mode=IN,jdbcType=VARCHAR}
	                )
	        ]]>
	</update>
	 
	    <select id="getListBox709PenList" parameterType="map" resultType="cMap">
	<![CDATA[
	        SELECT TT1.YM
	             , SUM(CASE WHEN TT2.SOC_STATE_CD = 'A10' THEN 1 ELSE 0 END) AS PAID_CNT
	             , SUM(CASE WHEN TT2.SOC_STATE_CD != 'A10' OR TT2.SOC_STATE_CD IS NULL THEN 1 ELSE 0 END) AS NOT_PAID_CNT
	             , SUM(1) AS EMP_CNT
	          FROM (
	               SELECT T1.ENTER_CD, T1.SABUN, T4.YM, T4.SDATE, T4.EDATE
	                 FROM THRM100 T1, THRM151 T2
	                    , (SELECT DISTINCT SUBSTR(SUN_DATE,1,6) AS YM, MIN(SUN_DATE) AS SDATE, MAX(SUN_DATE) AS EDATE
	                         FROM TSYS007 
	                        WHERE SUN_DATE BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -2), 'YYYYMM') || '01' AND TO_CHAR(LAST_DAY(SYSDATE),'YYYYMMDD')
	                        GROUP BY SUBSTR(SUN_DATE,1,6) ) T4
	                WHERE T1.ENTER_CD = T2.ENTER_CD
	                  AND T1.SABUN = T2.SABUN
	                  AND T2.SDATE <= T4.SDATE
	                  AND T2.EDATE >= T4.EDATE
	                  AND T2.STATUS_CD NOT IN ('RA')
	                  AND T1.ENTER_CD = 'DEMO'
	                  AND T2.ENTER_CD = 'DEMO'
	              ) TT1, TBEN103 TT2
	        WHERE TT1.ENTER_CD = TT2.ENTER_CD(+)
	          AND TT1.SABUN = TT2.SABUN(+)
	          AND TT1.SDATE <= TT2.EDATE(+)
	          AND TT1.EDATE >= TT2.SDATE(+)
	        GROUP BY TT1.YM
	        ORDER BY TT1.YM
	    ]]>
	</select>
	 
	    <select id="getListBox709HealthInsList" parameterType="map" resultType="cMap">
	<![CDATA[
	        SELECT TT1.YM
	             , SUM(CASE WHEN TT2.SOC_STATE_CD = 'A10' THEN 1 ELSE 0 END) AS PAID_CNT
	             , SUM(CASE WHEN TT2.SOC_STATE_CD != 'A10' OR TT2.SOC_STATE_CD IS NULL THEN 1 ELSE 0 END) AS NOT_PAID_CNT
	             , SUM(1) AS EMP_CNT
	          FROM (
	               SELECT T1.ENTER_CD, T1.SABUN, T4.YM, T4.SDATE, T4.EDATE
	                 FROM THRM100 T1, THRM151 T2
	                    , (SELECT DISTINCT SUBSTR(SUN_DATE,1,6) AS YM, MIN(SUN_DATE) AS SDATE, MAX(SUN_DATE) AS EDATE
	                         FROM TSYS007 
	                        WHERE SUN_DATE BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -2), 'YYYYMM') || '01' AND TO_CHAR(LAST_DAY(SYSDATE),'YYYYMMDD')
	                        GROUP BY SUBSTR(SUN_DATE,1,6) ) T4
	                WHERE T1.ENTER_CD = T2.ENTER_CD
	                  AND T1.SABUN = T2.SABUN
	                  AND T2.SDATE <= T4.SDATE
	                  AND T2.EDATE >= T4.EDATE
	                  AND T2.STATUS_CD NOT IN ('RA')
	                  AND T1.ENTER_CD = 'DEMO'
	                  AND T2.ENTER_CD = 'DEMO'
	              ) TT1, TBEN203 TT2
	        WHERE TT1.ENTER_CD = TT2.ENTER_CD(+)
	          AND TT1.SABUN = TT2.SABUN(+)
	          AND TT1.SDATE <= TT2.EDATE(+)
	          AND TT1.EDATE >= TT2.SDATE(+)
	        GROUP BY TT1.YM
	        ORDER BY TT1.YM
	    ]]>
	</select>
	<select id="getListBox709EmpInsList" parameterType="map" resultType="cMap">
	<![CDATA[
	        SELECT TT1.YM
	             , SUM(CASE WHEN TT2.SOC_STATE_CD = 'A10' THEN 1 ELSE 0 END) AS PAID_CNT
	             , SUM(CASE WHEN TT2.SOC_STATE_CD != 'A10' OR TT2.SOC_STATE_CD IS NULL THEN 1 ELSE 0 END) AS NOT_PAID_CNT
	         , SUM(1) AS EMP_CNT
	          FROM (
	               SELECT T1.ENTER_CD, T1.SABUN, T4.YM, T4.SDATE, T4.EDATE
	                 FROM THRM100 T1, THRM151 T2
	                    , (SELECT DISTINCT SUBSTR(SUN_DATE,1,6) AS YM, MIN(SUN_DATE) AS SDATE, MAX(SUN_DATE) AS EDATE
	                         FROM TSYS007 
	                        WHERE SUN_DATE BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -2), 'YYYYMM') || '01' AND TO_CHAR(LAST_DAY(SYSDATE),'YYYYMMDD')
	                        GROUP BY SUBSTR(SUN_DATE,1,6) ) T4
	                WHERE T1.ENTER_CD = T2.ENTER_CD
	                  AND T1.SABUN = T2.SABUN
	                  AND T2.SDATE <= T4.SDATE
	                  AND T2.EDATE >= T4.EDATE
	                  AND T2.STATUS_CD NOT IN ('RA')
	                  AND T1.ENTER_CD = 'DEMO'
	                  AND T2.ENTER_CD = 'DEMO'
	              ) TT1, TBEN303 TT2
	        WHERE TT1.ENTER_CD = TT2.ENTER_CD(+)
	          AND TT1.SABUN = TT2.SABUN(+)
	          AND TT1.SDATE <= TT2.EDATE(+)
	          AND TT1.EDATE >= TT2.SDATE(+)
	        GROUP BY TT1.YM
	        ORDER BY TT1.YM
	    ]]>
	</select>
		
    <select id="getListBox810Map" parameterType="map" resultType="cMap">
    <![CDATA[
        SELECT CEIL(USED_CNT / CRE_CNT * 100) AS USED_PER -- 휴가사용율
             , CRE_CNT -- 발생일수
             , USED_CNT -- 사용일수
             , REST_CNT -- 잔여일수
          FROM TTIM511
        WHERE ENTER_CD = #{ssnEnterCd}
           AND GNT_CD = '14'
           AND SABUN = TRIM(#{sabun})
           AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
    ]]>
    </select>
    
    <select id="getListBox811List" parameterType="map" resultType="cMap">
    <![CDATA[
        SELECT 'ALL' AS CD 
             , ROUND(AVG(CEIL(USED_CNT / CRE_CNT *100)),2) AS USED_PER -- 휴가사용율 
          FROM TTIM511
         WHERE ENTER_CD =  #{ssnEnterCd}
           AND GNT_CD = '14'
           AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
         GROUP BY YY
         
         UNION ALL
         
        SELECT 'DEPT' AS CD 
             , ROUND(AVG(B.USED_PER),2) AS USED_PER -- 휴가사용율
          FROM THRM100 A
             , (SELECT YY
                     , SABUN
                     , ENTER_CD
                     , GNT_CD
                     , USE_S_YMD
                     , USE_E_YMD
                     , CEIL(USED_CNT / CRE_CNT * 100) AS USED_PER -- 휴가사용율
                  FROM TTIM511
                 WHERE ENTER_CD =  #{ssnEnterCd}
                   AND GNT_CD = '14'
                   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
               ) B
             , ( SELECT T1.ENTER_CD
                      , T1.SABUN
                      , T1.ORG_CD
                   FROM THRM151 T1
                  WHERE ENTER_CD =  #{ssnEnterCd}
                    AND T1.SDATE = ( SELECT MAX(T2.SDATE) 
                                       FROM THRM151 T2
                                      WHERE T1.ENTER_CD = T2.ENTER_CD
                                        AND T1.SABUN    = T2.SABUN
                                        AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T2.SDATE AND NVL(T2.EDATE,'99991231'))
               ) C
         WHERE A.ENTER_CD =  #{ssnEnterCd}
           AND A.SABUN    = B.SABUN
           AND A.ENTER_CD = C.ENTER_CD
           AND B.ENTER_CD = C.ENTER_CD
           AND B.SABUN    = C.SABUN
           AND B.GNT_CD   = '14'  -- 근태코드 연차 
           AND C.ORG_CD   = #{orgCd}
           AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.USE_S_YMD AND B.USE_E_YMD
         GROUP BY C.ORG_CD

        UNION ALL  
         
         SELECT 'SELF' AS CD
              , CEIL(USED_CNT / CRE_CNT * 100) AS USED_PER -- 휴가사용율
           FROM TTIM511
          WHERE ENTER_CD =  #{ssnEnterCd}
            AND GNT_CD = '14'
            AND SABUN = TRIM(#{sabun})
            AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD 
    ]]>
    </select>
    
    <select id="getListBox812List" parameterType="map" resultType="cMap">
    <![CDATA[
        WITH TMP AS (
           SELECT A.ENTER_CD
                , A.SABUN
                , F_COM_GET_NAMES(A.ENTER_CD, A.SABUN) AS NAME
                , A.EMP_YMD
                , B.ORG_CD
                , F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H20010', B.JIKGUB_CD)    AS JIKGUB_NM
                , F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H10050', B.WORK_TYPE)    AS WORK_TYPE_NM
                , F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMM')||'01') AS ORG_NM
                , NVL(F_COM_GET_PRIOR_ORG_TYPE_NM(B.ENTER_CD, B.ORG_CD, 'B0400', REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', ''))
                , F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '')) )  AS P_ORG_NM
                , NVL(F_COM_GET_PRIOR_ORG_TYPE_CD(B.ENTER_CD, B.ORG_CD, 'B0400', REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '') )
                , B.ORG_CD )  AS P_ORG_CD
                , ( SELECT SUM(X.WORK_HH) + TRUNC( SUM(X.WORK_MM)/60, 2) 
                      FROM TTIM337 X
                     WHERE X.ENTER_CD = A.ENTER_CD
                       AND X.SABUN    = A.SABUN
                       AND X.YMD      BETWEEN TO_CHAR(SYSDATE, 'YYYYMM')||'01' AND REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '')
                       AND X.WORK_CD  IN ( '0010' )   --정규근무시간
                   ) AS WORK_TIME
                , ( SELECT SUM(X.WORK_HH) + TRUNC( SUM(X.WORK_MM)/60, 2) 
                      FROM TTIM337 X
                     WHERE X.ENTER_CD = A.ENTER_CD
                       AND X.SABUN    = A.SABUN
                       AND X.YMD      BETWEEN TO_CHAR(SYSDATE, 'YYYYMM')||'01' AND REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '')
                       AND X.WORK_CD  IN ( '0040', '0070', '0075' )  --연장근무시간
                   ) AS OT_TIME
                , ( SELECT SUM(X.WORK_HH) + TRUNC( SUM(X.WORK_MM)/60, 2) 
                      FROM TTIM337 X
                     WHERE X.ENTER_CD = A.ENTER_CD
                       AND X.SABUN    = A.SABUN
                       AND X.YMD      BETWEEN TO_CHAR(SYSDATE, 'YYYYMM')||'01' AND REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '')
                       AND X.WORK_CD  IN ( '0210' ) -- 연장휴게시간('0215')은 제외
                   ) AS REF_TIME
                , ( SELECT SUM(X.WORK_HH) + TRUNC( SUM(X.WORK_MM)/60, 2) 
                      FROM TTIM337 X
                     WHERE X.ENTER_CD = A.ENTER_CD
                       AND X.SABUN    = A.SABUN
                       AND X.YMD      BETWEEN TO_CHAR(SYSDATE, 'YYYYMM')||'01' AND REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '')
                       AND X.WORK_CD  IN ( '0215' ) -- 연장휴게시간('0215')
                   ) AS OT_REF_TIME    
              FROM THRM100 A, THRM151 B
             WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
               AND A.ENTER_CD = B.ENTER_CD
               AND A.SABUN    = B.SABUN
               AND REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '') BETWEEN B.SDATE AND NVL(B.EDATE,'99991231')
               AND B.STATUS_CD NOT LIKE 'RA%'   -- 해당월 1일 기준으로 재직, 휴직자
               AND NVL(A.RET_YMD, '99991231' ) >  REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', '')
               AND B.ORG_CD IN (SELECT #{orgCd}
                                  FROM DUAL
                                /*하위조직포함일때 Y , 아닐때 N */
                                UNION
                                SELECT ORG_CD
                                  FROM TORG105
                                 WHERE ENTER_CD = TRIM( #{ssnEnterCd} )
                                   AND SDATE    = (SELECT MAX(SDATE) FROM TORG105 WHERE ENTER_CD = TRIM(#{ssnEnterCd}) AND SDATE <= TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD') )
                                 START WITH PRIOR_ORG_CD   =  #{orgCd}
                                 CONNECT BY PRIOR ENTER_CD = ENTER_CD
                                        AND PRIOR SDATE    = SDATE
                                        AND PRIOR ORG_CD   = PRIOR_ORG_CD
                                )
        )
        SELECT A.SABUN
             , A.NAME
             , A.JIKGUB_NM
             , DECODE(A.WEEK_AVG2, 0, NULL, A.WEEK_AVG2) AS WEEK_AVG
             , ( 52 - A.WEEK_AVG2 )  AS WEEK_REM
             , ROUND(((TO_NUMBER(TO_CHAR(SYSDATE, 'd'))-1)/7)*100, 0)       AS ELPS_RATE
             --, ROUND((NVL(A.WEEK_AVG2,0)/52)*100 , 0)                       AS PROG_RATE
        FROM (
                SELECT A.ENTER_CD
                     , A.SABUN
                     , A.NAME
                     , A.EMP_YMD
                     , A.ORG_CD
                     , A.JIKGUB_NM
                     , A.WORK_TYPE_NM
                     , A.ORG_NM
                     , A.P_ORG_NM
                     , A.P_ORG_CD
                     , (NVL(A.WORK_TIME,0) + NVL(A.OT_TIME,0) - NVL(A.REF_TIME,0)  - NVL(A.OT_REF_TIME,0)) AS REAL_TIME2
                     , CASE WHEN DAYS <= 7 THEN (NVL(A.WORK_TIME,0) + NVL(A.OT_TIME,0) - NVL(A.REF_TIME,0) - NVL(A.OT_REF_TIME,0))
                            ELSE TRUNC((NVL(A.WORK_TIME,0) + NVL(A.OT_TIME,0) - NVL(A.REF_TIME,0) - NVL(A.OT_REF_TIME,0)) / B.DAYS * 7, 0) 
                            END AS WEEK_AVG2      
                  FROM TMP A
                     , (
                         SELECT TO_DATE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), 'YYYY-MM-DD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMM')||'01', 'YYYY-MM-DD')+1 AS DAYS
                           FROM DUAL
                       ) B    
              ) A              
        ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, REPLACE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), '-', ''))
    ]]>
    </select>
    
    <select id="getListBox812OrgList" parameterType="map" resultType="cMap">
        <choose><when test='ssnSearchType != null and ssnSearchType.equals("A")'>
            SELECT '전체' AS CODE_NM, '0' AS CODE FROM DUAL
             UNION ALL
            SELECT ORG_NM AS CODE_NM, ORG_CD AS CODE
              FROM
                   (
                     SELECT F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD')) AS ORG_NM, A.ORG_CD
                       FROM TORG105 A, TORG101 B
                      WHERE A.ENTER_CD = B.ENTER_CD
                        AND A.ORG_CD   = B.ORG_CD
                        AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
                        AND A.ENTER_CD = #{ssnEnterCd}
                        AND A.SDATE = (SELECT MAX(SDATE) FROM TORG103
                                        WHERE ENTER_CD = A.ENTER_CD
                                          AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'29991231')
                                        )
                          START WITH A.PRIOR_ORG_CD = '0'
                        CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
                            AND    PRIOR A.SDATE    = A.SDATE
                            AND    PRIOR A.ORG_CD   = A.PRIOR_ORG_CD
                        ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ
                     )
                </when><otherwise>
            SELECT F_COM_GET_ORG_NM(ENTER_CD,SCOPE_VALUE,TO_CHAR(SYSDATE,'YYYYMMDD')) AS CODE_NM, SCOPE_VALUE AS CODE
              FROM TSYS319
             WHERE ENTER_CD      = #{ssnEnterCd}
               AND AUTH_SCOPE_CD = 'W10'
               AND GRP_CD        = #{ssnGrpCd}
               AND SABUN         = #{ssnSabun}
        </otherwise>
        </choose>
    </select>

	<select id="getMainEssCeoEmpCnt" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.STATUS_CD, COUNT(*) AS EMP_CNT
			  FROM THRM100 A
			     , THRM151 B
			 WHERE A.ENTER_CD = B.ENTER_CD
			   AND A.SABUN = B.SABUN
			   AND A.ENTER_CD = #{ssnEnterCd}
			   AND B.STATUS_CD NOT IN ('RA','RAA')
			   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
			 GROUP BY B.STATUS_CD
		]]>
	</select>

	<select id="getMainEssCeoRetireInfo" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT CURR_YEAR.RET_CNT AS RET_CNT
				 , ROUND(DECODE(CURR_YEAR.RET_CNT, 0, 0, CURR_YEAR.RET_CNT/(CURR_YEAR.RET_CNT+CURR_YEAR.EMP_CNT))*100)
				   - ROUND(DECODE(LAST_YEAR.RET_CNT, 0, 0, LAST_YEAR.RET_CNT/(LAST_YEAR.RET_CNT+LAST_YEAR.EMP_CNT))*100) AS RET_RATE_GAP
			FROM (
				SELECT RET_CNT
					 , (SELECT COUNT(*) FROM THRM151 WHERE TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYYMMDD') BETWEEN SDATE AND EDATE AND STATUS_CD NOT IN ('RA', 'RAA') AND ENTER_CD = #{ssnEnterCd}) AS EMP_CNT
				FROM (
						 SELECT COUNT(*) AS RET_CNT
						 FROM THRM191 A
							, THRM100 B
						 WHERE A.ENTER_CD      = B.ENTER_CD
						   AND A.SABUN         = B.SABUN
						   AND A.ENTER_CD      = #{ssnEnterCd}
						   AND A.ORD_TYPE_CD   = 'E' -- 퇴직
						   AND A.ORD_YMD BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')||'0101'  AND TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYYMMDD')
					 )
			) LAST_YEAR
		  , (
				SELECT RET_CNT
					 , (SELECT COUNT(*) FROM THRM151 WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND EDATE AND STATUS_CD NOT IN ('RA', 'RAA') AND ENTER_CD = #{ssnEnterCd}) AS EMP_CNT
				FROM (
						 SELECT COUNT(*) AS RET_CNT
						 FROM THRM191 A
							, THRM100 B
						 WHERE 1=1
						   AND A.ENTER_CD      = #{ssnEnterCd}
						   AND A.ENTER_CD      = B.ENTER_CD
						   AND A.SABUN         = B.SABUN
						   AND A.ORD_TYPE_CD   = 'E' -- 퇴직
						   AND A.ORD_YMD BETWEEN TO_CHAR(SYSDATE,'YYYY')||'0101' AND TO_CHAR(SYSDATE,'YYYYMMDD')
					 )
			) CURR_YEAR
		]]>
	</select>

	<select id="getMainEssCeoNewEmployee" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.NAME
				 , A.ORG_NM
				 , A.JIKWEE_NM
				 , '/EmpPhotoOut.do'|| chr(63) ||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
			  FROM THRM191 A
			     , THRM100 B
			 WHERE A.ENTER_CD      = #{ssnEnterCd}
			   AND A.ENTER_CD      = B.ENTER_CD
			   AND A.SABUN         = B.SABUN
			   AND A.ORD_TYPE_CD   = 'A' -- 입사
 			   AND A.ORD_YMD BETWEEN TO_CHAR(SYSDATE,'YYYYMM')||'01'  AND TO_CHAR(SYSDATE,'YYYYMMDD')
			 ORDER BY A.GEMP_YMD, A.EMP_YMD
		]]>
	</select>

	<select id="getMainEssCeoCoreEmployee" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT F_COM_GET_NAMES(ENTER_CD, SABUN) AS NAME
				 , F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
				 , F_COM_GET_JIKWEE_NM(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS JIKWEE_NM
				 , '/EmpPhotoOut.do'|| chr(63) ||'enterCd=' || ENTER_CD || chr(38) || 'searchKeyword=' || SABUN ||  chr(38) || 'type=1' AS PHOTO
			  FROM TCDP992
			 WHERE ENTER_CD = #{ssnEnterCd}
			   AND POOL_OUT_YMD IS NOT NULL
		]]>
	</select>

	<select id="getMainEssCeoPsnlStatus1" parameterType="map" resultType="cMap">
		<![CDATA[
			/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
			WITH DUMMY_AGE AS (
				SELECT (LEVEL + 1) * 10 || '대' AS AGE, '임원' AS CHART_NAME
				  FROM DUAL
			   CONNECT BY LEVEL < 6
				 UNION ALL
				SELECT (LEVEL + 1) * 10 || '대' AGE, '일반' AS CHART_NAME
				  FROM DUAL
			   CONNECT BY LEVEL < 6
				 UNION ALL
				SELECT (LEVEL + 1) * 10 || '대', '기타' AS CHART_NAME
				  FROM DUAL
			   CONNECT BY LEVEL < 6
			)
			SELECT Y.CHART_NAME, Y.AGE AS CATEGORY, COUNT(SABUN) AS CNT
			FROM (
				SELECT TRUNC(F_COM_GET_AGE(A.ENTER_CD, A.BIR_YMD, A.RES_NO, TO_CHAR(SYSDATE, 'YYYYMMDD')) / 10) * 10|| '대' AGE
					 , B.JIKGUB_CD
					 , B.JIKGUB_NM
					 , A.SABUN
					 , CASE WHEN REGEXP_LIKE (B.JIKGUB_NM, '회장|임원|상무|이사') THEN '임원'
							WHEN REGEXP_LIKE (B.JIKGUB_NM, '계약|촉탁|파견') THEN '기타'
							ELSE '일반'
					   END AS CHART_NAME
				FROM THRM100 A
				   , THRM151 B
				WHERE A.ENTER_CD = B.ENTER_CD
				  AND A.SABUN = B.SABUN
				  AND A.ENTER_CD = #{ssnEnterCd}
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
				  AND B.STATUS_CD NOT IN ('RA', 'RAA')
				  AND B.JIKGUB_CD IS NOT NULL
			) X
			   , DUMMY_AGE Y
			WHERE Y.CHART_NAME = X.CHART_NAME (+)
			  AND Y.AGE = X.AGE (+)
			GROUP BY Y.CHART_NAME, Y.AGE
			ORDER BY Y.CHART_NAME, Y.AGE
		]]>
	</select>

	<select id="getMainEssCeoPsnlStatus2" parameterType="map" resultType="cMap">
		<![CDATA[
			/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
			WITH DUMMY_LOCATION AS (
				SELECT *
				FROM (
						 SELECT SUBSTR(F_COM_GET_LOCATION_NM(ENTER_CD, LOCATION_CD), 1, INSTR(F_COM_GET_LOCATION_NM(ENTER_CD, LOCATION_CD), '(')-1) AS LOCATION_NM, '임원' AS CHART_NAME
						 FROM THRM151
						 WHERE ENTER_CD = #{ssnEnterCd}
						   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE
						   AND STATUS_CD NOT IN ('RA', 'RAA')
						   AND LOCATION_CD IS NOT NULL
						 UNION ALL
						 SELECT SUBSTR(F_COM_GET_LOCATION_NM(ENTER_CD, LOCATION_CD), 1, INSTR(F_COM_GET_LOCATION_NM(ENTER_CD, LOCATION_CD), '(')-1) AS LOCATION_NM, '일반' AS CHART_NAME
						 FROM THRM151
						 WHERE ENTER_CD = #{ssnEnterCd}
						   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE
						   AND STATUS_CD NOT IN ('RA', 'RAA')
						   AND LOCATION_CD IS NOT NULL
						 UNION ALL
						 SELECT SUBSTR(F_COM_GET_LOCATION_NM(ENTER_CD, LOCATION_CD), 1, INSTR(F_COM_GET_LOCATION_NM(ENTER_CD, LOCATION_CD), '(')-1) AS LOCATION_NM, '기타' AS CHART_NAME
						 FROM THRM151
						 WHERE ENTER_CD = #{ssnEnterCd}
						   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE
						   AND STATUS_CD NOT IN ('RA', 'RAA')
						   AND LOCATION_CD IS NOT NULL
					 )
				WHERE LOCATION_NM IS NOT NULL
				GROUP BY LOCATION_NM, CHART_NAME
			)
			SELECT Y.CHART_NAME
				 , Y.LOCATION_NM AS CATEGORY
				 , COUNT(SABUN) AS CNT
			FROM (
				SELECT SUBSTR(F_COM_GET_LOCATION_NM(B.ENTER_CD, B.LOCATION_CD), 1, INSTR(F_COM_GET_LOCATION_NM(B.ENTER_CD, B.LOCATION_CD), '(')-1) AS LOCATION_NM
					 , CASE WHEN REGEXP_LIKE (B.JIKGUB_NM, '회장|임원|상무|이사') THEN '임원'
							WHEN REGEXP_LIKE (B.JIKGUB_NM, '계약|촉탁|파견') THEN '기타'
							ELSE '일반'
					END AS CHART_NAME
					 , A.SABUN
				FROM THRM100 A
				   , THRM151 B
				WHERE A.ENTER_CD = B.ENTER_CD
				  AND A.SABUN = B.SABUN
				  AND A.ENTER_CD = #{ssnEnterCd}
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
				  AND B.STATUS_CD NOT IN ('RA', 'RAA')
				  AND B.LOCATION_CD IS NOT NULL
			) X
			   , DUMMY_LOCATION Y
			WHERE Y.CHART_NAME = X.CHART_NAME (+)
			  AND Y.LOCATION_NM = X.LOCATION_NM (+)
			GROUP BY Y.CHART_NAME, Y.LOCATION_NM
			ORDER BY Y.CHART_NAME, Y.LOCATION_NM
		]]>
	</select>

	<select id="getMainEssCeoPsnlStatus3" parameterType="map" resultType="cMap">
		<![CDATA[
			/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
			WITH DUMMY_WORKTYPE AS (
				SELECT WORK_TYPE_NM, '임원' AS CHART_NAME
				FROM THRM151
				WHERE ENTER_CD = #{ssnEnterCd}
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE
				  AND STATUS_CD NOT IN ('RA', 'RAA')
				  AND WORK_TYPE_NM IS NOT NULL
				GROUP BY WORK_TYPE_NM
				UNION ALL
				SELECT WORK_TYPE_NM, '일반' AS CHART_NAME
				FROM THRM151
				WHERE ENTER_CD = #{ssnEnterCd}
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE
				  AND STATUS_CD NOT IN ('RA', 'RAA')
				  AND WORK_TYPE_NM IS NOT NULL
				GROUP BY WORK_TYPE_NM
				UNION ALL
				SELECT WORK_TYPE_NM, '기타' AS CHART_NAME
				FROM THRM151
				WHERE ENTER_CD = #{ssnEnterCd}
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE
				  AND STATUS_CD NOT IN ('RA', 'RAA')
				  AND WORK_TYPE_NM IS NOT NULL
				GROUP BY WORK_TYPE_NM
			)
			SELECT Y.CHART_NAME
				 , Y.WORK_TYPE_NM AS CATEGORY
				 , COUNT(SABUN) AS CNT
			FROM (
				SELECT B.WORK_TYPE_NM
					 , CASE WHEN REGEXP_LIKE (B.JIKGUB_NM, '회장|임원|상무|이사') THEN '임원'
							WHEN REGEXP_LIKE (B.JIKGUB_NM, '계약|촉탁|파견') THEN '기타'
							ELSE '일반'
					END AS CHART_NAME
					 , A.SABUN
				FROM THRM100 A
				   , THRM151 B
				WHERE A.ENTER_CD = B.ENTER_CD
				  AND A.SABUN = B.SABUN
				  AND A.ENTER_CD = #{ssnEnterCd}
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
				  AND B.STATUS_CD NOT IN ('RA', 'RAA')
				  AND B.WORK_TYPE_NM IS NOT NULL
			) X
			   , DUMMY_WORKTYPE Y
			WHERE Y.CHART_NAME = X.CHART_NAME (+)
			  AND Y.WORK_TYPE_NM = X.WORK_TYPE_NM (+)
			GROUP BY Y.CHART_NAME, Y.WORK_TYPE_NM
			ORDER BY Y.CHART_NAME, Y.WORK_TYPE_NM
		]]>
	</select>

	<select id="getMainEssCeoPsnlStatus4" parameterType="map" resultType="cMap">
		<![CDATA[
			/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
			SELECT CHART_NAME, CATEGORY, COUNT(SABUN) AS CNT
			FROM (
					 SELECT CASE WHEN REGEXP_LIKE (B.JIKGUB_NM, '회장|임원|상무|이사') THEN '임원'
								 WHEN REGEXP_LIKE (B.JIKGUB_NM, '계약|촉탁|파견') THEN '기타'
								 ELSE '일반'
						 END AS CHART_NAME
						  , CASE
								WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 5) = 0 THEN 'S'
								WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 5) = 1 THEN 'A'
								WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 5) = 2 THEN 'B'
								WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 5) = 3 THEN 'C'
								ELSE 'D'
						 END AS CATEGORY
						  , A.SABUN
					 FROM TPAP551 A
						, THRM151 B
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.SABUN = B.SABUN
					   AND A.ENTER_CD = #{ssnEnterCd}
					   AND A.APPRAISAL_CD = (SELECT MAX(APPRAISAL_CD) FROM TPAP101 WHERE ENTER_CD = #{ssnEnterCd} AND CLOSE_YN = 'Y')
					   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
					   AND B.STATUS_CD NOT IN ('RA', 'RAA')
				 )
			GROUP BY CHART_NAME, CATEGORY
			ORDER BY CHART_NAME, DECODE(CATEGORY, 'S', '0', CATEGORY)
		]]>
	</select>

	<select id="getMainEssCeoExecMemList" parameterType="map" resultType="cMap">
		<![CDATA[
			/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
			SELECT A.SABUN
				 , A.NAME
				 , B.JIKWEE_NM
				 , F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
				 , F_COM_GET_CAREER_CNT(A.ENTER_CD, A.SABUN, 'W', 'YY') AS CAREER_CNT
				 , CASE
					   WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 3) = 0 THEN '교육'
					   WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 3) = 1 THEN '출장'
					   ELSE '외근'
				END AS WORK_NM
				, '/EmpPhotoOut.do'|| chr(63) ||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
			FROM THRM100 A
			   , THRM151 B
			WHERE A.ENTER_CD = B.ENTER_CD
			  AND A.SABUN = B.SABUN
			  AND A.ENTER_CD = #{ssnEnterCd}
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
			  AND B.STATUS_CD NOT IN ('RA', 'RAA')
			  AND REGEXP_LIKE (B.JIKGUB_NM, '회장|임원|상무|이사')
			  AND B.JIKWEE_NM IS NOT NULL
			ORDER BY B.ORG_CD, A.SABUN
		]]>
	</select>

	<select id="getMainEssCeoLeaderMemList" parameterType="map" resultType="cMap">
		<![CDATA[
		/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
		SELECT A.SABUN
			 , A.NAME
			 , B.JIKWEE_NM
			 , F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
			 , F_COM_GET_CAREER_CNT(A.ENTER_CD, A.SABUN, 'W', 'YY') AS CAREER_CNT
			 , CASE
				   WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 3) = 0 THEN '교육'
				   WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 3) = 1 THEN '출장'
				   ELSE '외근'
			END AS WORK_NM
			 , '/EmpPhotoOut.do'|| chr(63) ||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
		FROM THRM100 A
		   , THRM151 B
		WHERE A.ENTER_CD = B.ENTER_CD
		  AND A.SABUN = B.SABUN
		  AND A.ENTER_CD = #{ssnEnterCd}
		  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
		  AND B.STATUS_CD NOT IN ('RA', 'RAA')
		  AND REGEXP_LIKE (B.JIKCHAK_NM, '팀장')
		  AND B.JIKWEE_NM IS NOT NULL
		ORDER BY B.ORG_CD, A.SABUN
		]]>
	</select>

	<select id="getMainEssCeoAllMemList" parameterType="map" resultType="cMap">
		<![CDATA[
			/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
			SELECT A.LVL
				 , A.ORG_CD
				 , A.ORG_NM
				 , B.NAME
				 , B.JIKWEE_NM
				 , CASE
					   WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 3) = 0 THEN '교육'
					   WHEN MOD(ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE), 3) = 1 THEN '출장'
					   ELSE '외근'
				   END AS WORK_NM
				 , '/EmpPhotoOut.do'|| chr(63) ||'enterCd=' || B.ENTER_CD || chr(38) || 'searchKeyword=' || B.SABUN ||  chr(38) || 'type=1' AS PHOTO
			     , COUNT(*) OVER ( PARTITION BY A.ORG_CD) AS TEAM_CNT
			  FROM (
				SELECT *
				  FROM (
						SELECT LEVEL AS LVL
							 , A.PRIOR_ORG_CD
							 , A.ORG_CD
							 , F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD') ) AS ORG_NM
						FROM TORG105 A, TORG101 B, TORG103 C
						WHERE A.ENTER_CD = B.ENTER_CD
						  AND A.ORG_CD = B.ORG_CD
						  AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
						  AND A.ENTER_CD = C.ENTER_CD
						  AND A.SDATE = C.SDATE
						  AND A.ENTER_CD = #{ssnEnterCd}
						  AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
		]]>
			<choose>
				<when test="searchOrgCd != null and searchOrgCd neq ''">
							START WITH A.PRIOR_ORG_CD = #{searchOrgCd}
				</when>
				<otherwise>
							START WITH A.PRIOR_ORG_CD = '0'
				</otherwise>
			</choose>
						CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
							   AND PRIOR A.SDATE = A.SDATE
							   AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
						ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL
					   )
		<if test='searchOrgCd != null and !searchOrgCd.equals("")'>
			UNION ALL
			SELECT NULL, NULL, #{searchOrgCd}, F_COM_GET_ORG_NM(#{ssnEnterCd}, #{searchOrgCd}, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
			FROM DUAL
		</if>
			) A
			   , (
				SELECT A.ENTER_CD
				     , A.NAME
					 , B.ORG_CD
				     , A.SABUN
					 , F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
					 , B.JIKWEE_NM
				FROM THRM100 A
				   , THRM151 B
				WHERE A.ENTER_CD = B.ENTER_CD
				  AND A.SABUN = B.SABUN
				  AND A.ENTER_CD = #{ssnEnterCd}
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
				  AND B.STATUS_CD NOT IN ('RA', 'RAA')
			) B
			WHERE A.ORG_CD = B.ORG_CD
			ORDER BY LVL, ORG_CD, NAME
	</select>

	<select id="getMainEssCeoLateMemList" parameterType="map" resultType="cMap">
		<![CDATA[
			/* 임시쿼리로 실제 사용시 실 데이터에 맞게 수정 필요 */
			SELECT A.ENTER_CD, A.SABUN
				 , F_COM_GET_NAMES(A.ENTER_CD, A.SABUN) AS NAME
				 , '/EmpPhotoOut.do'|| chr(63) ||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
				 , F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD') ) AS ORG_NM
				 , F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD') ) AS JIKWEE_NM
			     , COUNT(A.SABUN) AS LATE_CNT
			  FROM TTIM335 A
			     , TTIM337 B
			     , ( SELECT ENTER_CD, SABUN
			           FROM TTIM337
			          WHERE ENTER_CD = #{ssnEnterCd}
			            AND YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
			            AND WORK_CD = '0090'
			            AND ( NVL(WORK_HH,0)> 0 OR NVL(WORK_MM,0)> 0 )
			       ) C
			 WHERE A.ENTER_CD = #{ssnEnterCd}
			   AND A.YMD BETWEEN TO_CHAR(SYSDATE, 'YYYY')||'0101' AND TO_CHAR(SYSDATE, 'YYYYMMDD')
			   AND A.ENTER_CD = B.ENTER_CD
			   AND A.YMD = B.YMD
			   AND A.SABUN = B.SABUN
			   AND A.ENTER_CD = C.ENTER_CD
			   AND A.SABUN = C.SABUN
			   AND ( NVL(B.WORK_HH,0)> 0 OR NVL(B.WORK_MM,0)> 0 )
			   AND B.WORK_CD = '0090' /* 지각 */
			 GROUP BY A.ENTER_CD, A.SABUN
		]]>
	</select>

	<select id="getMainEssChiefVacationList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT SABUN
				 , F_COM_GET_NAMES(ENTER_CD, SABUN) AS NAME
				 , F_COM_GET_JIKWEE_NM(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS JIKWEE_NM
				 , F_COM_GET_ORG_NM2(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
				 , ROUND(NVL(CRE_CNT, 0), 2) AS CRE_CNT
				 , ROUND(NVL(USED_CNT, 0) + NVL(APP_CNT, 0), 2) AS USED_CNT
				 , ROUND(NVL(REST_CNT, 0) - NVL(APP_CNT, 0), 2) AS REST_CNT
				 , ROUND(NVL(USED_CNT, 0) + NVL(APP_CNT, 0)/NVL(CRE_CNT, 0) * 100, 2) AS RATE
			FROM (  SELECT A.ENTER_CD
			             , A.SABUN
						 , TO_CHAR(NVL(SUM(CRE_CNT),0)) AS CRE_CNT
						 , TO_CHAR(NVL(SUM(USED_CNT),0)) AS USED_CNT
						 , TO_CHAR(NVL(SUM(REST_CNT),0)) AS REST_CNT
						 , MAX(( SELECT SUM(X.CLOSE_DAY)
								FROM TTIM301 X, THRI103 Y
								WHERE X.ENTER_CD = A.ENTER_CD
								  AND X.SABUN = A.SABUN
								  AND X.ENTER_CD = Y.ENTER_CD
								  AND X.APPL_SEQ = Y.APPL_SEQ
								  AND X.APPL_STATUS_CD IN ('21', '31')
								  AND X.GNT_CD IN (
									SELECT C.GNT_CD
									FROM TTIM007 C, TTIM014 D
									WHERE C.ENTER_CD = X.ENTER_CD
									  AND C.ENTER_CD = D.ENTER_CD
									  AND C.GNT_CD = D.GNT_CD
									  AND C.GNT_CD_DEL1 = '14'
								)
								  AND X.S_YMD BETWEEN A.USE_S_YMD AND A.USE_E_YMD
						  )) AS APP_CNT
					 FROM TTIM511 A
					WHERE A.ENTER_CD = #{ssnEnterCd}
					  AND F_COM_GET_ORG_CD(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) IN (SELECT ORG_CD
																								    FROM (
																										SELECT A.ORG_CD
																										  FROM TORG105 A, TORG101 B, TORG103 C
																										 WHERE A.ENTER_CD = B.ENTER_CD
																										   AND A.ORG_CD = B.ORG_CD
																										   AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
																										   AND A.ENTER_CD = C.ENTER_CD
																										   AND A.SDATE = C.SDATE
																										   AND A.ENTER_CD = #{ssnEnterCd}
																										   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
																										 START WITH A.PRIOR_ORG_CD = #{ssnOrgCd}
																									   CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
																										   AND PRIOR A.SDATE = A.SDATE
																										   AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
																										 ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL
																										)
																										UNION ALL
																									   SELECT #{ssnOrgCd} FROM DUAL
																								 )
					  AND A.GNT_CD IN ('10', '14')
					  AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.USE_S_YMD AND A.USE_E_YMD
					GROUP BY A.ENTER_CD, A.SABUN
				 )
		]]>
	</select>

	<select id="getMainEssChiefVacationChart" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT '전사' AS CATEGORY
				 , ROUND(AVG(CEIL(USED_CNT / CRE_CNT *100)),2) || '%' AS USED_PER -- 휴가사용율
			FROM TTIM511
			WHERE ENTER_CD =  #{ssnEnterCd}
			  AND GNT_CD = '14'
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
			GROUP BY YY

			UNION ALL
			SELECT F_COM_GET_ORG_NM(#{ssnEnterCd}, F_COM_GET_PRIOR_ORG_TYPE_CD(#{ssnEnterCd}, #{ssnOrgCd},'D0006', TO_CHAR(SYSDATE, 'YYYYMMDD')), TO_CHAR(SYSDATE, 'YYYYMMDD')) AS CATEGORY
				 , ROUND(AVG(CEIL(USED_CNT / CRE_CNT *100)),2) || '%'  AS USED_PER -- 휴가사용율
			FROM TTIM511
			WHERE ENTER_CD =  #{ssnEnterCd}
			  AND GNT_CD = '14'
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
			  AND F_COM_GET_PRIOR_ORG_TYPE_CD(#{ssnEnterCd}, #{ssnOrgCd},'D0006', TO_CHAR(SYSDATE, 'YYYYMMDD')) = F_COM_GET_PRIOR_ORG_TYPE_CD(#{ssnEnterCd}, F_COM_GET_ORG_CD(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')),'D0006', TO_CHAR(SYSDATE, 'YYYYMMDD'))

			UNION ALL
			SELECT F_COM_GET_ORG_NM(#{ssnEnterCd}, ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS CATEGORY
				 , ROUND(AVG(B.USED_PER),2) || '%' AS USED_PER -- 휴가사용율
			FROM THRM100 A
			   , (SELECT YY
					   , SABUN
					   , ENTER_CD
					   , GNT_CD
					   , USE_S_YMD
					   , USE_E_YMD
					   , CEIL(USED_CNT / CRE_CNT *100)  AS USED_PER -- 휴가사용율
				  FROM TTIM511
				  WHERE ENTER_CD =  #{ssnEnterCd}
					AND GNT_CD = '14'
					AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN USE_S_YMD AND USE_E_YMD
			) B
			   , ( SELECT T1.ENTER_CD
						, T1.SABUN
						, T1.ORG_CD
				   FROM THRM151 T1
				   WHERE ENTER_CD =  #{ssnEnterCd}
				     AND ORG_CD   = #{ssnOrgCd}
					 AND T1.SDATE = ( SELECT MAX(T2.SDATE)
									  FROM THRM151 T2
									  WHERE T1.ENTER_CD = T2.ENTER_CD
										AND T1.SABUN    = T2.SABUN
										AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T2.SDATE AND NVL(T2.EDATE,'99991231'))
			) C
			WHERE A.ENTER_CD =  #{ssnEnterCd}
			  AND A.SABUN    = B.SABUN
			  AND A.ENTER_CD = C.ENTER_CD
			  AND B.ENTER_CD = C.ENTER_CD
			  AND B.SABUN    = C.SABUN
			  AND B.GNT_CD   = '14'  -- 근태코드 연차
			  AND C.ORG_CD   = #{ssnOrgCd}
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.USE_S_YMD AND B.USE_E_YMD
			GROUP BY C.ORG_CD
		]]>
	</select>

	<select id="getMainEssChiefOtChart" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT SUM(NVL(B.WORK_HH_B, 0) + (NVL(B.WORK_MM_B, 0)/60)) AS OT_HOUR --연장근무
				 , CASE
					   WHEN WEEK_START_MM = WEEK_END_MM THEN WEEK_START_MM||WEEK_START_DD||'~'||WEEK_END_DD
					   ELSE WEEK_START_MM||WEEK_START_DD||'~'||WEEK_END_MM||WEEK_END_DD
				   END AS CATEGORY
			FROM (
				SELECT A.ENTER_CD
					, A.SABUN
					, A.NAME
					, C.SUN_DATE AS YMD
					, B.JIKGUB_NM
					, B.JIKWEE_NM
					, B.JIKCHAK_NM
					, B.MANAGE_NM
					, B.ORG_CD
					, D.WORK_GRP_CD
					, D.WORK_ORG_CD
					, D.PLAN_WORK_YN
				FROM THRM100 A, THRM151 B, TSYS007 C, TTIM120_V D
				WHERE C.SUN_DATE BETWEEN TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD') AND TO_CHAR(LAST_DAY(SYSDATE)+7,'YYYYMMDD')
				AND A.ENTER_CD = TRIM(#{ssnEnterCd})
				AND A.ENTER_CD = B.ENTER_CD
				AND A.SABUN    = B.SABUN
				AND C.SUN_DATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
				AND A.ENTER_CD = D.ENTER_CD
				AND A.SABUN    = D.SABUN
				AND C.SUN_DATE = D.YMD
				AND B.ORG_CD = TRIM(#{ssnOrgCd})
			) A
		   , ( SELECT X.ENTER_CD, X.YMD, X.SABUN
				   , NVL(SUM(DECODE( Y.DAY_TYPE, '101', X.WORK_HH, 0)),0) AS WORK_HH_A  --기본근무
				   , NVL(SUM(DECODE( Y.DAY_TYPE, '101', X.WORK_MM, 0)),0) AS WORK_MM_A  --기본근무
				   , NVL(SUM(DECODE( Y.DAY_TYPE, '101', 0, X.WORK_HH)),0) AS WORK_HH_B  --연장근무
				   , NVL(SUM(DECODE( Y.DAY_TYPE, '101', 0, X.WORK_MM)),0) AS WORK_MM_B  --연장근무
				 FROM TTIM337 X, TTIM015 Y
				WHERE X.ENTER_CD = TRIM(#{ssnEnterCd})
				  AND X.YMD BETWEEN TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD') AND TO_CHAR(LAST_DAY(SYSDATE)+7,'YYYYMMDD')
				  AND X.ENTER_CD = Y.ENTER_CD
				  AND X.WORK_CD  = Y.WORK_CD
				  AND Y.DAY_TYPE IN ('101', '105', '205' ) --  정규근무(101),야간근무(103),연장근무(105),휴일야간근무(203),휴일연장근무(205)
				GROUP BY X.ENTER_CD, X.YMD, X.SABUN
			 ) B
			, (
				   SELECT TO_CHAR(WEEK_START, 'YYYYMMDD') WEEK_START
						, TO_CHAR(WEEK_END, 'YYYYMMDD') WEEK_END
						, ROW_NUMBER()OVER(ORDER BY WEEK_START) AS RNUM
						, TO_CHAR(WEEK_START, 'FMMM') || '월' AS WEEK_START_MM
						, TO_CHAR(WEEK_START, 'FMDD') || '일' AS WEEK_START_DD
						, TO_CHAR(WEEK_END, 'FMMM') || '월' AS WEEK_END_MM
						, TO_CHAR(WEEK_END, 'FMDD') || '일' AS WEEK_END_DD
						, SUM( CASE WHEN TO_CHAR(WEEK_START, 'YYYYMMDD') BETWEEN TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD') AND TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD')
									 AND TO_CHAR(WEEK_END, 'YYYYMMDD') BETWEEN TO_CHAR(TRUNC(SYSDATE, 'MM'),'YYYYMMDD') AND TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD') THEN 1 ELSE 0 END) OVER() AS WEEK_CNT
					 FROM (
							  SELECT
								  NEXT_DAY(TRUNC(SYSDATE, 'MM') - 1 - MOD(TO_CHAR(TRUNC(SYSDATE, 'MM') - 1, 'D') - 1, 7) + (LEVEL - 1) * 7, 2) AS WEEK_START,
								  NEXT_DAY(TRUNC(SYSDATE, 'MM') - 1 - MOD(TO_CHAR(TRUNC(SYSDATE, 'MM') - 1, 'D') - 1, 7) + (LEVEL - 1) * 7 + 4, 6) AS WEEK_END
							  FROM DUAL
								  CONNECT BY NEXT_DAY(TRUNC(SYSDATE, 'MM') - 1 - MOD(TO_CHAR(TRUNC(SYSDATE, 'MM') - 1, 'D') - 1, 7) + (LEVEL - 1) * 7, 2) < TRUNC(SYSDATE, 'MM') + INTERVAL '1' MONTH
						   )
					WHERE 1=1
					GROUP BY WEEK_START, WEEK_END

			  ) D
		WHERE A.ENTER_CD  = TRIM(#{ssnEnterCd})
		  AND A.YMD BETWEEN WEEK_START AND WEEK_END
		  AND A.ENTER_CD    = B.ENTER_CD(+)
		  AND A.SABUN       = B.SABUN(+)
		  AND A.YMD         = B.YMD(+)
		GROUP BY D.WEEK_START, D.WEEK_START_MM, D.WEEK_START_DD, D.WEEK_END_MM, D.WEEK_END_DD
		ORDER BY D.WEEK_START
		]]>
	</select>

	<select id="getMainEssChiefEduChart" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT '전사' AS CATEGORY
				 , SUM(NVL(T2.EDU_HOUR, 0)) AS EDU_HOUR
			FROM TTRA301 T1, TTRA121 T2, THRM151 T3
			WHERE T1.ENTER_CD = T2.ENTER_CD
			  AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
			  AND T1.ENTER_CD = #{ssnEnterCd}
			  AND T1.ENTER_CD = T3.ENTER_CD
			  AND T1.SABUN = T3.SABUN
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T3.SDATE AND T3.EDATE
			  AND T1.EDU_CONFIRM_TYPE = 1
			UNION ALL
			SELECT F_COM_GET_ORG_NM(#{ssnEnterCd}, F_COM_GET_PRIOR_ORG_TYPE_CD(#{ssnEnterCd}, #{ssnOrgCd},'D0006', TO_CHAR(SYSDATE, 'YYYYMMDD')), TO_CHAR(SYSDATE, 'YYYYMMDD')) AS CATEGORY
				 , SUM(NVL(T2.EDU_HOUR, 0)) AS EDU_HOUR
			FROM TTRA301 T1, TTRA121 T2, THRM151 T3
			WHERE T1.ENTER_CD = T2.ENTER_CD
			  AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
			  AND T1.ENTER_CD = #{ssnEnterCd}
			  AND T1.ENTER_CD = T3.ENTER_CD
			  AND T1.SABUN = T3.SABUN
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T3.SDATE AND T3.EDATE
			  AND T1.EDU_CONFIRM_TYPE = 1
			  AND F_COM_GET_PRIOR_ORG_TYPE_CD(#{ssnEnterCd}, #{ssnOrgCd},'D0006', TO_CHAR(SYSDATE, 'YYYYMMDD')) = F_COM_GET_PRIOR_ORG_TYPE_CD(#{ssnEnterCd}, ORG_CD,'D0006', TO_CHAR(SYSDATE, 'YYYYMMDD'))
			UNION ALL
			SELECT F_COM_GET_ORG_NM(#{ssnEnterCd}, #{ssnOrgCd}, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS CATEGORY
				 , SUM(NVL(T2.EDU_HOUR, 0)) AS EDU_HOUR
			FROM TTRA301 T1, TTRA121 T2, THRM151 T3
			WHERE T1.ENTER_CD = T2.ENTER_CD
			  AND T1.EDU_EVENT_SEQ = T2.EDU_EVENT_SEQ
			  AND T1.ENTER_CD = #{ssnEnterCd}
			  AND T1.ENTER_CD = T3.ENTER_CD
			  AND T1.SABUN = T3.SABUN
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T3.SDATE AND T3.EDATE
			  AND T1.EDU_CONFIRM_TYPE = 1
			  AND T3.ORG_CD = #{ssnOrgCd}
		]]>
	</select>

	<select id="getMainEssChiefApplList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT *
			  FROM (
					   SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'R10050', A.AGREE_STATUS_CD) AS STATUS
							, C.APPL_NM
							, F_COM_GET_NAMES(B.ENTER_CD, B.APPL_SABUN) AS NAME
							, TO_CHAR(TO_DATE(B.APPL_YMD), 'YYYY.MM.DD') AS APPL_DATE
							, A.AGREE_STATUS_CD
					   		, B.APPL_SEQ
					   		, B.APPL_SABUN
					   		, B.APPL_IN_SABUN
					   		, B.APPL_CD
					   		, B.APPL_YMD
					   		, B.ENTER_CD
					   FROM THRI107 A
						  , THRI103 B
						  , THRI101 C
						  , THRI120 D
					   WHERE A.ENTER_CD = B.ENTER_CD
						 AND A.APPL_SEQ = B.APPL_SEQ
						 AND A.ENTER_CD = C.ENTER_CD
						 AND B.APPL_CD = C.APPL_CD
						 AND C.USE_YN = 'Y'
						 AND A.ENTER_CD = D.ENTER_CD (+)
						 AND A.AGREE_SABUN = D.AGREE_SABUN (+)
						 AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN D.SDATE(+) AND NVL(D.EDATE(+), '99991231')
						 AND A.ENTER_CD = #{ssnEnterCd}
						 AND A.AGREE_STATUS_CD = '10'
						 AND B.APPL_STATUS_CD IN ('21','31')
						 AND 'Y' = (CASE WHEN B.APPL_STATUS_CD = '31' AND VISUAL_YN = 'N' THEN 'N' ELSE 'Y' END)
						 AND ((A.AGREE_SABUN = #{ssnSabun} OR F_COM_GET_ORG_CD(#{ssnEnterCd},#{ssnSabun},TO_CHAR(SYSDATE,'YYYYMMDD')) = A.AGREE_SABUN ) OR D.DEPUTY_SABUN = #{ssnSabun})
					   UNION ALL
					   SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'R10050', A.AGREE_STATUS_CD) AS STATUS
							, C.APPL_NM
							, F_COM_GET_NAMES(B.ENTER_CD, B.APPL_SABUN) AS NAME
							, TO_CHAR(A.AGREE_TIME, 'YYYY.MM.DD') AS APPL_DATE
							, A.AGREE_STATUS_CD
							, B.APPL_SEQ
							, B.APPL_SABUN
							, B.APPL_IN_SABUN
							, B.APPL_CD
							, B.APPL_YMD
							, B.ENTER_CD
					   FROM THRI107 A
						  , THRI103 B
						  , THRI101 C
						  , THRI120 D
					   WHERE A.ENTER_CD = B.ENTER_CD
						 AND A.APPL_SEQ = B.APPL_SEQ
						 AND A.ENTER_CD = C.ENTER_CD
						 AND B.APPL_CD = C.APPL_CD
						 AND C.USE_YN = 'Y'
						 AND A.ENTER_CD = D.ENTER_CD (+)
						 AND A.AGREE_SABUN = D.AGREE_SABUN (+)
						 AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN D.SDATE(+) AND NVL(D.EDATE(+), '99991231')
						 AND A.ENTER_CD = #{ssnEnterCd}
						 AND A.AGREE_SABUN = #{ssnSabun}
						 AND A.AGREE_STATUS_CD NOT IN ('10')
						 AND TO_CHAR(A.AGREE_TIME, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
				   )
			 ORDER BY APPL_DATE
		]]>
	</select>

	<select id="getMainEssChiefWorkEmp" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT SUM(EMP_CNT) AS EMP_CNT
				 , SUM(WORK_EMP_CNT) AS WORK_EMP_CNT
				 , SUM(VACATION_EMP_CNT) AS VACATION_EMP_CNT
			FROM (
					 SELECT Z.ORG_CD
						  , Z.PRIOR_ORG_CD
						  , Z.ORG_NM
						  , Z.ORG_LEVEl
						  , Z.SEQ
						  , COUNT(X.SABUN) AS EMP_CNT
						  , COUNT(X.IN_HM) AS WORK_EMP_CNT
						  , SUM(Y.VACATION) AS VACATION_EMP_CNT
					 FROM (
						 SELECT A.ENTER_CD, A.SABUN, A.ORG_CD, B.IN_HM
						 FROM THRM151 A
							, TTIM330 B
						 WHERE A.ENTER_CD = B.ENTER_CD (+)
						   AND A.SABUN = B.SABUN (+)
						   AND A.ENTER_CD = 'GSR'
						   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND A.EDATE
						   AND B.YMD(+) = TO_CHAR(SYSDATE, 'YYYYMMDD')
						   AND A.STATUS_CD NOT IN ('RA', 'RAA')
					 ) X
					, (
						 SELECT A.ENTER_CD, A.SABUN, COUNT(B.SABUN) AS VACATION
						 FROM THRM151 A
							, (
							 SELECT A.ENTER_CD, A.SABUN
							 FROM TTIM405 A
								, THRI103 B
							 WHERE A.ENTER_CD = B.ENTER_CD
							   AND A.APPL_SEQ = B.APPL_SEQ
							   AND A.ENTER_CD = #{ssnEnterCd}
							   AND A.YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
							   AND B.APPL_STATUS_CD = '99'
							   AND A.GNT_CD = '14'
						 ) B
						 WHERE A.ENTER_CD = B.ENTER_CD (+)
						   AND A.SABUN = B.SABUN (+)
						   AND A.ENTER_CD = #{ssnEnterCd}
						   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND A.EDATE
						 GROUP BY A.ENTER_CD, A.SABUN
					 ) Y
					, (
						 SELECT A.PRIOR_ORG_CD
							  , A.ORG_CD
							  , NVL(F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')), B.ORG_NM) AS ORG_NM
							  , A.ORDER_SEQ
							  , A.ORG_LEVEL
							  , A.SEQ
						 FROM TORG105 A, TORG101 B
						 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
						   AND A.ENTER_CD = B.ENTER_CD
						   AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
						   AND A.ORG_CD = B.ORG_CD
						   AND A.SDATE = (SELECT SDATE FROM TORG103 WHERE ENTER_CD = #{ssnEnterCd} AND SDATE = (SELECT MAX(SDATE) FROM TORG103 WHERE ENTER_CD = #{ssnEnterCd} AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE))
					 ) Z
					 WHERE Z.ORG_CD = X.ORG_CD
					   AND X.SABUN = Y.SABUN
					 GROUP BY Z.ORG_CD, Z.ORG_NM, Z.ORDER_SEQ, Z.PRIOR_ORG_CD, Z.SEQ, Z.ORG_LEVEL
				 ) A
				START WITH A.ORG_CD = #{ssnOrgCd}
			CONNECT BY PRIOR A.ORG_CD = A.PRIOR_ORG_CD
			ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL
		]]>
	</select>
</mapper>