<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eis.statsSrch.chartItemMng">

<!-- 차트 아이템 코드 목록 조회 -->
		<select parameterType="map" resultType="cMap" id="getChartItemMngCodeList">
				<![CDATA[
					SELECT CHART_CD AS CODE
					     , CHART_NM AS CODE_NM
					     , PLUGIN_OBJ_NM
					  FROM TEIS901
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					 ORDER BY CHART_CD
				]]>
		</select>

<!-- 조회 -->
		<select parameterType="map" resultType="cMap" id="getChartItemMngList">
			
				<![CDATA[
					SELECT ENTER_CD
					     , CHART_CD
					     , CHART_NM
					     , PLUGIN_OBJ_NM
					     , MEMO
					     , '0' AS DETAIL
					  FROM TEIS901
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
<if test="searchChartCd != null and searchChartCd neq ''">
					   AND INSTR(UPPER(CHART_CD), UPPER(#{searchChartCd})) > 0
</if>
<if test="searchChartNm != null and searchChartNm neq ''">
					   AND INSTR(UPPER(CHART_NM), UPPER(#{searchChartNm})) > 0
</if>
<if test="searchPluginObjNm != null and searchPluginObjNm neq ''">
					   AND INSTR(UPPER(PLUGIN_OBJ_NM), UPPER(#{searchPluginObjNm})) > 0
</if>
					 ORDER BY CHART_CD
			
		</select>

<!-- 저장-->
		<update parameterType="map" id="saveChartItemMng">
			
				<![CDATA[
					MERGE INTO TEIS901 T
					USING (
					       SELECT A.ENTER_CD
					            , A.CHART_CD
					            , A.CHART_NM
					            , A.PLUGIN_OBJ_NM
					            , A.MEMO
					        FROM (
					              SELECT NULL AS ENTER_CD
					                   , NULL AS CHART_CD
					                   , NULL AS CHART_NM
					                   , NULL AS PLUGIN_OBJ_NM
					                   , NULL AS MEMO
					               FROM DUAL ]]>
							<foreach item="rm" collection="mergeRows">
					              UNION ALL
					             SELECT TRIM(#{ssnEnterCd}) AS ENTER_CD
					                  , TRIM( #{rm.chartCd} ) AS CHART_CD
					                  , TRIM( #{rm.chartNm} ) AS CHART_NM
					                  , TRIM( #{rm.pluginObjNm} ) AS PLUGIN_OBJ_NM
					                  , TRIM( #{rm.memo} ) AS MEMO
					              FROM  DUAL
							</foreach>
					             ) A
					       WHERE A.ENTER_CD IS NOT NULL
					         AND A.CHART_CD IS NOT NULL
					) S
					ON (
					            T.ENTER_CD = S.ENTER_CD
					        AND T.CHART_CD = S.CHART_CD
					)
					WHEN MATCHED THEN
					     UPDATE
					        SET T.CHKDATE       = SYSDATE
					          , T.CHKID         = #{ssnSabun}
					          , T.CHART_NM      = S.CHART_NM
					          , T.PLUGIN_OBJ_NM = S.PLUGIN_OBJ_NM
					          , T.MEMO          = S.MEMO
					WHEN NOT MATCHED THEN
					     INSERT (
					            T.ENTER_CD
					          , T.CHART_CD
					          , T.CHART_NM
					          , T.PLUGIN_OBJ_NM
					          , T.MEMO
					          , T.CHKDATE
					          , T.CHKID
					     ) VALUES (
					            S.ENTER_CD
					          , S.CHART_CD
					          , S.CHART_NM
					          , S.PLUGIN_OBJ_NM
					          , S.MEMO
					          , SYSDATE
					          , #{ssnSabun}
					     )
		</update>

<!-- 삭제 -->
		<delete parameterType="map" id="deleteChartItemMng">
			
				<![CDATA[
					DELETE FROM TEIS901
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd}) 
					   AND ( CHART_CD ) IN ( ( NULL) ]]>
					 <foreach item="rm" collection="deleteRows">
					 	<if test="rm.chartCd != null and rm.chartCd neq ''">
					 		 , ( TRIM( #{rm.chartCd} ) )
					 	</if>
					 </foreach> 
					       )
		</delete>
		
</mapper>