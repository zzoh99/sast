<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eis.empSituation.jikgubGrpSta">
		<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getJikgubGrpStaList1">
			
				<![CDATA[

				]]>
			
			
		</select>
		
		<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getJikgubGrpStaList2">
			
				<![CDATA[
				SELECT R1.*
					  FROM (
							SELECT CODE_NM
							     , CODE
							     , SUM(CNT)     AS CNT
							     , SUM(PER_CNT) AS PER_CNT
							  FROM (
									SELECT CODE_NM
									     , CNT
									     , ROUND((CNT/SUM(CNT) OVER())*100,1) AS PER_CNT
									     , CODE
									  FROM (
											--부사장~상무보 까지는 1로 넘겨서 상단에서 임원으로 판단 by JSG
											SELECT NVL(A.JIKGUB_CD, 'NOT999')   AS CODE
											     , NVL(A.JIKGUB_NM, '기타')   AS CODE_NM
											     , COUNT(A.SABUN) AS CNT
											  FROM THRM151 A
											     , THRM100 B
											 WHERE A.ENTER_CD = B.ENTER_CD
											   AND A.SABUN    = B.SABUN
											   AND A.ENTER_CD = TRIM(#{groupEnterCd})
											   AND REPLACE(#{searchYmd}, '-', '') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
											   AND A.STATUS_CD <> 'RA'
											   AND A.STATUS_CD <> 'RAA'
											   AND A.STATUS_CD NOT LIKE 'XA%' ]]>
<if test="businessPlaceCd != null and businessPlaceCd neq ''">
											   AND F_COM_GET_BP_CD(A.ENTER_CD, A.SABUN, REPLACE(#{searchYmd}, '-', '')) IN ($businessPlaceCd)
</if>
<if test="locationCd != null and locationCd neq ''">
											   AND F_COM_GET_LOCATION_CD3(A.ENTER_CD, A.SABUN, REPLACE(#{searchYmd}, '-', '')) IN ($locationCd)
</if>
<if test="payGroupCd != null and payGroupCd neq ''">
											   AND F_COM_GET_PAY_GROUP_CD(A.ENTER_CD, A.SABUN, REPLACE(#{searchYmd}, '-', '')) IN ($payGroupCd)
</if>
<if test="jikchakCd != null and jikchakCd neq ''">
											   AND A.JIKCHAK_CD IN
		<foreach collection="jikchakCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
</if>
<if test="jikweeCd != null and jikweeCd neq ''">
											   AND A.JIKWEE_CD IN
		<foreach collection="jikweeCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
</if>
<if test="jikgubCd != null and jikgubCd neq ''">
											   AND A.JIKGUB_CD IN
		<foreach collection="jikgubCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
</if>
<if test="workType != null and workType neq ''">
											   AND A.WORK_TYPE IN
		<foreach collection="workType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
</if>
<if test="manageCd != null and manageCd neq ''">
											   AND A.MANAGE_CD IN
		<foreach collection="manageCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
</if>
											   AND (B.RET_YMD IS NULL OR B.RET_YMD >= REPLACE(#{searchYmd}, '-', ''))
<if test="searchOrgCd != null and searchOrgCd neq ''">											   
											   AND A.ORG_CD IN (
                                                       SELECT #{searchOrgCd}
                                                       FROM    DUAL
                                                       <if test="searchType != null and searchType neq ''">
                                                       UNION
                                                       SELECT T1.ORG_CD
                                                       FROM   (
                                                                  SELECT T.ENTER_CD, T.SDATE, T.ORG_CD, T.PRIOR_ORG_CD
                                                                    FROM TORG105 T
                                                                   WHERE T.ENTER_CD = TRIM(#{groupEnterCd})
                                                                     AND T.SDATE =
                                                                         ( SELECT MAX(SDATE)
                                                                             FROM TORG103
                                                                            WHERE ENTER_CD = T.ENTER_CD
                                                                              AND TRIM(REPLACE(#{searchYmd}, '-', '')) BETWEEN SDATE AND NVL(EDATE, '99991231') )
                                                               ) T1
                                                       START WITH T1.PRIOR_ORG_CD   = #{searchOrgCd}
                                                       CONNECT BY PRIOR T1.ENTER_CD = T1.ENTER_CD
                                                              AND PRIOR T1.SDATE    = T1.SDATE
                                                              AND PRIOR T1.ORG_CD   = T1.PRIOR_ORG_CD
                                                       </if>
                                                      )
</if>
                                      GROUP BY A.JIKGUB_CD, A.JIKGUB_NM
                                      )
                                )
                        GROUP BY CODE_NM, CODE
                        ) R1
                      , (SELECT CODE
                              , SEQ
                         FROM   TSYS005
                         WHERE  ENTER_CD  = TRIM(#{groupEnterCd})
                         AND    GRCODE_CD = 'H20010'
                         ) R2
                WHERE    R1.CODE = R2.CODE(+)
                ORDER BY R2.SEQ
		</select>
</mapper>