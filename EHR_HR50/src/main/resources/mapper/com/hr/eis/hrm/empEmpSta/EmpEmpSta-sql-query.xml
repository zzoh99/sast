<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eis.hrm.empEmpSta">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getEmpEmpStaList">
			
				<![CDATA[
				  SELECT AA.ENTER_CD
				  		, '/EmpPhotoOut.do'||chr(63)||'enterCd=' || AA.ENTER_CD || chr(38) || 'searchKeyword=' || AA.SABUN ||  chr(38) || 'type=1' AS PHOTO
				  		,AA.SABUN
				  		,AA.NAME
				  		,AA.ALIAS
				  		,AA.ORG_NM
				  		,AA.ORG_CD
				  		,AA.WORK_TYPE
				  		,AA.WORK_TYPE_NM
				  		,AA.MANAGE_NM
				  		,AA.JIKGUB_NM
				  		,AA.JIKGUB_CD
				  		,AA.JIKWEE_NM
				  		,AA.JIKWEE_CD
				  		,AA.JIKCHAK_NM
				  		,AA.JIKCHAK_CD				  		
				  		,AA.ORG_NM_CURR
				  		,AA.ORG_CD_CURR
				  		,AA.WORK_TYPE_CURR
				  		,AA.WORK_TYPE_NM_CURR
				  		,AA.MANAGE_NM_CURR
				  		,AA.JIKGUB_NM_CURR
				  		,AA.JIKGUB_CD_CURR
				  		,AA.JIKWEE_NM_CURR
				  		,AA.JIKWEE_CD_CURR
				  		,AA.JIKCHAK_NM_CURR
				  		,AA.JIKCHAK_CD_CURR				  		
				  		,AA.EMP_YMD
				  		,AA.RET_YMD
				  		,AA.TOT_AGREE_YY_CNT || '년 ' || AA.TOT_AGREE_YY_CNT || '개월' AS TOT_AGREE_YY_CNT
				  		,AA.STF_TYPE_NM
				  		,AA.EMP_TYPE_NM
				  		,AA.ORD_DETAIL_NM
				  		,AA.ORD_REASON_NM
				  		,AA.MEMO
				  		, F_SYS_GET_ENDOW_AUTH_YN( AA.ENTER_CD, TRIM( #{ssnGrpCd} ) ,TRIM( #{ssnSabun} ),  AA.SABUN ) AS AUTH_YN
				  FROM
						(		
						SELECT A.ENTER_CD,                                             --회사구분
						       A.SABUN,                                                 -- 사번
						       F_COM_GET_NAMES(A.ENTER_CD, A.SABUN) AS NAME,            -- 성명(한글)
						       F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, 'ALIAS') AS ALIAS,  -- 영문ID
						       F_COM_GET_ORG_NM (B.ENTER_CD, B.ORG_CD, B.SDATE) AS ORG_NM,  -- 소속
						       B.ORG_CD,                                              -- 소속코드
						       B.JIKGUB_NM,                                           --직급
						       B.JIKGUB_CD,                                           -- 직급코드
						       B.JIKWEE_NM,                                           --직위
						       B.JIKWEE_CD,                                           -- 직위코드
						       B.JIKCHAK_NM,                                                 -- 직책
						       B.JIKCHAK_CD,                                          -- 직책코드
						       B.MANAGE_CD,                                           -- 사원구분코드
						       B.MANAGE_NM,
						       B.WORK_TYPE,
						       B.WORK_TYPE_NM,
						       F_COM_GET_ORG_NM (C.ENTER_CD, C.ORG_CD, C.SDATE) AS ORG_NM_CURR,  -- 소속
						       C.ORG_CD 			AS ORG_CD_CURR,
						       C.JIKGUB_NM 			AS JIKGUB_NM_CURR,
						       C.JIKGUB_CD 			AS JIKGUB_CD_CURR,
						       C.JIKWEE_NM 			AS JIKWEE_NM_CURR,
						       C.JIKWEE_CD 			AS JIKWEE_CD_CURR,
						       C.JIKCHAK_NM 		AS JIKCHAK_NM_CURR,
						       C.JIKCHAK_CD 		AS JIKCHAK_CD_CURR,
						       C.MANAGE_CD 			AS MANAGE_CD_CURR,
						       C.MANAGE_NM 			AS MANAGE_NM_CURR,
						       C.WORK_TYPE 			AS WORK_TYPE_CURR,
						       C.WORK_TYPE_NM		AS WORK_TYPE_NM_CURR,
						       A.EMP_YMD,                                             -- 입사일자
						       A.RET_YMD,                                             -- 퇴사일자     
						       A.STF_TYPE_NM,										-- 채용구분
						       A.EMP_TYPE_NM,										-- 입사구분
						       (SELECT F_COM_GET_ORD_DETAIL_NM(ENTER_CD, ORD_TYPE_CD, ORD_DETAIL_CD) 
                                FROM THRM191 
                                WHERE ENTER_CD = A.ENTER_CD
                                AND   SABUN = A.SABUN
                                AND   ORD_YMD = A.EMP_YMD
                                AND ORD_TYPE_CD = 'A'
                                ) AS ORD_DETAIL_NM,
						       (SELECT ORD_REASON_NM 
                                FROM THRM191 
                                WHERE ENTER_CD = A.ENTER_CD
                                AND   SABUN = A.SABUN
                                AND   ORD_YMD = A.EMP_YMD
                                AND ORD_TYPE_CD = 'A'
                                ) AS ORD_REASON_NM,
                                (SELECT MEMO 
                                FROM THRM191 
                                WHERE ENTER_CD = A.ENTER_CD
                                AND   SABUN = A.SABUN
                                AND   ORD_YMD = A.EMP_YMD
                                AND ORD_TYPE_CD = 'A'
                                ) AS MEMO,       
						       (SELECT 
                                        TRUNC(SUM(TRUNC((MONTHS_BETWEEN(TO_DATE(NVL(x.EDATE,TO_CHAR(SYSDATE,'YYYYMMDD')),'YYYYMMDD')+1,TO_DATE(X.SDATE,'YYYYMMDD'))*(x.AGREE_RATE/100)) /12)*12
                                                    + TRUNC(MOD((MONTHS_BETWEEN(TO_DATE(NVL(x.EDATE,TO_CHAR(SYSDATE,'YYYYMMDD')),'YYYYMMDD')+1, TO_DATE(X.SDATE,'YYYYMMDD')))*(x.AGREE_RATE/100),12))

                                        )/12) AS YY
                                FROM    THRM117 x
                                WHERE   x.ENTER_CD = A.ENTER_CD 
                                AND     x.SABUN = A.SABUN) AS TOT_AGREE_YY_CNT,
                                 (SELECT 
										MOD(SUM(TRUNC((MONTHS_BETWEEN(TO_DATE(NVL(X.EDATE,TO_CHAR(SYSDATE,'YYYYMMDD')),'YYYYMMDD')+1,TO_DATE(X.SDATE,'YYYYMMDD'))*(X.AGREE_RATE/100)) /12)*12
												+ TRUNC(MOD((MONTHS_BETWEEN(TO_DATE(NVL(X.EDATE,TO_CHAR(SYSDATE,'YYYYMMDD')),'YYYYMMDD')+1, TO_DATE(X.SDATE,'YYYYMMDD')))*(X.AGREE_RATE/100),12))
										),12) AS MM
								FROM    THRM117 X
								WHERE   X.ENTER_CD = A.ENTER_CD 
								AND     X.SABUN = A.SABUN) AS TOT_AGREE_MM_CNT
						 FROM THRM100 A
						 LEFT OUTER JOIN THRM151 B
						   ON A.ENTER_CD = B.ENTER_CD
						  AND A.SABUN    = B.SABUN
						  AND A.EMP_YMD BETWEEN B.SDATE AND NVL (B.EDATE,'99999999')
						 LEFT OUTER JOIN THRM151 C
						   ON A.ENTER_CD = C.ENTER_CD
						  AND A.SABUN    = C.SABUN
						  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL (B.EDATE,'99999999')
						) AA, THRM151 BB
				  WHERE AA.ENTER_CD = NVL(TRIM(#{groupEnterCd}),  TRIM(#{ssnEnterCd}))
				    AND AA.ENTER_CD = BB.ENTER_CD
					AND AA.SABUN = BB.SABUN
					AND AA.EMP_YMD BETWEEN BB.SDATE AND NVL(BB.EDATE, '99991231')	-- 입사일 기준일	
					AND AA.EMP_YMD BETWEEN REPLACE(#{searchYmdFrom}, '-') AND REPLACE(#{searchYmdTo}, '-') ]]> 
					<if test="searchOrgNm != null and searchOrgNm neq ''">
					   AND NVL(AA.ORG_NM,'^') LIKE '%'|| #{searchOrgNm} ||'%'
					</if>
					<if test="searchName != null and searchName neq ''">
					   AND NVL(AA.NAME,'^') LIKE '%'|| #{searchName} ||'%'
					</if>
					<if test="multiManageCd != null and multiManageCd neq ''">
					   AND AA.MANAGE_CD	IN
					       <foreach collection="multiManageCd" item="item" index="index" open="(" close=")" separator=",">
									#{item}
							</foreach>
					</if>
					<if test="multiWorkType != null and multiWorkType neq ''">
					   AND AA.WORK_TYPE	IN
		<foreach collection="multiWorkType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
					</if>
				 ORDER BY EMP_YMD, F_COM_JIKJE_SORT(ENTER_CD, SABUN, AA.EMP_YMD)
		</select>
		
		<!-- 		현인원 조회용 -->
		<select parameterType="map" resultType="cMap" id="getEmpEmpStaMap">
			
				<![CDATA[
					SELECT NOW_CNT, TERM_CNT, ENTER_CNT
						 , DECODE(NOW_CNT,0,0,ROUND((ENTER_CNT / NOW_CNT ) * 100, 2)) AS ENTER_PER
					FROM (
					            SELECT COUNT (*) AS NOW_CNT
					              FROM THRM100 A,THRM151 B
					             WHERE A.ENTER_CD = B.ENTER_CD AND A.SABUN = B.SABUN
					             	AND A.ENTER_CD = NVL(TRIM(#{groupEnterCd}),  TRIM(#{ssnEnterCd}))
					                AND TO_CHAR (SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL (B.EDATE, '99999999')
                                    AND B.STATUS_CD NOT IN (SELECT DISTINCT REGEXP_SUBSTR(A.PARAM, '[^,]+', 1, LEVEL)
						                                      FROM (SELECT NVL(F_COM_GET_STD_CD_VALUE( NVL(TRIM(#{groupEnterCd}),  TRIM(#{ssnEnterCd})), 'HRM_STATUS_CD_EX'),'RA') AS PARAM FROM dual) A
						                                   CONNECT BY LEVEL <= length(REGEXP_REPLACE(A.PARAM, '[^,]+',''))+1) ]]>
									<if test='except1 != null and except1 eq "Y"'>
									<![CDATA[ AND B.STATUS_CD <> 'CA' ]]>
									</if>
									<if test='except2 != null and except2 eq "Y"'> <![CDATA[
									   AND NVL((SELECT  X.CNT_TYPE_CD 
										          FROM TCPN403 X 
										         WHERE X.ENTER_CD = B.ENTER_CD 
										           AND X.SABUN = B.SABUN 
												   AND (X.ENTER_CD, X.SABUN, X.SDATE) IN ( SELECT Y.ENTER_CD, Y.SABUN, MAX(Y.SDATE)
										           	                                         FROM TCPN403 Y
										            	                                    WHERE Y.ENTER_CD = X.ENTER_CD
										                                                      AND Y.SABUN = X.SABUN
										                                                      AND TO_CHAR (SYSDATE, 'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231') 
										                                                    GROUP BY Y.ENTER_CD, Y.SABUN ) ) , '^' ) <> '070'						
									]]></if>
									<if test='except3 != null and except3 eq "Y"'> <![CDATA[
									   AND B.JIKWEE_CD <> '177'
									]]></if>		<![CDATA[					                                   
					           ) A,  
					           ( SELECT COUNT (*) TERM_CNT
					              FROM THRM100 A,THRM151 B
					             WHERE A.ENTER_CD = B.ENTER_CD AND A.SABUN = B.SABUN
					             	AND A.ENTER_CD = NVL(TRIM(#{groupEnterCd}),  TRIM(#{ssnEnterCd}))
									AND TO_CHAR(SYSDATE, 'YYYY') -1 || '1231' BETWEEN B.SDATE AND NVL (B.EDATE, '99999999')
                                    AND B.STATUS_CD NOT IN (SELECT DISTINCT REGEXP_SUBSTR(A.PARAM, '[^,]+', 1, LEVEL)
						                                      FROM (SELECT NVL(F_COM_GET_STD_CD_VALUE(NVL(TRIM(#{groupEnterCd}),  TRIM(#{ssnEnterCd})), 'HRM_STATUS_CD_EX'),'RA') AS PARAM FROM dual) A
						                                   CONNECT BY LEVEL <= length(REGEXP_REPLACE(A.PARAM, '[^,]+',''))+1) ]]>
									<if test='except1 != null and except1 eq "Y"'> <![CDATA[
									   AND B.STATUS_CD <> 'CA' ]]>
									</if>
									<if test='except2 != null and except2 eq "Y"'> <![CDATA[
									   AND NVL((SELECT  X.CNT_TYPE_CD 
										          FROM TCPN403 X 
										         WHERE X.ENTER_CD = B.ENTER_CD 
										           AND X.SABUN = B.SABUN 
												   AND (X.ENTER_CD, X.SABUN, X.SDATE) IN ( SELECT Y.ENTER_CD, Y.SABUN, MAX(Y.SDATE)
										           	                                         FROM TCPN403 Y
										            	                                    WHERE Y.ENTER_CD = X.ENTER_CD
										                                                      AND Y.SABUN = X.SABUN
										                                                      AND TO_CHAR(SYSDATE, 'YYYY') -1 || '1231'  BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231') 
										                                                    GROUP BY Y.ENTER_CD, Y.SABUN ) ) , '^' ) <> '070' ]]>						
									</if>
									<if test='except3 != null and except3 eq "Y"'> <![CDATA[
									   AND B.JIKWEE_CD <> '177' ]]>
									</if>	                                   
					            ) B,   
					            ( SELECT COUNT (*) ENTER_CNT
								    FROM THRM100 A                                                    -- 인사마스터
								    INNER JOIN THRM151 B
								      ON A.ENTER_CD = B.ENTER_CD
								     AND A.SABUN    = B.SABUN
								     AND A.EMP_YMD BETWEEN B.SDATE AND NVL (B.EDATE,'99999999')
								    LEFT OUTER JOIN THRM151 C
								      ON A.ENTER_CD = C.ENTER_CD
								     AND A.SABUN    = C.SABUN
								     AND TO_CHAR (SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL (B.EDATE,'99999999')
					               WHERE A.ENTER_CD = NVL(TRIM(#{groupEnterCd}),  TRIM(#{ssnEnterCd}))
					                 AND A.EMP_YMD BETWEEN REPLACE(#{searchYmdFrom}, '-') AND REPLACE(#{searchYmdTo}, '-')
									<if test="searchOrgNm != null and searchOrgNm neq ''">
									   AND NVL(B.ORG_NM,'^') LIKE '%'|| #{searchOrgNm} ||'%'
									</if>
									<if test="searchName != null and searchName neq ''">
									   AND NVL(A.NAME,'^') LIKE '%'|| #{searchName} ||'%'
									</if>
									<if test="multiManageCd != null and multiManageCd neq ''">
									   AND B.MANAGE_CD	IN <foreach collection="multiManageCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
									</if>
									<if test="multiWorkType != null and multiWorkType neq ''">
									   AND B.WORK_TYPE	IN
		<foreach collection="multiWorkType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
									</if>
									<if test='except1 != null and except1 eq "Y"'> <![CDATA[
									   AND B.STATUS_CD <> 'CA'
									]]></if>
									<if test='except2 != null and except2 eq "Y"'> <![CDATA[
									   AND NVL((SELECT  X.CNT_TYPE_CD 
										          FROM TCPN403 X 
										         WHERE X.ENTER_CD = B.ENTER_CD 
										           AND X.SABUN = B.SABUN 
												   AND (X.ENTER_CD, X.SABUN, X.SDATE) IN ( SELECT Y.ENTER_CD, Y.SABUN, MAX(Y.SDATE)
										           	                                         FROM TCPN403 Y
										            	                                    WHERE Y.ENTER_CD = X.ENTER_CD
										                                                      AND Y.SABUN = X.SABUN
										                                                      AND TO_CHAR (SYSDATE, 'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231') 
										                                                    GROUP BY Y.ENTER_CD, Y.SABUN ) ) , '^' ) <> '070' ]]>		
									</if>
									<if test='except3 != null and except3 eq "Y"'> <![CDATA[
									   AND B.JIKWEE_CD <> '177']]>
									</if>	
					            ) C
		</select>
</mapper>