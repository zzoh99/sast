<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eis.empSituation.sexAgeGrpSta">
		<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getAgeGrpStaList">
			
				<![CDATA[
			--결과값을 백분율화, 코드명칭화 한다. by JSG
			 SELECT AGE_CODE CODE,(CASE WHEN AGE_CODE = 0 THEN '30세미만'
			 							WHEN AGE_CODE = 30 THEN '30~34세'
										WHEN AGE_CODE = 35 THEN '35~39세'
			              WHEN AGE_CODE = 40 THEN '40~44세'
			              WHEN AGE_CODE = 45 THEN '45~49세'
			              ELSE '50세이상' END) AS CODE_NM
	 				, ROUND((COUNT(AGE_CODE)/SUM(COUNT(AGE_CODE)) OVER())*100,1) AS PER_CNT
			        , COUNT(AGE_CODE) AS CNT
			   FROM (
			   SELECT  AGE, (CASE WHEN C.AGE BETWEEN 0 AND 29 THEN 0
                                  WHEN C.AGE BETWEEN 30 AND 34 THEN 30
                                  WHEN C.AGE BETWEEN 35 AND 39 THEN 35
                                  WHEN C.AGE BETWEEN 40 AND 44 THEN 40
                                  WHEN C.AGE BETWEEN 45 AND 49 THEN 45
                                  ELSE 50 END) AS AGE_CODE
			     FROM THRM151 A
			         ,(SELECT MAX(X.SDATE) AS SDATE, X.ENTER_CD, X.SABUN, F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, REPLACE(#{searchYmd}, '-', '')) AS ORG_NM
			             FROM THRM151 X
			            WHERE X.ENTER_CD = #{groupEnterCd}
			              AND REPLACE(#{searchYmd}, '-', '') BETWEEN X.SDATE AND NVL(X.EDATE,'99991231')
		                  AND (X.ENTER_CD, X.STATUS_CD) NOT IN (SELECT DISTINCT ENTER_CD, REGEXP_SUBSTR(A.PARAM, '[^,]+', 1, LEVEL)
		                                                          FROM (SELECT ENTER_CD, NVL(F_COM_GET_STD_CD_VALUE(ENTER_CD, 'HRM_STATUS_CD_EX'),'RA') AS PARAM FROM TORG900 WHERE ENTER_CD = #{groupEnterCd}) A
		                                                       CONNECT BY LEVEL <= length(REGEXP_REPLACE(A.PARAM, '[^,]+',''))+1) ]]>
	                  <if test="jikweeCd != null and jikweeCd neq ''">
                          AND JIKWEE_CD IN
		<foreach collection="jikweeCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
	                  <if test="jikchakCd != null and jikchakCd neq ''">
                          AND JIKCHAK_CD IN
		<foreach collection="jikchakCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
	                  <if test="jikgubCd != null and jikgubCd neq ''">
                          AND JIKGUB_CD IN
		<foreach collection="jikgubCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
                      <if test="workType != null and workType neq ''">
                            AND WORK_TYPE IN
		<foreach collection="workType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
                      <if test="manageCd != null and manageCd neq ''">
                            AND MANAGE_CD IN
		<foreach collection="manageCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
           			    GROUP BY ENTER_CD, SABUN  ,ORG_CD
			          ) B
			         ,(SELECT ENTER_CD, SABUN, F_COM_GET_AGE(ENTER_CD, '', RES_NO, REPLACE(#{searchYmd}, '-', '')) AS AGE
			             FROM THRM100
			            WHERE ENTER_CD = #{groupEnterCd}
			              AND BIR_YMD IS NOT NULL
			              AND (RET_YMD IS NULL OR RET_YMD >= REPLACE(REPLACE(#{searchYmd}, '-', ''), '-', ''))
			          ) C
			    WHERE A.ENTER_CD = B.ENTER_CD
			      AND A.SABUN    = B.SABUN
			      AND A.SDATE    = B.SDATE
			      AND A.ENTER_CD = C.ENTER_CD
			      AND A.SABUN    = C.SABUN
	           <if test="searchOrgCd != null and searchOrgCd neq ''">
	           	   AND A.ORG_CD IN (
				           	   				SELECT #{searchOrgCd}
											  FROM DUAL
					   <if test="searchType != null and searchType neq ''">
											 UNION
											SELECT ORG_CD
											  FROM (
											      	SELECT *
													  FROM TORG105
													 WHERE ENTER_CD = TRIM(#{groupEnterCd})
													   AND SDATE = (
																	 SELECT MAX(SDATE)
																	   FROM TORG103
																	  WHERE ENTER_CD = TRIM(#{groupEnterCd})
																		AND REPLACE(#{searchYmd}, '-', '') BETWEEN SDATE AND NVL(EDATE, '99991231')
																   )
						   						   )
											 START WITH PRIOR_ORG_CD = #{searchOrgCd}
											 CONNECT BY PRIOR ENTER_CD = ENTER_CD
												 AND PRIOR SDATE = SDATE
												 AND PRIOR ORG_CD = PRIOR_ORG_CD
			           </if>								   
										   )
	           </if>

			)
			GROUP BY AGE_CODE
		</select>
		
		<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getSexGrpStaList">
			
				<![CDATA[
				SELECT CODE, CODE_NM  AS CODE_NM, CNT, PER_CNT
				FROM (
				SELECT CODE, Y.CODE_NM, COUNT(X.SEX_CODE) AS CNT, ROUND((COUNT(X.SEX_CODE)/SUM(COUNT(X.SEX_CODE)) OVER())*100,1) AS PER_CNT
				  FROM (SELECT A.ENTER_CD,C.SABUN, C.SEX_TYPE, A.ORG_CD, (CASE WHEN C.SEX_TYPE = 1 THEN 1 ELSE 2 END) AS SEX_CODE
				          FROM THRM151 A
				         ,(SELECT MAX(X.SDATE) AS SDATE, X.ENTER_CD, X.SABUN, F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, REPLACE(#{searchYmd}, '-', '')) AS ORG_NM
				             FROM THRM151 X
				            WHERE X.ENTER_CD = #{groupEnterCd}
				              AND REPLACE(#{searchYmd}, '-', '') BETWEEN X.SDATE AND NVL(X.EDATE,'99991231')
			                  AND (X.ENTER_CD, X.STATUS_CD) NOT IN (SELECT DISTINCT ENTER_CD, REGEXP_SUBSTR(A.PARAM, '[^,]+', 1, LEVEL)
			                                                          FROM (SELECT ENTER_CD, NVL(F_COM_GET_STD_CD_VALUE(ENTER_CD, 'HRM_STATUS_CD_EX'),'RA') AS PARAM FROM TORG900 WHERE ENTER_CD = #{groupEnterCd}) A
			                                                       CONNECT BY LEVEL <= length(REGEXP_REPLACE(A.PARAM, '[^,]+',''))+1) ]]>
				              <if test="jikweeCd != null and jikweeCd neq ''">
			                      AND JIKWEE_CD IN
		<foreach collection="jikweeCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		                      </if>
			                  <if test="jikchakCd != null and jikchakCd neq ''">
		                          AND JIKCHAK_CD IN
		<foreach collection="jikchakCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		                      </if>
			                  <if test="jikgubCd != null and jikgubCd neq ''">
		                          AND JIKGUB_CD IN
		<foreach collection="jikgubCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		                      </if>
		                      <if test="workType != null and workType neq ''">
		                            AND WORK_TYPE IN
		<foreach collection="workType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		                      </if>
		                      <if test="manageCd != null and manageCd neq ''">
		                            AND MANAGE_CD IN
		<foreach collection="manageCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		                      </if>
				                 GROUP BY ENTER_CD, SABUN  ,ORG_CD
				               ) B
				              ,(SELECT ENTER_CD, SABUN, SEX_TYPE
				                  FROM THRM100
				                 WHERE ENTER_CD = #{groupEnterCd}
				                   AND SEX_TYPE IS NOT NULL
				                   AND (RET_YMD IS NULL OR RET_YMD >= REPLACE(#{searchYmd}, '-', ''))
				               ) C
				         WHERE A.ENTER_CD = B.ENTER_CD
				           AND A.SABUN    = B.SABUN
				           AND A.SDATE    = B.SDATE
				           AND A.ENTER_CD = C.ENTER_CD
				           AND A.SABUN    = C.SABUN
			           <if test="searchOrgCd != null and searchOrgCd neq ''">
			           	   AND A.ORG_CD IN (
				           	   				SELECT #{searchOrgCd}
											  FROM DUAL
					   <if test="searchType != null and searchType neq ''">
											 UNION
											SELECT ORG_CD
											  FROM (
											      	SELECT *
													  FROM TORG105
													 WHERE ENTER_CD = TRIM(#{groupEnterCd})
													   AND SDATE = (
																	 SELECT MAX(SDATE)
																	   FROM TORG103
																	  WHERE ENTER_CD = TRIM(#{groupEnterCd})
																		AND REPLACE(#{searchYmd}, '-', '') BETWEEN SDATE AND NVL(EDATE, '99991231')
																   )
						    					   )
											 START WITH PRIOR_ORG_CD = #{searchOrgCd}
											 CONNECT BY PRIOR ENTER_CD = ENTER_CD
												 AND PRIOR SDATE = SDATE
												 AND PRIOR ORG_CD = PRIOR_ORG_CD
			           </if>								   
										   )
			           </if>
				      ) X
				     ,(
				       SELECT 1 AS CODE
				              ,'남자' AS CODE_NM
				          FROM DUAL
				        UNION
				        SELECT 2 AS CODE
				              ,'여자' AS CODE_NM
				          FROM DUAL
				      ) Y
				 WHERE X.SEX_CODE(+)= CODE
				 GROUP BY Y.CODE_NM, Y.CODE
				 ORDER BY Y.CODE
				 )
		</select>
		
		<select parameterType="map" resultType="cMap" id="getSexAgeGrpStaAvgAge">
			
				<![CDATA[
				SELECT  NVL(ROUND(AVG(AGE), 1), 0) as AVG_AGE
                 FROM THRM151 A
			         ,(SELECT MAX(X.SDATE) AS SDATE, X.ENTER_CD, X.SABUN, F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, REPLACE(#{searchYmd}, '-', '')) AS ORG_NM
			             FROM THRM151 X
			            WHERE X.ENTER_CD = #{groupEnterCd}
			              AND REPLACE(#{searchYmd}, '-', '') BETWEEN X.SDATE AND NVL(X.EDATE,'99991231')
		                  AND (X.ENTER_CD, X.STATUS_CD) NOT IN (SELECT DISTINCT ENTER_CD, REGEXP_SUBSTR(A.PARAM, '[^,]+', 1, LEVEL)
		                                                          FROM (SELECT ENTER_CD, NVL(F_COM_GET_STD_CD_VALUE(ENTER_CD, 'HRM_STATUS_CD_EX'),'RA') AS PARAM FROM TORG900 WHERE ENTER_CD = #{groupEnterCd}) A
		                                                       CONNECT BY LEVEL <= length(REGEXP_REPLACE(A.PARAM, '[^,]+',''))+1) ]]>
		              <if test="jikweeCd != null and jikweeCd neq ''">
	                      AND JIKWEE_CD IN
		<foreach collection="jikweeCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
	                  <if test="jikchakCd != null and jikchakCd neq ''">
                          AND JIKCHAK_CD IN
		<foreach collection="jikchakCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
	                  <if test="jikgubCd != null and jikgubCd neq ''">
                          AND JIKGUB_CD IN
		<foreach collection="jikgubCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
                      <if test="workType != null and workType neq ''">
                            AND WORK_TYPE IN
		<foreach collection="workType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>
                      <if test="manageCd != null and manageCd neq ''">
                            AND MANAGE_CD IN
		<foreach collection="manageCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                      </if>

              			  GROUP BY ENTER_CD, SABUN  ,ORG_CD
                      ) B
                     ,(SELECT ENTER_CD, SABUN, F_COM_GET_AGE(ENTER_CD, '', RES_NO, REPLACE(#{searchYmd}, '-', '')) AS AGE
                         FROM THRM100
                        WHERE ENTER_CD = #{groupEnterCd}
                          AND (RET_YMD IS NULL OR RET_YMD >= REPLACE(REPLACE(#{searchYmd}, '-', ''), '-', ''))
                      ) C
                WHERE A.ENTER_CD = B.ENTER_CD
                  AND A.SABUN    = B.SABUN
                  AND A.SDATE    = B.SDATE
                  AND A.ENTER_CD = C.ENTER_CD
                  AND A.SABUN    = C.SABUN
			<if test="searchOrgCd != null and searchOrgCd neq ''">
				  AND A.ORG_CD IN (
									SELECT #{searchOrgCd}
									  FROM DUAL
				<if test="searchType != null and searchType neq ''">
									  UNION
									 SELECT ORG_CD
									   FROM (
											 SELECT *
											   FROM TORG105
											  WHERE ENTER_CD = TRIM(#{groupEnterCd})
												AND SDATE = (
															  SELECT MAX(SDATE)
																FROM TORG103
															   WHERE ENTER_CD = TRIM(#{groupEnterCd})
																 AND REPLACE(#{searchYmd}, '-', '') BETWEEN SDATE AND NVL(EDATE, '99991231')
															)
											)
					START WITH PRIOR_ORG_CD = #{searchOrgCd}
					CONNECT BY PRIOR ENTER_CD = ENTER_CD
					AND PRIOR SDATE = SDATE
					AND PRIOR ORG_CD = PRIOR_ORG_CD
				</if>
				)
			</if>
	     </select>
</mapper>