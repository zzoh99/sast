<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.hrmComPopup.hrmLicensePopup">

<!-- 자격증 조회 -->
		<select parameterType="map" resultType="cMap" id="getHrmLicensePopupList">

				<![CDATA[
					SELECT A.ENTER_CD
					     , A.GRCODE_CD
					     , A.CODE
					     , A.CODE_NM
					     , A.CODE_IDX
					     , A.CODE_FULL_NM
					     , A.NOTE1
					     , A.NOTE2
					  FROM TSYS005 A
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.GRCODE_CD = 'H20160' AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.S_YMD AND A.E_YMD
					           ]]>
				<if test='gubun != null and !gubun.equals("")'>
					   AND A.NOTE1 = TRIM( #{gubun} )
				</if>
				<if test='codeNm != null and !codeNm.equals("")'>
					   AND A.CODE_NM LIKE '%'||TRIM( #{codeNm} )||'%'
				</if>
				ORDER BY A.SEQ


		</select>

<!-- 학교코드 저장 -->
		<update parameterType="map" id="saveHrmLicensePopup">


					MERGE INTO TSYS005 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.GRCODE_CD
									, A.CODE
									, A.CODE_NM
									, A.CODE_IDX
									, A.MEMO
									, A.NOTE1
									, A.NOTE2
									, A.S_YMD
									, A.E_YMD
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL      AS GRCODE_CD
											, NULL      AS CODE
											, NULL      AS CODE_NM
											, NULL		AS CODE_IDX
											, NULL		AS MEMO
											, NULL		AS NOTE1
											, NULL		AS NOTE2
											, NULL		AS S_YMD
											, NULL		AS E_YMD
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT	TRIM( #{ssnEnterCd} )		AS ENTER_CD
											, 'H20160'	AS GRCODE_CD
											, TRIM( #{rm.code} )		AS CODE
											, TRIM( #{rm.codeNm} )		AS CODE_NM
											, TO_NUMBER(TRIM(#{rm.codeIdx}))  AS CODE_IDX
											, TRIM( #{rm.memo} )		AS MEMO
											, TRIM( #{rm.note1} )		AS NOTE1
											, TRIM( #{rm.note2} )		AS NOTE2
											, TO_CHAR(SYSDATE, 'YYYYMMDD')			AS S_YMD
											, '99991231'			AS E_YMD
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.CODE IS NOT NULL
										  AND A.CODE IS NOT NULL
										  AND A.CODE_NM IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.GRCODE_CD = S.GRCODE_CD AND T.CODE = S.CODE AND T.CODE_IDX	= S.CODE_IDX AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN T.S_YMD AND T.E_YMD)
					WHEN MATCHED THEN
						UPDATE SET	  T.CODE_NM		  = S.CODE_NM
									, T.MEMO		  = S.MEMO
									, T.NOTE1		  = S.NOTE1
									, T.NOTE2		  = S.NOTE2
									, T.CHKDATE			  = SYSDATE
									, T.CHKID			  = #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.GRCODE_CD
							, T.CODE
							, T.CODE_NM
							, T.CODE_IDX
						    , T.MEMO	
						    , T.NOTE1
						    , T.NOTE2
							, T.S_YMD
							, T.E_YMD
						    , T.CHKDATE
						    , T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.GRCODE_CD
							, S.CODE
							, S.CODE_NM
							, S.CODE_IDX
						    , S.MEMO
						    , S.NOTE1
						    , S.NOTE2
							, S.S_YMD
							, S.E_YMD
						    , SYSDATE
						    , #{ssnSabun}
						)

	</update>

<!-- 학교코드 삭제 -->
		<delete parameterType="map" id="deleteHrmLicensePopup">

			DELETE FROM TSYS005
			WHERE  (ENTER_CD,GRCODE_CD,CODE, CODE_IDX) IN 	(  (NULL,NULL,NULL,NULL)
			<foreach item="rm" collection="deleteRows" >
				<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
											and rm.code != null and !rm.code.equals("")'>
					,(TRIM( #{ssnEnterCd} ),TRIM( 'H20160' ),TRIM( #{rm.code} ), TO_NUMBER(TRIM(#{rm.codeIdx})))
				</if>
			</foreach>
			)
		</delete>
		

</mapper>