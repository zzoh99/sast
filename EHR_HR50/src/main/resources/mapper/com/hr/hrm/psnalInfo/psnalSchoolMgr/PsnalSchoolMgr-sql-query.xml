<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hrm.psnalInfo.psnalSchoolMgr">

<!-- 개인별 학력관리 다건 조회 -->

		<select id="getPsnalSchoolMgrList" parameterType="map" resultType="cMap">


				SELECT *
				  FROM (
					SELECT F_COM_GET_ORG_NM     (B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
					     , F_COM_GET_NAMES		(A.ENTER_CD, A.SABUN, #{ssnLocaleCd}) AS NAME
             		     , F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H20010' , B.JIKGUB_CD , #{ssnLocaleCd}) AS JIKGUB_NM
	<if test='searchBizPlaceCd != null and !searchBizPlaceCd.equals("")'>
					     , F_COM_GET_BP_CD(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'yyyymmdd')) AS BP_CD
	</if>
						 , A.ENTER_CD
					     , A.SABUN
					     , A.SEQ
					     , A.ACA_S_YM
					     , A.ACA_SCH_CD
					     , A.ACA_SCH_NM
					     , A.ACA_E_YM
					     , A.ACA_PLACE_CD
					     , A.ACA_PLACE_NM
					     , A.ACA_CD
					     , A.ACA_DEG_CD
					     , A.ACAMAJ_CD
					     , A.ACAMAJ_NM
					     , A.DOUMAJ_NM
					     , A.SUBMAJ_CD
					     , A.SUBMAJ_NM
					     , A.ACA_TYPE
					     , A.ACA_YN
					     , A.GRADE_NO
					     , A.NOTE
					     , A.FILE_SEQ
					     , A.ACA_POINT
					     , A.ACA_POINT_MANJUM
					     , A.E_TYPE
					     , A.D_TYPE
					     , A.ENTRY_TYPE
	<![CDATA[
			             , CASE WHEN A.FILE_SEQ IS NULL THEN '<a class=basic>첨부</a>' 
                            ELSE '<a class=basic>다운로드</a>' END AS BTN_FILE
	]]>
			             , B.STATUS_CD
			             , ROW_NUMBER() OVER( ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')), A.ACA_S_YM  DESC) AS ORDER_SEQ
					  FROM THRM115 A
	<choose>
	<when test='ssnSearchType != null and ssnSearchType.equals("A")'>
						, THRM151 B
	</when>
	<otherwise>
						, TABLE(THRM151_AUTH(#{ssnEnterCd}, #{ssnSearchType}, #{ssnSabun}, #{ssnGrpCd}, TO_CHAR(SYSDATE, 'YYYYMMDD'))) B
	</otherwise>
	</choose>				
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					  AND A.ENTER_CD	= B.ENTER_CD
				      AND A.SABUN		= B.SABUN
				      AND B.STATUS_CD NOT IN ('RAA')
			<if test='searchStatusCd != null and !searchStatusCd.equals("")'>
					  AND B.STATUS_CD = #{searchStatusCd}
			</if>
			<if test='searchAcaCd != null and !searchAcaCd.equals("")'>
					  AND A.ACA_CD = #{searchAcaCd}
			</if>
				      AND B.SDATE = (SELECT MAX(BB.SDATE)
			                          FROM THRM151 BB
			                          WHERE BB.ENTER_CD=  B.ENTER_CD
			                          AND BB.SABUN = B.SABUN
			                          AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN BB.SDATE AND NVL(BB.EDATE, '99991231'))
				)
		WHERE 1=1
		<if test='searchBizPlaceCd != null and !searchBizPlaceCd.equals("")'>
			AND BP_CD = #{searchBizPlaceCd}
		</if>
		<if test='searchSabunNameAlias != null and !searchSabunNameAlias.equals("")' >
			AND ( SABUN LIKE '%'||TRIM( #{searchSabunNameAlias} )||'%'OR NAME LIKE '%'||TRIM( #{searchSabunNameAlias} )||'%')
		</if>



		</select>





		<!-- 개인별학력관리 저장 -->
		<update id="savePsnalSchoolMgr" parameterType="map">
 
					MERGE INTO THRM115 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.SABUN
									, A.SEQ
									, A.ACA_S_YM
									, A.ACA_SCH_CD
									, A.ACA_SCH_NM
									, A.ACA_E_YM
									, A.ACA_PLACE_CD
									, A.ACA_PLACE_NM
									, A.ACA_CD
									, A.ACA_DEG_CD
									, A.ACAMAJ_CD
									, A.ACAMAJ_NM
									, A.DOUMAJ_NM
									, A.SUBMAJ_CD
									, A.SUBMAJ_NM
									, A.ACA_TYPE
									, A.ACA_YN
									, A.GRADE_NO
									, A.NOTE
									, A.FILE_SEQ
									, A.ACA_POINT
					     			, A.ACA_POINT_MANJUM
								    , A.E_TYPE
								    , A.D_TYPE
								    , A.ENTRY_TYPE
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS SABUN
											, NULL		AS SEQ
											, NULL		AS ACA_S_YM
											, NULL		AS ACA_SCH_CD
											, NULL		AS ACA_SCH_NM
											, NULL		AS ACA_E_YM
											, NULL		AS ACA_PLACE_CD
											, NULL		AS ACA_PLACE_NM
											, NULL		AS ACA_CD
											, NULL      AS ACA_DEG_CD
											, NULL		AS ACAMAJ_CD
											, NULL		AS ACAMAJ_NM
											, NULL 		AS DOUMAJ_NM
											, NULL		AS SUBMAJ_CD
											, NULL		AS SUBMAJ_NM
											, NULL		AS ACA_TYPE
											, NULL		AS ACA_YN
											, NULL		AS GRADE_NO
											, NULL		AS NOTE
											, NULL		AS FILE_SEQ
											, NULL		AS ACA_POINT
					   			  			, NULL		AS ACA_POINT_MANJUM
										    , NULL		AS E_TYPE
										    , NULL		AS D_TYPE
										    , NULL		AS ENTRY_TYPE
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach collection="mergeRows" item="rm" >
							UNION ALL
									SELECT	TRIM( #{ssnEnterCd} )		AS ENTER_CD
											, TRIM( #{rm.sabun} )		AS SABUN
										<choose>
											<when test='rm.seq != null and !rm.seq.equals("")' >
											, TRIM(#{rm.seq}) 			AS SEQ
											</when>
										<otherwise>
											, TO_CHAR( (
															SELECT (NVL(MAX(TO_NUMBER(SEQ)),0) + ${icnt})
															  FROM THRM115
															 WHERE ENTER_CD = TRIM( #{ssnEnterCd} )
															   AND SABUN = TRIM( #{rm.sabun} )
														) )	AS SEQ
												<bind name="icnt" value="icnt+1"/>
										</otherwise>
									</choose>
											, TRIM( #{rm.acaSYm} )			AS ACA_S_YM
											, TRIM( #{rm.acaSchCd} )		AS ACA_SCH_CD
											, TRIM( #{rm.acaSchNm} )		AS ACA_SCH_NM
											, TRIM( #{rm.acaEYm} )			AS ACA_E_YM
											, TRIM( #{rm.acaPlaceCd} )		AS ACA_PLACE_CD
											, TRIM( #{rm.acaPlaceNm} )		AS ACA_PLACE_NM
											, TRIM( #{rm.acaCd} )			AS ACA_CD
											, TRIM( #{rm.acaDegCd} )		AS ACA_DEG_CD
											, TRIM( #{rm.acamajCd} )		AS ACAMAJ_CD
											, TRIM( #{rm.acamajNm} )		AS ACAMAJ_NM
											, TRIM( #{rm.doumajNm} )		AS DOUMAJ_NM
											, TRIM( #{rm.submajCd} )		AS SUBMAJ_CD
											, TRIM( #{rm.submajNm} )		AS SUBMAJ_NM
											, TRIM( #{rm.acaType} )			AS ACA_TYPE
											, TRIM( #{rm.acaYn} )			AS ACA_YN
											, TRIM( #{rm.gradeNo} )			AS GRADE_NO
											, TRIM( #{rm.note} )			AS NOTE
											, TRIM( #{rm.fileSeq} )			AS FILE_SEQ
											, TRIM( #{rm.acaPoint} ) 		AS ACA_POINT
					   			  			, TRIM( #{rm.acaPointManjum} )	AS ACA_POINT_MANJUM
											, TRIM( #{rm.eType} )			AS E_TYPE
											, TRIM( #{rm.dType} ) 		AS D_TYPE
					   			  			, TRIM( #{rm.entryType} )	AS ENTRY_TYPE
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.SABUN IS NOT NULL
										  AND A.SEQ IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.SABUN = S.SABUN AND T.SEQ = S.SEQ)
					WHEN MATCHED THEN
						UPDATE SET	  T.ACA_S_YM		  = S.ACA_S_YM
									, T.ACA_SCH_CD		  = S.ACA_SCH_CD
									, T.ACA_SCH_NM		  = S.ACA_SCH_NM
									, T.ACA_E_YM		  = S.ACA_E_YM
									, T.ACA_PLACE_CD	  = S.ACA_PLACE_CD
									, T.ACA_PLACE_NM	  = S.ACA_PLACE_NM
									, T.ACA_CD			  = S.ACA_CD
									, T.ACA_DEG_CD		  = S.ACA_DEG_CD
									, T.ACAMAJ_CD		  = S.ACAMAJ_CD
									, T.ACAMAJ_NM		  = S.ACAMAJ_NM
									, T.DOUMAJ_NM		  = S.DOUMAJ_NM
									, T.SUBMAJ_CD		  = S.SUBMAJ_CD
									, T.SUBMAJ_NM		  = S.SUBMAJ_NM
									, T.ACA_TYPE		  = S.ACA_TYPE
									, T.ACA_YN			  = S.ACA_YN
									, T.GRADE_NO		  = S.GRADE_NO
									, T.NOTE			  = S.NOTE
									, T.FILE_SEQ		  = S.FILE_SEQ
									, T.ACA_POINT         = S.ACA_POINT
									, T.ACA_POINT_MANJUM  = S.ACA_POINT_MANJUM
									, T.E_TYPE		  = S.E_TYPE
									, T.D_TYPE        = S.D_TYPE
									, T.ENTRY_TYPE  = S.ENTRY_TYPE
									, T.CHKDATE			  = SYSDATE
									, T.CHKID			  = #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.SABUN
							, T.SEQ
							, T.ACA_S_YM
							, T.ACA_SCH_CD
							, T.ACA_SCH_NM
							, T.ACA_E_YM
							, T.ACA_PLACE_CD
							, T.ACA_PLACE_NM
							, T.ACA_CD
							, T.ACA_DEG_CD
							, T.ACAMAJ_CD
							, T.ACAMAJ_NM
							, T.DOUMAJ_NM
							, T.SUBMAJ_CD
							, T.SUBMAJ_NM
							, T.ACA_TYPE
							, T.ACA_YN
							, T.GRADE_NO
							, T.NOTE
							, T.FILE_SEQ
							, T.CHKDATE
							, T.CHKID
							, T.ACA_POINT
							, T.ACA_POINT_MANJUM
							, T.E_TYPE
						    , T.D_TYPE
						    , T.ENTRY_TYPE
						)
						VALUES
						(
							  S.ENTER_CD
							, S.SABUN
							, S.SEQ
							, S.ACA_S_YM
							, S.ACA_SCH_CD
							, S.ACA_SCH_NM
							, S.ACA_E_YM
							, S.ACA_PLACE_CD
							, S.ACA_PLACE_NM
							, S.ACA_CD
							, S.ACA_DEG_CD
							, S.ACAMAJ_CD
							, S.ACAMAJ_NM
							, S.DOUMAJ_NM
							, S.SUBMAJ_CD
							, S.SUBMAJ_NM
							, S.ACA_TYPE
							, S.ACA_YN
							, S.GRADE_NO
							, S.NOTE
							, S.FILE_SEQ
							, SYSDATE
							, #{ssnSabun}
							, S.ACA_POINT
							, S.ACA_POINT_MANJUM
							, S.E_TYPE
							, S.D_TYPE
							, S.ENTRY_TYPE
						)



		</update>

		<!-- 개인별학력관리 삭제 -->
		<delete id="deletePsnalSchoolMgr" parameterType="map">

                    DELETE FROM THRM115
					WHERE 	(ENTER_CD, SABUN,SEQ ) IN 	(  ( NULL,NULL,NULL)
<foreach collection="deleteRows" item="rm" >

			<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
				and rm.sabun != null and !rm.sabun.equals("")
				and rm.seq != null and !rm.seq.equals("")' >
						, (TRIM(#{ssnEnterCd}),TRIM(#{rm.sabun}),TRIM( #{rm.seq} ) )
               </if>
</foreach>
						)
               



		</delete>






	</mapper>