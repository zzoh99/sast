<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.timeOff.timeOffApp">
		<select parameterType="map" resultType="cMap" id="getTimeOffAppList">

				<![CDATA[
					SELECT '1' AS DETAIL
					     , TO_CHAR(TO_DATE(A.APPL_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS APPL_YMD
					     , B.APPL_STATUS_CD
					     , F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'R10010' , B.APPL_STATUS_CD, #{ssnLocaleCd}) AS APPL_STATUS_CD_NM
					     , A.REF_SDATE  AS REF_SDATE
					     , A.REF_EDATE  AS REF_EDATE
                         , TO_DATE(A.REF_EDATE,'YYYYMMDD') -TO_DATE(A.REF_SDATE,'YYYYMMDD')+1  AS REF_DAY_CNT
					     , TO_CHAR(TO_DATE(E.EDATE,'YYYYMMDD'),'YYYY-MM-DD')      AS ACTUAL_EDATE
					     , TO_CHAR(TO_DATE(A.RETURN_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS RETURN_YMD
					     , A.CONTI_YN
					     , A.REF_REASON
					     , B.APPL_SEQ
					     , B.APPL_CD
					     , B.APPL_SABUN
					     , B.APPL_IN_SABUN
					     , F_COM_GET_NAMES(B.ENTER_CD, B.APPL_IN_SABUN, #{ssnLocaleCd}) AS APPL_IN_SABUN_NAME
					     , B.AGREE_SABUN
					     , B.AGREE_YMD
					     , NVL(F_COM_GET_LANGUAGE_MAPPING(A.ENTER_CD, 'thri101', C.LANGUAGE_CD1, #{ssnLocaleCd}), C.APPL_NM) AS APPL_NM
					     , A.SABUN
					     , NVL(D.FAM_NM, A.FAM_NM) AS FAM_NM
					     , DECODE(B.APPL_STATUS_CD, '11', '<a class="sbasic">삭제</a>', '') AS BTN_DEL
					     , (SELECT COUNT(*) FROM THRM523 WHERE ENTER_CD = A.ENTER_CD AND APPL_CD = A.APPL_CD AND SABUN = A.SABUN AND APPL_YMD = A.APPL_YMD AND APPL_SEQ = A.APPL_SEQ ) AS SIGN_CNT
					  FROM THRM521 A
					     , THRI103 B
					     , THRI101 C
					     , THRM111 D
					     , (
					            SELECT L.ENTER_CD
					                 , L.SABUN
					                 , L.ORD_TYPE_CD
					                 , L.ORD_DETAIL_CD
					                 , L.APPLY_SEQ
					                 , L.ORD_YMD AS SDATE
					                 , L.EDATE
					              FROM (
					                        SELECT ENTER_CD
					                             , SABUN
					                             , ORD_TYPE_CD
					                             , ORD_DETAIL_CD
					                             , APPLY_SEQ
					                             , ORD_YMD
					                             , DECODE(
					                                   LAG(SABUN) OVER(ORDER BY ENTER_CD, SABUN, ORD_YMD DESC), SABUN
					                                   , TO_CHAR(TO_DATE(LAG(ORD_YMD) OVER(ORDER BY ENTER_CD, SABUN, ORD_YMD DESC), 'YYYYMMDD') -1, 'YYYYMMDD')
					                                   , NULL
					                               ) AS EDATE
					                          FROM THRM191
					                         WHERE ENTER_CD       = #{ssnEnterCd}
					                           AND (ORD_TYPE_CD, ORD_DETAIL_CD) IN (('M', 'M0'), ('N', 'N0'))
					                   ) L
					             WHERE L.ORD_TYPE_CD IN ( 'M', 'N')
					       ) E
					 WHERE 1=1
					   AND A.ENTER_CD  = #{ssnEnterCd}
					           ]]>
			<if test='applCd != null and !applCd.equals("")'>
					   AND A.APPL_CD  = TRIM( #{applCd} )
			</if>
			<if test='searchApplSeq2 != null and !searchApplSeq2.equals("")'>
				AND A.APPL_SEQ  = TO_NUMBER(TRIM( #{searchApplSeq2} ))
			</if>
					   AND A.SABUN     = #{searchApplSabun}
					   AND A.ENTER_CD  = B.ENTER_CD
					   AND A.APPL_SEQ  = B.APPL_SEQ
					   AND A.ENTER_CD  = C.ENTER_CD
					   AND A.APPL_CD   = C.APPL_CD
					   AND A.ENTER_CD  = D.ENTER_CD(+)
					   AND A.SABUN     = D.SABUN(+)
					   AND A.FAMRES    = D.FAMRES(+)
					   AND A.ENTER_CD  = E.ENTER_CD(+)
					   AND A.SABUN     = E.SABUN(+)
					   AND A.REF_SDATE = E.SDATE(+)
					 ORDER BY APPL_YMD DESC


		</select>

		<select parameterType="map" resultType="cMap" id="getTimeOffAppApplCodeList">

				<![CDATA[
					SELECT X.APPL_CD AS CODE, X.CODE_NM
					 FROM (
							SELECT 	  A.ENTER_CD
									, A.APPL_CD 			
							      	, (	SELECT NVL(F_COM_GET_LANGUAGE_MAPPING(ENTER_CD, 'thri101', LANGUAGE_CD1, #{ssnLocaleCd}), APPL_NM) AS APPL_NM
							          	FROM THRI101
							         	WHERE 	ENTER_CD 	= A.ENTER_CD
							           	AND 	APPL_CD 	= A.APPL_CD
							          ) 					AS CODE_NM
							FROM THRM510 A, THRI101 B
							WHERE 	A.ENTER_CD = #{ssnEnterCd}
							GROUP BY A.ENTER_CD, A.APPL_CD
						  ) X, THRI101 Y
					WHERE X.ENTER_CD = Y.ENTER_CD
					  AND X.APPL_CD = Y.APPL_CD
					ORDER BY Y.SEQ
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getTimeOffAppMap">

				<![CDATA[
					SELECT ORD_TYPE_CD
					FROM THRM510 A
					WHERE A.ENTER_CD = #{ssnEnterCd}
					AND A.APPL_CD = #{searchApplCd}
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getTimeOffAppTypeCodeList">

				<![CDATA[
					SELECT ORD_TYPE_CD CODE
					, NVL(F_COM_GET_LANGUAGE_MAPPING(ENTER_CD, 'tsys011', ORD_TYPE_CD, #{ssnLocaleCd}), ORD_TYPE_NM)  AS CODE_NM
					FROM TSYS011
					WHERE ENTER_CD = #{ssnEnterCd}
				]]>


		</select>
		<update parameterType="map" id="saveTimeOffApp">

   					MERGE INTO THRM510 T
                  	USING (
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" separator=" UNION ALL " >
                           	SELECT
                           		      TRIM(#{rm.applCd})						AS APPL_CD
                           			, REPLACE(TRIM(#{rm.sdate}),'-','')			AS SDATE
                           			, REPLACE(TRIM(#{rm.edate}),'-','')			AS EDATE
                           			, TO_NUMBER( TRIM(#{rm.limitTerm}) )		AS LIMIT_TERM
                           			, TRIM(#{rm.limitUnit})						AS LIMIT_UNIT
                           			, TRIM(#{rm.ordTypeCd})						AS ORD_TYPE_CD
                           			, TRIM(#{rm.ordReasonCd})					AS ORD_REASON_CD
                           	FROM   DUAL
</foreach>
                           ) S
                        ON (
                               	   T.ENTER_CD	= #{ssnEnterCd}
                               AND T.APPL_CD 	= S.APPL_CD
                               AND T.SDATE		= S.SDATE
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    T.EDATE        	= S.EDATE
         							, T.LIMIT_TERM    	= S.LIMIT_TERM
									, T.LIMIT_UNIT    	= S.LIMIT_UNIT
									, T.ORD_TYPE_CD   	= S.ORD_TYPE_CD
									, T.ORD_REASON_CD 	= S.ORD_REASON_CD
									, T.CHKDATE       	= SYSDATE
									, T.CHKID         	= #{ssnSabun}
      				WHEN NOT MATCHED THEN
               			INSERT
               			(
               				  T.ENTER_CD
               				, T.APPL_CD
							, T.SDATE
							, T.EDATE
							, T.LIMIT_TERM
							, T.LIMIT_UNIT
							, T.ORD_TYPE_CD
							, T.ORD_REASON_CD
							, T.CHKDATE
							, T.CHKID
               			)
               			VALUES
               			(
               				  #{ssnEnterCd}
							, S.APPL_CD
							, S.SDATE
							, S.EDATE
							, S.LIMIT_TERM
							, S.LIMIT_UNIT
							, S.ORD_TYPE_CD
							, S.ORD_REASON_CD
               				, SYSDATE
               				, #{ssnSabun}
               			)
		</update>
		<select parameterType="map" resultType="cMap" id="getTimeOffAppPatDetSaveMap">

				<![CDATA[
					SELECT    F_COM_GET_NAMES(ENTER_CD,SABUN, #{ssnLocaleCd}) AS NAME
							, TO_CHAR(TO_DATE(REF_SDATE,'YYYYMMDD'),'YYYY-MM-DD') 				AS REF_SDATE
							, TO_CHAR(TO_DATE(REF_EDATE,'YYYYMMDD'),'YYYY-MM-DD') 				AS REF_EDATE
							, FAMRES
  							, FAM_CD
  							, FAM_NM
  							, REF_REASON
  							, ETC
  							, REMAIN_DAYS_BEFORE
  							, USED_DAYS_BEFORE
  						--	, WORK_HOUR_CUT_SHARED_DAYS_BEFORE
  						    , SIGN_YN   			AS SIGN_YN
                            , SIGN_FILE_SEQ  		AS SIGN_FILE_SEQ
  					FROM THRM521
 					WHERE 1=1
 					AND 	ENTER_CD 	= #{ssnEnterCd}
   					AND 	SABUN 		= #{searchApplSabun}
   					AND		APPL_SEQ	= TO_NUMBER( #{searchApplSeq} )
				]]>


		</select>
		<delete parameterType="map" id="deleteTimeOffApp">

   					DELETE FROM THRM521
					WHERE ( ENTER_CD,APPL_CD,SABUN,APPL_YMD,APPL_SEQ  ) IN  (  ( NULL,NULL,NULL,NULL,NULL )
<foreach item="rm" collection="deleteRows" >
,                         ( #{ssnEnterCd}, #{rm.applCd}, #{rm.sabun}, REPLACE(#{rm.applYmd},'-',''), #{rm.applSeq} )
</foreach>
							)
		</delete>


		<select parameterType="map" resultType="cMap" id="getTimeOffAppPatDetList">

				<![CDATA[
					SELECT A.GUBUN
					     , A.APPL_YMD
					     , A.APPL_CD
					     , A.SDATE
					     , A.EDATE
					     , A.APPL_SEQ
					     , A.ORD_SDATE
					     , A.ORD_EDATE
					     , DECODE(A.CHK_BX,'0','',CHK_BX) AS CHK_BX
					  FROM (
					            /* 육아휴직 발령 내역 */
					            SELECT '1'         AS GUBUN
					                 , B.APPL_YMD  AS APPL_YMD
					                 , NVL(B.APPL_CD, '63') AS APPL_CD
					                 , B.REF_SDATE AS SDATE
					                 , B.REF_EDATE AS EDATE
					                 , B.APPL_SEQ  AS APPL_SEQ
					                 , A.SDATE     AS ORD_SDATE
					                 , A.EDATE     AS ORD_EDATE
					                 , TO_DATE(A.EDATE,'YYYYMMDD') + 1 - TO_DATE(A.SDATE,'YYYYMMDD') AS CHK_BX
					              FROM (
					                        SELECT R.ENTER_CD
					                             , R.SABUN
					                             , R.ORD_TYPE_CD
					                             , R.ORD_DETAIL_CD
					                             , R.APPLY_SEQ
					                             , R.ORD_YMD AS SDATE
					                             ,(SELECT TO_CHAR(TO_DATE(MIN(ORD_YMD), 'YYYYMMDD') - 1, 'YYYYMMDD')
					                                 FROM THRM191
					                                WHERE ENTER_CD = R.ENTER_CD
					                                  AND SABUN    = R.SABUN
					                                  AND ORD_YMD  > R.ORD_YMD
					                                  AND (ORD_TYPE_CD, ORD_DETAIL_CD) IN (('N', 'N0')) --복직 
					                               ) AS EDATE
					                          FROM THRM191 R
					                             , THRM229 I
					                         WHERE 1 = 1
					                           AND R.ENTER_CD      = I.ENTER_CD
					                           AND R.SABUN         = I.SABUN
					                           AND R.ORD_TYPE_CD   = I.ORD_TYPE_CD
					                           AND R.ORD_DETAIL_CD = I.ORD_DETAIL_CD
					                           AND R.ORD_YMD       = I.ORD_YMD
					                           AND R.APPLY_SEQ     = I.APPLY_SEQ
					                           AND (R.ORD_TYPE_CD, R.ORD_DETAIL_CD) IN (('M', 'M0')) --휴직
					                           AND R.ENTER_CD      = #{ssnEnterCd}
					                           AND R.SABUN         = #{searchApplSabun}
					                           AND I.FAMRES        = #{famres}
					                   ) A
					                 , (
					                        SELECT A1.ENTER_CD
					                             , A1.SABUN
					                             , A1.REF_SDATE
					                             , A1.REF_EDATE
					                             , H1.APPL_YMD 	AS APPL_YMD
					                             , H1.APPL_CD 	AS APPL_CD
					                             , A1.APPL_SEQ 	AS APPL_SEQ
					                          FROM THRM521 A1
					                             , THRI103 H1
					                         WHERE A1.ENTER_CD       = H1.ENTER_CD
					                           AND A1.APPL_SEQ       = H1.APPL_SEQ
					                           AND H1.APPL_STATUS_CD = '99'
					                           AND A1.APPL_CD        = '63'
					                           AND A1.ENTER_CD       = #{ssnEnterCd}
					                           AND A1.SABUN          = #{searchApplSabun}
					                           AND A1.FAMRES         = #{famres}
					                           AND A1.CONTI_YN       = 'N'
					                   ) B
					             WHERE 1 = 1
					               AND A.ENTER_CD = B.ENTER_CD(+)
					               AND A.SABUN    = B.SABUN(+)
					               AND A.SDATE    = B.REF_SDATE(+)
					         UNION ALL
					            /* 휴직연장 */
					            SELECT '2'         AS GUBUN
					                 , B.APPL_YMD  AS APPL_YMD
					                 , A.APPL_CD   AS APPL_CD
					                 , A.EXT_SDATE AS SDATE
					                 , A.EXT_EDATE AS EDATE
					                 , A.APPL_SEQ  AS APPL_SEQ
					                 , NULL        AS ORD_SDATE
					                 , NULL        AS ORD_EDATE
					                 , TO_DATE(A.EXT_EDATE,'YYYYMMDD') + 1 - TO_DATE(A.EXT_SDATE,'YYYYMMDD') AS CHK_BX
					              FROM THRM531 A
					                 , THRI103 B
					             WHERE 1 = 1
					               AND A.ENTER_CD       = B.ENTER_CD
					               AND A.APPL_SEQ       = B.APPL_SEQ
					               AND B.APPL_STATUS_CD = '99'
					               AND A.ENTER_CD       = #{ssnEnterCd}
					               AND A.SABUN          = #{searchApplSabun}
					               AND A.APPL_CD        = '63'
					               AND (A.FAM_CD, A.FAM_NM) IN (
					                       SELECT FAM_CD, FAM_NM
					                         FROM THRM111
					                        WHERE ENTER_CD = A.ENTER_CD
					                          AND SABUN    = A.SABUN
					                          AND FAMRES   = #{famres}
					                   )
					               AND A.CONTI_YN       = 'N'					        
					       ) A
					 ORDER BY A.APPL_YMD DESC, A.APPL_CD
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getTimeOffAppPatDetFamCodeList">

				<![CDATA[
					SELECT A.FAMRES AS CODE
					     , A.FAM_NM AS CODE_NM
					     , A.FAM_CD
					     , F_COM_GET_AGE(A.ENTER_CD, '', MAX(A.FAMRES), TO_CHAR(SYSDATE, 'YYYYMMDD')) AS AGE
					     , TO_CHAR(TO_DATE(
					             (CASE WHEN SUBSTR(Cryptit.decrypt(MAX(A.FAMRES), A.ENTER_CD), 7, 1) IN ('3', '4', '7', '8') THEN '20'
					                  ELSE '19'
					             END)||SUBSTR(Cryptit.decrypt(MAX(A.FAMRES), A.ENTER_CD), 1, 6)
					           , 'YYYYMMDD'
					       ), 'YYYY-MM-DD') AS FAM_YMD
				        ,CASE WHEN F_COM_GET_AGE(A.ENTER_CD, '', MAX(A.FAMRES), TO_CHAR(SYSDATE, 'YYYYMMDD')) < 9 THEN 'Y' ELSE 'N' END AS USE_YN
					  FROM THRM111 A					      
					 WHERE 1=1
					   
					   AND A.FAMRES IS NOT NULL
					   AND A.ENTER_CD = #{ssnEnterCd}
					   AND A.SABUN    = #{searchApplSabun}
					 GROUP BY A.ENTER_CD, A.SABUN, A.FAMRES, A.FAM_CD, A.FAM_NM ,A.FAM_YMD
				]]>


		</select>
		<update parameterType="map" id="saveTimeOffAppPatDet">

				<![CDATA[
   					MERGE INTO THRM521 T
                  	USING (
                           	SELECT
                           		      TRIM( #{searchApplCd} )					AS APPL_CD
                           			, TRIM( #{searchApplSabun} )				AS SABUN
                           			, REPLACE( TRIM( #{searchApplYmd} ),'-','')				AS APPL_YMD
                           			, TO_NUMBER( TRIM( #{searchApplSeq} ))	AS APPL_SEQ
                           			, REPLACE( TRIM( #{sdate} ),'-','')		AS REF_SDATE
                           			, REPLACE( TRIM( #{edate} ),'-','')		AS REF_EDATE
                           			, TRIM( #{famres})						AS FAMRES
                           			, TRIM( #{famCd})							AS FAM_CD
                           			, TRIM( #{famNm})							AS FAM_NM
                           			, TRIM( #{reason})						AS REF_REASON
                           			, TRIM( #{etc})							AS ETC
                           			, TRIM( #{remainDaysBefore})				AS REMAIN_DAYS_BEFORE
                           			, TRIM( #{usedDaysBefore})				AS USED_DAYS_BEFORE
                           			, REPLACE( TRIM( #{sdate} ),'-','')		AS ORD_YMD
                           			,  TRIM( #{signYn})					    AS SIGN_YN
                                    ,  TRIM( #{signFileSeq})				    AS SIGN_FILE_SEQ
                                    
                           	FROM   DUAL
                           ) S
                        ON (
                               	   T.ENTER_CD	= #{ssnEnterCd}
                               AND T.APPL_CD 	= S.APPL_CD
                               AND T.SABUN 		= S.SABUN
                               AND T.APPL_YMD	= S.APPL_YMD
                               AND T.APPL_SEQ	= S.APPL_SEQ
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    T.REF_SDATE	= S.REF_SDATE
         							, T.REF_EDATE   = S.REF_EDATE
         							, T.FAMRES    	= S.FAMRES
									, T.FAM_CD    	= S.FAM_CD
									, T.FAM_NM   	= S.FAM_NM
									, T.REF_REASON 	= S.REF_REASON
									, T.ETC			= S.ETC
									, T.REMAIN_DAYS_BEFORE = S.REMAIN_DAYS_BEFORE
									, T.USED_DAYS_BEFORE = S.USED_DAYS_BEFORE
									, T.ORD_YMD = S.ORD_YMD
									, T.SIGN_YN       = S.SIGN_YN      
							        , T.SIGN_FILE_SEQ = S.SIGN_FILE_SEQ
									, T.CHKDATE     = SYSDATE
									, T.CHKID       = #{ssnSabun}
      				WHEN NOT MATCHED THEN
               			INSERT
               			(
               				  T.ENTER_CD
               				, T.APPL_CD
							, T.SABUN
							, T.APPL_YMD
							, T.APPL_SEQ
							, T.REF_SDATE
							, T.REF_EDATE
							, T.FAMRES
							, T.FAM_CD
							, T.FAM_NM
							, T.REF_REASON
							, T.ETC
							, T.REMAIN_DAYS_BEFORE
							, T.USED_DAYS_BEFORE
							, T.ORD_YMD
							, T.SIGN_YN      
							, T.SIGN_FILE_SEQ
							, T.CHKDATE
							, T.CHKID
               			)
               			VALUES
               			(
               				  #{ssnEnterCd}
							, S.APPL_CD
							, S.SABUN
							, S.APPL_YMD
							, S.APPL_SEQ
							, S.REF_SDATE
							, S.REF_EDATE
							, S.FAMRES
							, S.FAM_CD
							, S.FAM_NM
							, S.REF_REASON
							, S.ETC
							, S.REMAIN_DAYS_BEFORE
							, S.USED_DAYS_BEFORE
							, S.ORD_YMD
							, S.SIGN_YN      
							, S.SIGN_FILE_SEQ
               				, SYSDATE
               				, #{ssnSabun}
               			)
				]]>


		</update>
		<select parameterType="map" resultType="cMap" id="getTimeOffAppPatPreRegLimitDays">

				<![CDATA[
					SELECT NVL(F_COM_GET_STD_CD_VALUE(#{ssnEnterCd}, 'HRM_TIME_OFF_PAT_PRE_REG_LIMIT_DAYS'), '30') AS LIMIT_DAYS
					  FROM DUAL
				]]>


		</select>


		<select parameterType="map" resultType="cMap" id="getTimeOffAppFamDetList">

				<![CDATA[
					SELECT A.APPL_YMD
				      ,A.SDATE
				      ,A.EDATE
				      ,A.APPL_SEQ
				      ,A.GUBUN
				      ,A.APPL_CD
				      ,A.CHK_BX
				  FROM (	SELECT   B.APPL_YMD 		AS APPL_YMD
				              		, A.APPL_CD 		AS APPL_CD
				              		, A.REF_SDATE 		AS SDATE
				              		, A.REF_EDATE 		AS EDATE
				              		, A.APPL_SEQ 		AS APPL_SEQ
				              		, '1' 				AS GUBUN
				              		, TO_DATE(A.REF_EDATE,'YYYYMMDD') + 1 - TO_DATE(A.REF_SDATE,'YYYYMMDD') AS  CHK_BX
				          	FROM THRM521 A ,THRI103 B
				         	WHERE 1=1
				         	AND 	A.ENTER_CD	 		= B.ENTER_CD
				           	AND 	A.APPL_SEQ 			= B.APPL_SEQ
				           	AND 	B.APPL_STATUS_CD 	= '99'
				           	AND 	A.ENTER_CD 			= #{ssnEnterCd}
				           	AND 	A.SABUN 			= #{searchApplSabun}
				           	AND 	A.APPL_CD 			= '64'
				           	AND 	A.FAM_CD 			= #{famCd}
				           	AND 	A.FAM_NM 			= #{famNm}
				           	AND 	A.CONTI_YN 			= 'N'
	        UNION ALL
				        	SELECT 	  B.APPL_YMD 		AS APPL_YMD
				              		, A.APPL_CD 		AS APPL_CD
				              		, A.EXT_SDATE 		AS SDATE
				              		, A.EXT_EDATE 		AS EDATE
				              		, A.APPL_SEQ 		AS APPL_SEQ
				              		, '2' 				AS GUBUN
				              		, TO_DATE(A.EXT_EDATE,'YYYYMMDD') + 1 - TO_DATE(A.EXT_SDATE,'YYYYMMDD') AS  CHK_BX
				          	FROM THRM531 A ,THRI103 B
				         	WHERE 1=1
				         	AND 	A.ENTER_CD 			= B.ENTER_CD
				           	AND 	A.APPL_SEQ 			= B.APPL_SEQ
				           	AND 	B.APPL_STATUS_CD 	= '99'
				           	AND 	A.ENTER_CD 			= #{ssnEnterCd}
				           	AND 	A.SABUN 			= #{searchApplSabun}
				           	AND 	A.APPL_CD 			= '64'
				           	AND 	A.CONTI_YN 			= 'N'
			           ) A
				 	ORDER BY A.APPL_YMD DESC, A.APPL_CD
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getTimeOffAppFamDetFamCodeList">

				<![CDATA[
					SELECT 	  T.FAMRES 	AS CODE
							, T.FAM_NM 	AS CODE_NM
							, T.FAM_CD
					FROM    ( SELECT  A.FAM_CD
									, A.FAM_NM
									, F_COM_GET_GRCODE_SEQ(A.ENTER_CD,'H20120', A.FAM_CD) AS FAM_CD_SEQ
									, A.FAMRES
							  FROM    THRM111 A
							  WHERE A.ENTER_CD = #{ssnEnterCd}
							  AND   A.SABUN = #{searchApplSabun}
							  AND   1  =  F_COM_GET_GRCODE_NOTE_VAL(A.ENTER_CD,'H20120',A.FAM_CD,4)
							  ORDER BY  FAM_CD_SEQ, DECODE(A.FAM_CD,'2','Z',A.FAM_CD), A.FAM_YMD, A.FAMRES
							) T
				]]>


		</select>
		<update parameterType="map" id="saveTimeOffAppFamDet">

				<![CDATA[
   					MERGE INTO THRM521 T
                  	USING (
                           	SELECT
                           		      TRIM( #{searchApplCd} )					AS APPL_CD
                           			, TRIM( #{searchApplSabun} )				AS SABUN
                           			, REPLACE( TRIM( #{searchApplYmd} ),'-','')	AS APPL_YMD
                           			, TO_NUMBER( TRIM( #{searchApplSeq} ))	AS APPL_SEQ
                           			, REPLACE( TRIM( #{sdate} ),'-','')		AS REF_SDATE
                           			, REPLACE( TRIM( #{edate} ),'-','')		AS REF_EDATE
                           			, TRIM( #{famres})						AS FAMRES
                           			, TRIM( #{famCd})							AS FAM_CD
                           			, TRIM( #{famNm})							AS FAM_NM
                           			, REPLACE( TRIM( #{returnDate} ),'-','')	AS RETURN_YMD
                           			, TRIM( #{reason})						AS REF_REASON
                           			, TRIM( #{etc})							AS ETC
                           	FROM   DUAL
                           ) S
                        ON (
                               	   T.ENTER_CD	= #{ssnEnterCd}
                               AND T.APPL_CD 	= S.APPL_CD
                               AND T.SABUN 		= S.SABUN
                               AND T.APPL_YMD	= S.APPL_YMD
                               AND T.APPL_SEQ	= S.APPL_SEQ
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    T.REF_SDATE      	= S.REF_SDATE
         							, T.REF_EDATE    	= S.REF_EDATE
         							, T.FAMRES    		= S.FAMRES
									, T.FAM_CD    		= S.FAM_CD
									, T.FAM_NM   		= S.FAM_NM
									, T.REF_REASON 		= S.REF_REASON
									, T.ETC				= S.ETC
									, T.CHKDATE       	= SYSDATE
									, T.CHKID         	= #{ssnSabun}
      				WHEN NOT MATCHED THEN
               			INSERT
               			(
               				  T.ENTER_CD
               				, T.APPL_CD
							, T.SABUN
							, T.APPL_YMD
							, T.APPL_SEQ
							, T.REF_SDATE
							, T.REF_EDATE
							, T.FAMRES
							, T.FAM_CD
							, T.FAM_NM
							, T.REF_REASON
							, T.ETC
							, T.CHKDATE
							, T.CHKID
               			)
               			VALUES
               			(
               				  #{ssnEnterCd}
							, S.APPL_CD
							, S.SABUN
							, S.APPL_YMD
							, S.APPL_SEQ
							, S.REF_SDATE
							, S.REF_EDATE
							, S.FAMRES
							, S.FAM_CD
							, S.FAM_NM
							, S.REF_REASON
							, S.ETC
               				, SYSDATE
               				, #{ssnSabun}
               			)
				]]>
		</update>









		<select parameterType="map" resultType="cMap" id="getTimeOffAppReturnWorkAppDetDateMap">

				<![CDATA[
					SELECT 	  TO_CHAR(TO_DATE(MAX(A.ORD_YMD),'YYYYMMDD'),'YYYY-MM-DD') 	AS SDATE
					      	, TO_CHAR(TO_DATE(MAX(A.RETURN_YMD),'YYYYMMDD')-1,'YYYY-MM-DD') 	AS EDATE
					FROM THRM191 A
					WHERE 1=1
					AND		A.ENTER_CD 		= #{ssnEnterCd}
					AND 	A.ORD_DETAIL_CD = 'C01'
					AND 	A.SABUN 		= #{sabun}
					AND NOT EXISTS (	SELECT 1
					               		FROM THRM191
					                    WHERE 1=1
					                    AND 	ENTER_CD 	= A.ENTER_CD
				                		AND 	ORD_DETAIL_CD IN ('B01', 'A03') --퇴직,복직
					               		AND 	SABUN 		= A.SABUN
                      					AND 	ORD_YMD  >=  A.ORD_YMD
                      				)
				]]>


		</select>
		<update parameterType="map" id="saveTimeOffAppReturnWorkAppDet">

				<![CDATA[
   					MERGE INTO THRM521 T
                  	USING (
                           	SELECT
                           			  TRIM( #{searchApplCd} )						AS APPL_CD
                           			, TRIM( #{searchApplSabun} )					AS SABUN
                           			, REPLACE( TRIM( #{searchApplYmd} ),'-','')	AS APPL_YMD
                           			, TO_NUMBER( TRIM( #{searchApplSeq} ))		AS APPL_SEQ
                          			, TRIM( #{returnCd} )							AS RETURN_GB
                           			, REPLACE( TRIM( #{returnDate} ),'-','')		AS RETURN_YMD
                           			, TRIM( #{reason})							AS REF_REASON
                           			, REPLACE( TRIM( #{sdate} ),'-','')			AS REF_SDATE
                           			, REPLACE( TRIM( #{edate} ),'-','')			AS REF_EDATE
                           			, TRIM( #{etc})								AS ETC
                           			, REPLACE( TRIM( #{returnDate} ),'-','')		AS ORD_YMD
                           			,  TRIM( #{signYn})						    AS SIGN_YN
                                    ,  TRIM( #{signFileSeq})					    AS SIGN_FILE_SEQ
                           	FROM   DUAL
                           ) S
                        ON (
                               	   T.ENTER_CD	= #{ssnEnterCd}
                               AND T.APPL_CD 	= S.APPL_CD
                               AND T.SABUN 		= S.SABUN
                               AND T.APPL_YMD	= S.APPL_YMD
                               AND T.APPL_SEQ	= S.APPL_SEQ
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    T.RETURN_GB 		= S.RETURN_GB
         							, T.RETURN_YMD      = S.RETURN_YMD
									, T.REF_REASON 		= S.REF_REASON
									, T.REF_SDATE		= S.REF_SDATE
									, T.REF_EDATE		= S.REF_EDATE
									, T.ETC				= S.ETC
									, T.ORD_YMD			= S.ORD_YMD
									, T.SIGN_YN         = S.SIGN_YN       
                            		, T.SIGN_FILE_SEQ   = S.SIGN_FILE_SEQ
									, T.CHKDATE       	= SYSDATE
									, T.CHKID         	= #{ssnSabun}
      				WHEN NOT MATCHED THEN
               			INSERT
               			(
               				  T.ENTER_CD
               				, T.APPL_CD
							, T.SABUN
							, T.APPL_YMD
							, T.APPL_SEQ
							, T.RETURN_GB
							, T.RETURN_YMD
							, T.REF_REASON
							, T.REF_SDATE
							, T.REF_EDATE
							, T.ETC
							, T.ORD_YMD
							, T.SIGN_YN       
                            , T.SIGN_FILE_SEQ 
							, T.CHKDATE
							, T.CHKID
               			)
               			VALUES
               			(
               				  #{ssnEnterCd}
							, S.APPL_CD
							, S.SABUN
							, S.APPL_YMD
							, S.APPL_SEQ
							, S.RETURN_GB
							, S.RETURN_YMD
							, S.REF_REASON
							, S.REF_SDATE
							, S.REF_EDATE
							, S.ETC
							, S.ORD_YMD
							, S.SIGN_YN       
                            , S.SIGN_FILE_SEQ
               				, SYSDATE
               				, #{ssnSabun}
               			)
				]]>


		</update>
				<select parameterType="map" resultType="cMap" id="getTimeOffAppReturnWorkAppDetSaveMap">

				<![CDATA[
					SELECT    F_COM_GET_NAMES(ENTER_CD,SABUN, #{ssnLocaleCd}) AS NAME
							, TO_CHAR(TO_DATE(REF_SDATE,'YYYYMMDD'),'YYYY-MM-DD') AS REF_SDATE
							, TO_CHAR(TO_DATE(REF_EDATE,'YYYYMMDD'),'YYYY-MM-DD') AS REF_EDATE
					      	, RETURN_GB
					      	, TO_CHAR(TO_DATE(RETURN_YMD,'YYYYMMDD'),'YYYY-MM-DD') 				AS RETURN_YMD
  							, REF_REASON
  							, ETC
  							, SIGN_YN
  							, SIGN_FILE_SEQ
  					FROM THRM521
 					WHERE 1=1
 					AND 	ENTER_CD 	= #{ssnEnterCd}
   					AND 	SABUN 		= #{searchApplSabun}
   					AND		APPL_SEQ	= TO_NUMBER( #{searchApplSeq} )
				]]>


		</select>

		<update parameterType="map" id="saveTimeOffAppDet">

				<![CDATA[
   					MERGE INTO THRM521 T
                  	USING (
                           	SELECT
                           		      TRIM( #{searchApplCd} )					AS APPL_CD
                           			, TRIM( #{searchApplSabun} )				AS SABUN
                           			, REPLACE( TRIM( #{searchApplYmd} ),'-','')				AS APPL_YMD
                           			, TO_NUMBER( TRIM( #{searchApplSeq} ))	AS APPL_SEQ
                          			, REPLACE( TRIM( #{sdate} ),'-','')		AS REF_SDATE
                           			, REPLACE( TRIM( #{edate} ),'-','')		AS REF_EDATE
                           			, TRIM( #{reason})						AS REF_REASON
                           			, TRIM( #{etc})							AS ETC
                           			, REPLACE( TRIM( #{sdate} ),'-','')		AS ORD_YMD
                           			,  TRIM( #{signYn})						AS SIGN_YN
                                    ,  TRIM( #{signFileSeq})					AS SIGN_FILE_SEQ
                           	FROM   DUAL
                           ) S
                        ON (
                               	   T.ENTER_CD	= #{ssnEnterCd}
                               AND T.APPL_CD 	= S.APPL_CD
                               AND T.SABUN 		= S.SABUN
                               AND T.APPL_YMD	= S.APPL_YMD
                               AND T.APPL_SEQ	= S.APPL_SEQ
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    T.RETURN_GB 		= S.REF_SDATE
         							, T.RETURN_YMD      = S.REF_EDATE
									, T.REF_REASON 		= S.REF_REASON
									, T.ETC				= S.ETC
									, T.ORD_YMD			= S.ORD_YMD
									, T.CHKDATE       	= SYSDATE
									, T.CHKID         	= #{ssnSabun}
      				WHEN NOT MATCHED THEN
               			INSERT
               			(
               				  T.ENTER_CD
               				, T.APPL_CD
							, T.SABUN
							, T.APPL_YMD
							, T.APPL_SEQ
							, T.REF_SDATE
							, T.REF_EDATE
							, T.REF_REASON
							, T.ETC
							, T.ORD_YMD
							, T.SIGN_YN
							, T.SIGN_FILE_SEQ
							, T.CHKDATE
							, T.CHKID
               			)
               			VALUES
               			(
               				  #{ssnEnterCd}
							, S.APPL_CD
							, S.SABUN
							, S.APPL_YMD
							, S.APPL_SEQ
							, S.REF_SDATE
							, S.REF_EDATE
							, S.REF_REASON
							, S.ETC
							, S.ORD_YMD
							, S.SIGN_YN
							, S.SIGN_FILE_SEQ
               				, SYSDATE
               				, #{ssnSabun}
               			)
				]]>


		</update>

		<select parameterType="map" resultType="cMap" id="getTimeOffAppPatDetEmpYmdMap">

				<![CDATA[
					SELECT  CASE WHEN TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD'),'YYYYMMDD') >=
							ADD_MONTHS(TO_DATE(EMP_YMD,'YYYYMMDD')-1,12) THEN 'Y' ELSE 'N' END  AS EMP_YMD_CK
					FROM 	THRM100
					WHERE 	1=1
					AND 	ENTER_CD 	= #{ssnEnterCd}
					AND 	SABUN 		= #{searchApplSabun}
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getTimeOffAppDateValideCnt">

				<![CDATA[
					SELECT COUNT(1) AS CNT
					  FROM
					  (
					    SELECT REF_SDATE
					         , REF_EDATE
					      FROM THRM521 A,THRI103 B
					     WHERE A.ENTER_CD = B.ENTER_CD
					       AND A.APPL_CD = B.APPL_CD
					       AND A.APPL_SEQ = B.APPL_SEQ
					       AND A.ENTER_CD = #{ssnEnterCd}
					       AND A.SABUN = #{searchApplSabun}
					       AND B.APPL_STATUS_CD IN ('21','31','98','99')
					       AND (REPLACE(#{sdate},'-','') BETWEEN A.REF_SDATE AND A.REF_EDATE
					       		OR REPLACE(#{edate},'-','') BETWEEN A.REF_SDATE AND A.REF_EDATE)
					    UNION ALL
					    SELECT S_YMD,E_YMD
					      FROM TTIM301 A, THRI103 B
					     WHERE A.ENTER_CD = B.ENTER_CD
					       AND A.APPL_SEQ = B.APPL_SEQ
					       AND A.ENTER_CD = #{ssnEnterCd}
					       AND A.SABUN = #{searchApplSabun}
					       AND A.GNT_CD = '21'
					       AND A.UPDATE_YN != 'Y'
					       AND B.APPL_STATUS_CD IN ('21','31','98','99')
					       AND (REPLACE(#{sdate},'-','') BETWEEN A.S_YMD AND A.E_YMD
					       		OR REPLACE(#{edate},'-','') BETWEEN A.S_YMD AND A.E_YMD)
					  ) A
				]]>


		</select>

		<!-- 신병휴직 병가체크  -->
		<select parameterType="map" resultType="cMap" id="getTimeOffAppSickCkMap">

				<![CDATA[
					SELECT DECODE(COUNT(1),0,'N','Y') AS ABL_CHK
					FROM   TTIM405
					WHERE  ENTER_CD = #{ssnEnterCd}
					AND    SABUN 	= #{searchApplSabun}
					AND    GNT_CD   = 'MA'
					AND    SUBSTR(YM,0,4) = TO_CHAR(SYSDATE,'YYYY')
				]]>


		</select>


		<!-- 복직신청시 복직 대상 휴직건 선택 목록 조회 -->
		<select parameterType="map" resultType="cMap" id="getTimeOffAppReturnWorkAppDetTargetRefList">

				<![CDATA[
					SELECT B.APPL_SEQ AS CODE
					     , '[' || C.APPL_NM || '] ' || A.REF_SDATE || '~' || A.REF_EDATE || DECODE(A.APPL_CD, '63', '('|| A.FAM_NM ||')', '') AS CODE_NM
					  FROM THRM521 A
					     , THRI103 B
					     , THRI101 C
					WHERE A.ENTER_CD = B.ENTER_CD
					  AND A.APPL_SEQ = B.APPL_SEQ
					  AND B.ENTER_CD = C.ENTER_CD
					  AND B.APPL_CD  = C.APPL_CD
					  AND A.APPL_CD <> '64'
					  AND B.APPL_STATUS_CD = '99'
					  AND A.ENTER_CD = #{ssnEnterCd}
					  AND A.SABUN = #{sabun}
					ORDER BY A.APPL_YMD DESC
				]]>


		</select>




<!-- 전자서명 결과 파일 정보 저장 -->
		<update parameterType="map" id="saveTimeOffAppSignData">

				<![CDATA[
					MERGE INTO THRM523 T
					USING (
					          SELECT ENTER_CD
					               , APPL_CD
					               , SABUN
					               , APPL_YMD
					               , APPL_SEQ
					               , SIGN_IMG_PATH
					               , PDF_PATH
					               , CHKID
					            FROM (
					                      SELECT NULL AS ENTER_CD
					                           , NULL AS APPL_CD
					                           , NULL AS SABUN
					                           , NULL AS APPL_YMD
					                           , NULL AS APPL_SEQ
					                           , NULL AS SIGN_IMG_PATH
					                           , NULL AS PDF_PATH
					                           , NULL AS CHKID
					                        FROM DUAL
					                       UNION ALL
					                      SELECT TRIM(#{ssnEnterCd}) AS ENTER_CD
					                           , TRIM(#{applCd}) AS APPL_CD
					                           , TRIM(#{sabun}) AS SABUN
					                           , REPLACE(TRIM(#{applYmd}), '-', '') AS APPL_YMD
					                           , TRIM(#{applSeq}) AS APPL_SEQ
					                           , TRIM(#{signImgPath}) AS SIGN_IMG_PATH
					                           , TRIM(#{pdfPath}) AS PDF_PATH
					                           , TRIM(#{ssnSabun}) AS CHKID
					                        FROM DUAL
					                 )
					           WHERE ENTER_CD IS NOT NULL
					             AND APPL_CD IS NOT NULL
					             AND SABUN IS NOT NULL
					             AND APPL_YMD IS NOT NULL
					             AND APPL_SEQ IS NOT NULL
					      ) S
					   ON (
					               T.ENTER_CD  = S.ENTER_CD
					           AND T.APPL_CD   = S.APPL_CD
					           AND T.SABUN     = S.SABUN
					           AND T.APPL_YMD  = S.APPL_YMD
					           AND T.APPL_SEQ  = S.APPL_SEQ
					      )
					WHEN MATCHED THEN
					      UPDATE SET
					           T.CHKID   = S.CHKID
					         , T.CHKDATE = SYSDATE
					         , T.SIGN_IMG_PATH = S.SIGN_IMG_PATH
					         , T.PDF_PATH = S.PDF_PATH
					WHEN NOT MATCHED THEN
					     INSERT (
					           T.ENTER_CD
					         , T.APPL_CD
					         , T.SABUN
					         , T.APPL_YMD
					         , T.APPL_SEQ
					         , T.SIGN_IMG_PATH
					         , T.PDF_PATH
					         , T.CHKID
					         , T.CHKDATE
					     ) VALUES (
					           S.ENTER_CD
					         , S.APPL_CD
					         , S.SABUN
					         , S.APPL_YMD
					         , S.APPL_SEQ
					         , S.SIGN_IMG_PATH
					         , S.PDF_PATH
					         , S.CHKID
					         , SYSDATE
					     )
				]]>

		</update>
		<!-- 휴복직 신청서 진행상태 변경 -->
		<update parameterType="map" id="saveTimeOffAppProcCall" statementType="CALLABLE">
		<![CDATA[
			{CALL P_HRI_APP_REQUEST_INS(
				#{outCode,mode=OUT,jdbcType=VARCHAR},
				#{outErrorMsg,mode=OUT,jdbcType=VARCHAR},
				#{ssnEnterCd,mode=IN,jdbcType=VARCHAR},
				#{applSeq,mode=IN,jdbcType=VARCHAR},
				#{referApplGubun,mode=IN,jdbcType=VARCHAR},
				#{ssnSabun,mode=IN,jdbcType=VARCHAR})}
		]]>
		</update>

		<select parameterType="map" resultType="cMap" id="getTimeOffAppDetSumMap">

				<![CDATA[
					SELECT
						SUM(TRUNC(TO_DATE(A.REF_EDATE,'YYYYMMDD') - TO_DATE(A.REF_SDATE,'YYYYMMDD'))+1) AS SUM_DAY
					FROM THRM521 A, THRI103 B
					WHERE A.ENTER_CD = B.ENTER_CD
						AND A.APPL_SEQ = B.APPL_SEQ
						AND A.ENTER_CD = #{ssnEnterCd}
						AND A.APPL_CD = TO_NUMBER(TRIM( #{searchApplCd} ))
						AND A.SABUN 	= #{searchApplSabun}
						AND SUBSTR(A.REF_EDATE,1,4) = SUBSTR(REPLACE( #{chkdate}, '-', ''),1,4)
						AND B.APPL_STATUS_CD NOT IN ('11', '23', '33', 'ZZ')
				]]>


		</select>
		
		<!-- 재직상태 -->
		<select parameterType="map" resultType="cMap" id="getStatusCd">
					SELECT 
						<choose><when test='searchSabun != null and !searchSabun.equals("")'>
						F_COM_GET_STATUS_CD(#{ssnEnterCd},#{searchSabun},TO_CHAR(SYSDATE,'YYYYMMDD')) AS STATUS_CD
						</when><otherwise>
						F_COM_GET_STATUS_CD(#{ssnEnterCd},#{ssnSabun},TO_CHAR(SYSDATE,'YYYYMMDD')) AS STATUS_CD
						</otherwise></choose>
					FROM DUAL
		</select>

	<!-- 복직신청시 복직 대상 휴직건 조회 -->
	<select parameterType="map" resultType="cMap" id="getTimeOffAppReturnWorkAppDetMap">
		SELECT
			A.*
		FROM THRM521 A
		   , THRI103 B
		   , THRI101 C
		WHERE A.ENTER_CD = B.ENTER_CD
		  AND A.APPL_SEQ = B.APPL_SEQ
		  AND B.ENTER_CD = C.ENTER_CD
		  AND B.APPL_CD  = C.APPL_CD
		  AND A.APPL_CD != '155' -- 복직 제외
		  AND B.APPL_STATUS_CD = '99'
		  AND A.ENTER_CD = #{ssnEnterCd}
		  AND A.SABUN = #{searchApplSabun}
		  AND REPLACE(#{returnDate}, '-', '') BETWEEN A.REF_SDATE AND A.REF_EDATE
		</select>


</mapper>