<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.promotion.promStdMgr.promStdAppr">
<!-- 평가 조회 -->
		<select parameterType="map" resultType="cMap" id="getPromStdApprList">

				<![CDATA[
					SELECT ENTER_CD
						 , PMT_CD
						 , ADT_YY_CD
						 , SEQ
						 , PERFM_RATE1
						 , COMPT_RATE1
						 , PERFM_RATE2
						 , COMPT_RATE2
						 , PERFM_RATE3
						 , COMPT_RATE3
						 , PERFM_RATE4
						 , COMPT_RATE4
						 , PERFM_RATE5
						 , COMPT_RATE5
					  FROM THRM443
					 WHERE ENTER_CD = #{ssnEnterCd}
					   AND PMT_CD = #{pmtCd}
					 ORDER BY ADT_YY_CD DESC
				]]>


		</select>

<!-- 평가 저장 -->
		<update parameterType="map" id="savePromStdAppr">

					MERGE INTO THRM443 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.PMT_CD
									, A.ADT_YY_CD
									, A.SEQ
									, A.PERFM_RATE1
									, A.COMPT_RATE1
									, A.PERFM_RATE2
									, A.COMPT_RATE2
									, A.PERFM_RATE3
									, A.COMPT_RATE3
									, A.PERFM_RATE4
									, A.COMPT_RATE4
									, A.PERFM_RATE5
									, A.COMPT_RATE5
							FROM	(
									SELECT	  NULL		AS SEQ
											, NULL		AS ENTER_CD
											, NULL		AS PMT_CD
											, NULL		AS ADT_YY_CD
											, NULL		AS PERFM_RATE1
											, NULL		AS COMPT_RATE1
											, NULL		AS PERFM_RATE2
											, NULL		AS COMPT_RATE2
											, NULL		AS PERFM_RATE3
											, NULL		AS COMPT_RATE3
											, NULL		AS PERFM_RATE4
											, NULL		AS COMPT_RATE4
											, NULL		AS PERFM_RATE5
											, NULL		AS COMPT_RATE5
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											<choose><when test='rm.seq != null and !rm.seq.equals("")'>
												TRIM(#{rm.seq}) 			AS SEQ
											</when><otherwise>
												TO_CHAR( (
															SELECT (NVL(MAX(TO_NUMBER(SEQ)),0) + ${icnt})
															  FROM THRM443
															 WHERE ENTER_CD = #{ssnEnterCd}
															   AND PMT_CD = TRIM( #{rm.pmtCd} )
															   AND ADT_YY_CD = TRIM( #{rm.adtYyCd} )
														) )	AS SEQ
												<bind name="icnt" value="icnt + 1" />
											</otherwise>
											</choose>
											, TRIM( #{ssnEnterCd} )		AS ENTER_CD
											, TRIM( #{rm.pmtCd} )		AS PMT_CD
											, TRIM( #{rm.adtYyCd} ) 	AS ADT_YY_CD
											, TRIM( #{rm.perfmRate1})	AS PERFM_RATE1
											, TRIM( #{rm.comptRate1})	AS COMPT_RATE1
											, TRIM( #{rm.perfmRate2}) 	AS PERFM_RATE2
											, TRIM( #{rm.comptRate2})	AS COMPT_RATE2
											, TRIM( #{rm.perfmRate3})	AS PERFM_RATE3
											, TRIM( #{rm.comptRate3})	AS COMPT_RATE3
											, TRIM( #{rm.perfmRate4})	AS PERFM_RATE4
											, TRIM( #{rm.comptRate4}) 	AS COMPT_RATE4
											, TRIM( #{rm.perfmRate5})	AS PERFM_RATE5
											, TRIM( #{rm.comptRate5})	AS COMPT_RATE5
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.PMT_CD IS NOT NULL
										  AND A.ADT_YY_CD IS NOT NULL
										  AND A.SEQ IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.PMT_CD = S.PMT_CD AND T.ADT_YY_CD = S.ADT_YY_CD AND T.SEQ = S.SEQ)
					WHEN MATCHED THEN
						UPDATE SET	  T.PERFM_RATE1		= S.PERFM_RATE1
									, T.COMPT_RATE1		= S.COMPT_RATE1
									, T.PERFM_RATE2		= S.PERFM_RATE2
									, T.COMPT_RATE2		= S.COMPT_RATE2
									, T.PERFM_RATE3		= S.PERFM_RATE3
									, T.COMPT_RATE3		= S.COMPT_RATE3
									, T.PERFM_RATE4		= S.PERFM_RATE4
									, T.COMPT_RATE4		= S.COMPT_RATE4
									, T.PERFM_RATE5		= S.PERFM_RATE5
									, T.COMPT_RATE5		= S.COMPT_RATE5
									, T.CHKDATE			= SYSDATE
									, T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.PMT_CD
							, T.ADT_YY_CD
							, T.SEQ
							, T.PERFM_RATE1
							, T.COMPT_RATE1
							, T.PERFM_RATE2
							, T.COMPT_RATE2
							, T.PERFM_RATE3
							, T.COMPT_RATE3
							, T.PERFM_RATE4
							, T.COMPT_RATE4
							, T.PERFM_RATE5
							, T.COMPT_RATE5
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.PMT_CD
							, S.ADT_YY_CD
							, S.SEQ
							, S.PERFM_RATE1
							, S.COMPT_RATE1
							, S.PERFM_RATE2
							, S.COMPT_RATE2
							, S.PERFM_RATE3
							, S.COMPT_RATE3
							, S.PERFM_RATE4
							, S.COMPT_RATE4
							, S.PERFM_RATE5
							, S.COMPT_RATE5
							, SYSDATE
							, #{ssnSabun}
						)
		</update>

<!-- 평가 삭제 -->
		<delete parameterType="map" id="deletePromStdAppr">

					DELETE FROM THRM443
					 WHERE ENTER_CD||'_'||PMT_CD||'_'||ADT_YY_CD||'_'||SEQ	 IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
											and rm.pmtCd != null and !rm.pmtCd.equals("")
											and rm.adtYyCd  != null and !rm.adtYyCd.equals("")
											and rm.seq != null and !rm.seq.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM( #{rm.pmtCd} )||'_'||TRIM( #{rm.adtYyCd} )||'_'||TRIM( #{rm.seq} )
										</if>
</foreach>
										)
		</delete>


</mapper>