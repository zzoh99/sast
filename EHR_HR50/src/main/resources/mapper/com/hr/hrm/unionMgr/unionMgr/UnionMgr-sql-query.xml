<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.unionMgr.unionMgr">

		<!-- 사무노조관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getUnionMgrList">

				<![CDATA[
					SELECT	*
					FROM	(
								SELECT	A.ENTER_CD
			              		, 		A.SABUN
			              		, 		A.SDATE
			              		, 		A.EDATE
			              		, 		A.NOJO_JIKCHAK_CD
			              		, 		A.APPOINT_YMD
			              		, 		A.PAY_DEDUCT_YN
			              		, 		A.FILE_SEQ
			              		, 		A.MEMO
			              		, 		F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd} ) AS NAME
			              		, 		F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
			              		, 		F_COM_GET_JIKCHAK_NM( A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS JIKCHAK_NM
			              		, 		F_COM_GET_JIKWEE_NM (A.ENTER_CD, A.SABUN, TO_CHAR(sysdate, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKWEE_NM
			              		, 		UPPER(F_COM_GET_STATUS_CD(A.ENTER_CD, A.SABUN)) AS STS_CD
			              		, 		CASE WHEN A.FILE_SEQ IS NULL THEN '<a class=basic>첨부</a>'
                            				 ELSE '<a class=basic>다운로드</a>' END AS BTN_FILE
                          		, 		F_COM_GET_BP_CD(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'yyyymmdd')) AS BP_CD
                          		,		A.EXP_YMD
			           			FROM 	THRM181 A
			          			WHERE 	1=1
			            		AND 	A.ENTER_CD = TRIM(#{ssnEnterCd})
]]>
			        			<if test='searchSdate != null and !searchSdate.equals("")'>
			            		AND 	A.SDATE BETWEEN REPLACE(TRIM(#{searchSdate}),'-','') AND REPLACE(TRIM(#{searchEdate}),'-','')
								</if>

			        			<if test='multiStatusCd != null and !multiStatusCd.equals("")'>
			            		AND 	UPPER(F_COM_GET_STATUS_CD(A.ENTER_CD, A.SABUN)) IN <foreach collection="multiStatusCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
								</if>

			        			<if test='searchSaNm != null and !searchSaNm.equals("")'>
			           			AND 	(A.SABUN LIKE #{searchSaNm} || '%' OR F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd} ) LIKE #{searchSaNm} || '%')
								</if>

			        			AND		F_COM_GET_GRCODE_NOTE_VAL(#{ssnEnterCd}, 'H90011', A.NOJO_JIKCHAK_CD, 1) = '사무노조'
			        		 ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, A.SDATE)
							)
					WHERE 	1=1

					<if test='searchBizPlaceCd != null and !searchBizPlaceCd.equals("")'>
					AND 	BP_CD = #{searchBizPlaceCd}
					</if>


		</select>

		<!-- 사무노조관리 저장 -->
		<update parameterType="map" id="saveUnionMgr">

			 MERGE INTO THRM181 T
			 USING
				(
					<bind name="icnt" value="1" />
					<foreach item="rm" collection="mergeRows" separator=" UNION ALL " >
				   SELECT TRIM(#{ssnEnterCd})  		AS  ENTER_CD
			            , TRIM(#{rm.sabun})  		AS  SABUN
			            , TRIM(#{rm.sdate})  		AS  SDATE
			            , TRIM(#{rm.edate})  		AS  EDATE
			            , TRIM(#{rm.nojoJikchakCd})	AS  NOJO_JIKCHAK_CD
			            , TRIM(#{rm.appointYmd})  	AS  APPOINT_YMD
			            , TRIM(#{rm.expYmd})  		AS  EXP_YMD
			            , TRIM(#{rm.payDeductYn})  	AS  PAY_DEDUCT_YN
			            , TRIM(#{rm.fileSeq})  		AS  FILE_SEQ
			            , TRIM(#{rm.memo})  		AS  MEMO
			        FROM DUAL
					</foreach>
			) S
			ON (
			          T.ENTER_CD = S.ENTER_CD
			     AND  T.SABUN = S.SABUN
			     AND  T.SDATE = S.SDATE
			)
			WHEN MATCHED THEN
			   UPDATE SET T.CHKDATE			= sysdate
			            , T.CHKID			= #{ssnSabun}
			            , T.EDATE 			= S.EDATE
			            , T.NOJO_JIKCHAK_CD = S.NOJO_JIKCHAK_CD
			            , T.APPOINT_YMD 	= S.APPOINT_YMD
			            , T.EXP_YMD 		= S.EXP_YMD
			            , T.PAY_DEDUCT_YN 	= S.PAY_DEDUCT_YN
			            , T.FILE_SEQ 		= S.FILE_SEQ
			            , T.MEMO 			= S.MEMO
			WHEN NOT MATCHED THEN
			   INSERT
			   (
			              T.ENTER_CD
			            , T.SABUN
			            , T.SDATE
			            , T.EDATE
			            , T.NOJO_JIKCHAK_CD
			            , T.APPOINT_YMD
			            , T.EXP_YMD
			            , T.PAY_DEDUCT_YN
			            , T.FILE_SEQ
			            , T.MEMO
			            , T.CHKDATE
			            , T.CHKID
			   )
			   VALUES
			   (
			              S.ENTER_CD
			            , S.SABUN
			            , S.SDATE
			            , S.EDATE
			            , S.NOJO_JIKCHAK_CD
			            , S.APPOINT_YMD
			            , S.EXP_YMD
			            , S.PAY_DEDUCT_YN
			            , S.FILE_SEQ
			            , S.MEMO
			            , sysdate
			            , #{ssnSabun}
			   )
		</update>
		<!-- 사무노조관리 삭제 -->
		<delete parameterType="map" id="deleteUnionMgr">

			DELETE FROM THRM181
			 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
			   AND ( SABUN,SDATE ) IN ( ( NULL,NULL)
	<foreach item="rm" collection="deleteRows" >
	    <if test='  rm.sabun != null and !rm.sabun.equals("") and rm.sdate != null and !rm.sdate.equals("") '>
			     , ( TRIM( #{rm.sabun} ),TRIM( #{rm.sdate} ) )
		</if>
	</foreach>
			       )
		</delete>

</mapper>