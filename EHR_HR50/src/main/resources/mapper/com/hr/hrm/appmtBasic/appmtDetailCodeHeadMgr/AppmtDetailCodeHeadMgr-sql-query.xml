<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.appmtBasic.appmtDetailCodeHeadMgr">

<!-- 발령형태코드 조회 -->
		<select parameterType="map" resultType="cMap" id="getAppmtDetailCodeHeadMgrList">

				<![CDATA[
					SELECT A.ENTER_CD           -- 회사구분(TORG900)
					     , A.ORD_TYPE_CD		-- 발령형태(TSYS011)
					     , A.ORD_TYPE_NM		-- 발령형태명
					     , A.ORD_TYPE			-- 발령구분(H40001)
					     , A.MAIN_YN			-- 주요발령여부
					     , A.SEQ				-- 순서
					     , A.USE_YN
					  FROM TSYS011 A
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					           ]]>
              	<if test='ordTypeCd != null and !ordTypeCd.equals("")'>
					   AND LOWER(A.ORD_TYPE_CD) LIKE '%'||LOWER(TRIM(#{ordTypeCd}))||'%'
				</if>
              	<if test='ordTypeNm != null and !ordTypeNm.equals("")'>
					   AND LOWER(A.ORD_TYPE_NM) LIKE '%'||LOWER(TRIM(#{ordTypeNm}))||'%'
				</if>
              	<if test='ordType != null and !ordType.equals("")'>
					   AND A.ORD_TYPE = #{ordType}
				</if>
					 ORDER BY A.SEQ



		</select>

<!-- 세부코드 조회 -->
		<select parameterType="map" resultType="cMap" id="getAppmtDetailCodeHeadMgrList2">

				<![CDATA[

					SELECT A.ENTER_CD           -- 회사구분(TORG900)
					     , A.ORD_TYPE_CD		-- 발령형태(TSYS011)
					     , (SELECT ORD_TYPE_NM FROM TSYS011 WHERE ENTER_CD = A.ENTER_CD AND ORD_TYPE_CD = A.ORD_TYPE_CD) AS ORD_TYPE_NM
					     , A.SEQ				-- 순서
					     , A.ORD_DETAIL_CD		-- 발령종류(TSYS013)
					     , A.ORD_DETAIL_NM		-- 발령종류(TSYS013)
					     , A.PRT_YN				-- 출력유무
					     , A.STATUS_CD			-- 재직상태(H10010)
					     , A.USE_YN
					  FROM TSYS013 A
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.ORD_TYPE_CD = #{ordTypeCd}
					 ORDER BY A.SEQ

				]]>


		</select>

<!-- 발령코드 저장 -->
		<update parameterType="map" id="saveAppmtDetailCodeHeadMgr1">

					MERGE INTO TSYS011 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.ORD_TYPE_CD
									, A.ORD_TYPE_NM
									, A.ORD_TYPE
									, A.MAIN_YN
									, A.SEQ
									, A.USE_YN
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS ORD_TYPE_CD
											, NULL		AS ORD_TYPE_NM
											, NULL		AS ORD_TYPE
											, NULL		AS MAIN_YN
											, NULL		AS SEQ
											, NULL		AS USE_YN
									FROM	DUAL
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT    TRIM( #{ssnEnterCd} )		AS ENTER_CD
											, TRIM( #{rm.ordTypeCd} )	AS ORD_TYPE_CD
											, TRIM( #{rm.ordTypeNm})	AS ORD_TYPE_NM
											, TRIM( #{rm.ordType})		AS ORD_TYPE
											, TRIM( #{rm.mainYn})		AS MAIN_YN
											, TRIM( #{rm.seq})			AS SEQ
											, TRIM( #{rm.useYn})		AS USE_YN
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.ORD_TYPE_CD = S.ORD_TYPE_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.ORD_TYPE_NM	= S.ORD_TYPE_NM
									, T.ORD_TYPE	= S.ORD_TYPE
									, T.MAIN_YN		= S.MAIN_YN
									, T.SEQ			= S.SEQ
									, T.USE_YN		= S.USE_YN
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.ORD_TYPE_CD
							, T.ORD_TYPE_NM
							, T.ORD_TYPE
							, T.MAIN_YN
							, T.SEQ
							, T.USE_YN
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #{ssnEnterCd}
							, S.ORD_TYPE_CD
							, S.ORD_TYPE_NM
							, S.ORD_TYPE
							, S.MAIN_YN
							, S.SEQ
							, S.USE_YN
							, SYSDATE
							, #{ssnSabun}
						)
		</update>

<!-- 발령세부코드 저장 -->
		<update parameterType="map" id="saveAppmtDetailCodeHeadMgr2">

					MERGE INTO TSYS013 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.ORD_TYPE_CD
									, A.ORD_DETAIL_CD
									, A.ORD_DETAIL_NM
									, A.PRT_YN
									, A.SEQ
									, A.STATUS_CD
									, A.USE_YN
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS ORD_TYPE_CD
											, NULL		AS ORD_DETAIL_CD
											, NULL		AS ORD_DETAIL_NM
											, NULL		AS PRT_YN
											, NULL		AS SEQ
											, NULL		AS STATUS_CD
											, NULL		AS USE_YN
									FROM	DUAL
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT    TRIM( #{ssnEnterCd} )	AS ENTER_CD
											, TRIM( #{rm.ordTypeCd} )	AS ORD_TYPE_CD
											, TRIM( #{rm.ordDetailCd} )	AS ORD_DETAIL_CD
											, TRIM( #{rm.ordDetailNm})	AS ORD_DETAIL_NM
											, TRIM( #{rm.prtYn})		AS PRT_YN
											, TRIM( #{rm.seq})			AS SEQ
											, TRIM( #{rm.statusCd})	AS STATUS_CD
											, TRIM( #{rm.useYn})	    AS USE_YN
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.ORD_TYPE_CD = S.ORD_TYPE_CD AND T.ORD_DETAIL_CD = S.ORD_DETAIL_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.ORD_DETAIL_NM			= S.ORD_DETAIL_NM
									, T.PRT_YN					= S.PRT_YN
									, T.SEQ						= S.SEQ
									, T.STATUS_CD				= S.STATUS_CD
									, T.USE_YN					= S.USE_YN
									, T.CHKDATE					= SYSDATE
									, T.CHKID					= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.ORD_TYPE_CD
							, T.ORD_DETAIL_CD
							, T.ORD_DETAIL_NM
							, T.PRT_YN
							, T.SEQ
							, T.STATUS_CD
							, T.USE_YN
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #{ssnEnterCd}
							, S.ORD_TYPE_CD
							, S.ORD_DETAIL_CD
							, S.ORD_DETAIL_NM
							, S.PRT_YN
							, S.SEQ
							, S.STATUS_CD
							, S.USE_YN
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
<!-- 발령형태코드 삭제 -->
		<delete parameterType="map" id="deleteAppmtDetailCodeHeadMgr1">

					DELETE FROM TSYS011
					 WHERE  ENTER_CD||'_'||ORD_TYPE_CD IN (  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd  != null and !ssnEnterCd.equals("") and rm.ordTypeCd != null and !rm.ordTypeCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.ordTypeCd})
										</if>
</foreach>
										)
		</delete>

<!-- 발령상세코드 삭제 -->
		<delete parameterType="map" id="deleteAppmtDetailCodeHeadMgr2">

					DELETE FROM TSYS013
					 WHERE ENTER_CD||'_'||ORD_TYPE_CD||'_'||ORD_DETAIL_CD IN (  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd  != null and !ssnEnterCd.equals("") and rm.ordTypeCd != null and !rm.ordTypeCd.equals("") and rm.ordDetailCd != null and !rm.ordDetailCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.ordTypeCd})||'_'||TRIM(#{rm.ordDetailCd})
										</if>
</foreach>
										)
		</delete>
<!-- 발령상세코드  모두 삭제 -->		
		<delete parameterType="map" id="deleteAppmtDetailCodeHeadAllMgr2">

					DELETE FROM TSYS013
					 WHERE ENTER_CD||'_'||ORD_TYPE_CD IN (  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd  != null and !ssnEnterCd.equals("") and rm.ordTypeCd != null and !rm.ordTypeCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.ordTypeCd})
										</if>
</foreach>
										)
		</delete>

<!-- 발령담당자 삭제 -->
		<delete parameterType="map" id="deleteAppmtDetailUserMgr">

					DELETE FROM THRM205
					 WHERE ENTER_CD||'_'||ORD_TYPE_CD IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("") and rm.ordTypeCd != null and !rm.ordTypeCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM( #{rm.ordTypeCd} )
										</if>
</foreach>
										)
		</delete>
		
		<update parameterType="map" id="callP_SYS_ORD_CODE_COPY" statementType="CALLABLE">
		<![CDATA[
			{CALL P_SYS_ORD_CODE_COPY(
				#{sqlCode,mode=OUT,jdbcType=VARCHAR},
				#{sqlErrm,mode=OUT,jdbcType=VARCHAR},
				#{ssnEnterCd,mode=IN,jdbcType=VARCHAR},
				#{gubun,mode=IN,jdbcType=VARCHAR},
				#{ordTypeCdSheet1,mode=IN,jdbcType=VARCHAR},
				#{ssnSabun,mode=IN,jdbcType=VARCHAR})}
		]]>
		</update>


</mapper>