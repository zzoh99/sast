<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.promotion.promStdMgr.promStdStay">
<!-- 승진년차 조회 -->
		<select parameterType="map" resultType="cMap" id="getPromStdStayList">

				<![CDATA[
					SELECT ENTER_CD
					     , PMT_CD
					     , BASE_JIKWEE_CD
					     , TAR_JIKWEE_CD
					     , TAR_JIKGUB_CD
					     , PMT_POSITION_TYPE
					     , PMT_YEAR
					     , SPA_POINT
					     , MBO_RATE
					     , COMP_RATE
					     , ADT_YY_CD
					     , PAP_RATE_1
					     , PAP_RATE_2
					     , PAP_RATE_3
					     , PAP_RATE_4
					     , PAP_RATE_5
					     , PAP_RATE_6
					     , APP_POINT
					  FROM THRM441
					 WHERE ENTER_CD = #{ssnEnterCd}
					   AND PMT_CD = #{pmtCd}
					 ORDER BY F_COM_GET_GRCODE_SEQ(ENTER_CD, 'H20030', BASE_JIKWEE_CD)
				]]>


		</select>

<!-- 승진년차 저장 -->
		<update parameterType="map" id="savePromStdStay">

					MERGE INTO THRM441 T
					USING (
							SELECT A.ENTER_CD
							     , A.PMT_CD
							     , A.BASE_JIKWEE_CD
							     , A.TAR_JIKWEE_CD
							     , A.TAR_JIKGUB_CD
							     , A.PMT_POSITION_TYPE
							     , A.PMT_YEAR
							     , A.SPA_POINT
							     , A.MBO_RATE
							     , A.COMP_RATE
							     , A.ADT_YY_CD
							     , A.PAP_RATE_1
							     , A.PAP_RATE_2
							     , A.PAP_RATE_3
							     , A.PAP_RATE_4
							     , A.PAP_RATE_5
							     , A.PAP_RATE_6
							     , A.APP_POINT
							  FROM (
									SELECT NULL		AS ENTER_CD
									     , NULL		AS PMT_CD
									     , NULL		AS BASE_JIKWEE_CD
									     , NULL		AS TAR_JIKWEE_CD
									     , NULL		AS TAR_JIKGUB_CD
									     , NULL		AS PMT_POSITION_TYPE
									     , NULL		AS PMT_YEAR
									     , NULL		AS SPA_POINT
									     , NULL		AS MBO_RATE
									     , NULL		AS COMP_RATE
									     , NULL		AS ADT_YY_CD
									     , NULL		AS PAP_RATE_1
									     , NULL		AS PAP_RATE_2
									     , NULL		AS PAP_RATE_3
									     , NULL		AS PAP_RATE_4
									     , NULL		AS PAP_RATE_5
									     , NULL		AS PAP_RATE_6
									     , NULL		AS APP_POINT
									  FROM DUAL
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT TRIM( #{ssnEnterCd} )		AS ENTER_CD
									     , TRIM( #{rm.pmtCd} )			AS PMT_CD
									     , TRIM( #{rm.baseJikweeCd} ) 	AS BASE_JIKWEE_CD
									     , TRIM( #{rm.tarJikweeCd})	AS TAR_JIKWEE_CD
									     , TRIM( #{rm.tarJikgubCd})	AS TAR_JIKGUB_CD
									     , TRIM( #{rm.pmtPositionType})	AS PMT_POSITION_TYPE
									     , TRIM( #{rm.pmtYear})		AS PMT_YEAR
									     , TRIM( #{rm.spaPoint})		AS SPA_POINT
									     , TRIM( #{rm.mboRate})		AS MBO_RATE
									     , TRIM( #{rm.compRate})		AS COMP_RATE
									     , TRIM( #{rm.adtYyCd} )		AS ADT_YY_CD
									     , TRIM( #{rm.papRate1})		AS PAP_RATE_1
									     , TRIM( #{rm.papRate2})		AS PAP_RATE_2
									     , TRIM( #{rm.papRate3})		AS PAP_RATE_3
									     , TRIM( #{rm.papRate4})		AS PAP_RATE_4
									     , TRIM( #{rm.papRate5})		AS PAP_RATE_5
									     , TRIM( #{rm.papRate6})		AS PAP_RATE_6
									     , TRIM( #{rm.appPoint})		AS APP_POINT
									  FROM DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.PMT_CD IS NOT NULL
										  AND A.BASE_JIKWEE_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.PMT_CD = S.PMT_CD AND T.BASE_JIKWEE_CD = S.BASE_JIKWEE_CD )
					WHEN MATCHED THEN
						UPDATE SET T.TAR_JIKWEE_CD	= S.TAR_JIKWEE_CD
						         , T.TAR_JIKGUB_CD		= S.TAR_JIKGUB_CD
						         , T.PMT_POSITION_TYPE		= S.PMT_POSITION_TYPE
						         , T.PMT_YEAR		= S.PMT_YEAR
						         , T.SPA_POINT		= S.SPA_POINT
						         , T.MBO_RATE		= S.MBO_RATE
						         , T.COMP_RATE		= S.COMP_RATE
						         , T.ADT_YY_CD		= S.ADT_YY_CD
						         , T.PAP_RATE_1		= S.PAP_RATE_1
						         , T.PAP_RATE_2		= S.PAP_RATE_2
						         , T.PAP_RATE_3		= S.PAP_RATE_3
						         , T.PAP_RATE_4		= S.PAP_RATE_4
						         , T.PAP_RATE_5		= S.PAP_RATE_5
						         , T.PAP_RATE_6		= S.PAP_RATE_6
						         , T.APP_POINT		= S.APP_POINT
						         , T.CHKDATE		= SYSDATE
						         , T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.PMT_CD
							, T.BASE_JIKWEE_CD
							, T.TAR_JIKWEE_CD
							, T.TAR_JIKGUB_CD
							, T.PMT_POSITION_TYPE
							, T.PMT_YEAR
							, T.SPA_POINT
							, T.MBO_RATE
							, T.COMP_RATE
							, T.ADT_YY_CD
							, T.PAP_RATE_1
							, T.PAP_RATE_2
							, T.PAP_RATE_3
							, T.PAP_RATE_4
							, T.PAP_RATE_5
							, T.PAP_RATE_6
							, T.APP_POINT		
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.PMT_CD
							, S.BASE_JIKWEE_CD
							, S.TAR_JIKWEE_CD
							, S.TAR_JIKGUB_CD
							, S.PMT_POSITION_TYPE
							, S.PMT_YEAR
							, S.SPA_POINT
							, S.MBO_RATE
							, S.COMP_RATE
							, S.ADT_YY_CD
							, S.PAP_RATE_1
							, S.PAP_RATE_2
							, S.PAP_RATE_3
							, S.PAP_RATE_4
							, S.PAP_RATE_5
							, S.PAP_RATE_6
							, S.APP_POINT
							, SYSDATE
							, #{ssnSabun}
						)
		</update>

<!-- 승진년차 삭제 -->
		<delete parameterType="map" id="deletePromStdStay">

					DELETE FROM THRM441
					 WHERE ENTER_CD||'_'||PMT_CD||'_'||BASE_JIKWEE_CD	 IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("") and rm.pmtCd != null and !rm.pmtCd.equals("") and rm.baseJikweeCd != null and !rm.baseJikweeCd.equals("")'>
										,
											TRIM(#{ssnEnterCd}) || '_' || TRIM( #{rm.pmtCd} ) || '_' || TRIM( #{rm.baseJikweeCd} )
										</if>
</foreach>
										)
		</delete>


</mapper>