<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.other.empOrdItemSrch">
		<select parameterType="map" resultType="cMap" id="getEmpOrdItemSrchList">

				<![CDATA[
					SELECT DISTINCT
						   A.ENTER_CD
					     , '/EmpPhotoOut.do'||chr(63)||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
					     , A.SABUN
					     , F_COM_GET_NAMES(A.ENTER_CD, A.SABUN) AS NAME
					     , A.ORG_CD
					     , F_SYS_GET_ENDOW_AUTH_YN( A.ENTER_CD, TRIM( #{ssnGrpCd} ) ,TRIM( #{ssnSabun} ),  A.SABUN ) AS AUTH_YN
						 , F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, NVL(REPLACE('2020-07-16', '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD'))) AS ORG_NM
					     , A.JIKCHAK_CD
					     , A.JIKCHAK_NM
					     , A.JIKWEE_CD
					     , A.JIKWEE_NM
					     , A.JIKGUB_CD
					     , A.JIKGUB_NM
					     , A.WORK_TYPE
					     , A.WORK_TYPE_NM
					     , A.MANAGE_CD
					     , A.MANAGE_NM
					     , A.STATUS_CD
					     , A.JOB_CD
					     , F_COM_GET_JOB_NM(A.ENTER_CD, A.SABUN, NVL(REPLACE('2020-07-16', '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD'))) AS JOB_NM
					     , B.ORG_CD			AS BORG_CD
					     , B.ORG_NM			AS BORG_NM
					     , B.JIKCHAK_CD		AS BJIKCHAK_CD
					     , B.JIKCHAK_NM		AS BJIKCHAK_NM
					     , B.JIKWEE_CD		AS BJIKWEE_CD
					     , B.JIKWEE_NM		AS BJIKWEE_NM
					     , B.JIKGUB_CD		AS BJIKGUB_CD
					     , B.JIKGUB_NM		AS BJIKGUB_NM
					     , B.WORK_TYPE		AS BWORK_TYPE
					     , B.WORK_TYPE_NM	AS BWORK_TYPE_NM
					     , B.MANAGE_CD		AS BMANAGE_CD
					     , B.MANAGE_NM		AS BMANGE_NM
						 , B.JOB_CD			AS BJOB_CD
						 , B.JOB_NM			AS BJOB_NM
						 , B.STATUS_CD		AS BSTATUS_CD
						 , B.STATUS_NM		AS BSTATUS_NM

						 , B.SDATE AS FR_DATE
						 , B.EDATE AS TO_DATE
						 , TO_DATE(B.EDATE, 'YYYYMMDD') - TO_DATE(B.SDATE, 'YYYYMMDD') + 1 AS DAY_CNT
					  FROM THRM151 A,
            		 	   THRM191_HIS B
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.SABUN = B.SABUN
					   AND NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')) BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
					   AND A.ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
					<if test='searchOrgNm !=null and !searchOrgNm.equals("")'>
					   AND UPPER(F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))) LIKE '%' || UPPER(#{searchOrgNm}) || '%'
					</if>
					<if test='searchSabunName !=null and !searchSabunName.equals("")'>
					   AND ( UPPER(A.SABUN) LIKE '%'||UPPER(TRIM( #{searchSabunName} ))||'%' OR UPPER(F_COM_GET_NAMES(A.ENTER_CD, A.SABUN)) LIKE '%'||UPPER(TRIM( #{searchSabunName} ))||'%')
					</if>
					<if test='statusCd != null and !statusCd.equals("")'>
					   AND A.STATUS_CD IN
		<foreach collection="statusCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
					</if>
					<![CDATA[
					 AND ROWNUM <= 50
					 ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD'))),
					          B.SDATE
					]]>



		</select>

		<select parameterType="map" resultType="cMap" id="getEmpOrdItemSrchVer2List">

				<![CDATA[
					SELECT A.ORG_CD
					     , '/EmpPhotoOut.do'||chr(63)||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
						 , A.SABUN
						 , F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
					     , F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, '', TO_CHAR(SYSDATE, 'YYYYMMDD')) AS NAMES
					     , A.JIKCHAK_NM
					     , A.JIKWEE_NM
					     , A.JIKGUB_NM
					     , F_COM_GET_JOB_NM(A.ENTER_CD, A.JOB_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), '') AS JOB_NM
					     , A.WORK_TYPE_NM
					     , A.MANAGE_NM
					     , A.STATUS_CD
					     , A.STATUS_NM
					 	 , T.ORG_NM			AS BEF_ORG_NM
					     , T.JIKWEE_NM		AS BEF_JIKWEE_NM
					     , T.JIKCHAK_NM		AS BEF_JIKCHAK_NM
					     , T.JIKGUB_NM		AS BEF_JIKGUB_NM
					     , T.JOB_NM			AS BEF_JOB_NM
					     , T.WORK_TYPE_NM	AS BEF_WORK_TYPE_NM
					     , T.MANAGE_NM		AS BEF_MANAGE_NM
					     , T.SDATE
					     , T.EDATE
					     , T.STATUS_CD		AS BEF_STATUS_CD
					     , T.STATUS_NM		AS BEF_STATUS_NM
					     , NVL(TO_DATE(T.EDATE, 'YYYYMMDD'), SYSDATE) - NVL(TO_DATE(T.SDATE, 'YYYYMMDD'), SYSDATE) + 1 AS DAY_CNT
					     , T.CHG_ITEM_LIST
					  FROM THRM151 A,
					      (SELECT ENTER_CD, STATUS_CD, STATUS_NM
					      		, SABUN
					            , ORG_CD, ORG_NM
					            , JIKWEE_CD, JIKWEE_NM
					            , JIKCHAK_CD, JIKCHAK_NM
					            , JIKGUB_CD, JIKGUB_NM
					            , JOB_CD, JOB_NM
					            , WORK_TYPE, WORK_TYPE_NM
					            , MANAGE_CD, MANAGE_NM
					            , SDATE
					            , EDATE
					            , CASE WHEN ROWNUM > 1 THEN   DECODE(ORG_YN, 'Y', '조직/','')   ||DECODE(JIKWEE_YN, 'Y', '직위/','')||DECODE(JIKCHAK_YN, 'Y', '직책/','')
					                                        ||DECODE(JIKGUB_YN, 'Y', '직급/','')||DECODE(JOB_YN, 'Y', '직무/','')   ||DECODE(WORK_YN, 'Y', '직구분/','')
					                                        ||DECODE(MANAGE_YN, 'Y', '계약유형','') END AS CHG_ITEM_LIST
					        FROM
					             (
					              SELECT ENTER_CD, SABUN, SDATE, STATUS_CD, STATUS_NM
					              	   , ORG_CD, ORG_NM
					                   , JIKWEE_CD, JIKWEE_NM
					                   , JIKCHAK_CD, JIKCHAK_NM
					                   , JIKGUB_CD, JIKGUB_NM
					                   , JOB_CD, JOB_NM
					                   , WORK_TYPE, WORK_TYPE_NM
					                   , MANAGE_CD, MANAGE_NM
					                   , DECODE(ENTER_CD||SABUN, LEAD(ENTER_CD||SABUN) OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT)
					                   , NVL(TO_CHAR(TO_DATE(LEAD(SDATE) OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT),'YYYYMMDD') - 1, 'YYYYMMDD'), '99991231'), '') AS EDATE
					                   , ORG_YN, JIKWEE_YN, JIKCHAK_YN, JIKGUB_YN, JOB_YN, WORK_YN, MANAGE_YN
					                FROM (
					                      SELECT ENTER_CD, SABUN, SDATE, STATUS_CD, STATUS_NM
					                           , ORG_CD
					                           , F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, SDATE) AS ORG_NM
					                           , JIKWEE_CD, JIKWEE_NM
					                           , JIKCHAK_CD, JIKCHAK_NM
					                           , JIKGUB_CD, JIKGUB_NM
					                           , JOB_CD
					                           , F_COM_GET_JOB_NM2(ENTER_CD, SABUN, SDATE) AS JOB_NM
					                           , WORK_TYPE, WORK_TYPE_NM
					                           , MANAGE_CD, MANAGE_NM
					              			   , ROW_NUMBER () OVER (PARTITION BY SABUN ORDER BY SDATE ASC) AS ROW_CNT
					                           , DECODE(ORG_CD,     LAG(ORG_CD)     OVER (ORDER BY ENTER_CD, SABUN, SDATE), 'N', 'Y') AS ORG_YN
					                           , DECODE(JIKCHAK_CD, LAG(JIKCHAK_CD) OVER (ORDER BY ENTER_CD, SABUN, SDATE), 'N', 'Y') AS JOB_YN
					                           , DECODE(JIKWEE_CD,  LAG(JIKWEE_CD)  OVER (ORDER BY ENTER_CD, SABUN, SDATE), 'N', 'Y') AS JIKCHAK_YN
					                           , DECODE(JIKGUB_CD,  LAG(JIKGUB_CD)  OVER (ORDER BY ENTER_CD, SABUN, SDATE), 'N', 'Y') AS JIKWEE_YN
					                           , DECODE(JOB_CD, 	LAG(JOB_CD)     OVER (ORDER BY ENTER_CD, SABUN, SDATE), 'N', 'Y') AS JIKGUB_YN
					                           , DECODE(WORK_TYPE,  LAG(WORK_TYPE)  OVER (ORDER BY ENTER_CD, SABUN, SDATE), 'N', 'Y') AS WORK_YN
					                           , DECODE(MANAGE_CD,  LAG(MANAGE_CD)  OVER (ORDER BY ENTER_CD, SABUN, SDATE), 'N', 'Y') AS MANAGE_YN
					                         FROM (
					                                SELECT ENTER_CD, SABUN, SDATE, EDATE, ORG_CD, STATUS_CD, STATUS_NM
					                                     , JIKWEE_CD, JIKWEE_NM
					                                     , JIKCHAK_CD, JIKCHAK_NM
					                                     , JIKGUB_CD, JIKGUB_NM
					                                     , JOB_CD
					                                     , WORK_TYPE, WORK_TYPE_NM
					                                     , MANAGE_CD, MANAGE_NM
					                                     , ROWNUM AS RN
					                                  FROM THRM151 A
					                                 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
													   <if test='searchOrgNm !=null and !searchOrgNm.equals("")'>
													   AND UPPER(F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))) LIKE '%' || UPPER(#{searchOrgNm}) || '%'
													   </if>
													   <if test='searchSabunName !=null and !searchSabunName.equals("")'>
													   AND ( UPPER(A.SABUN) LIKE '%'||UPPER(TRIM( #{searchSabunName} ))||'%' OR UPPER(F_COM_GET_NAMES(A.ENTER_CD, A.SABUN)) LIKE '%'||UPPER(TRIM( #{searchSabunName} ))||'%')
													   </if>
					                             )
					                     )
					               WHERE 1=1
					                 AND (    DECODE(#{searchOrgCd},     'Y', 'Y', '')  = ORG_YN
					                       OR DECODE(#{searchJikchakCd}, 'Y', 'Y', '')  = JIKWEE_YN
					                       OR DECODE(#{searchJikweeCd},  'Y', 'Y', '')  = JIKCHAK_YN
					                       OR DECODE(#{searchJikgubCd},  'Y', 'Y', '')  = JIKGUB_YN
					                       OR DECODE(#{searchJobCd},     'Y', 'Y', '')  = JOB_YN
					                       OR DECODE(#{searchWorkType},  'Y', 'Y', '')  = WORK_YN
					                       OR DECODE(#{searchManageCd},  'Y', 'Y', '')  = MANAGE_YN
					                       OR STATUS_CD = 'RA'
					                     )
					             ) B
					      ) T
					 WHERE 1=1
					   AND A.ENTER_CD = T.ENTER_CD
					   AND A.SABUN    = T.SABUN
					   AND A.SDATE    = (SELECT MAX(SDATE)
					   					   FROM THRM151
					                      WHERE ENTER_CD = A.ENTER_CD
					                        AND SABUN    = A.SABUN
					                        AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231'))
			<![CDATA[ AND T.SDATE <= REPLACE(TRIM(#{searchYmd}),'-','') ]]>
					   AND (   T.SDATE BETWEEN NVL(REPLACE(TRIM(#{sdate}),'-',''), '19000101') AND NVL(REPLACE(TRIM(#{edate}),'-',''), '99991231')
							OR T.EDATE BETWEEN NVL(REPLACE(TRIM(#{sdate}),'-',''), '19000101') AND NVL(REPLACE(TRIM(#{edate}),'-',''), '99991231'))
					   AND A.ENTER_CD = TRIM(#{ssnEnterCd})
					  <if test='statusCd != null and !statusCd.equals("")'>
					   AND A.STATUS_CD IN
		<foreach collection="statusCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
					  </if>
					  
					<if test='except1 != null and except1.equals("Y")'>
					   <![CDATA[ AND A.STATUS_CD <> 'CA' ]]>
					</if>
					<if test='except2 != null and except2.equals("Y")'>
						<![CDATA[
					     AND NVL((SELECT  X.CNT_TYPE_CD 
						          FROM TCPN403 X 
						         WHERE X.ENTER_CD = A.ENTER_CD 
						           AND X.SABUN = A.SABUN 
								   AND (X.ENTER_CD, X.SABUN, X.SDATE) IN ( SELECT Y.ENTER_CD, Y.SABUN, MAX(Y.SDATE)
						           	                                         FROM TCPN403 Y
						            	                                    WHERE Y.ENTER_CD = X.ENTER_CD
						                                                      AND Y.SABUN = X.SABUN
						                                                      AND REPLACE(NVL(#{searchYmd}, TO_CHAR(SYSDATE,'YYYYMMDD')), '-', '') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
						                                                    GROUP BY Y.ENTER_CD, Y.SABUN ) ), '^' ) <> '070'
													]]>
					</if>
					<if test='except3 != null and except3.equals("Y")'>
						<![CDATA[
					   AND A.JIKWEE_CD <> '177'
					   ]]>
					</if>
					   
					 ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD')), A.SABUN, T.SDATE  



		</select>


</mapper>
