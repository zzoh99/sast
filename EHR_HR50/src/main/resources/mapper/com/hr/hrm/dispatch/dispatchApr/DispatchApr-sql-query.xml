<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.dispatch.dispatchApr">
		<select parameterType="map" resultType="cMap" id="getDispatchAprList">

				<![CDATA[
				SELECT '3' AS DETAIL
					, A.ENTER_CD
					, A.SABUN
					, F_COM_GET_ORG_CD(A.ENTER_CD, A.SABUN, A.APPL_YMD) AS ORG_CD
					, F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, A.APPL_YMD, #{ssnLocaleCd}) AS ORG_NM
					, F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd}) AS NAME
					, F_COM_GET_JIKCHAK_NM(A.ENTER_CD, A.SABUN, A.APPL_YMD)   AS JIKCHAK_NM   -- 직책
					, F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, A.APPL_YMD)   AS JIKWEE_NM   -- 직위
					, F_COM_GET_JIKGUB_NM(A.ENTER_CD, A.SABUN, A.APPL_YMD)   AS JIKGUB_NM   -- 직급
					, A.APPL_YMD
					, A.APPL_SEQ
					, A.DISPATCH_SYMD
					, A.DISPATCH_EYMD
					, A.DISPATCH_ORG_CD
					, A.DISPATCH_ORG_NM
					, A.DISPATCH_REASON
					, A.MEMO
					, B.APPL_STATUS_CD
					, F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'R10010', B.APPL_STATUS_CD) AS APPL_STATUS_NM -- 진행상태_NM
					, B.APPL_SABUN
					, B.APPL_IN_SABUN
					, F_COM_GET_NAMES(B.ENTER_CD, B.APPL_IN_SABUN) AS APPL_IN_SABUN_NM
					, '/EmpPhotoOut.do'||chr(63)||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN || chr(38) || 'type=1' AS PHOTO
					, DECODE(C.SABUN, NULL, 'N', 'Y') AS PRE_POST_YN
					, DECODE(C.SABUN, NULL, 'N', 'Y') AS PRE_POST_YN2
					, NVL(C.ORD_YN,'N') AS ORD_YN
					, DECODE(NVL(C.ORD_YN, 'N'), 'N', '0', DECODE(C.ORD_YN,'Y','1','0')) AS IBS_IMAGE4
					, NVL(A.ORD_TYPE_CD, 'J') AS ORD_TYPE_CD 
					, A.ORD_DETAIL_CD
					, A.ORD_YMD
					, A.DISPATCH_EYMD AS ORD_E_YMD
				FROM THRM581 A, THRI103 B, THRM221 C
				WHERE A.ENTER_CD  = TRIM( #{ssnEnterCd} )
					AND B.ENTER_CD = A.ENTER_CD
					AND B.APPL_SEQ = A.APPL_SEQ
					AND B.APPL_STATUS_CD <> '11'
					AND A.ENTER_CD = C.ENTER_CD(+)
					AND A.SABUN = C.SABUN(+)
					AND A.ORD_YMD = C.ORD_YMD(+)
					AND A.ORD_TYPE_CD = C.ORD_TYPE_CD(+)
					AND A.ORD_DETAIL_CD = C.ORD_DETAIL_CD(+)
					        ]]>
		           <if test='applStatusCd != null and !applStatusCd.equals("")'>
		                AND B.APPL_STATUS_CD = #{applStatusCd}
		           </if>
		           	<if test='sdate != null and !sdate.equals("")'>
					   AND B.APPL_YMD <![CDATA[ >= ]]> REPLACE(#{sdate},'-','')
					</if>
					<if test='edate != null and !edate.equals("")'>
					   AND B.APPL_YMD <![CDATA[ <= ]]> REPLACE(#{edate},'-','')
					</if>
					<if test='orgNm != null and !orgNm.equals("")'>
					   AND F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, A.APPL_YMD) LIKE '%'|| #{orgNm} ||'%'
					</if>
					<if test='saNm and !saNm.equals("")'>
					   AND (A.SABUN LIKE '%'||TRIM( #{saNm} )||'%' OR F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd}) LIKE '%'|| TRIM( #{saNm} ) ||'%')
					</if>
   					ORDER BY A.APPL_SEQ DESC


		</select>

		<select parameterType="map" resultType="cMap" id="getDispatchAprTypeCodeList">

				<![CDATA[
					SELECT ORD_TYPE_CD CODE, ORD_TYPE_NM CODE_NM
					FROM TSYS011
					WHERE ENTER_CD = #{ssnEnterCd}
				]]>


		</select>
		<update parameterType="map" id="updateDispatchAprFirst">

   					MERGE INTO THRM581 T
                  	USING (
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" separator=" UNION ALL " >
                           	SELECT
                           			 TRIM(#{rm.sabun})							AS SABUN
                           			, REPLACE(TRIM(#{rm.applYmd}),'-','')		AS APPL_YMD
                           			, rm.applSeq								AS APPL_SEQ
                           			, NVL(TRIM(#{rm.dispatchOrgCd}),NULL )		AS DISPATCH_ORG_CD
                           			, NVL(TRIM(#{rm.dispatchOrgNm}),NULL )		AS DISPATCH_ORG_NM
                           			, NVL(TRIM(#{rm.dispatchSymd}),NULL )		AS DISPATCH_SYMD
                           			, NVL(TRIM(#{rm.dispatchEymd}),NULL )		AS DISPATCH_EYMD
                           			, NVL(TRIM(#{rm.dispatchReason}),NULL )		AS DISPATCH_REASON
                           			, NVL(TRIM(#{rm.memo}),NULL )				AS MEMO
                           			, NVL(TRIM(#{rm.ordTypeCd}),NULL )			AS ORD_TYPE_CD
                           			, NVL(TRIM(#{rm.ordDetailCd}),NULL )		AS ORD_DETAIL_CD
                           			, REPLACE(TRIM(#{rm.ordYmd}),'-','')		AS ORD_YMD
                           	FROM   DUAL
</foreach>
                           ) S
                        ON (
                               	   T.ENTER_CD	= #{ssnEnterCd}
                               AND T.SABUN		= S.SABUN
                               AND T.APPL_YMD	= S.APPL_YMD
                               AND T.APPL_SEQ	= S.APPL_SEQ
                           )
           			WHEN MATCHED THEN
         				UPDATE SET    T.DISPATCH_ORG_CD 	= S.DISPATCH_ORG_CD
         							, T.DISPATCH_ORG_NM 	= S.DISPATCH_ORG_NM
         							, T.DISPATCH_SYMD 		= S.DISPATCH_SYMD
         							, T.DISPATCH_EYMD 		= S.DISPATCH_EYMD
         							, T.DISPATCH_REASON 	= S.DISPATCH_REASON
         							, T.MEMO 				= S.MEMO
         							, T.ORD_TYPE_CD			= S.ORD_TYPE_CD
         							, T.ORD_DETAIL_CD 		= S.ORD_DETAIL_CD
         							, T.ORD_YMD 			= S.ORD_YMD
									, T.CHKDATE 			= SYSDATE
									, T.CHKID  				= #{ssnSabun}
		</update>


<update parameterType="map" id="updateDispatchAprSecond">


				MERGE INTO THRI103 T
					USING (
					    SELECT
					    	 A.ENTER_CD
					    	,A.APPL_SEQ
					        ,A.APPL_STATUS_CD
					    FROM (
					        SELECT
					       		 NULL AS ENTER_CD
								,NULL AS APPL_SEQ
					        	,NULL AS APPL_STATUS_CD
					        FROM DUAL
					         <bind name="icnt" value="1" />
							<foreach item="rm" collection="mergeRows" >
					         UNION ALL
					        SELECT
					        	 TRIM(#{ssnEnterCd}) 	   		AS ENTER_CD
								,TRIM(#{rm.applSeq}) 		AS APPL_SEQ
					        	,TRIM(#{rm.applStatusCd}) 	AS APPL_STATUS_CD
					         FROM DUAL
							</foreach>
					         ) A
					          WHERE 1 = 1
					          AND A.ENTER_CD IS NOT NULL
					          AND A.APPL_SEQ IS NOT NULL
					) S
					ON (
					    T.ENTER_CD 		 	= S.ENTER_CD
					    AND T.APPL_SEQ 	 	= S.APPL_SEQ
					)
					WHEN MATCHED THEN
				    UPDATE SET
						 T.APPL_STATUS_CD = S.APPL_STATUS_CD
						,T.CHKDATE 		  = SYSDATE
						,T.CHKID 		  = #{ssnSabun}
</update>

<!-- 		발령연계처리 로직확정후 작업예정 2020.05.04 YSH -->
		<insert parameterType="map" id="saveDispatchAprOrd">

				INSERT INTO THRM221(
				       ENTER_CD
				      ,ORD_DETAIL_CD
				      ,SABUN
				      ,ORD_YMD
				      ,APPLY_SEQ
				      ,ORD_TYPE_CD
				      ,PROCESS_NO
				      ,ORD_E_YMD
				      ,STATUS_CD
				      ,MANAGE_CD
				      ,LOCATION_CD
				      ,ORG_CD
				      ,JIKCHAK_CD
				      ,WORK_TYPE
				      ,JOB_CD
				      ,JIKWEE_CD
				      ,JIKGUB_CD
				      ,SAL_CLASS
				      ,PAY_TYPE
				      ,TRA_YMD
				      ,GEMP_YMD
				      ,RETURN_YMD
				      ,EMP_YMD
				      ,CTITLE_CHG_YMD
				      ,FPROM_YMD
				      ,JIKGUB_CHG_YMD
				      ,CONTRACT_SYMD
				      ,CONTRACT_EYMD
				      ,PAY_GROUP_CD
				      ,WORKORG_CD
				      ,ORD_REASON_CD
				      ,ORD_YN
				      ,ORD_INS_YN
				      ,TEMP_ORD_YN
				      ,CHKDATE
				      ,CHKID
				      ,DEL_YN
				)
				SELECT A.ENTER_CD
				      ,D.ORD_TYPE_CD
				      ,A.SABUN
				      ,DECODE(A.APPL_CD, '67', A.RETURN_YMD, A.REF_SDATE) AS SDATE
				      ,(SELECT DECODE(MAX(APPL_SEQ), NULL, 0, MAX(APPL_SEQ)) + 1
				              FROM THRM221
				           WHERE ENTER_CD = B.ENTER_CD
				           AND SABUN = A.SABUN
				           AND ORD_YMD = A.REF_SDATE)
				      ,D.ORD_TYPE_CD
				      ,A.PROCESS_NO
				      ,A.REF_EDATE
				      ,(SELECT STATUS_CD
				      	  FROM TSYS013
				      	 WHERE ENTER_CD = D.ENTER_CD
				      	   AND ORD_TYPE_CD = D.ORD_TYPE_CD
				      	   AND ORD_DETAIL_CD = D.ORD_TYPE_CD) --재직상태
				      ,B.MANAGE_CD
				      ,B.LOCATION_CD
				      ,B.ORG_CD
				      ,B.JIKCHAK_CD
				      ,B.WORK_TYPE
				      ,B.JOB_CD
				      ,B.JIKWEE_CD
				      ,B.JIKGUB_CD
				      ,B.SAL_CLASS
				      ,B.PAY_TYPE
				      ,C.TRA_YMD
				      ,C.GEMP_YMD
				      ,A.RETURN_YMD
				      ,C.EMP_YMD
				      ,B.CTITLE_CHG_YMD
				      ,B.FPROM_YMD
				      ,B.JIKGUB_CHG_YMD
				      ,B.CONTRACT_SYMD
				      ,B.CONTRACT_EYMD
				      ,B.PAY_GROUP_CD
				      ,B.WORKORG_CD
				      ,D.ORD_REASON_CD
				      ,'0'
				      ,'Y'
				      ,'N'
				      ,SYSDATE
				      ,TRIM( #{sabun} )
				      ,'N'
				    FROM THRM521 A
				          ,THRM151 B
				      ,THRM100 C
				      ,THRM510 D
				 WHERE A.ENTER_CD = B.ENTER_CD
				   AND A.SABUN = B.SABUN
				   AND B.ENTER_CD = C.ENTER_CD
				   AND B.SABUN = C.SABUN
				   AND A.APPL_YMD BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
				   AND A.ENTER_CD = D.ENTER_CD
				   AND A.APPL_CD = D.APPL_CD
				   AND A.APPL_YMD BETWEEN D.SDATE AND NVL(D.EDATE, '99991231')
				   AND A.ENTER_CD = #{ssnEnterCd}
				   AND A.SABUN = TRIM( #{sabun} )
				   AND A.APPL_SEQ = TRIM( #{applSeq} )
		</insert>

</mapper>
