<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.successor.succEmpMgr">

<!-- 개인사진관리(조직도) 조회 -->
		<select parameterType="map" resultType="cMap" id="getSuccEmpMgrOrgList">
				<![CDATA[
					SELECT LVL AS "_level"
						 , ORG_CHART_NM
						 , SDATE
						 , PRIOR_ORG_CD
						 , ORG_CD
						 , ORG_NM
						 ,  (SELECT SUB1.SUCC_YN FROM THRM703 SUB1 WHERE SUB1.ENTER_CD =#{ssnEnterCd} AND SUB1.ORG_CD = X.ORG_CD ) AS SUCC_YN
					  FROM (
					        SELECT LEVEL AS LVL, B.ORG_CHART_NM, A.SDATE, A.PRIOR_ORG_CD, A.ORG_CD
					              , NVL(DECODE(#{ssnEnterCd}, null, C.ORG_NM, 'zh_CN', C.ORG_NM_CN, 'en_US', C.ORG_NM_US, 'ja_JP', C.ORG_NM_JP, C.ORG_NM ), C.ORG_NM) AS ORG_NM
					          FROM TORG105 A,
					            (
					                SELECT SUB1.*
					                  FROM TORG103 SUB1,
					                    (
					                        SELECT MAX(SDATE) AS SDATE, ENTER_CD, ORG_CHART_NM
					                          FROM TORG103
					                         WHERE ENTER_CD = #{ssnEnterCd}
					                           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
					                          GROUP BY ENTER_CD, ORG_CHART_NM
					                    ) SUB2
					                 WHERE SUB1.ENTER_CD = #{ssnEnterCd}
					                   AND SUB1.ENTER_CD = SUB2.ENTER_CD
					                   AND SUB1.SDATE = SUB2.SDATE
					            ) B,
					            (
					                SELECT  SUB1.*
					                  FROM  TORG101 SUB1
					                 WHERE  SUB1.ENTER_CD = #{ssnEnterCd}
					                   AND  TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SUB1.SDATE AND NVL(SUB1.EDATE, '99991231')
					            ) C
					         WHERE A.ENTER_CD = #{ssnEnterCd}
					           AND A.ENTER_CD = B.ENTER_CD
					           AND A.SDATE = B.SDATE
					           AND A.ENTER_CD = C.ENTER_CD
					           AND A.ORG_CD = C.ORG_CD
					         START WITH A.PRIOR_ORG_CD = '0'
					        CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
					        AND PRIOR A.SDATE = A.SDATE
					        AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
					        ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ
					) X
				]]>
		</select>

<!-- 개인사진관리(조직원) 조회 -->
		<select parameterType="map" resultType="cMap" id="getSuccEmpMgrUserList">
				<![CDATA[
					SELECT A.ENTER_CD
					     , A.SABUN
					     , (SELECT F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR (SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) FROM DUAL)  AS ORG_NM
					     , (SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20030',A.JIKWEE_CD, #{ssnLocaleCd}) FROM DUAL)  AS JIKWEE_NM
					     , (SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20020',A.JIKCHAK_CD, #{ssnLocaleCd}) FROM DUAL)  AS JIKCHAK_NM
					     , (SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20010',A.JIKGUB_CD, #{ssnLocaleCd}) FROM DUAL)  AS JIKGUB_NM
					     , (SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H10050',A.WORK_TYPE, #{ssnLocaleCd}) FROM DUAL)  AS WORK_TYPE_NM
					     , A.STATUS_CD
					     , D.ORG_CD
					     , F_COM_GET_NAMES(B.ENTER_CD,B.SABUN, #{ssnLocaleCd}) AS NAME
					     , F_COM_GET_NAMES(B.ENTER_CD,B.SABUN,'ALIAS') AS ALIAS
					     , A.JIKWEE_CD
					     , A.JIKGUB_CD
					     , A.JIKCHAK_CD
					     , A.WORK_TYPE
					     , D.SUCC_CD
					     , D.JOB_TERM
					     , D.EVA3Y
					     , D.QUALIFIED_CNT
					     , D.NOTE
					     , A.JOB_CD
					     , '' AS JOB_NM
					     , (SELECT COUNT(1) FROM THRM911 WHERE ENTER_CD = A.ENTER_CD AND SABUN = A.SABUN AND IMAGE_TYPE = '1' ) AS FILE_YN
						 , (SELECT COUNT(1) FROM THRM911 WHERE ENTER_CD = A.ENTER_CD AND SABUN = A.SABUN AND IMAGE_TYPE = '2' ) AS SIGN_YN
						 , '/EmpPhotoOut.do'||chr(63)||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
						 , '/EmpPhotoOut.do'||chr(63)||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=2' AS SIGN
						 , C.FILE_SEQ
						 , C.SEQ_NO
						 , '1' AS BTN_PRT
					  FROM (
					        SELECT SUB1.*
					          FROM THRM151 SUB1
					         WHERE SUB1.ENTER_CD = #{ssnEnterCd}
					           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
					       ) A
					     , THRM100 B
					     , THRM911 C
					     , THRM701 D
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					 ]]>
<choose><when test='lower != null and !lower.equals("1")'>

					   AND A.ORG_CD IN (SELECT #{srchOrgCd}
										  FROM DUAL
										 UNION
										SELECT ORG_CD
										  FROM TORG105
										 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
										   AND SDATE = (SELECT MAX(SDATE)
											               FROM TORG103
											              WHERE ENTER_CD = #{ssnEnterCd}
											                AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
										 START WITH PRIOR_ORG_CD = #{srchOrgCd}
										 CONNECT BY PRIOR ENTER_CD = ENTER_CD
											 AND PRIOR SDATE = SDATE
											 AND PRIOR ORG_CD = PRIOR_ORG_CD )
										)
		</when>
		<otherwise>
					   AND D.ORG_CD = #{srchOrgCd}
		</otherwise>
</choose>	
<if test='statusCd != null and !statusCd.equals("")'>
		              AND A.STATUS_CD != #{statusCd}
</if>
				<![CDATA[ 
					   AND A.ENTER_CD = B.ENTER_CD
					   AND A.SABUN = B.SABUN
					   AND A.STATUS_CD NOT IN ('RA', 'RAA')
					   AND B.ENTER_CD = C.ENTER_CD(+)
					   AND B.SABUN = C.SABUN(+)
					   AND A.ENTER_CD = D.ENTER_CD
					   AND A.SABUN = D.SABUN 
					   AND C.IMAGE_TYPE(+) = '1'				   
					 ORDER BY A.ENTER_CD, D.JOB_TERM DESC, A.SABUN
				]]>
		</select>
<!-- 조직장 조회 -->
		<select parameterType="map" resultType="cMap" id="getSuccEmpMgrMap">
				<![CDATA[
					SELECT T1.ENTER_CD, T1.SABUN, T1.NAME, TO_CHAR(TO_DATE(T2.EMP_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS EMP_YMD
					     , F_COM_GET_JIKWEE_NM(T1.ENTER_CD, T1.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKWEE_NM
					     , F_COM_GET_JIKCHAK_NM(T1.ENTER_CD, T1.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKCHAK_NM
					     , F_COM_GET_CAREER_CNT(T1.ENTER_CD, T1.SABUN, 'W') AS CAREER_CNT
					     , F_COM_GET_ORG_NM2(T1.ENTER_CD, T1.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
					     , TO_CHAR(TO_DATE(T2.BIR_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS BIR_YMD
					  FROM TORG111 T1, THRM100 T2
					 WHERE T1.ENTER_CD = T2.ENTER_CD
					   AND T1.SABUN = T2.SABUN
					   AND T1.ENTER_CD = #{ssnEnterCd} 
					   AND T1.ORG_CD =  #{srchOrgCd}
					   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN T1.SDATE AND T1.EDATE
				]]>
		</select>
<!-- 조직장 조회 -->
		<select parameterType="map" resultType="cMap"  id="getSuccEmpMap">
				<![CDATA[
					SELECT T1.ENTER_CD, T1.SABUN, T1.NAME, TO_CHAR(TO_DATE(T1.EMP_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS EMP_YMD
					     , F_COM_GET_JIKWEE_NM(T1.ENTER_CD, T1.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKWEE_NM
					     , F_COM_GET_JIKCHAK_NM(T1.ENTER_CD, T1.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKCHAK_NM
					     , F_COM_GET_CAREER_CNT(T1.ENTER_CD, T1.SABUN, 'W') AS CAREER_CNT
					     , F_COM_GET_ORG_NM2(T1.ENTER_CD, T1.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
					     , TO_CHAR(TO_DATE(T1.BIR_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS BIR_YMD
					  FROM THRM100 T1
					 WHERE T1.ENTER_CD = #{ssnEnterCd} 
					   AND T1.SABUN =  #{sabun}

				]]>
		</select>
		
<!-- 승진관리대상자 저장 -->
		<update parameterType="map" id="saveSuccEmpMgrUserList">
		         		 MERGE INTO THRM701 T 
						 USING 
						( 
							  SELECT NULL AS ENTER_CD 
						           , NULL AS YY
						           , NULL AS ORG_CD
						           , NULL AS SABUN
						           , NULL AS SUCC_CD
						           , NULL AS NOTE
						        FROM DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							   UNION ALL
						       SELECT TRIM(#{ssnEnterCd}) AS ENTER_CD 
						            , TRIM(#{rm.yy}) AS YY
						            , TRIM(#{rm.orgCd}) AS ORG_CD
						            , TRIM(#{rm.sabun}) AS SABUN
						            , TRIM(#{rm.succCd}) AS SUCC_CD
						            , TRIM(#{rm.note}) AS NOTE
						        FROM DUAL
</foreach>
						) S 
						ON ( 
						          T.ENTER_CD = S.ENTER_CD 
						     AND  T.YY = S.YY 
						     AND  T.ORG_CD = S.ORG_CD 
						     AND  T.SABUN = S.SABUN 
						) 
						WHEN MATCHED THEN 
						   UPDATE SET T.CHKDATE	= sysdate 
						            , T.CHKID	    = #{ssnSabun} 
						            , T.SUCC_CD = S.SUCC_CD 
						            , T.NOTE = S.NOTE 
						WHEN NOT MATCHED THEN 
						   INSERT 
						   ( 
						              T.ENTER_CD
						            , T.YY
						            , T.ORG_CD
						            , T.SABUN
						            , T.SUCC_CD
						            , T.NOTE
						            , T.CHKDATE
						            , T.CHKID
						   ) 
						   VALUES 
						   ( 
						              S.ENTER_CD
						            , S.YY
						            , S.ORG_CD
						            , S.SABUN
						            , S.SUCC_CD
						            , S.NOTE
						            , sysdate
						            , #{ssnSabun}
						   ) 

		</update>
		
<!--  퇴직설문항목관리 삭제 -->
		<delete parameterType="map" id="deleteSuccEmpMgrUserList">
					DELETE FROM THRM701
					WHERE  ENTER_CD||'_'||ORG_CD||'_'||SABUN IN 	(  NULL
			<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
											and rm.orgCd != null and !rm.orgCd.equals("")
											and rm.sabun != null and !rm.sabun.equals("")'>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.orgCd} )||'_'||TRIM( #{rm.sabun} )
										</if>
			</foreach>
										)

		</delete>
		
	<update id="callP_HRM_SUCCESSOR_EMP_CRE" parameterType="map" statementType="CALLABLE">
        <![CDATA[
            {CALL P_HRM_SUCCESSOR_EMP_CRE(
                     #{sqlCode,        mode=OUT, jdbcType=VARCHAR},
                     #{sqlErrm,        mode=OUT, jdbcType=VARCHAR},
                     #{ssnEnterCd,     mode=IN, jdbcType=VARCHAR},
                     #{srchYear,       mode=IN, jdbcType=VARCHAR},
                     #{srchOrgCd,      mode=IN, jdbcType=VARCHAR},
                     #{ssnSabun,       mode=IN, jdbcType=VARCHAR})}
        ]]>
    </update>
	</mapper>