<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.other.empList">
<!-- 		인원명부항목정의 조회 -->
		<select parameterType="map" resultType="cMap" id="getEmpListColMgrTitleList">

				<![CDATA[
					SELECT /* EmpList-mapping-query.getEmpListColMgrTitleList */
					       LISTAGG('grpCd'||CODE_CAMEL, '|')   WITHIN GROUP ( ORDER BY SEQ ) AS COL_SAVE_NAME
					     , LISTAGG(COL_NM, '|')                WITHIN GROUP ( ORDER BY SEQ ) AS COL_HEADER
					     , LISTAGG('GRP_CD_'||CODE_CAMEL, '|') WITHIN GROUP ( ORDER BY SEQ ) AS COL_NAME
					     , LISTAGG(CODE_CAMEL, '|')            WITHIN GROUP ( ORDER BY SEQ ) AS COL_VALUE
					  FROM (
					        SELECT A.ENTER_CD
					             , REPLACE(INITCAP(A.GRP_CD),'_') AS CODE_CAMEL
					             , NVL( F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys307', A.LANGUAGE_CD, #{ssnLocaleCd}), A.GRP_NM) AS COL_NM
					             , A.SEQ AS SEQ
					          FROM TSYS307 A
					         WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
					       )
				]]>


		</select>

<!-- 사용안함 20240719 jyp
<select parameterType="map" resultType="cMap" id="getEmpListColMgrList">-->

<!--				<![CDATA[-->
<!--				SELECT /* EmpList-mapping-query.getEmpListColMgrList */-->
<!--				       A.COLUMN_NAME AS COL_NAME-->
<!--				     , A.COLUMN_ID AS COL_ID-->
<!--				     , B.*-->
<!--				  FROM USER_TAB_COLUMNS A-->
<!--				 INNER JOIN (SELECT *-->
<!--				               FROM (SELECT ENTER_CD, COLUMN_ID, COLUMN_NAME, GRP_CD , USE_YN-->
<!--				                       FROM THRM503-->
<!--				                      WHERE ENTER_CD = TRIM(#{ssnEnterCd})-->
<!--				                        AND NVL(USE_YN,'N') = 'Y')-->
<!--				              PIVOT (-->
<!--				                        MAX(USE_YN) FOR GRP_CD IN (-->
<!--				                            ${columnInfo}-->
<!--				                        )-->
<!--				                    )-->
<!--				       ) B-->
<!--				    ON B.COLUMN_NAME = A.COLUMN_NAME-->
<!--				   AND B.COLUMN_ID   = A.COLUMN_ID-->
<!--				   AND A.TABLE_NAME  = TRIM( '인사_인사기본_기준일' )-->
<!--				 ORDER BY A.COLUMN_ID-->
<!--				]]>-->


<!--		</select>-->
		
		<update parameterType="map" id="saveEmpListColMgr">

					MERGE INTO THRM503 T
					USING (
					       SELECT A.ENTER_CD
					            , A.GRP_CD
					            , A.COLUMN_NAME
					            , A.COLUMN_ID
					            , A.USE_YN
					            , NVL(A.COLUMN_ORDER, (SELECT (COUNT(*) + 1) * 10
					                                     FROM THRM503
					                                    WHERE ENTER_CD = A.ENTER_CD
					                                      AND GRP_CD = A.GRP_CD
					                                      AND NVL(USE_YN, 'N') = 'Y')) AS COLUMN_ORDER
					         FROM (
					               SELECT NULL AS ENTER_CD
					                    , NULL AS GRP_CD
					                    , NULL AS COLUMN_NAME
					                    , NULL AS COLUMN_ID
					                    , NULL AS USE_YN
					                    , NULL AS COLUMN_ORDER
					                 FROM DUAL
					                UNION ALL
					               SELECT TRIM( #{ssnEnterCd} ) AS ENTER_CD
					                    , TRIM( #{GRP_CD} ) AS GRP_CD
					                    , TRIM( #{colName} ) AS COLUMN_NAME
					                    , TRIM( #{colId} ) AS COLUMN_ID
					                    , TRIM( #{USE_YN} ) AS USE_YN
					                    , TRIM( #{columnOrder}) AS COLUMN_ORDER
					                 FROM DUAL
					              ) A
					        WHERE A.ENTER_CD IS NOT NULL
					          AND A.GRP_CD IS NOT NULL
					          AND A.COLUMN_NAME IS NOT NULL
					      ) S
					ON (
					              T.ENTER_CD    = S.ENTER_CD
					          AND T.GRP_CD      = S.GRP_CD
					          AND T.COLUMN_NAME = S.COLUMN_NAME
					   )
					WHEN MATCHED THEN
					      UPDATE SET T.COLUMN_ID = S.COLUMN_ID
					               , T.USE_YN    = S.USE_YN
					               , T.CHKDATE   = SYSDATE
					               , T.CHKID     = #{ssnSabun}
					WHEN NOT MATCHED THEN
					     INSERT (
					          T.ENTER_CD
					        , T.GRP_CD
					        , T.COLUMN_NAME
					        , T.COLUMN_ID
					        , T.USE_YN
					        , T.COLUMN_ORDER
					        , T.CHKDATE
					        , T.CHKID
					     ) VALUES (
					          S.ENTER_CD
					        , S.GRP_CD
					        , S.COLUMN_NAME
					        , S.COLUMN_ID
					        , S.USE_YN
					        , S.COLUMN_ORDER
					        , SYSDATE
					        , #{ssnSabun}
					     )


		</update>
		
		<delete parameterType="map" id="deleteEmpListColMgr">

				<![CDATA[
					DELETE FROM THRM503
					 WHERE ENTER_CD = #{ssnEnterCd}
					   AND (GRP_CD, COLUMN_NAME, COLUMN_ID) IN (
					             (NULL, NULL, NULL)
					           , (TRIM(#{GRP_CD}), TRIM(#{colName}), TRIM(#{colId}))
					       )
				]]>


		</delete>
		
		<select parameterType="map" resultType="cMap" id="getEmpListTitleList">

				<![CDATA[
				SELECT /* EmpList-mapping-query.getEmpListTitleList */
				       LISTAGG('col'||CODE_CAMEL, '|')  WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_SAVE_NAME
				     , LISTAGG(CODE_NM, '|')            WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_HEADER
				     , LISTAGG('COL_'||CODE_CAMEL, '|') WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_NAME
				     , LISTAGG(CODE_CAMEL, '|')         WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_VALUE
				     , LISTAGG (COL_WIDTH, '|')         WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_WIDTH
				     , LISTAGG (COL_TYPE, '|')          WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_TYPE
				     , LISTAGG (COL_FORMAT, '|')        WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_FORMAT
				     , LISTAGG (COL_ALIGN, '|')         WITHIN GROUP (ORDER BY SEQ,COL_ID) AS COL_ALIGN
				  FROM (
				        SELECT B.ENTER_CD
				             , REPLACE(INITCAP(A.COLUMN_ID),'_') AS CODE_CAMEL
				             , B.COLUMN_NAME AS CODE_NM
				             , B.COLUMN_ORDER AS SEQ
				             , B.COLUMN_ID AS COL_ID
				             , NVL(B.COLUMN_WIDTH,'100') AS COL_WIDTH
				             , NVL(B.COLUMN_TYPE,'Text') AS COL_TYPE
				             , NVL(B.COLUMN_FORMAT,' ') AS COL_FORMAT
				             , NVL(B.COLUMN_ALIGN,' ') AS COL_ALIGN
				         FROM USER_TAB_COLUMNS A
				        INNER
				         JOIN THRM503 B
				           ON A.TABLE_NAME  = TRIM( '인사_인사기본_기준일' )
				          -- AND B.COLUMN_ID   = A.COLUMN_ID
				          AND B.COLUMN_NAME = A.COLUMN_NAME
				        WHERE B.ENTER_CD    = TRIM(#{ssnEnterCd})
				          AND B.GRP_CD      = TRIM(NVL(#{searchGrpCd}, #{ssnGrpCd}))
				          AND NVL(B.USE_YN,'N') = 'Y'
				       )
				]]>


		</select>
		
		<select parameterType="map" resultType="cMap" id="getEmpListList">

					SELECT /* EmpList-mapping-query.getEmpListList */

				<foreach collection="colHeader" item="colHeaderItem" index="index" separator=",">
					${colHeaderItem} AS ${colName[index]}
				</foreach>

					  FROM ( ${selectViewQuery} ) A
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					   AND SABUN NOT IN ( 'ISU0001' )
<if test='ssnSearchType != null and ssnSearchType.equals("O")'>
					   AND SABUN IN (SELECT SABUN FROM ${query})
</if>
<if test='searchNm != null and !searchNm.equals("")'>
					   AND (
					           A.SABUN LIKE '%'||TRIM( #{searchNm} )||'%'
					        OR F_COM_GET_NAMES (A.ENTER_CD, A.SABUN) LIKE '%'||TRIM( #{searchNm} )||'%'
					        OR F_COM_GET_NAMES (A.ENTER_CD, A.SABUN, 'ALIAS') LIKE '%'||TRIM( #{searchNm} )||'%'
					       )
</if>
<if test='multiStatusCd !=null and !multiStatusCd.equals("")'>
					   AND STATUS_CD IN
					<foreach collection="multiStatusCd" item="item" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
</if>


		</select>

		<select parameterType="map" resultType="cMap" id="getEmpListColAttrMgrList">

					SELECT GRP_CD
					     , COLUMN_ID AS COL_ID
					     , COLUMN_NAME AS COL_NAME
					     , COLUMN_WIDTH AS COL_WIDTH
					     , COLUMN_TYPE AS COL_TYPE
					     , COLUMN_FORMAT AS COL_FORMAT
					     , COLUMN_ORDER AS COL_ORDER
					     , COLUMN_ALIGN AS COL_ALIGN
					  FROM THRM503
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					   AND NVL(USE_YN,'N') = 'Y'
<if test='searchGrpCd != null and !searchGrpCd.equals("")'>
					   AND GRP_CD = #{searchGrpCd}
</if>
					   AND COLUMN_NAME IN ( SELECT A.COLUMN_NAME
					                          FROM USER_TAB_COLUMNS A
					                         WHERE A.TABLE_NAME	= TRIM( '인사_인사기본_기준일' )
					                      )
					 ORDER BY COLUMN_ORDER,COLUMN_ID


		</select>

		<update parameterType="map" id="saveEmpListColAttrMgr">

					MERGE INTO THRM503 T
					USING (
					       SELECT A.ENTER_CD
					            , A.GRP_CD
					            , A.COLUMN_NAME
					            , A.COLUMN_ID
					            , A.COLUMN_WIDTH
					            , A.COLUMN_TYPE
					            , A.COLUMN_FORMAT
					            , A.COLUMN_ORDER
					            , A.COLUMN_ALIGN
					         FROM (
					               SELECT NULL AS ENTER_CD
					                    , NULL AS GRP_CD
					                    , NULL AS COLUMN_NAME
					                    , NULL AS COLUMN_ID
					                    , NULL AS COLUMN_WIDTH
					                    , NULL AS COLUMN_TYPE
					                    , NULL AS COLUMN_FORMAT
					                    , NULL AS COLUMN_ORDER
					                    , NULL AS COLUMN_ALIGN
					                 FROM DUAL
					                UNION ALL
					               SELECT TRIM( #{ssnEnterCd} ) AS ENTER_CD
					                    , TRIM( #{grpCd} ) AS GRP_CD
					                    , TRIM( #{colName} ) AS COLUMN_NAME
					                    , TRIM( #{colId} ) AS COLUMN_ID
					                    , TRIM( #{colWidth} ) AS COLUMN_WIDTH
					                    , TRIM( #{colType} ) AS COLUMN_TYPE
					                    , TRIM( #{colFormat} ) AS COLUMN_FORMAT
					                    , TRIM( #{colOrder} ) AS COLUMN_ORDER
					                    , TRIM( #{colAlign} ) AS COLUMN_ALIGN
					                 FROM DUAL
					              ) A
					        WHERE A.ENTER_CD IS NOT NULL
					          AND A.GRP_CD IS NOT NULL
					          AND A.COLUMN_ID IS NOT NULL
					          AND A.COLUMN_NAME IS NOT NULL
					      ) S
					ON (
					              T.ENTER_CD = S.ENTER_CD
					          AND T.GRP_CD = S.GRP_CD
					          AND T.COLUMN_NAME = S.COLUMN_NAME
					          AND T.COLUMN_ID = S.COLUMN_ID
					   )
					WHEN MATCHED THEN
					      UPDATE
					         SET T.COLUMN_WIDTH  = S.COLUMN_WIDTH
					           , T.COLUMN_TYPE   = S.COLUMN_TYPE
					           , T.COLUMN_FORMAT = S.COLUMN_FORMAT
					           , T.COLUMN_ORDER  = S.COLUMN_ORDER
					           , T.COLUMN_ALIGN  = S.COLUMN_ALIGN
					           , T.CHKDATE       = SYSDATE
					           , T.CHKID         = #{ssnSabun}


		</update>

		<!-- 지정 권한그룹에서 사용하지 않는 인사_인사기본 View 컬럼 조회 -->
		<select parameterType="map" resultType="cMap" id="getEmpListNotUseColumnListByGrpCd">

				<![CDATA[
					SELECT A.COLUMN_ID AS COL_ID
					     , A.COLUMN_NAME AS COL_NAME
					  FROM USER_TAB_COLUMNS A
					 WHERE A.TABLE_NAME	= TRIM( '인사_인사기본_기준일' )
					   AND NOT EXISTS (SELECT 1
					                     FROM THRM503
					                    WHERE ENTER_CD = #{ssnEnterCd}
					                      AND GRP_CD = NVL(#{searchGrpCd}, #{ssnGrpCd})
					                      AND NVL(USE_YN, 'N') = 'Y'
					                      AND COLUMN_ID = A.COLUMN_ID
					                      AND COLUMN_NAME = A.COLUMN_NAME)
					 ORDER BY A.COLUMN_ID
				]]>


		</select>
		
		<!-- 인원명부항목관리 목록 조회 -->
		<select parameterType="map" resultType="cMap" id="getEmpListItemMgrList">

				<![CDATA[
					SELECT GRP_CD
					     , COLUMN_ID AS COL_ID
					     , COLUMN_NAME AS COL_NAME
					     , COLUMN_WIDTH AS COL_WIDTH
					     , COLUMN_TYPE AS COL_TYPE
					     , COLUMN_FORMAT AS COL_FORMAT
					     , COLUMN_ORDER AS COL_ORDER
					     , COLUMN_ALIGN AS COL_ALIGN
					  FROM THRM503
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					   AND NVL(USE_YN, 'N') = 'Y'
					   AND GRP_CD = NVL(#{searchGrpCd}, #{ssnGrpCd})
					   AND COLUMN_NAME IN ( SELECT A.COLUMN_NAME
					                          FROM USER_TAB_COLUMNS A
					                         WHERE A.TABLE_NAME	= TRIM( '인사_인사기본_기준일' )
					                      )
					 ORDER BY COLUMN_ORDER, COLUMN_ID
				]]>


		</select>

</mapper>