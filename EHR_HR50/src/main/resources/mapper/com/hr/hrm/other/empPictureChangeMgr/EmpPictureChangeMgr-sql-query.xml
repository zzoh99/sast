<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hrm.other.empPictureCahngeMgr">
		<select id="getEmpPictureChangeMgrList" parameterType="map" resultType="cMap">

					SELECT A.APPL_SEQ AS APPL_SEQ
					      ,A.APPL_YMD AS APPL_YMD       
					      ,A.SABUN AS SABUN
					      ,F_COM_GET_NAMES (A.ENTER_CD, A.SABUN) AS NAME
					      ,A.ORG_NM AS ORG_NM
					      ,A.APPL_TYPE AS APPL_TYPE
					      ,A.APPL_STATUS_CD AS APPL_STATUS_CD
					      ,A.APPL_STATUS_CD AS APPL_STATUS_CD_TMP
					      ,A.APPR_YMD AS APPR_YMD
					      ,(SELECT NAME
					          FROM THRM100
					         WHERE ENTER_CD = A.ENTER_CD
					           AND SABUN = A.APPR_SABUN) AS APPR_NAME
					      ,A.RETURN_MESSAGE AS RETURN_MESSAGE
					      ,A.ERROR_LOG AS ERROR_LOG
					      ,A.MEMO AS MEMO
					      ,C.FILE_SEQ
					      ,C.SEQ_NO
					      ,D.FILE_SEQ AS CUR_FILE_SEQ
					      ,D.SEQ_NO AS CUR_SEQ_NO
					  FROM THRM805 A
					     , THRM911_HIST C
					     , THRM911_HIST D
<if test='searchOrgCd != null and !searchOrgCd.equals("")'>
							, THRM151 B							
</if>
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.ENTER_CD = C.ENTER_CD(+)
					   AND A.SABUN = C.SABUN(+)
					   AND A.APPL_SEQ = C.APPL_SEQ(+)
					   AND C.AB_CD(+) = 'AFT'
					   AND A.ENTER_CD = D.ENTER_CD(+)
					   AND A.SABUN = D.SABUN(+)
					   AND A.APPL_SEQ = D.APPL_SEQ(+)
					   AND D.AB_CD(+) = 'BEF'
<if test='searchSabun != null and !searchSabun.equals("")'>
						AND A.SABUN LIKE '%'|| #{searchSabun} ||'%'
</if>

<if test='(searchFromApplYmd != null and !searchFromApplYmd.equals("")) or (searchToApplYmd != null and !searchToApplYmd.equals(""))'> 
						AND A.APPL_YMD BETWEEN NVL(REPLACE( #{searchFromApplYmd} ,'-',''),'19000101') AND NVL(REPLACE( #{searchToApplYmd} ,'-',''),'99991231')
</if>
				 					 
<if test='searchApplStatusCd != null and !searchApplStatusCd.equals("")'>
						AND A.APPL_STATUS_CD = #{searchApplStatusCd}
</if>
<if test='searchOrgCd != null and !searchOrgCd.equals("")'>
						AND A.ENTER_CD = B.ENTER_CD
						AND A.SABUN = B.SABUN
						AND A.APPL_YMD BETWEEN B.SDATE AND NVL(B.EDATE,'99991231')
						<choose>
						<when test='searchIncChldOrg != null and searchIncChldOrg.equals("Y")'>
						AND B.ORG_CD IN (
										SELECT #{searchOrgCd} FROM DUAL
										UNION ALL
										SELECT A.ORG_CD
										  FROM TORG105 A
										 WHERE 1=1
										 START WITH A.PRIOR_ORG_CD = #{searchOrgCd}
										   AND A.ENTER_CD = #{ssnEnterCd}
										   AND A.SDATE = #{searchOrgSdate}
										CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
										       AND PRIOR A.SDATE = A.SDATE
										       AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
										)
						</when>
						<otherwise>	         
						AND B.ORG_CD = #{searchOrgCd}
						</otherwise>
						</choose>
</if>
					ORDER BY A.APPL_SEQ DESC
	
			
			
		</select>
		
		<insert id="saveEmpPictureChangeMgr" parameterType="map">
			
				<![CDATA[
					
				]]>
			
			
		</insert>
		
		<delete id="deleteEmpPictureChangeMgr" parameterType="map">

					DELETE FROM THRM805
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND (ENTER_CD, APPL_SEQ) IN
					  		( (NULL, NULL)
							<foreach item="rm" collection="deleteRows" >
							 ,(#{ssnEnterCd}, #{rm.applSeq})
							</foreach>
					  		)
			
		</delete>
		<select id="deleteEmpPictureChangeEmp" parameterType="map" resultType="cMap">

					DELETE FROM THRM911_HIST
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND (ENTER_CD, SABUN, APPL_SEQ) IN
					  		( (NULL, NULL, NULL)
							<foreach item="rm" collection="deleteRows" >
							 ,(#{ssnEnterCd}, #{rm.sabun}, #{rm.applSeq})
							</foreach>
					  		)
			
		</select>
		<select id="getEmpPictureChangeSeq" parameterType="map" resultType="cMap">
			
				<![CDATA[
					SELECT NVL(MAX(APPL_SEQ), 0) + 1 AS APPL_SEQ
					  FROM THRM805 A
					 WHERE ENTER_CD = #{ssnEnterCd}
				]]>
			
		</select>
		
		<update id="insertEmpPictureChangeReq" parameterType="map" >
			 
					MERGE INTO THRM805 T
					USING (SELECT *
					         FROM (SELECT NULL AS ENTER_CD
					                     ,NULL AS APPL_SEQ
					                     ,NULL AS APPL_YMD
					                     ,NULL AS SABUN
					                     ,NULL AS NAME
					                     ,NULL AS ORG_NM
					                     ,NULL AS APPL_STATUS_CD
					                     ,NULL AS APPR_YMD
					                     ,NULL AS APPR_SABUN
					                     ,NULL AS RETURN_MESSAGE
					                     ,NULL AS ERROR_LOG
					                     ,NULL AS MEMO
					                 FROM DUAL
					               
<foreach item="rm" collection="mergeRows">					      
									UNION ALL         
					               SELECT #{ssnEnterCd} AS ENTER_CD
					                     ,TRIM(#{rm.applSeq}) AS APPL_SEQ
					                     ,TRIM(#{rm.applYmd}) AS APPL_YMD
					                     ,TRIM(#{rm.sabun}) AS SABUN
					                     ,(SELECT NAME FROM THRM100 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = TRIM(#{rm.sabun})) AS NAME
					                     ,F_COM_GET_ORG_NM2(#{ssnEnterCd}, #{rm.sabun}, #{rm.applYmd}) AS ORG_NM
					                     ,TRIM(#{rm.applStatusCd}) AS APPL_STATUS_CD
					                     ,TO_CHAR(SYSDATE,'YYYYMMDD') AS APPR_YMD
					                     ,#{ssnSabun} AS APPR_SABUN
					                     ,TRIM(#{rm.returnMessage}) AS RETURN_MESSAGE
					                     ,TRIM(#{rm.errorLog}) AS ERROR_LOG
					                     ,TRIM(#{rm.memo}) AS MEMO
					                 FROM DUAL
</foreach>					                 
					                 )
					        WHERE ENTER_CD IS NOT NULL ) S
					ON (T.ENTER_CD = S.ENTER_CD AND T.APPL_SEQ = S.APPL_SEQ)
					WHEN MATCHED THEN
					  UPDATE
					     SET T.APPL_STATUS_CD = S.APPL_STATUS_CD
					        ,T.APPR_YMD       = DECODE(S.APPL_STATUS_CD, '2',S.APPR_YMD,'')
					        ,T.APPR_SABUN     = S.APPR_SABUN
					        ,T.RETURN_MESSAGE = S.RETURN_MESSAGE
					        ,T.ERROR_LOG      = S.ERROR_LOG
					        ,T.MEMO           = S.MEMO
					        ,T.CHKID          = #{ssnSabun}
					        ,T.CHKDATE        = SYSDATE
					WHEN NOT MATCHED THEN
					  INSERT
					    (T.ENTER_CD
					    ,T.APPL_SEQ
					    ,T.APPL_YMD
					    ,T.SABUN
					    ,T.NAME
					    ,T.ORG_NM
					    ,T.APPL_STATUS_CD
					    
					    ,T.CHKID
					    ,T.CHKDATE)
					  VALUES
					    (S.ENTER_CD
					    ,S.APPL_SEQ
					    ,S.APPL_YMD
					    ,S.SABUN
					    ,S.NAME
					    ,S.ORG_NM
					    ,S.APPL_STATUS_CD
					    
					    ,#{ssnSabun}
					    ,SYSDATE)
			
		</update>
		
		<update id="insertEmpPictureChangeHist" parameterType="map">

					MERGE INTO THRM911_HIST T
					USING (SELECT *
					         FROM (      
					               SELECT NULL AS ENTER_CD
					               		,NULL AS APPL_SEQ
					               		,NULL AS SABUN
					                     ,NULL AS IMAGE_TYPE					                     				                     
					                     ,NULL AS FILENAME
					                     ,'' AS SIGN
					                     ,NULL AS FILE_SEQ
					                     ,NULL AS SEQ_NO
					                     ,NULL AS AB_CD
					                 FROM DUAL
<foreach item="rm" collection="mergeRows">
								UNION ALL
								SELECT #{ssnEnterCd} AS ENTER_CD
										,TRIM(#{rm.applSeq}) AS APPL_SEQ
					               		,TRIM(#{rm.sabun}) AS SABUN
					                     ,TRIM(#{rm.imageType}) AS IMAGE_TYPE
					                     ,TRIM(#{rm.filename}) AS FILENAME
					                     ,'' AS SIGN
					                     ,TRIM(#{rm.fileSeq}) AS FILE_SEQ
					                     ,TRIM(#{rm.seqNo}) AS SEQ_NO
					                     ,TRIM(#{rm.abCd}) AS AB_CD
					                 FROM DUAL
</foreach>
					                 )
					        WHERE ENTER_CD IS NOT NULL ) S
					ON (T.ENTER_CD = S.ENTER_CD AND T.APPL_SEQ = S.APPL_SEQ AND T.SABUN = S.SABUN AND T.AB_CD = S.AB_CD )
					WHEN MATCHED THEN
					  UPDATE
					     SET T.FILENAME = S.FILENAME
					        ,T.SIGN       = S.SIGN
					        ,T.FILE_SEQ = S.FILE_SEQ
					        ,T.SEQ_NO = S.SEQ_NO
					        ,T.CHKID          = #{ssnSabun}
					        ,T.CHKDATE        = SYSDATE
					WHEN NOT MATCHED THEN
					  INSERT
					    (T.ENTER_CD
					    ,T.APPL_SEQ
					    ,T.SABUN
					    ,T.IMAGE_TYPE
					    ,T.FILENAME
					    ,T.SIGN
					    ,T.FILE_SEQ
					    ,T.SEQ_NO
					    ,T.AB_CD
					    
					    ,T.CHKID
					    ,T.CHKDATE)
					  VALUES
					    (S.ENTER_CD
					    ,S.APPL_SEQ
					    ,S.SABUN
					    ,S.IMAGE_TYPE
					    ,S.FILENAME
					    ,S.SIGN
					    ,S.FILE_SEQ
					    ,S.SEQ_NO
					    ,S.AB_CD
					    
					    ,#{ssnSabun}
					    ,SYSDATE)
			
		</update>
		
		<update id="updateEmpPicture" parameterType="map">

					MERGE INTO THRM911 T
					USING (SELECT ENTER_CD, SABUN, IMAGE_TYPE, FILENAME, SEQ_NO, SIGN, MAX(FILE_SEQ) AS FILE_SEQ
					         FROM (
					               SELECT NULL AS ENTER_CD
					               		 ,NULL AS SABUN
					                     ,NULL AS IMAGE_TYPE
					                     ,NULL AS FILENAME
					                     ,NULL AS FILE_SEQ
					                     ,NULL AS SEQ_NO
					                     ,'' AS SIGN
					                 FROM DUAL
<foreach item="rm" collection="mergeRows">
								UNION ALL
								SELECT #{ssnEnterCd} AS ENTER_CD
					               		 ,TRIM(#{rm.sabun}) AS SABUN
					                     ,'1' AS IMAGE_TYPE
					                     ,TRIM(#{rm.newPictureFilename}) AS FILENAME
					                     ,TRIM(#{rm.fileSeq}) AS FILE_SEQ
					                     ,TRIM(#{rm.seqNo}) AS SEQ_NO
					                     ,'' AS SIGN
					                 FROM DUAL
</foreach>
					                 )
					        WHERE ENTER_CD IS NOT NULL
					        GROUP BY  ENTER_CD, SABUN, IMAGE_TYPE, FILENAME, SEQ_NO, SIGN
					        ) S
					ON (T.ENTER_CD = S.ENTER_CD AND T.SABUN = S.SABUN AND T.IMAGE_TYPE = S.IMAGE_TYPE)
					WHEN MATCHED THEN
					  UPDATE
					     SET T.FILENAME		= S.FILENAME
					        ,T.SIGN			= S.SIGN
					        ,T.FILE_SEQ			= S.FILE_SEQ
					        ,T.SEQ_NO			= S.SEQ_NO
					        ,T.CHKID          = #{ssnSabun}
					        ,T.CHKDATE        = SYSDATE
					WHEN NOT MATCHED THEN
					  INSERT
					    (T.ENTER_CD
					    ,T.SABUN
					    ,T.IMAGE_TYPE
					    ,T.FILENAME
					    ,T.SIGN
					    ,T.FILE_SEQ
					    ,T.SEQ_NO

					    ,T.CHKID
					    ,T.CHKDATE)
					  VALUES
					    (S.ENTER_CD
					    ,S.SABUN
					    ,S.IMAGE_TYPE
					    ,S.FILENAME
					    ,S.SIGN
					    ,S.FILE_SEQ
					    ,S.SEQ_NO

					    ,#{ssnSabun}
					    ,SYSDATE)

			
		</update>
		
		<select id="getEmpPictureChangeMgrBeforeTHRM911" parameterType="map" resultType="cMap">
			
				<![CDATA[
					SELECT A.ENTER_CD
					     , A.SABUN
					     , A.IMAGE_TYPE
					     , A.FILENAME
					     , A.SIGN
					     , A.CHKDATE
					     , A.CHKID
					     , A.FILE_SEQ
					     , A.SEQ_NO
                         , B.FILE_PATH
                         , B.S_FILE_NM
                      FROM THRM911 A
                         , (
                                 SELECT A.ENTER_CD
                                 , A.FILE_SEQ
                                 , A.FILE_PATH
                                 , B.SEQ_NO
                                 , B.S_FILE_NM
                                 , B.R_FILE_NM
                              FROM TSYS200 A
                                   INNER JOIN TSYS201 B
                                                   ON A.ENTER_CD = B.ENTER_CD
                                                  AND A.FILE_SEQ = B.FILE_SEQ
                             WHERE A.ENTER_CD = #{ssnEnterCd}
                           ) B
					 WHERE A.ENTER_CD = B.ENTER_CD(+)
                       AND A.FILE_SEQ = B.FILE_SEQ(+)
                       AND A.SEQ_NO   = B.SEQ_NO(+)
                       AND A.ENTER_CD = #{ssnEnterCd}
					   AND A.SABUN = #{sabun}
					   AND A.IMAGE_TYPE = '1'
				]]>
			
		</select>
		
		<select id="getEmpPictureChangeMgrDupChk" parameterType="map" resultType="cMap">
			
				<![CDATA[
				SELECT COUNT(*) AS CNT
				FROM ( 
						SELECT *
						FROM THRM805
						WHERE ENTER_CD = #{ssnEnterCd}
						  AND SABUN    = #{searchSabun}
						  AND APPL_STATUS_CD = '1'
					) 
				]]>
			
		</select>
</mapper>

