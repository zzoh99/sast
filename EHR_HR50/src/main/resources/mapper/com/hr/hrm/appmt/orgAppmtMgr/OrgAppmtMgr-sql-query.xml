<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.appmt.orgAppmtMgr">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getOrgAppmtMgrList">


					SELECT COL1, COL2, COL3, COL4, COL5, COL6 FROM ZTST002
					WHERE 1 = 1
					AND COL1 LIKE '%'||TRIM(#{col1})||'%'
					AND COL2 LIKE '%'||TRIM(#{col2})||'%'
					AND COL3 LIKE '%'||TRIM(#{col3})||'%'
					AND COL4 LIKE '%'||TRIM(#{col4})||'%'
				<if test='col5 != null and !col5.equals("")'>
					AND COL5 = TRIM(#{col5})
				</if>
				<if test='col6 != null and !col6.equals("")'>
					AND COL6 = TRIM(#{col6})
				</if>


		</select>

		<select parameterType="map" resultType="cMap" id="getOrgAppmtMgrMap">

				<![CDATA[
					SELECT COL1, COL2, COL3, COL4, COL5 FROM ZTST002
					WHERE 1 = 1
					AND ROWNUM = 1
				]]>


		</select>

<!-- 		저장 -->
		<update parameterType="map" id="saveOrgAppmtMgr">

					MERGE INTO ZTST002 T
					USING	(
							SELECT	  A.COL1
									, A.COL2
									, A.COL3
									, A.COL4
									, A.COL5
									, A.COL6
							FROM	(
									SELECT	  NULL		AS COL1
											, NULL		AS COL2
											, NULL		AS COL3
											, NULL		AS COL4
											, NULL		AS COL5
											, NULL		AS COL6
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											--증가가 되는 키인경우 키가 공백이면 들어온 값을 삽입
											<choose><when test='rm.col1 != null and !rm.col1.equals("")'>
												TRIM(#{rm.col1}) 			AS COL1
											--증가가 되는 키인경우 키가 공백이 아니면 증가된 값을 삽입
											</when><otherwise>
												TO_CHAR( (SELECT (NVL(MAX(TO_NUMBER(COL1)),0) + ${icnt}) FROM ZTST002) )	AS COL1
												--icnt 증가
												<bind name="icnt" value="icnt + 1" />
											</otherwise>
											</choose>

											, TRIM( #{rm.col2} )	AS COL2
											, TRIM( #{rm.col3} )	AS COL3
											, TRIM( #{rm.col4} )	AS COL4
											, TRIM( #{rm.col5} )	AS COL5
											, TRIM( #{rm.col6} )	AS COL6
											FROM   DUAL
</foreach>
									) A WHERE A.COL1 IS NOT NULL
							) S
					ON ( T.COL1		= S.COL1 )
					WHEN MATCHED THEN
						UPDATE SET	  T.COL2	= S.COL2
									, T.COL3	= S.COL3
									, T.COL4	= S.COL4
									, T.COL5	= S.COL5
									, T.COL6	= S.COL6
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.COL1
							, T.COL2
							, T.COL3
							, T.COL4
							, T.COL5
							, T.COL6
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.COL1
							, S.COL2
							, S.COL3
							, S.COL4
							, S.COL5
							, S.COL6
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
<!-- 		삭제 -->
		<delete parameterType="map" id="deleteOrgAppmtMgr">

					DELETE FROM ZTST002
					WHERE 	COL1 IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.col1 != null and !rm.col1.equals("")'>
											TRIM( #{rm.col1} )
										</if>
</foreach>
										)
		</delete>
<!-- 		생성 -->
		<insert parameterType="map" id="insertOrgAppmtMgr">

				<![CDATA[
						INSERT INTO MainMnMgrTable
						(
							  COL1
							, COL2
							, COL3
							, COL4
							, COL5
							, COL6
							, CHKDATE
							, CHKID
						)
						SELECT	  S.COL1
								, S.COL2
								, S.COL3
								, S.COL4
								, S.COL5
								, S.COL6
								, sysdate
								, #{ssnSabun}
						FROM (
								SELECT    NULL 	AS COL1
										, NULL 	AS COL2
										, NULL 	AS COL3
										, NULL 	AS COL4
										, NULL 	AS COL5
										, NULL 	AS COL6
								FROM   DUAL
								]]>
<bind name="icnt" value="1" />
<foreach item="rm" collection="insertRows" >
					UNION ALL
								SELECT	  TO_CHAR( (SELECT (NVL(MAX(TO_NUMBER( COL1 )),0) + ${icnt}) FROM ZTST002) )	AS COL1
										<bind name="icnt" value="icnt + 1" />
										, TRIM(#{rm.col2})	AS COL2
										, TRIM(#{rm.col3})	AS COL3
										, TRIM(#{rm.col4})	AS COL4
										, TRIM(#{rm.col5})	AS COL5
										, TRIM(#{rm.col6})	AS COL6
								FROM   DUAL
</foreach>
							) S
						WHERE S.COL1 IS NOT NULL
		</insert>
<!-- 		수정 -->
		<update parameterType="map" id="updateOrgAppmtMgr">

				<![CDATA[
					UPDATE ZTST002 T SET
					(	  COL1
						, COL2
						, COL3
						, COL4
						, CHKDATE
						, CHKID
						)
					=
					(	SELECT	  S.COL1
								, S.COL2
								, S.COL3
								, S.COL4
								, S.COL5
								, S.COL6
								, SYSDATE
								, #{ssnSabun}
						FROM (
							SELECT	  NULL 	AS COL1
									, NULL 	AS COL2
									, NULL 	AS COL3
									, NULL 	AS COL4
									, NULL 	AS COL5
									, NULL 	AS COL6
									FROM   DUAL
									]]>
<foreach item="rm" collection="updateRows" >
					UNION ALL
								SELECT
										  TRIM(#{rm.col1})	AS COL1
										, TRIM(#{rm.col2})	AS COL2
										, TRIM(#{rm.col3})	AS COL3
										, TRIM(#{rm.col4})	AS COL4
										, TRIM(#{rm.col5})	AS COL5
										, TRIM(#{rm.col6})	AS COL6
								FROM   DUAL
</foreach>
							) S
						WHERE S.COL1 IS NOT NULL
					)
					WHERE EXISTS (
									SELECT S.COL1
									FROM (
											SELECT	S.COL1
											FROM (
												SELECT	NULL 				AS COL1	FROM	DUAL
			<foreach item="rm" collection="updateRows" > UNION ALL		SELECT	TRIM(#{rm.col1})	AS COL1	FROM	DUAL  </foreach>
												) S
											WHERE S.COL1 IS NOT NULL
										)S
									WHERE T.COL1 = S.COL1
								)
		</update>

</mapper>