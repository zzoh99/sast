<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.psnalEtcMthUpload">

<!-- 기타사항업로드코드(지급율) 조회 -->
		<select parameterType="map" resultType="cMap" id="getPsnalEtcMthUploadCodeList">

				<![CDATA[
					SELECT	CODE
						,	CODE_NM
					FROM	TSYS005
					WHERE	ENTER_CD	=	#{ssnEnterCd}
					AND		GRCODE_CD	=	'H90199'
					AND		NOTE4		=	'Y' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
				]]>


		</select>

<!-- 기타사항업로드(지급율) 조회 -->
		<select parameterType="map" resultType="cMap" id="getPsnalEtcMthUploadList">

				<![CDATA[
				  SELECT A.SABUN
					      ,F_COM_GET_NAMES(B.ENTER_CD,B.SABUN) AS NAME
					      ,F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
                          ,A.DIV_CD
					      ,A.SDATE
					      ,A.EDATE
					      ,A.MTH
					      ,A.MEMO
					  FROM THRM199 A, THRM100 B
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.SABUN    = B.SABUN
					   AND A.DIV_CD IN ( SELECT CODE FROM TSYS005 WHERE ENTER_CD = #{ssnEnterCd} AND GRCODE_CD = 'H90199' AND NOTE4 = 'Y' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD )
					   AND A.ENTER_CD = #{ssnEnterCd}
]]>
					   <if test='searchDivCd != null and !searchDivCd.equals("")'>
					       AND A.DIV_CD = #{searchDivCd}
					   </if>
					   <if test='fromSdate != null and !fromSdate.equals("")'>
					       AND A.SDATE <![CDATA[ >= ]]>  REPLACE(#{fromSdate},'-','')
					   </if>
					   <if test='toSdate != null and !toSdate.equals("")'>
					       AND A.SDATE <![CDATA[ <= ]]> REPLACE(#{toSdate},'-','')
					   </if>
					   <if test='searchSaNm != null and !searchSaNm.equals("")'>
					       AND (B.SABUN = #{searchSaNm}  OR B.NAME LIKE '%' || #{searchSaNm} || '%')
					   </if>
					ORDER BY A.SABUN

		</select>

<!-- 기타사항업로드(지급율) 저장 -->
		<update parameterType="map" id="savePsnalEtcMthUpload">

				MERGE INTO THRM199 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.SABUN
									, A.DIV_CD
									, A.SDATE
									, A.EDATE
									, A.MTH
									, A.MEMO
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS SABUN
											, NULL		AS DIV_CD
											, NULL		AS SDATE
											, NULL		AS EDATE
											, NULL		AS MTH
											, NULL		AS MEMO
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT	#{ssnEnterCd}                 AS ENTER_CD
											, TRIM( #{rm.sabun} )	    AS SABUN
											, TRIM( #{rm.divCd} )	    AS DIV_CD
											, TRIM( #{rm.sdate} )	    AS SDATE
											, TRIM( #{rm.edate} )	    AS EDATE
											, TRIM( #{rm.mth} )	        AS MTH
											, TRIM( #{rm.memo} )	    AS MEMO
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.SABUN IS NOT NULL
										  AND A.DIV_CD IS NOT NULL
										  AND A.SDATE IS NOT NULL
							) S
					ON ( T.ENTER_CD		= S.ENTER_CD
					AND  T.SABUN        = S.SABUN
					AND  T.DIV_CD      	= S.DIV_CD
					AND  T.SDATE      	= S.SDATE
					 )
					WHEN MATCHED THEN
						UPDATE SET	  T.EDATE   = S.EDATE
									, T.MTH     = S.MTH
									, T.MEMO    = S.MEMO
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.SABUN
							, T.DIV_CD
							, T.SDATE
							, T.EDATE
							, T.MTH
							, T.MEMO
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.SABUN
							, S.DIV_CD
							, S.SDATE
							, S.EDATE
							, S.MTH
							, S.MEMO
							, SYSDATE
							, #{ssnSabun}
						)
		</update>

<!-- 기타사항업로드(지급율) 삭제 -->
		<delete parameterType="map" id="deletePsnalEtcMthUpload">

					DELETE FROM THRM199
					WHERE 	(ENTER_CD,SABUN,DIV_CD,SDATE) IN 	(  (NULL,NULL,NULL,NULL)
<foreach item="rm" collection="deleteRows" >
						,				(
										#{ssnEnterCd}
										<if test='rm.sabun != null and !rm.sabun.equals("")'>
											,TRIM( #{rm.sabun} )
										</if>
										<if test='rm.divCd != null and !rm.divCd.equals("")'>
											,TRIM( #{rm.divCd} )
										</if>
										<if test='rm.sdate != null and !rm.sdate.equals("")'>
											,TRIM( #{rm.sdate} )
										</if>
										)
</foreach>
										)
		</delete>

</mapper>