<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hrm.psnalInfo.psnalNojoUpload">
<!-- 노조관리 조회 -->
        <select id="getPsnalNojoUploadList" parameterType="map" resultType="cMap">


						SELECT A.ENTER_CD			-- 회사코드
						     , A.SABUN				-- 사번
						     , F_COM_GET_NAMES(C.ENTER_CD, C.SABUN) AS NAME
						     , F_COM_GET_ORG_NM2(A.ENTER_CD,A.SABUN,B.SDATE)	AS ORG_NM
						     , B.JIKCHAK_CD
						     , B.JIKWEE_CD
						     , B.JIKGUB_CD
						     , B.SAL_CLASS
						     , B.STATUS_CD
						     , B.MANAGE_CD
						     , C.SEX_TYPE
						     , C.GEMP_YMD
						     , C.EMP_YMD
						     , C.BASE3_CD
						     , A.NOJO_CD			-- 노조코드
						     , A.SDATE				-- 가입일
						     , A.EDATE				-- 탈퇴일
						     , A.NOJO_POSITION_CD	-- 노조신분코드
						     , A.NOJO_JIKCHAK_CD	-- 노조직책코드
						     , A.APPOINT_YMD		-- 임명일
						     , A.RETIRE_YMD			-- 퇴임일
						     , A.PAY_DEDUCT_YN		-- 노조비공제여부
						     , A.MEMO				-- 비고
						     , A.FILE_SEQ			-- 파일순서
						     <![CDATA[
                             , '/EmpPhotoOut.do'||chr(63)||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN || chr(38) || 'type=1' AS PHOTO
						]]>
						  FROM  THRM181 A 
						      , THRM151	B
						      , THRM100	C
-- 						      , TSYS005 D
-- 						      , TSYS005 E
						 WHERE A.ENTER_CD			=	B.ENTER_CD
						   AND A.SABUN				=	B.SABUN
						   AND A.ENTER_CD			=	C.ENTER_CD
						   AND A.SABUN				=	C.SABUN
						   AND A.ENTER_CD			=	#{ssnEnterCd}
-- 						   AND A.ENTER_CD			=	D.ENTER_CD(+)
-- 						   AND A.NOJO_JIKCHAK_CD	=	D.CODE(+)
-- 						   AND D.GRCODE_CD(+)		=	'H90011' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN D.S_YMD AND D.E_YMD
--
--                             AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN D.S_YMD AND D.E_YMD
-- 						   AND A.ENTER_CD			=	E.ENTER_CD(+)
-- 						   AND A.NOJO_POSITION_CD	=	E.CODE(+)
-- 						   AND E.GRCODE_CD(+)		=	'H90010' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN E.S_YMD AND E.E_YMD

--                             AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN E.S_YMD AND E.E_YMD
						   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')

                        <if test='searchOrgNm != null and !searchOrgNm.equals("")'>
							AND UPPER(F_COM_GET_ORG_NM2(A.ENTER_CD,A.SABUN,B.SDATE)) LIKE '%'||UPPER(#{searchOrgNm})||'%'
                        </if>
                        <if test='searchName != null and !searchName.equals("")'> 
							AND  ( F_COM_GET_NAMES(C.ENTER_CD, C.SABUN) LIKE '%'|| TRIM( #{searchName} ) ||'%' OR C.SABUN LIKE '%'|| TRIM( #{searchName} ) ||'%' )
                        </if>
                        <if test='searchJikchakCdHidden != null and !searchJikchakCdHidden.equals("")'>
							AND B.JIKCHAK_CD  IN
		<foreach collection="searchJikchakCdHidden" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='searchJikweeCdHidden != null and !searchJikweeCdHidden.equals("")'>
							AND B.JIKWEE_CD  IN
		<foreach collection="searchJikweeCdHidden" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='multiJikgubCd != null and !multiJikgubCd.equals("")'> 
							AND B.JIKGUB_CD  IN
		<foreach collection="multiJikgubCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='multiManageCd != null and !multiManageCd.equals("")'>
							AND B.MANAGE_CD  IN <foreach collection="multiManageCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='multiStatusCd != null and !multiStatusCd.equals("")'>
							AND B.STATUS_CD IN <foreach collection="multiStatusCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='multiNojoCd != null and !multiNojoCd.equals("")'>
							AND A.NOJO_CD IN
		<foreach collection="multiNojoCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='multiNojoPositionCd != null and !multiNojoPositionCd.equals("")'>
							AND A.NOJO_POSITION_CD IN
		<foreach collection="multiNojoPositionCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='multiNojoJikchakCd != null and !multiNojoJikchakCd.equals("")'>
							AND  A.NOJO_JIKCHAK_CD  IN
		<foreach collection="multiNojoJikchakCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
                        </if>
                        <if test='searchFromSdate != null and !searchFromSdate.equals("")'>
                                <![CDATA[	AND A.SDATE   >= REPLACE(#{searchFromSdate}, '-', '') ]]>
                        </if>
                        <if test='searchToSdate != null and !searchToSdate.equals("")'>
                                <![CDATA[	AND A.SDATE  <= REPLACE(#{searchToSdate}, '-', '') ]]>
                        </if>
                        <if test='searchFromEdate != null and !searchFromEdate.equals("")'>
                                <![CDATA[	AND A.EDATE  >= REPLACE(#{searchFromEdate}, '-', '') ]]>
                        </if>
                        <if test='searchToEdate != null and !searchToEdate.equals("")'>
                                <![CDATA[	AND A.EDATE  <= REPLACE(#{searchToEdate}, '-', '') ]]>
                        </if>
                        <if test='searchPayDeductYn != null and !searchPayDeductYn.equals("")'>
							AND  A.PAY_DEDUCT_YN  = #{searchPayDeductYn}
                        </if>
                        <if test='searchNojoYn != null and !searchNojoYn.equals("")'>
                                <if test='searchNojoYn.equals("Y")'>
								AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
                                </if>
                                <if test='searchNojoYn.equals("N")'>
								<![CDATA[ AND NVL(A.EDATE,'99991231') <= TO_CHAR(SYSDATE, 'YYYYMMDD') ]]>
                                </if>
                        </if>
-- 						ORDER BY NOJO_CD, D.SEQ DESC, E.SEQ DESC, F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, A.SDATE), A.SDATE
                        ORDER BY NOJO_CD, F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, A.SDATE), A.SDATE


        </select>

<!-- 노조관리 저장 -->
        <update id="savePsnalNojoUpload" parameterType="map">

                    MERGE INTO THRM181 T
                    USING   (
                            SELECT   A.ENTER_CD
                                    ,A.SABUN
                                    ,A.SDATE
                                    ,A.EDATE
                                    ,A.NOJO_CD
                                    ,A.NOJO_JIKCHAK_CD
                                    ,A.APPOINT_YMD
                                    ,A.FILE_SEQ
                                    ,A.MEMO
                                    ,A.PAY_DEDUCT_YN
                                    ,A.NOJO_POSITION_CD
                            FROM    (
                                    SELECT    NULL      AS ENTER_CD
                                            , NULL      AS SABUN
                                            , NULL      AS SDATE
                                            , NULL      AS EDATE
                                            , NULL      AS NOJO_CD
                                            , NULL      AS NOJO_JIKCHAK_CD
                                            , NULL      AS APPOINT_YMD
                                            , NULL      AS FILE_SEQ
                                            , NULL      AS MEMO
                                            , NULL      AS PAY_DEDUCT_YN
                                            , NULL      AS NOJO_POSITION_CD
                                    FROM    DUAL
<foreach collection="mergeRows" item="rm" >
                            UNION ALL
                                    SELECT
                                            #{ssnEnterCd}                     AS ENTER_CD
                                            , TRIM( #{rm.sabun} )           AS SABUN
                                            , TRIM( #{rm.sdate} )           AS SDATE
                                            , TRIM( #{rm.edate} )           AS EDATE
                                            , TRIM( #{rm.nojoCd} )          AS NOJO_CD
                                            , TRIM( #{rm.nojoJikchakCd} )   AS NOJO_JIKCHAK_CD
                                            , TRIM( #{rm.appointYmd} )      AS APPOINT_YMD
                                            , TRIM( #{rm.fileSeq} )         AS FILE_SEQ
                                            , TRIM( #{rm.memo} )            AS MEMO
                                            , TRIM( #{rm.payDeductYn} )     AS PAY_DEDUCT_YN
                                            , TRIM( #{rm.nojoPositionCd} )  AS NOJO_POSITION_CD
                                            FROM   DUAL
</foreach>
                                    ) A WHERE A.ENTER_CD IS NOT NULL
                            ) S
                    ON ( T.ENTER_CD     = S.ENTER_CD
                    AND  T.SABUN        = S.SABUN
                    AND  T.SDATE        = S.SDATE
                     )
                    WHEN MATCHED THEN
                        UPDATE SET    T.EDATE           = S.EDATE
                                    , T.NOJO_JIKCHAK_CD = S.NOJO_JIKCHAK_CD
                                    , T.APPOINT_YMD     = S.APPOINT_YMD
                                    , T.FILE_SEQ        = S.FILE_SEQ
                                    , T.MEMO            = S.MEMO
                                    , T.PAY_DEDUCT_YN   = S.PAY_DEDUCT_YN
                                    , T.NOJO_POSITION_CD   = S.NOJO_POSITION_CD
                                    , T.NOJO_CD         = S.NOJO_CD
                                    , T.CHKDATE         = SYSDATE
                                    , T.CHKID           = #{ssnSabun}
                    WHEN NOT MATCHED THEN
                        INSERT
                        (
                              T.ENTER_CD
                            , T.SABUN
                            , T.SDATE
                            , T.EDATE
                            , T.NOJO_CD
                            , T.NOJO_JIKCHAK_CD
                            , T.APPOINT_YMD
                            , T.FILE_SEQ
                            , T.MEMO
                            , T.PAY_DEDUCT_YN
                            , T.NOJO_POSITION_CD
                            , T.CHKDATE
                            , T.CHKID
                        )
                        VALUES
                        (
                              S.ENTER_CD
                            , S.SABUN
                            , S.SDATE
                            , S.EDATE
                            , S.NOJO_CD
                            , S.NOJO_JIKCHAK_CD
                            , S.APPOINT_YMD
                            , S.FILE_SEQ
                            , S.MEMO
                            , S.PAY_DEDUCT_YN
                            , S.NOJO_POSITION_CD
                            , SYSDATE
                            , #{ssnSabun}
                        )



        </update>
<!-- 노조관리 삭제 -->
        <delete id="deletePsnalNojoUpload" parameterType="map">

                    DELETE FROM THRM181
                    WHERE   (ENTER_CD,SABUN,SDATE) IN   (  (NULL,NULL,NULL)
<foreach collection="deleteRows" item="rm" >
                                        , (
                                        #{ssnEnterCd}
                                        <if test='rm.sabun != null and !rm.sabun.equals("")' >
                                        ,TRIM( #{rm.sabun} )
                                        </if>
                                        <if test='rm.sdate != null and !rm.sdate.equals("")' >
                                        ,TRIM( #{rm.sdate} )
                                        </if>
                                        )
</foreach>
                                        )

        </delete>
    </mapper>