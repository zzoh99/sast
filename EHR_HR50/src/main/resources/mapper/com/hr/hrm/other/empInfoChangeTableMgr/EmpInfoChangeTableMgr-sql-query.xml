<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="hrm.other.empInfoChangeTableMgr">
	
	<select id="getEmpInfoChangeTableMgrList" parameterType="map" resultType="cMap">
		<![CDATA[ SELECT ]]>
		<choose>
			<when test="searchCodeNm != null and searchCodeNm != ''">
			 			  A.EMP_TABLE AS CODE
						, A.EMP_TABLE_NM AS CODE_NM
			</when>
			<otherwise>
						  A.ENTER_CD
					    , A.EMP_TABLE
					    , A.EMP_TABLE_NM
					    , A.PRG_CD
					    , A.TRANS_TYPE
					    , A.MULTIROW_YN
					    , A.USE_YN
					    , A.DISPLAY_YN
					    , A.SEQ
					    , A.NOTE
			</otherwise>
		</choose>
		<![CDATA[
					  FROM THRM800 A
					  WHERE ENTER_CD = #{ssnEnterCd} ]]>
		<if test="searchUseYn != null and searchUseYn neq ''">
		<![CDATA[
						AND A.USE_YN = #{searchUseYn}
		]]>
		</if>
		<if test="searchDisplayYn != null and searchDisplayYn neq ''">
		<![CDATA[
						AND A.DISPLAY_YN = #{searchDisplayYn}
		]]>
		</if>
		<if test="searchEmpTable != null and searchEmpTable neq ''">
		<![CDATA[
						AND ( A.EMP_TABLE LIKE '%'|| UPPER(#{searchEmpTable}) ||'%' OR A.EMP_TABLE_NM LIKE '%'|| UPPER(#{searchEmpTable}) ||'%')		
		]]>
		</if>
		<if test="searchPrgCd != null and searchPrgCd neq ''">
		<![CDATA[
						AND UPPER(A.PRG_CD) LIKE '%' || UPPER(#{searchPrgCd}) || '%'
		]]>
		</if>
		<![CDATA[	  ORDER BY A.SEQ  ]]>
	</select>
	
	<select id="getEmpInfoChangeTableMgrCodeList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT AA.CODE
	             , AA.CODE_NM
	             , AA.SEQ
              FROM (
                    SELECT  A.SEQ
                          , A.EMP_TABLE AS CODE
                          , A.EMP_TABLE_NM AS CODE_NM
                      FROM THRM800 A
                     WHERE ENTER_CD = #{ssnEnterCd}
                     UNION ALL
                    SELECT 0 AS SEQ
                          , 'ALL' AS CODE
                          , '전체' AS CODE_NM
                      FROM DUAL A
              ) AA
            ORDER BY AA.SEQ 
        ]]>
	</select>
	
	<update id="saveEmpInfoChangeTableMgr" parameterType="map">
		<![CDATA[
			MERGE INTO THRM800 T
			USING (SELECT *
			         FROM (SELECT NULL AS ENTER_CD
			                     ,NULL AS EMP_TABLE
			                     ,NULL AS EMP_TABLE_NM
			                     ,NULL AS PRG_CD
			                     ,NULL AS TRANS_TYPE
			                     ,NULL AS MULTIROW_YN
			                     ,NULL AS USE_YN
			                     ,NULL AS DISPLAY_YN
			                     ,NULL AS SEQ
			                     ,NULL AS NOTE
			                 FROM DUAL ]]>
		<foreach item="rm" collection="mergeRows">
			UNION ALL
               SELECT #{ssnEnterCd} AS ENTER_CD
                     ,UPPER(TRIM(#{rm.empTable})) AS EMP_TABLE
                     ,TRIM(#{rm.empTableNm}) AS EMP_TABLE_NM
                     ,TRIM(#{rm.prgCd}) AS PRG_CD
                     ,TRIM(#{rm.transType}) AS TRANS_TYPE
                     ,TRIM(#{rm.multirowYn}) AS MULTIROW_YN
                     ,TRIM(#{rm.useYn}) AS USE_YN
                     ,TRIM(#{rm.displayYn}) AS DISPLAY_YN
                     ,TRIM(#{rm.seq}) AS SEQ
                     ,TRIM(#{rm.note}) AS NOTE
                 FROM DUAL
		</foreach>
		<![CDATA[
			               )
			        WHERE ENTER_CD IS NOT NULL) S
			ON (T.ENTER_CD = S.ENTER_CD AND T.EMP_TABLE = S.EMP_TABLE)
			WHEN MATCHED THEN
			  UPDATE
			     SET T.EMP_TABLE_NM = S.EMP_TABLE_NM
			        ,T.PRG_CD       = S.PRG_CD
			        ,T.TRANS_TYPE   = S.TRANS_TYPE
			        ,T.MULTIROW_YN	= S.MULTIROW_YN
			        ,T.USE_YN       = S.USE_YN
			        ,T.DISPLAY_YN   = S.DISPLAY_YN
			        ,T.SEQ          = S.SEQ
			        ,T.NOTE         = S.NOTE
			        ,T.CHKDATE      = SYSDATE
			        ,T.CHKID        = #{ssnSabun}
			WHEN NOT MATCHED THEN
			  INSERT
			    (T.ENTER_CD
			    ,T.EMP_TABLE
			    ,T.EMP_TABLE_NM
			    ,T.PRG_CD
			    ,T.TRANS_TYPE
			    ,T.MULTIROW_YN
			    ,T.USE_YN
			    ,T.DISPLAY_YN
			    ,T.SEQ
			    ,T.NOTE
			    ,T.CHKDATE
			    ,T.CHKID)
			  VALUES
			    (S.ENTER_CD
			    ,S.EMP_TABLE
			    ,S.EMP_TABLE_NM
			    ,S.PRG_CD
			    ,S.TRANS_TYPE
			    ,S.MULTIROW_YN
			    ,S.USE_YN
			    ,S.DISPLAY_YN
			    ,S.SEQ
			    ,S.NOTE
			    ,SYSDATE
			    ,#{ssnSabun})
		]]>
	</update>
	
	<delete id="deleteEmpInfoChangeTableMgr" parameterType="map">
		<![CDATA[
			DELETE FROM THRM800
			WHERE ENTER_CD = #{ssnEnterCd}
			  AND EMP_TABLE IN ]]>
		<foreach collection="deleteRows" item="rm" open="(" close=")" separator=",">
		<![CDATA[
			#{rm.empTable}
		]]>
		</foreach>
	</delete>
	
</mapper>