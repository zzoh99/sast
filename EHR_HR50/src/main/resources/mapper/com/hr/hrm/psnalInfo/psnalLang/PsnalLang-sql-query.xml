<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hrm.psnalInfo.psnalLang">

<!-- 인사기본(어학) 외국어시험 조회 -->
		<select id="getPsnalLangForeignList" parameterType="map" resultType="cMap">

				<![CDATA[
					SELECT	A.ENTER_CD
					, 		A.SABUN
					, 		A.SEQ
					, 		A.FOREIGN_CD
					, 		F_TEST_CD
					,		F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20307', A.F_TEST_CD) AS FOREIGN_NM
					, 		A.APPLY_YMD
					, 		A.TEST_POINT
					, 		A.PASS_SCORES
					, 		F_COM_GET_GRCODE_NOTE_VAL(A.ENTER_CD,'H20307',A.F_TEST_CD,'2') 			AS FULL_SCORES
--					, 		F_COM_GET_GRCODE_NOTE_VAL(A.ENTER_CD,'H20307',A.F_TEST_CD,'3') 			AS F_TEST_ORG_NM
					, 		A.OFFICE_NM AS F_TEST_ORG_NM
					, 		A.FILE_SEQ
					,		A.STA_YMD
					,		A.END_YMD
					FROM 	THRM125 A
					WHERE	A.ENTER_CD = NVL( #{searchUserEnterCd}, #{ssnEnterCd} )
					AND 	A.SABUN    = #{sabun}
				 ORDER BY 	A.APPLY_YMD DESC
				]]>


		</select>

<!-- 점수에 대한 어학등급 조회 -->
		<select id="getForeignGradeNm" parameterType="map" resultType="cMap">

				<![CDATA[
					SELECT F_COM_GET_FOREIEN_GRADE_NM( #{ssnEnterCd} , #{searchFTestCd}, #{searchPassScores} ) AS TEST_POINT
					FROM DUAL
				]]>


		</select>

<!-- 인사기본(어학) 글고벌코디네이터 조회 -->
		<select id="getPsnalLangGlobalList" parameterType="map" resultType="cMap">

				<![CDATA[
					SELECT A.ENTER_CD
					     , A.SABUN
					     , A.SEQ
					     , A.GET_YMD
					     , A.SDATE
					     , A.EDATE
					     , A.FOREIGN_CD
					     , A.SCORE
					     , A.GRADE
					     , A.FILE_SEQ
					  FROM THRM131 A
					 WHERE A.ENTER_CD = NVL( #{searchUserEnterCd}, #{ssnEnterCd} )
					   AND A.SABUN = #{sabun}
					 ORDER BY A.SDATE DESC
				]]>


		</select>

<!-- 인사기본(어학) 외국어시험 저장 -->
		<update id="savePsnalLangForeign" parameterType="map">

					MERGE INTO THRM125 T
					USING	(
							SELECT	A.ENTER_CD
							, 		A.SABUN
							, 		A.SEQ
							, 		A.FOREIGN_CD
							, 		A.F_TEST_CD
							, 		A.APPLY_YMD
							, 		A.TEST_POINT
							, 		A.PASS_SCORES
							, 		A.OFFICE_NM
							, 		A.FILE_SEQ
							,		A.STA_YMD
							,		A.END_YMD
							FROM	(
									SELECT	NULL AS ENTER_CD
									, 		NULL AS SABUN
									, 		NULL AS SEQ
									, 		NULL AS FOREIGN_CD
									, 		NULL AS F_TEST_CD
									, 		NULL AS APPLY_YMD
									, 		NULL AS TEST_POINT
									, 		NULL AS PASS_SCORES
									, 		NULL AS OFFICE_NM
									, 		NULL AS FILE_SEQ
									,		NULL AS STA_YMD
									,		NULL AS END_YMD
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach collection="mergeRows" item="rm" >
							UNION ALL
									SELECT	TRIM( #{ssnEnterCd} )		AS ENTER_CD
									, 		TRIM( #{rm.sabun} )			AS SABUN
									<choose>
									<when test='rm.seq != null and !rm.seq.equals("")' >
									, 		TRIM(#{rm.seq}) 			AS SEQ
									</when>
										<otherwise>
									, 		TO_CHAR( (
												SELECT	(NVL(MAX(TO_NUMBER(SEQ)),0) + ${icnt})
												FROM 	THRM125
												WHERE 	ENTER_CD = TRIM( #{ssnEnterCd} )
												AND 	SABUN    = TRIM( #{rm.sabun} )
											) )							AS SEQ
									<bind name="icnt" value="icnt+1" />
										</otherwise>
									</choose>
									, 		TRIM( #{rm.foreignCd} )		AS FOREIGN_CD
									, 		TRIM( #{rm.fTestCd} )		AS F_TEST_CD
									, 		TRIM( #{rm.applyYmd} )		AS APPLY_YMD
									, 		TRIM( #{rm.testPoint} )		AS TEST_POINT
									, 		TRIM( #{rm.passScores} )	AS PASS_SCORES
									, 		TRIM( #{rm.fTestOrgNm} )	AS OFFICE_NM
									, 		TRIM( #{rm.fileSeq} )	    AS FILE_SEQ
									, 		TRIM( #{rm.staYmd} )	    AS STA_YMD
									, 		TRIM( #{rm.endYmd} )	    AS END_YMD
									FROM	DUAL
</foreach>
									) A
									WHERE 	A.ENTER_CD IS NOT NULL
									AND 	A.SABUN IS NOT NULL
									AND 	A.SEQ IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.SABUN = S.SABUN AND T.SEQ = S.SEQ)
					WHEN MATCHED THEN
						UPDATE SET	T.FOREIGN_CD 	= S.FOREIGN_CD
						, 			T.F_TEST_CD  	= S.F_TEST_CD
						, 			T.APPLY_YMD  	= S.APPLY_YMD
						, 			T.TEST_POINT 	= S.TEST_POINT
						, 			T.PASS_SCORES	= S.PASS_SCORES
						, 			T.OFFICE_NM		= S.OFFICE_NM
						, 			T.FILE_SEQ		= S.FILE_SEQ
						,			T.STA_YMD		= S.STA_YMD
						,			T.END_YMD		= S.END_YMD
						, 			T.CHKDATE		= SYSDATE
						, 			T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.SABUN
							, T.SEQ
							, T.FOREIGN_CD
							, T.F_TEST_CD
							, T.APPLY_YMD
							, T.TEST_POINT
							, T.PASS_SCORES
							, T.OFFICE_NM
							, T.FILE_SEQ
							, T.STA_YMD
							, T.END_YMD
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.SABUN
							, S.SEQ
							, S.FOREIGN_CD
							, S.F_TEST_CD
							, S.APPLY_YMD
							, S.TEST_POINT
							, S.PASS_SCORES
							, S.OFFICE_NM
							, S.FILE_SEQ
							, S.STA_YMD
							, S.END_YMD
							, SYSDATE
							, #{ssnSabun}
						)


		</update>

<!-- 인사기본(어학) 글고벌코디네이터 저장 -->
		<update id="savePsnalLangGlobal" parameterType="map">

					MERGE INTO THRM131 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.SABUN
									, A.SEQ
									, A.GET_YMD
									, A.SDATE
									, A.EDATE
									, A.FOREIGN_CD
									, A.SCORE
									, A.GRADE
									, A.FILE_SEQ
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS SABUN
											, NULL		AS SEQ
											, NULL		AS GET_YMD
											, NULL		AS SDATE
											, NULL		AS EDATE
											, NULL		AS FOREIGN_CD
											, NULL		AS SCORE
											, NULL		AS GRADE
											, NULL		AS FILE_SEQ
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach collection="mergeRows" item="rm" >
							UNION ALL
									SELECT	TRIM( #{ssnEnterCd} )		AS ENTER_CD
											, TRIM( #{rm.sabun} )		AS SABUN
									     <choose>
											<when test='rm.seq != null and !rm.seq.equals("")' >
											, TRIM(#{rm.seq}) 			AS SEQ
											</when>
										<otherwise>
											, TO_CHAR( (
															SELECT (NVL(MAX(TO_NUMBER(SEQ)),0) + ${icnt})
															  FROM THRM131
															 WHERE ENTER_CD = TRIM( #{ssnEnterCd} )
															   AND SABUN = TRIM( #{rm.sabun} )
														) )	AS SEQ
												<bind name="icnt" value="icnt+1"/>
										</otherwise>
									</choose>
											, TRIM( #{rm.getYmd} )		AS GET_YMD
											, TRIM( #{rm.sdate} )		AS SDATE
											, TRIM( #{rm.edate} )		AS EDATE
											, TRIM( #{rm.foreignCd} )	AS FOREIGN_CD
											, TRIM( #{rm.score} )		AS SCORE
											, TRIM( #{rm.grade} )		AS GRADE
											, TRIM( #{rm.fileSeq} )		AS FILE_SEQ
											FROM   DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.SABUN IS NOT NULL
										  AND A.SEQ IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.SABUN = S.SABUN AND T.SEQ = S.SEQ)
					WHEN MATCHED THEN
						UPDATE SET	  T.GET_YMD     = S.GET_YMD
									, T.SDATE       = S.SDATE
									, T.EDATE       = S.EDATE
									, T.FOREIGN_CD  = S.FOREIGN_CD
									, T.SCORE       = S.SCORE
									, T.GRADE       = S.GRADE
									, T.FILE_SEQ    = S.FILE_SEQ
									, T.CHKDATE		= SYSDATE
									, T.CHKID		= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.SABUN
							, T.SEQ
							, T.GET_YMD
							, T.SDATE
							, T.EDATE
							, T.FOREIGN_CD
							, T.SCORE
							, T.GRADE
							, T.FILE_SEQ
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.SABUN
							, S.SEQ
							, S.GET_YMD
							, S.SDATE
							, S.EDATE
							, S.FOREIGN_CD
							, S.SCORE
							, S.GRADE
							, S.FILE_SEQ
							, SYSDATE
							, #{ssnSabun}
						)


		</update>

<!-- 인사기본(어학) 외국어시험 삭제 -->
		<delete id="deletePsnalLangForeign" parameterType="map">

					DELETE FROM THRM125
					WHERE  ENTER_CD||'_'||SABUN||'_'||SEQ IN 	(  NULL
<foreach collection="deleteRows" item="rm" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
											and rm.sabun != null and !rm.sabun.equals("")
											and rm.seq != null and !rm.seq.equals("")' >

											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.sabun} )||'_'||TRIM( #{rm.seq} )
										</if>
</foreach>
										)



		</delete>

<!-- 인사기본(어학) 글고벌코디네이터 삭제 -->
		<delete id="deletePsnalLangGlobal" parameterType="map">

					DELETE FROM THRM131
					WHERE  ENTER_CD||'_'||SABUN||'_'||SEQ IN 	(  NULL
<foreach collection="deleteRows" item="rm" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
											and rm.sabun != null and !rm.sabun.equals("")
											and rm.seq != null and !rm.seq.equals("")' >

											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.sabun} )||'_'||TRIM( #{rm.seq} )
										</if>
</foreach>
										)



		</delete>

	</mapper>