<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.retire.retireCheckListMgr">

<!-- 퇴직처리담당자관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getRetireCheckListMgrList">

				<![CDATA[
					SELECT
						0 AS DETAIL,
					      A.ENTER_CD,
					      A.SABUN,   
					      F_COM_GET_ORG_NM(A.ENTER_CD, F_COM_GET_ORG_CD(A.ENTER_CD, A.SABUN, A.RDATE), A.RDATE) AS ORG_NM,
					      F_COM_GET_JIKWEE_NM(A.ENTER_CD,A.SABUN,A.RDATE) AS JIKWEE_NM,
					      F_COM_GET_NAMES(A.ENTER_CD,A.SABUN) AS NAME,
					      A.RDATE,
					      A.APPL_SEQ,
					      B.APPL_CD,
					      B.APPL_STATUS_CD,
					      B.APPL_SABUN,
					      B.APPL_IN_SABUN,
					      B.APPL_YMD,
					      A.GUBUN
					FROM THRM557 A
					    ,THRI103 B
					WHERE A.ENTER_CD = B.ENTER_CD
					  AND A.APPL_SEQ = B.APPL_SEQ
					  AND A.ENTER_CD = #{ssnEnterCd}
					          ]]>
<if test='searchFrom != null and !searchFrom.equals("") and searchTo != null and !searchTo.equals("")'>
					  AND B.APPL_YMD BETWEEN #{searchFrom} AND #{searchTo}
</if>
<if test='searchNm != null and !searchNm.equals("") '>
					  AND F_COM_GET_NAMES(A.ENTER_CD,A.SABUN) LIKE  '%' || #{searchNm} || '%'
</if>
				    GROUP BY A.ENTER_CD,A.SABUN, A.GUBUN, A.RDATE,A.APPL_SEQ,B.APPL_CD,B.APPL_STATUS_CD,B.APPL_SABUN,B.APPL_IN_SABUN,B.APPL_YMD
					ORDER BY A.RDATE
		</select>

<!-- 퇴직처리담당자관리 저장 -->
		<update parameterType="map" id="saveRetireCheckListMgr">

					MERGE INTO THRM557 T
					USING	(
							SELECT A.ENTER_CD
								 , A.SEQ
							 	 , A.APPL_SEQ
								 , A.CHK_SABUN
								 , A.CHK_RESULT
								 , A.RMK
								 , A.CHKDATE
								 , A.CHKID
							FROM	(
									SELECT NULL AS ENTER_CD   
										 , NULL AS SEQ        
										 , NULL AS APPL_SEQ   
										 , NULL AS CHK_SABUN  
										 , NULL AS CHK_RESULT 
										 , NULL AS RMK        
										 , NULL AS CHKDATE     
										 , NULL AS CHKID      

									FROM DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT TRIM( #{ssnEnterCd} )		AS  ENTER_CD
										 , TRIM(#{rm.seq}) 			AS 	SEQ
										 , TRIM( #{rm.applSeq} )	AS  APPL_SEQ
										 , TRIM( #{rm.chkSabun})	AS  CHK_SABUN
										 , TRIM( #{rm.chkResult}) 	AS  CHK_RESULT
										 , TRIM( #{rm.rmk}) 		AS  RMK
										 , SYSDATE					AS  CHKDATE
										 , #{ssnSabun}				AS  CHKID
									  FROM DUAL
</foreach>

									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.APPL_SEQ IS NOT NULL
										  AND A.SEQ IS NOT NULL
							) S
					ON ( 
							T.ENTER_CD	= S.ENTER_CD 
					 	AND T.APPL_SEQ = S.APPL_SEQ  
					 	AND T.CHK_SABUN = S.CHK_SABUN
					 	AND T.SEQ = S.SEQ
					 	)
					WHEN MATCHED THEN
						UPDATE SET	 
						    T.CHK_RESULT       = S.CHK_RESULT       
							,T.RMK             = S.RMK            
							,T.CHKDATE         = S.CHKDATE        
						    ,T.CHKID           = S.CHKID          
 
		</update>

<!-- 퇴직처리담당자관리 삭제 -->
		<delete parameterType="map" id="deleteRetireCheckListMgr">

					DELETE FROM THRM557
					 WHERE ENTER_CD||'_'||APPL_SEQ IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("") and rm.applSeq != null and !rm.applSeq.equals("")'>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.applSeq} )
										</if>
</foreach>
										)
		</delete>
		
		
		
<!-- 체크리스트 생성 프로시저 -->
		<update parameterType="map" id="prcPHrmRetireCheckList" statementType="CALLABLE">
		<![CDATA[
			{CALL P_HRM_RETIRE_CHECK_LIST(
				#{sqlcode,mode=OUT,jdbcType=VARCHAR},
				#{sqlerrm,mode=OUT,jdbcType=VARCHAR},
				#{ssnEnterCd,mode=IN,jdbcType=VARCHAR},
				#{applSeq,mode=IN,jdbcType=VARCHAR},
				#{retirdDt,mode=IN,jdbcType=VARCHAR},
				#{gubun,mode=IN,jdbcType=VARCHAR},
				#{sabun,mode=IN,jdbcType=VARCHAR})}
		]]>
		</update>

       <select parameterType="map" resultType="cMap" id="getRetireCheckListAppDet">

				<![CDATA[
					SELECT A.ENTER_CD
						  ,A.APPL_SEQ
						  ,A.SABUN
						  ,A.SEQ
						  ,A.CHK_ITEM
						  ,A.CHK_JIKWEE
						  ,A.CHK_ORGNM
						  ,A.CHK_SABUN
						  ,F_COM_GET_NAMES(A.ENTER_CD , A.CHK_SABUN) AS CHK_NAME
						  ,A.CHK_RESULT
						  ,A.GUBUN
						  ,DECODE(A.GUBUN, '10','희망퇴직일', '20','희망퇴직일', NULL) AS GUBUN_NM
						  ,A.RDATE
						  ,A.RET_APPL_SEQ
						  ,A.ORDER_SEQ
						  ,A.RMK
						  ,DECODE(A.CHK_RESULT,'10',TO_CHAR(A.CHKDATE,'YYYY-MM-DD HH24:mm:SS'),'') AS CHK_TM
						  ,A.CHKDATE
						  ,A.CHKID
						  ,B.APPL_IN_SABUN
						  ,B.APPL_SABUN
						  ,B.APPL_STATUS_CD
					 FROM THRM557 A , THRI103 B
					WHERE A.ENTER_CD = B.ENTER_CD
					  AND A.APPL_SEQ = B.APPL_SEQ 
					  AND A.ENTER_CD =  #{ssnEnterCd}
					  AND A.APPL_SEQ = #{searchApplSeq}
					ORDER BY SEQ
					
				]]>


		</select>
		
		<!-- 퇴직체크리스트 체크결과(CHK_RESULT) 가 모두 NOT NULL 이면 퇴직체크리스트 신청서 완료(99) 처리 -->
		<update parameterType="map" id="prcHrmRetireCheckCnt" statementType="CALLABLE">
		<![CDATA[
			{CALL P_HRM_RETIRE_CHECK_CNT(
				#{sqlCode,mode=OUT,jdbcType=VARCHAR},
				#{sqlErrm,mode=OUT,jdbcType=VARCHAR},
				#{ssnEnterCd,mode=IN,jdbcType=VARCHAR},
				#{applSeq,mode=IN,jdbcType=VARCHAR})}
		]]>
		</update>
		
		<!-- 근태신청(휴가사용내역) 삭제 -->
		<delete parameterType="map" id="deleteRetireCheckListAppEx103">

					DELETE FROM THRI103
					 WHERE ENTER_CD||'_'||APPL_SEQ IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
												and rm.applSeq != null and !rm.applSeq.equals("")'>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.applSeq} )
										</if>
</foreach>
										)
		</delete>
		
		<delete parameterType="map" id="deleteRetireCheckListAppEx107">

					DELETE FROM THRI107
					 WHERE ENTER_CD||'_'||APPL_SEQ IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
												and rm.applSeq != null and !rm.applSeq.equals("")'>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.applSeq} )
										</if>
</foreach>
										)

		</delete>
		
		<delete parameterType="map" id="deleteRetireCheckListAppEx125">

					DELETE FROM THRI125
					 WHERE ENTER_CD||'_'||APPL_SEQ IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
												and rm.applSeq != null and !rm.applSeq.equals("")'>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.applSeq} )
										</if>
</foreach>
										)
		</delete>


</mapper>