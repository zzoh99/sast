<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.appmt.recAppmtInfoReg">

<!-- 채용발령내용등록 조회 -->
		<select parameterType="map" resultType="cMap" id="getRecAppmtInfoRegList">

				<![CDATA[
					SELECT A.ENTER_CD
					     , A.RECEIVE_NO
					     , A.REG_YMD
					     , CRYPTIT.DECRYPT(A.RES_NO, A.ENTER_CD) AS RES_NO
					     , A.NAME
					     , A.BIR_YMD
					     , A.SEX_TYPE
					     , NVL(A.ORD_TYPE_CD, F_COM_GET_STD_CD_VALUE(A.ENTER_CD, 'REC_ORD_DETAIL_CD')) AS ORD_TYPE_CD
					     , NVL(A.ORD_DETAIL_CD, F_COM_GET_STD_CD_VALUE(A.ENTER_CD, 'REC_ORD_DETAIL_CD')) AS ORD_DETAIL_CD
					     , A.MANAGE_CD
					     , A.LOCATION_CD
					     , F_COM_GET_MAP_NM(A.ENTER_CD, '600', A.SABUN, NULL, #{ssnLocaleCd}) AS LOCATION_NM
					     , A.ORG_CD
					     , F_COM_GET_ORG_NM(A.ENTER_CD,A.ORG_CD,A.REG_YMD, #{ssnLocaleCd}) AS ORG_NM
					     , A.JIKCHAK_CD
					     , A.WORK_TYPE
					     , A.JOB_CD
					     , F_COM_GET_JOB_NM_201(A.ENTER_CD, A.JOB_CD, A.REG_YMD, #{ssnLocaleCd}) AS JOB_NM
					     , A.JIKWEE_CD
					     , A.JIKGUB_CD
					     , A.WORK_AREA_CD
					     , F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H90202', A.WORK_AREA_CD, #{ssnLocaleCd}) AS WORK_AREA_NM
					     , A.TRA_YMD
					     , A.GEMP_YMD
					     , A.EMP_YMD
					     , A.CTITLE_CHG_YMD
					     , A.FPROM_YMD
					     , A.JIKGUB_CHG_YMD
					     , A.PAY_TYPE
					     , A.BASE1_CD
					     , A.CONTRACT_SYMD
					     , A.CONTRACT_EYMD
					     , A.SAL_CLASS
					     , A.ENTER_PAY
					     , A.PAY_GROUP_CD
					     , A.JIKJONG_CD
					     , F_COM_GET_JOB_NM_201(A.ENTER_CD, A.JIKJONG_CD, A.REG_YMD, #{ssnLocaleCd}) AS JIKJONG_NM
					     , CASE WHEN NVL(B.SABUN, '0') = '0' THEN '0'
					            ELSE '2' END AS PRE_POST_YN
					     , CASE WHEN NVL(B.ORD_YN, '0') = '0' THEN '0'
					            ELSE B.ORD_YN END AS ORD_YN
					     , CASE WHEN NVL(B.TEMP_ORD_YN, 'N') = 'Y' THEN '2'
					            ELSE '0' END AS IBS_IMAGE1    -- 가발령
					     , CASE WHEN NVL(B.ORD_YN, '0') = '0' THEN '0'
					            ELSE B.ORD_YN END AS IBS_IMAGE2    -- 발령확정
					  FROM (
					        SELECT T1.ENTER_CD
					             , T1.RECEIVE_NO
					             , T1.REG_YMD
					             , T1.RES_NO
					             , T1.NAME
					             , T1.BIR_YMD
					             , T1.SEX_TYPE
					             , T1.SABUN
					             , T2.ORD_TYPE_CD
					             , T2.ORD_DETAIL_CD
					             , T2.MANAGE_CD
					             , T2.LOCATION_CD
					             , T2.ORG_CD
					             , T2.JIKCHAK_CD
					             , T2.WORK_TYPE
					             , T2.JOB_CD
					             , T2.JIKWEE_CD
					             , T2.JIKGUB_CD
					             , T2.TRA_YMD
					             , T2.GEMP_YMD
					             , T2.EMP_YMD
					             , T2.CTITLE_CHG_YMD
					             , T2.FPROM_YMD
					             , T2.JIKGUB_CHG_YMD
					             , T2.PAY_TYPE
					             , T2.BASE1_CD
					             , T2.CONTRACT_SYMD
					             , T2.CONTRACT_EYMD
					             , T2.SAL_CLASS
					             , T2.ENTER_PAY
					             , T2.PAY_GROUP_CD
					             , T2.WORK_AREA_CD
					             , T2.JIKJONG_CD
					          FROM TSTF901 T1
					          LEFT OUTER JOIN TSTF903 T2
					                       ON T2.ENTER_CD = T1.ENTER_CD
					                      AND T2.RECEIVE_NO = T1.RECEIVE_NO
					     ) A
					  LEFT OUTER JOIN THRM221 B
					               ON B.ENTER_CD = A.ENTER_CD
					              AND B.SABUN = A.SABUN
					              AND B.ORD_YMD = A.EMP_YMD
					              AND B.ORD_TYPE_CD = A.ORD_TYPE_CD
					              AND B.ORD_DETAIL_CD = A.ORD_DETAIL_CD
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.REG_YMD BETWEEN REPLACE(TRIM( #{regYmdFrom} ),'-','') AND REPLACE(TRIM( #{regYmdTo} ),'-','')
					   AND A.NAME LIKE '%'||TRIM( #{name} )||'%'
					 ORDER BY A.RECEIVE_NO
				]]>


		</select>

<!-- 채용발령내용등록 저장 -->
		<update parameterType="map" id="saveRecAppmtInfoReg">

					MERGE INTO TSTF903 T
					USING	(
							SELECT A.ENTER_CD
								 , A.RECEIVE_NO
								 , A.ORD_TYPE_CD
								 , A.ORD_DETAIL_CD
								 , A.MANAGE_CD
								 , A.LOCATION_CD
								 , A.ORG_CD
								 , A.JIKCHAK_CD
								 , A.WORK_TYPE
								 , A.JOB_CD
								 , A.JIKWEE_CD
								 , A.JIKGUB_CD
								 , A.TRA_YMD
								 , A.GEMP_YMD
								 , A.EMP_YMD
								 , A.CTITLE_CHG_YMD
								 , A.FPROM_YMD
								 , A.PAY_TYPE
								 , A.CONTRACT_SYMD
								 , A.CONTRACT_EYMD
								 , A.SAL_CLASS
								 , A.ENTER_PAY
								 , A.PAY_GROUP_CD
                                 , A.WORK_AREA_CD
                                 , A.WORK_AREA_NM
                                 , A.JIKJONG_CD
							FROM	(
									SELECT NULL AS ENTER_CD
										 , NULL AS RECEIVE_NO
										 , NULL AS ORD_TYPE_CD
										 , NULL AS ORD_DETAIL_CD
										 , NULL AS MANAGE_CD
									     , NULL AS LOCATION_CD
									     , NULL AS ORG_CD
									     , NULL AS JIKCHAK_CD
									     , NULL AS WORK_TYPE
									     , NULL AS JOB_CD
										 , NULL AS JIKWEE_CD
										 , NULL AS JIKGUB_CD
										 , NULL AS TRA_YMD
										 , NULL AS GEMP_YMD
										 , NULL AS EMP_YMD
									     , NULL AS CTITLE_CHG_YMD
									     , NULL AS FPROM_YMD
									     , NULL AS PAY_TYPE
									     , NULL AS CONTRACT_SYMD
									     , NULL AS CONTRACT_EYMD
									     , NULL AS SAL_CLASS
									     , NULL AS ENTER_PAY
									     , NULL AS PAY_GROUP_CD
                                         , NULL AS WORK_AREA_CD
                                         , NULL AS WORK_AREA_NM
                                         , NULL AS JIKJONG_CD
									FROM DUAL
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT TRIM( #{ssnEnterCd} )		AS  ENTER_CD
										 , TRIM( #{rm.receiveNo})		AS  RECEIVE_NO
										 , NVL(TRIM( #{rm.ordDetailCd} ), F_COM_GET_STD_CD_VALUE(#{ssnEnterCd}, 'REC_ORD_DETAIL_CD')) AS ORD_TYPE_CD
					     				 , NVL(TRIM( #{rm.ordDetailCd} ), F_COM_GET_STD_CD_VALUE(#{ssnEnterCd}, 'REC_ORD_DETAIL_CD')) AS ORD_DETAIL_CD
										 , TRIM( #{rm.manageCd})		AS  MANAGE_CD
										 , TRIM( #{rm.locationCd})		AS  LOCATION_CD
										 , TRIM( #{rm.orgCd})			AS  ORG_CD
										 , TRIM( #{rm.jikchakCd})		AS  JIKCHAK_CD
										 , TRIM( #{rm.workType})		AS  WORK_TYPE
										 , TRIM( #{rm.jobCd}) 			AS  JOB_CD
										 , TRIM( #{rm.jikweeCd})		AS  JIKWEE_CD
										 , TRIM( #{rm.jikgubCd}) 		AS  JIKGUB_CD
										 , TRIM( #{rm.traYmd}) 		AS  TRA_YMD
										 , TRIM( #{rm.gempYmd}) 		AS	GEMP_YMD
										 , TRIM( #{rm.empYmd}) 		AS	EMP_YMD
										 , TRIM( #{rm.ctitleChgYmd}) 	AS	CTITLE_CHG_YMD
										 , TRIM( #{rm.fpromYmd}) 		AS	FPROM_YMD
										 , TRIM( #{rm.payType}) 		AS	PAY_TYPE
										 , TRIM( #{rm.contractSymd}) 	AS  CONTRACT_SYMD
										 , TRIM( #{rm.contractEymd}) 	AS  CONTRACT_EYMD
										 , TRIM( #{rm.salClass}) 		AS  SAL_CLASS
										 , TRIM( #{rm.enterPay}) 		AS  ENTER_PAY
                                         , TRIM( #{rm.payGroupCd}) 	AS  PAY_GROUP_CD
                                         , TRIM( #{rm.workAreaCd})     AS  WORK_AREA_CD
                                         , TRIM( #{rm.workAreaNm})     AS  WORK_AREA_NM
                                         , TRIM( #{rm.jikjongCd})      AS  JIKJONG_CD
									  FROM DUAL
</foreach>
									) A WHERE A.ENTER_CD IS NOT NULL
										  AND A.RECEIVE_NO IS NOT NULL
							) S
					ON ( T.ENTER_CD	= S.ENTER_CD AND T.RECEIVE_NO = S.RECEIVE_NO )
					WHEN MATCHED THEN
						UPDATE SET
									T.ORD_TYPE_CD      	= S.ORD_TYPE_CD
									, T.ORD_DETAIL_CD  	= S.ORD_DETAIL_CD
									, T.MANAGE_CD      	= S.MANAGE_CD
									, T.LOCATION_CD    	= S.LOCATION_CD
									, T.ORG_CD         	= S.ORG_CD
									, T.JIKCHAK_CD     	= S.JIKCHAK_CD
									, T.WORK_TYPE      	= S.WORK_TYPE
									, T.JOB_CD         	= S.JOB_CD
									, T.JIKWEE_CD      	= S.JIKWEE_CD
									, T.JIKGUB_CD      	= S.JIKGUB_CD
									, T.TRA_YMD        	= S.TRA_YMD
									, T.GEMP_YMD       	= S.GEMP_YMD
									, T.EMP_YMD        	= S.EMP_YMD
									, T.CTITLE_CHG_YMD 	= S.CTITLE_CHG_YMD
									, T.FPROM_YMD      	= S.FPROM_YMD
									, T.PAY_TYPE       	= S.PAY_TYPE
									, T.CONTRACT_SYMD  	= S.CONTRACT_SYMD
									, T.CONTRACT_EYMD  	= S.CONTRACT_EYMD
									, T.SAL_CLASS      	= S.SAL_CLASS
									, T.ENTER_PAY      	= S.ENTER_PAY
									, T.PAY_GROUP_CD   	= S.PAY_GROUP_CD
                                    , T.WORK_AREA_CD    = S.WORK_AREA_CD
                                    , T.WORK_AREA_NM    = S.WORK_AREA_NM
									, T.CHKDATE			= SYSDATE
									, T.CHKID			= #{ssnSabun}
									, T.JIKJONG_CD		= S.JIKJONG_CD
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.RECEIVE_NO
							, T.ORD_TYPE_CD
							, T.ORD_DETAIL_CD
							, T.MANAGE_CD
							, T.LOCATION_CD
							, T.ORG_CD
							, T.JIKCHAK_CD
							, T.WORK_TYPE
							, T.JOB_CD
							, T.JIKWEE_CD
							, T.JIKGUB_CD
							, T.TRA_YMD
							, T.GEMP_YMD
							, T.EMP_YMD
							, T.CTITLE_CHG_YMD
							, T.FPROM_YMD
							, T.PAY_TYPE
							, T.CONTRACT_SYMD
							, T.CONTRACT_EYMD
							, T.SAL_CLASS
							, T.ENTER_PAY
							, T.PAY_GROUP_CD
                            , T.WORK_AREA_CD
                            , T.WORK_AREA_NM
							, T.CHKDATE
							, T.CHKID
							, T.JIKJONG_CD
						)
						VALUES
						(
							  S.ENTER_CD
							, S.RECEIVE_NO
							, S.ORD_TYPE_CD
							, S.ORD_DETAIL_CD
							, S.MANAGE_CD
							, S.LOCATION_CD
							, S.ORG_CD
							, S.JIKCHAK_CD
							, S.WORK_TYPE
							, S.JOB_CD
							, S.JIKWEE_CD
							, S.JIKGUB_CD
							, S.TRA_YMD
							, S.GEMP_YMD
							, S.EMP_YMD
							, S.CTITLE_CHG_YMD
							, S.FPROM_YMD
							, S.PAY_TYPE
							, S.CONTRACT_SYMD
							, S.CONTRACT_EYMD
							, S.SAL_CLASS
							, S.ENTER_PAY
							, S.PAY_GROUP_CD
                            , S.WORK_AREA_CD
                            , S.WORK_AREA_NM
							, SYSDATE
							, #{ssnSabun}
							, S.JIKJONG_CD
						)
		</update>

<!-- 채용발령내용등록 삭제 -->
		<delete parameterType="map" id="deleteRecAppmtInfoReg">

					DELETE FROM TSTF903
					 WHERE ENTER_CD||'_'||RECEIVE_NO IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")
												and rm.receiveNo != null and !rm.receiveNo.equals("")'>
											TRIM( #{ssnEnterCd} )||'_'||TRIM( #{rm.receiveNo})
										</if>
</foreach>
										)
		</delete>


</mapper>