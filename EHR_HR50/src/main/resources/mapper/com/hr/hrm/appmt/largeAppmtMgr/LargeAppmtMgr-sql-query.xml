<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<!-- 대량발령 목록 조회( 확정되지 않은 발령건 조회)  -->
	<mapper namespace="hrm.appmt.largeAppmtMgr">
		<select parameterType="map" resultType="cMap" id="getLargeAppmtMgrList">

				<![CDATA[
					SELECT A.ENTER_CD
					      ,A.ORD_TYPE_CD
					      ,A.ORD_DETAIL_CD
					      ,A.ORD_REASON_CD
					      ,A.SABUN
					      ,NVL(A.NAME,B.NAME) AS NAME
					      ,A.ORD_YMD
					      ,A.APPLY_SEQ
					      ,A.PROCESS_NO
					      ,(SELECT PROCESS_TITLE FROM THRM220 WHERE ENTER_CD = A.ENTER_CD AND PROCESS_NO = A.PROCESS_NO ) AS PROCESS_TITLE
					      ,A.ORD_YN
					      ,A.ORD_YN AS ORD_YN_TMP
					      ,A.VISUAL_YN
					      ,A.MEMO      
					      ,A.ORD_ERROR
					           ]]>
<foreach item="rm" collection="postItemRows" >
	<bind name="nm" value='rm.postItem+"_VALUE"'/>
	
							,(SELECT POST_ITEM_VALUE
					          FROM THRM223
					         WHERE ENTER_CD = A.ENTER_CD
					           AND ORD_TYPE_CD = A.ORD_TYPE_CD
					           AND ORD_DETAIL_CD = A.ORD_DETAIL_CD
					           AND SABUN = A.SABUN
					           AND ORD_YMD = A.ORD_YMD
					           AND APPLY_SEQ = A.APPLY_SEQ
					           AND POST_ITEM = #{rm.postItem}) AS ${nm}
	
	<if test='rm.cType != null and (rm.cType.equals("P") or rm.cType.equals("C"))'>
	<bind name="nm" value='rm.postItem+"_NM_VALUE"' />
							,(SELECT POST_ITEM_VALUE
					          FROM THRM223
					         WHERE ENTER_CD = A.ENTER_CD
					           AND ORD_TYPE_CD = A.ORD_TYPE_CD
					           AND ORD_DETAIL_CD = A.ORD_DETAIL_CD
					           AND SABUN = A.SABUN
					           AND ORD_YMD = A.ORD_YMD
					           AND APPLY_SEQ = A.APPLY_SEQ
					           AND POST_ITEM = #{rm.postItem}||'_NM') AS ${nm}
	</if>
</foreach>
					  FROM THRM221 A
					      ,THRM100 B
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.ENTER_CD = B.ENTER_CD(+)
					   AND A.SABUN = B.SABUN(+)
					 
					<if test='searchOrdTypeCd != null and !searchOrdTypeCd.equals("")'>
						   AND A.ORD_TYPE_CD = #{searchOrdTypeCd}
					</if>
					<if test='searchOrdDetailCd != null and !searchOrdDetailCd.equals("")'>
						   AND A.ORD_DETAIL_CD = #{searchOrdDetailCd}
					</if>
					<if test='searchOrdReasonCd != null and !searchOrdReasonCd.equals("")'>
						   AND A.ORD_REASON_CD = #{searchOrdReasonCd}
					</if>
					<if test='searchOrdYn != null and !searchOrdYn.equals("")'>
						   AND A.ORD_YN =  #{searchOrdYn}
					</if>
					<if test='searchSabun != null and !searchSabun.equals("")'>
					       AND (A.SABUN LIKE '%'||TRIM( #{searchSabun} )||'%' OR B.NAME LIKE '%'||TRIM( #{searchSabun} )||'%' )
					</if>
					
					<if test='searchProcessNo != null and !searchProcessNo.equals("")'>
						   AND A.PROCESS_NO =  #{searchProcessNo}
					</if>
					<if test='searchOrdYmdFrom != null and !searchOrdYmdFrom.equals("")'>
					       AND A.ORD_YMD <![CDATA[ >= ]]> REPLACE(TRIM( #{searchOrdYmdFrom} ),'-','')
					</if>
					<if test='searchOrdYmdTo != null and !searchOrdYmdTo.equals("")'>
					     <![CDATA[  AND A.ORD_YMD <= REPLACE(TRIM( #{searchOrdYmdTo} ),'-','') ]]>
					</if>
					ORDER BY A.ORD_YMD DESC, B.NAME, A.APPLY_SEQ


		</select>

		<select parameterType="map" resultType="cMap" id="getThrm200DContent">

			<![CDATA[
				SELECT D_CONTENT
				  FROM THRM200
				 WHERE ENTER_CD = #{ssnEnterCd}
				  AND USE_YN = 'Y'
				  AND POST_ITEM = #{postItem}
			]]>

		</select>

		<select parameterType="map" resultType="cMap" id="getExectedDContent">

				<![CDATA[
					${selectViewQuery}
				]]>

		</select>
<!-- 대량발령(발령항목) 조회 -->
		<select parameterType="map" resultType="cMap" id="getLargeAppmtMgrColumMap">

				<![CDATA[
				SELECT LOWER(SUBSTR(REPLACE(INITCAP(COLUMN_CD),'_'),1,1))||
			--           LOWER(SUBSTR(REPLACE(INITCAP(COLUMN_CD),'_'),2,0))||
			           SUBSTR(REPLACE(INITCAP(COLUMN_CD),'_'),2) AS COLUMN_CD
			         , LOWER(SUBSTR(REPLACE(INITCAP(COLUMN_NM),'_'),1,1))||
			--           LOWER(SUBSTR(REPLACE(INITCAP(COLUMN_NM),'_'),2,0))||
			           SUBSTR(REPLACE(INITCAP(COLUMN_NM),'_'),2) AS COLUMN_NM
			         , MANDATORY_YN, VISIBLE_YN
				 FROM ( 
						SELECT 	A.POST_ITEM || '_VALUE' AS COLUMN_CD
						        ,CASE
						         WHEN INSTR(A.POST_ITEM, 'CD') > 0 THEN
						          SUBSTR(A.POST_ITEM, 1, INSTR(A.POST_ITEM, '_CD') - 1)
						         ELSE
						          A.POST_ITEM
						        END || '_NM_VALUE' AS COLUMN_NM
						        , NVL(B.MANDATORY_YN, 'N') AS MANDATORY_YN -- 필수여부
						        , NVL(B.VISIBLE_YN,'N') AS VISIBLE_YN  -- 항목여부
						        , A.SEQ
						  FROM THRM200 A
						     , THRM201 B
						 WHERE A.ENTER_CD = B.ENTER_CD 
						   AND A.POST_ITEM = B.POST_ITEM
						   AND A.ENTER_CD = #{ssnEnterCd}
						   AND B.ORD_TYPE_CD = #{ordTypeCd}
					   )
					 ORDER BY SEQ
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getLargeAppmtMgrMaxApplySeq">

				<![CDATA[
					SELECT A.*
					      ,B.ORD_YMD AS MAX_ORD_YMD_211
					      ,B.APPLY_SEQ AS MAX_APPLY_SEQ_211
					      --,C.ORD_YMD AS MAX_ORD_YMD_191
					      --,C.APPLY_SEQ AS MAX_APPLY_SEQ_191
					      ,(SELECT NVL(MAX(APPLY_SEQ), 0) + 1
					          FROM THRM221
					         WHERE ENTER_CD = A.ENTER_CD
					           AND SABUN = A.SABUN
					           AND ORD_YMD = A.ORD_YMD) AS NEW_APPLY_SEQ					
					      ,DECODE(D.SABUN,NULL,0,1) AS DUP_CNT
					      ,D.PROCESS_NO AS DUP_PROCESS_NO
					      ,(SELECT PROCESS_TITLE FROM THRM220 WHERE ENTER_CD = D.ENTER_CD AND PROCESS_NO = D.PROCESS_NO) AS DUP_PROCESS_TITLE
					      ]]>
<foreach item="rm" collection="postItemList" >
	<if test='rm.columnCd != null and !rm.columnCd.equals("MEMO")'>
									  ,C.${rm.columnCd}
		<if test='rm.cType != null and (rm.cType.equals("P") or rm.cType.equals("C"))'>
									  ,C.${rm.nmColumnCd}
		</if>
	</if>
</foreach>
					  FROM (SELECT #{ssnEnterCd} AS ENTER_CD
					              ,#{ordDetailCd} AS ORD_DETAIL_CD
					              ,#{sabun} AS SABUN
					              ,#{name} AS NAME
					              ,#{ordYmd} AS ORD_YMD
					              ,#{ordTypeCd} AS ORD_TYPE_CD
					              ,#{ordReasonCd} AS ORD_REASON_CD
					              ,#{processNo} AS PROCESS_NO
					              ,'N' AS ORD_YN
					              ,#{visualYn} AS VISUAL_YN
					              ,#{ssnSabun} AS SSN_SABUN
					              ,#{sNo} AS S_NO
					              ,#{seq} AS SEQ
					              ,#{seqNm} AS SEQ_NM
					              ,#{applKey} AS APPL_KEY
					          FROM DUAL) A
					      ,(SELECT ENTER_CD
					              ,SABUN
					              ,ORD_YMD
					              ,MAX(APPLY_SEQ) AS APPLY_SEQ
					          FROM THRM221
					         WHERE (ENTER_CD, SABUN, ORD_YMD) IN
					               (SELECT ENTER_CD
					                      ,SABUN
					                      ,MAX(ORD_YMD) AS ORD_YMD
					                  FROM THRM221
					                 WHERE ENTER_CD = #{ssnEnterCd}
					                   AND SABUN IN (#{sabun})
					                 GROUP BY ENTER_CD
					                         ,SABUN)
					         GROUP BY ENTER_CD
					                 ,SABUN
					                 ,ORD_YMD) B
					      ,(SELECT A.ENTER_CD, A.SABUN--, ORD_YMD, APPLY_SEQ
<foreach item="rm" collection="postItemList" >
	<if test='rm.columnCd != null and !rm.columnCd.equals("MEMO")'>
						 , DECODE(B.SABUN
								  , NULL
								  , A.${rm.columnCd}
								  , NVL((SELECT POST_ITEM_VALUE
										FROM THRM223
										WHERE ENTER_CD = #{ssnEnterCd}
										AND ORD_DETAIL_CD = B.ORD_DETAIL_CD
										AND SABUN = #{sabun}
										AND ORD_YMD = B.ORD_YMD
										AND APPLY_SEQ = B.APPLY_SEQ
										AND POST_ITEM = #{rm.postItem}
										)
										  , A.${rm.columnCd})
								) AS ${rm.columnCd}
		<if test='rm.cType != null and (rm.cType.equals("P") or rm.cType.equals("C"))'>
						, DECODE(B.SABUN
								, NULL
								, A.${rm.nmColumnCd}
								, NVL((SELECT POST_ITEM_VALUE
										FROM THRM223
										WHERE ENTER_CD = #{ssnEnterCd}
										AND ORD_DETAIL_CD = B.ORD_DETAIL_CD
										AND SABUN = #{sabun}
										AND ORD_YMD = B.ORD_YMD
										AND APPLY_SEQ = B.APPLY_SEQ
										AND POST_ITEM = #{rm.postItem}||'_NM'
									), A.${rm.nmColumnCd})
								) AS ${rm.nmColumnCd}
		</if>
	</if>
</foreach>
					  FROM (
							SELECT A.*, F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, A.SDATE) AS ORG_NM, F_COM_GET_JOB_NM(A.ENTER_CD, A.SABUN, A.SDATE) AS JOB_NM
							  FROM THRM151 A
							 WHERE ENTER_CD = #{ssnEnterCd}
							   AND SABUN = #{sabun}
							   AND SDATE = (SELECT MAX(SDATE)
											  FROM THRM151
											 WHERE ENTER_CD = #{ssnEnterCd}
											   AND SABUN = #{sabun}
											   AND #{ordYmd} BETWEEN SDATE AND EDATE
											 )
							) A
						  , (SELECT *
							   FROM THRM221
							  WHERE ENTER_CD = #{ssnEnterCd}
							    AND SABUN = #{sabun}
							    AND (ORD_YMD, APPLY_SEQ) IN (SELECT ORD_YMD
																  , MAX(APPLY_SEQ)
															   FROM THRM221
															  WHERE ENTER_CD = #{ssnEnterCd}
																AND SABUN = #{sabun}
																AND (ORD_YMD) IN (SELECT MAX(ORD_YMD)
																					FROM THRM221
																				   WHERE ENTER_CD = #{ssnEnterCd}
																					 AND SABUN = #{sabun})
																				   GROUP BY ORD_YMD
															 )
							) B
					    WHERE A.ENTER_CD = B.ENTER_CD(+)
						  AND A.SABUN = B.SABUN(+)
						 ) C
					     , THRM221 D
					 WHERE A.ENTER_CD = B.ENTER_CD(+)
					   AND A.ENTER_CD = C.ENTER_CD(+)
					   AND A.SABUN = C.SABUN(+)
					   AND A.ENTER_CD = D.ENTER_CD(+)
					   AND A.ORD_TYPE_CD = D.ORD_TYPE_CD(+)
					   AND A.ORD_DETAIL_CD = D.ORD_DETAIL_CD(+)
					   AND A.SABUN = D.SABUN(+)
					   AND A.ORD_YMD = D.ORD_YMD(+)
					   AND ROWNUM = 1

		</select>
<!-- 대량발령 저장 -->
		<insert parameterType="map" id="insertLargeAppmtMgr">

				<![CDATA[
					INSERT INTO THRM221 
						  (ENTER_CD
						  ,ORD_DETAIL_CD
						  ,SABUN
						  ,NAME
						  ,ORD_YMD
						  ,APPLY_SEQ
						  ,ORD_TYPE_CD
						  ,ORD_REASON_CD
						  ,PROCESS_NO
						  ,ORD_YN
						  ,VISUAL_YN
						  ,MEMO
						  ,CHKDATE
						  ,CHKID
						  ,SEQ
						  ,SEQ_NM
						  ,APPL_KEY)
						SELECT #{enterCd}
						  ,#{ordDetailCd}
						  ,#{sabun}
						  ,DECODE(#{name},NULL,(SELECT NAME FROM THRM100 WHERE ENTER_CD = #{enterCd} AND SABUN = #{sabun} ),#{name} )
						  ,#{ordYmd}
						  ,#{newApplySeq}
						  ,#{ordTypeCd}
						  ,#{ordReasonCd}
						  ,#{processNo}
						  ,'N'
						  ,#{visualYn}
						  ,NULL
						  ,SYSDATE
						  ,#{ssnSabun}
						  ,#{seq}
						  ,#{seqNm}
						  ,#{applKey}
						   FROM DUAL
				]]>

		</insert>
		<insert parameterType="map" id="insertLargeAppmtMgr2">

				<![CDATA[
					INSERT INTO THRM223
					  (ENTER_CD
					  ,ORD_DETAIL_CD
					  ,SABUN
					  ,ORD_YMD
					  ,APPLY_SEQ
					  ,POST_ITEM
					  ,ORD_TYPE_CD
					  ,CHKDATE
					  ,CHKID
					  ,POST_ITEM_VALUE)
					    ]]>
<bind name="icnt" value="0" />
<foreach item="rm" collection="postItemList" >
	<choose><when test='icnt > 0'>
						UNION ALL
	</when><otherwise>
		<bind name="icnt" value="1" />
	</otherwise>
	</choose>
					  SELECT #{enterCd} AS ENTER_CD
					        ,#{ordDetailCd} AS ORD_DETAIL_CD
					        ,#{sabun} AS SABUN
					        ,#{ordYmd} AS ORD_YMD
					        ,#{newApplySeq} AS APPLY_SEQ
					        ,#{rm.postItem} AS POST_ITEM
					        ,#{ordTypeCd} AS ORD_TYPE_CD
					        ,SYSDATE AS CHKDATE
					        ,#{ssnSabun} AS CHKID
					<choose><when test='rm.postItem.equals("ITEM25")
					 or rm.postItem.equals("ITEM11")
					 or rm.postItem.equals("ITEM12")
					 '>
					 		, NULL AS POST_ITEM_VALUE
					</when><otherwise>
					        ,NVL(#{rm.value}
					        <choose><when test='rm.columnCd != null and !rm.columnCd.equals("MEMO") and !rm.columnCd.equals("MAIN_DEPT_YN")'>
					            ,CASE
					               WHEN #{maxOrdYmd211} IS NULL OR #{maxApplySeq211} IS NULL THEN
					                #{rm.value191}
					               ELSE
					                (SELECT POST_ITEM_VALUE
					                   FROM THRM223
					                  WHERE ENTER_CD = #{enterCd}
					                    AND SABUN = #{sabun}
					                    AND ORD_YMD = #{maxOrdYmd211}
					                    AND APPLY_SEQ = #{maxApplySeq211}
					                    AND POST_ITEM = #{rm.postItem})
					             END
							</when><otherwise>
					       	,#{rm.value}
							</otherwise>
							</choose>
					             ) POST_ITEM_VALUE
					 </otherwise>
				    </choose>
					    FROM DUAL
	<if test='rm.cType != null and (rm.cType.equals("P") or rm.cType.equals("C"))'>
						UNION ALL	
					  SELECT #{enterCd} AS ENTER_CD
					        ,#{ordDetailCd} AS ORD_DETAIL_CD
					        ,#{sabun} AS SABUN
					        ,#{ordYmd} AS ORD_YMD
					        ,#{newApplySeq} AS APPLY_SEQ
					        ,#{rm.postItem}||'_NM' AS POST_ITEM
					        ,#{ordTypeCd} AS ORD_TYPE_CD
					        ,SYSDATE AS CHKDATE
					        ,#{ssnSabun} AS CHKID
					        ,DECODE(#{rm.value},NULL
					<choose><when test='rm.postItem.equals("ITEM25")
					 or rm.postItem.equals("ITEM11")
					 or rm.postItem.equals("ITEM12")
					 '>
					 				, NULL
					</when>		<otherwise>
							        ,CASE
						               WHEN #{maxOrdYmd211} IS NULL OR #{maxApplySeq211} IS NULL THEN
						                #{rm.nmValue191}
						               ELSE
						                (SELECT POST_ITEM_VALUE
						                   FROM THRM223
						                  WHERE ENTER_CD = #{enterCd}
						                    AND SABUN = #{sabun}
						                    AND ORD_YMD = #{maxOrdYmd211}
						                    AND APPLY_SEQ = #{maxApplySeq211}
						                    AND POST_ITEM = #{rm.postItem}||'_NM')
						             END
					</otherwise>
					</choose>
							        ,
							        <choose><when test='rm.popupType != null and rm.popupType.equals("ORG")'>
			                			F_COM_GET_ORG_NM( #{enterCd} , #{rm.value}	, #{ordYmd})
									</when>
			                		<when test='rm.popupType != null and rm.popupType.equals("JOB")'>
			                			F_COM_GET_JOB_NM_201( #{enterCd} , #{rm.value}	, #{ordYmd})
									</when>
			                		<when test='rm.popupType != null and rm.popupType.equals("LOCATION")'>
			                			F_COM_GET_LOCATION_NM( #{enterCd}, #{rm.value}	)
									</when>
										<otherwise>
			                			F_COM_GET_GRCODE_NAME( TRIM( #{enterCd} ) , #{rm.popupType}, #{rm.value})
										</otherwise>
									</choose>
							 ) AS  POST_ITEM_VALUE
					    FROM DUAL	
	</if>
</foreach>

		</insert>

<!-- 대량발령 수정 -->
		<update parameterType="map" id="updateLargeAppmtMgr">

				<![CDATA[

					UPDATE THRM221 T
					SET	T.ORD_REASON_CD			= #{ordReasonCd}
						, T.VISUAL_YN			= #{visualYn}
						, T.MEMO				= #{memo}
						, T.CHKDATE				= SYSDATE
						, T.CHKID				= #{ssnSabun}
					WHERE T.ENTER_CD = #{ssnEnterCd}
					  AND T.ORD_TYPE_CD = TRIM( #{ordTypeCd} )
					  AND T.ORD_DETAIL_CD = TRIM( #{ordDetailCd} )
					  AND T.SABUN = TRIM( #{sabun} )
					  AND T.ORD_YMD = TRIM( #{ordYmd} )
					  AND T.APPLY_SEQ = TRIM( #{applySeq} )
				]]>


		</update>
		<update parameterType="map" id="updateLargeAppmtMgr2">

					MERGE INTO THRM223 T
					USING (SELECT * FROM (
										SELECT NULL AS ENTER_CD
								             ,NULL AS ORD_TYPE_CD
								             ,NULL AS ORD_DETAIL_CD
								             ,NULL AS SABUN
								             ,NULL AS ORD_YMD
								             ,NULL AS APPLY_SEQ
								             ,NULL AS POST_ITEM
								             ,NULL AS POST_ITEM_VALUE
								         FROM DUAL
<foreach item="rm" collection="postItemList" >
								         
								       UNION ALL
								       SELECT #{ssnEnterCd} AS ENTER_CD
								             ,TRIM( #{ordTypeCd} ) AS ORD_TYPE_CD
								             ,TRIM( #{ordDetailCd} ) AS ORD_DETAIL_CD
								             ,TRIM( #{sabun} ) AS SABUN
								             ,TRIM( #{ordYmd} ) AS ORD_YMD
								             ,TRIM( #{applySeq} ) AS APPLY_SEQ
								             ,#{rm.postItem} AS POST_ITEM
								             ,#{rm.value} AS POST_ITEM_VALUE
								         FROM DUAL
	
	<if test='rm.cType != null and (rm.cType.equals("P") or rm.cType.equals("C"))'>
									   UNION ALL
								       SELECT #{ssnEnterCd} AS ENTER_CD
								             ,TRIM( #{ordTypeCd} ) AS ORD_TYPE_CD
								             ,TRIM( #{ordDetailCd} ) AS ORD_DETAIL_CD
								             ,TRIM( #{sabun} ) AS SABUN
								             ,TRIM( #{ordYmd} ) AS ORD_YMD
								             ,TRIM( #{applySeq} ) AS APPLY_SEQ
								             ,#{rm.postItem}||'_NM' AS POST_ITEM
								             ,
								             <choose><when test='rm.popupType != null and rm.popupType.equals("ORG")'>
					                			F_COM_GET_ORG_NM( #{ssnEnterCd} , #{rm.value}	, #{ordYmd})
					                		</when><when test='rm.popupType != null and rm.popupType.equals("JOB")'>
					                			F_COM_GET_JOB_NM_201( #{ssnEnterCd} , #{rm.value}	, #{ordYmd})
					                		</when><when test='rm.popupType != null and rm.popupType.equals("LOCATION")'>
					                			F_COM_GET_LOCATION_NM( #{ssnEnterCd} , #{rm.value}	)
											 </when><otherwise>
					                			F_COM_GET_GRCODE_NAME( #{ssnEnterCd} , #{rm.popupType}, #{rm.value})
											 </otherwise>
											 </choose>
								         FROM DUAL
	</if>
</foreach>
					         )WHERE ENTER_CD IS NOT NULL
					         ) S
					ON (T.ENTER_CD = S.ENTER_CD
						AND T.ORD_TYPE_CD = S.ORD_TYPE_CD
						AND T.ORD_DETAIL_CD = S.ORD_DETAIL_CD
						AND T.SABUN = S.SABUN
						AND T.ORD_YMD = S.ORD_YMD
						AND T.APPLY_SEQ = S.APPLY_SEQ
						AND T.POST_ITEM = S.POST_ITEM
						)
					WHEN MATCHED THEN
					  UPDATE
					     SET T.POST_ITEM_VALUE = S.POST_ITEM_VALUE
					        ,T.CHKDATE         = SYSDATE
					        ,T.CHKID           = #{ssnSabun}

		</update>
		<delete parameterType="map" id="deleteLargeAppmtMgrExec">

					DELETE FROM THRM221 WHERE
					(ENTER_CD, ORD_DETAIL_CD, SABUN, ORD_YMD, APPLY_SEQ)
					IN 
					( (NULL, NULL, NULL, NULL, NULL)
					<foreach item="rm" collection="deleteRows" >
					  ,(#{ssnEnterCd}, #{rm.ordDetailCd}, #{rm.sabun}, #{rm.ordYmd}, #{rm.applySeq})
					</foreach>
					)
		</delete>
		
		<delete parameterType="map" id="deleteLargeAppmtMgrExec2">


					DELETE FROM THRM223 WHERE
					(ENTER_CD, ORD_DETAIL_CD, SABUN, ORD_YMD, APPLY_SEQ)
					IN 
					( (NULL, NULL, NULL, NULL, NULL)
					<foreach item="rm" collection="deleteRows" >
					  ,(#{ssnEnterCd}, #{rm.ordDetailCd}, #{rm.sabun}, #{rm.ordYmd}, #{rm.applySeq})
					</foreach>
					)
		</delete>

</mapper>