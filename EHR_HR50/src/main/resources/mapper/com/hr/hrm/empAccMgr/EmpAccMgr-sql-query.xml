<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.empAccMgr">

		<!-- 노조관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getEmpAccMgrList">

				<![CDATA[
					SELECT	*
					FROM	(
			  	   				SELECT	A.ENTER_CD
		                		, 		A.SABUN
		                		, 		A.SDATE
		                		, 		A.EDATE
		                		, 		A.ACC_JIKCHAK_CD
		                		, 		A.APPOINT_YMD
		                		, 		A.PAY_DEDUCT_YN
		                		, 		A.MEMO
		                		, 		F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, #{ssnLocaleCd} ) AS NAME
		                		, 		F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
		                		, 		F_COM_GET_JIKCHAK_NM( A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS JIKCHAK_NM
		                		, 		F_COM_GET_JIKWEE_NM (A.ENTER_CD, A.SABUN, TO_CHAR(sysdate, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKWEE_NM
		                		, 		UPPER(F_COM_GET_STATUS_CD(A.ENTER_CD, A.SABUN)) AS STS_CD
		                		, 		F_COM_GET_BP_CD(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'yyyymmdd')) AS BP_CD
		          				FROM 	THRM182 A
		         				WHERE 	1=1
		           				AND 	A.ENTER_CD = TRIM(#{ssnEnterCd})
]]>
		       					<if test='searchSdate != null and !searchSdate.equals("")'>
		            			AND 	A.SDATE BETWEEN REPLACE(TRIM(#{searchSdate}),'-','') AND REPLACE(TRIM(#{searchEdate}),'-','')
								</if>

		       					<if test='multiStatusCd != null and !multiStatusCd.equals("")'>
			           			AND 	UPPER(F_COM_GET_STATUS_CD(A.ENTER_CD, A.SABUN)) IN <foreach collection="multiStatusCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
								</if>

		       					<if test='searchSaNm != null and !searchSaNm.equals("")'>
		           				AND 	(A.SABUN LIKE #{searchSaNm} || '%' OR F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd} ) LIKE #{searchSaNm} || '%')
								</if>
		       				  ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, A.SDATE)
							)
					WHERE 	1=1

					<if test='searchBizPlaceCd != null and !searchBizPlaceCd.equals("")'>
					AND 	BP_CD = #{searchBizPlaceCd}
					</if>


		</select>

		<!-- 사우회관리 저장 -->
		<update parameterType="map" id="saveEmpAccMgr">

					 MERGE INTO THRM182 T
					 USING
		                (
							<bind name="icnt" value="1" />
							<foreach item="rm" collection="mergeRows" separator=" UNION ALL " >
						   SELECT TRIM(#{ssnEnterCd})  AS  ENTER_CD
					            , TRIM(#{rm.sabun})  AS  SABUN
					            , TRIM(#{rm.sdate})  AS  SDATE
					            , TRIM(#{rm.edate})  AS  EDATE
					            , TRIM(#{rm.accJikchakCd})  AS  ACC_JIKCHAK_CD
					            , TRIM(#{rm.appointYmd})  AS  APPOINT_YMD
					            , TRIM(#{rm.payDeductYn})  AS  PAY_DEDUCT_YN
					            , TRIM(#{rm.memo})  AS  MEMO
					        FROM DUAL
							</foreach>
					) S
					ON (
					          T.ENTER_CD = S.ENTER_CD
					     AND  T.SABUN = S.SABUN
					     AND  T.SDATE = S.SDATE
					)
					WHEN MATCHED THEN
					   UPDATE SET T.CHKDATE	= sysdate
					            , T.CHKID	= #{ssnSabun}
					            , T.EDATE = S.EDATE
					            , T.ACC_JIKCHAK_CD = S.ACC_JIKCHAK_CD
					            , T.APPOINT_YMD = S.APPOINT_YMD
					            , T.PAY_DEDUCT_YN = S.PAY_DEDUCT_YN
					            , T.MEMO = S.MEMO
					WHEN NOT MATCHED THEN
					   INSERT
					   (
					              T.ENTER_CD
					            , T.SABUN
					            , T.SDATE
					            , T.EDATE
					            , T.ACC_JIKCHAK_CD
					            , T.APPOINT_YMD
					            , T.PAY_DEDUCT_YN
					            , T.MEMO
					            , T.CHKDATE
					            , T.CHKID
					   )
					   VALUES
					   (
					              S.ENTER_CD
					            , S.SABUN
					            , S.SDATE
					            , S.EDATE
					            , S.ACC_JIKCHAK_CD
					            , S.APPOINT_YMD
					            , S.PAY_DEDUCT_YN
					            , S.MEMO
					            , sysdate
					            , #{ssnSabun}
					   )
		</update>

		<!-- 사우회관리 삭제 -->
		<delete parameterType="map" id="deleteEmpAccMgr">

					DELETE FROM THRM182
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					   AND ( SABUN,SDATE ) IN ( ( NULL,NULL)
			<foreach item="rm" collection="deleteRows" >
			    <if test='  rm.sabun != null and !rm.sabun.equals("") and rm.sdate != null and !rm.sdate.equals("") '>
					     , ( TRIM( #{rm.sabun} ),TRIM( #{rm.sdate} ) )
				</if>
			</foreach>
					       )
		</delete>


</mapper>