<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="hrm.other.empOrdOrgMoveSrch">
		<select parameterType="map" resultType="cMap" id="getEmpOrdOrgMoveSrchList">

				<![CDATA[
				   SELECT A.ENTER_CD
						, '/EmpPhotoOut.do'||chr(63)||'enterCd=' || A.ENTER_CD || chr(38) || 'searchKeyword=' || A.SABUN ||  chr(38) || 'type=1' AS PHOTO
						, A.SABUN
						, A.ORG_CD
						, F_COM_GET_NAMES(A.ENTER_CD, A.SABUN, '', TO_CHAR(SYSDATE, 'YYYYMMDD'))  AS NAME
						, F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))    AS ORG_NM
						, F_COM_GET_JIKCHAK_NM(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS JIKCHAK_NM
						, F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))  AS JIKWEE_NM
						, F_COM_GET_JIKGUB_NM(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))  AS JIKGUB_NM
						, F_COM_GET_JOB_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))    AS JOB_NM
						, A.STATUS_CD
						, F_COM_GET_STATUS_NM(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))  AS STATUS_NM

						, F_COM_GET_ORG_NM2(T.ENTER_CD, T.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))     AS STD_ORG_NM
						, F_COM_GET_JIKCHAK_NM(T.ENTER_CD, T.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))  AS STD_JIKCHAK_NM
						, F_COM_GET_JIKWEE_NM(T.ENTER_CD, T.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))	 AS STD_JIKWEE_NM
						, F_COM_GET_JIKGUB_NM(T.ENTER_CD, T.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))   AS STD_JIKGUB_NM
						, F_COM_GET_JOB_NM2(T.ENTER_CD, T.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))     AS STD_JOB_NM
						, T.SDATE
						, T.EDATE

						, T.PREV_ORG_CD
						, F_COM_GET_ORG_NM2(T.ENTER_CD, T.SABUN, T.PREV_SDATE)    AS PREV_ORG_NM
						, F_COM_GET_JIKCHAK_NM(T.ENTER_CD, T.SABUN, T.PREV_SDATE) AS PREV_JIKCHAK_NM
						, F_COM_GET_JIKWEE_NM(T.ENTER_CD, T.SABUN, T.PREV_SDATE)  AS PREV_JIKWEE_NM
						, F_COM_GET_JIKGUB_NM(T.ENTER_CD, T.SABUN, T.PREV_SDATE)  AS PREV_JIKGUB_NM
						, F_COM_GET_JOB_NM2(T.ENTER_CD, T.SABUN, T.PREV_SDATE)    AS PREV_JOB_NM
						, T.PREV_SDATE
						, T.PREV_EDATE
						, T.NEXT_ORG_CD
						, F_COM_GET_ORG_NM2(T.ENTER_CD, T.SABUN, T.NEXT_SDATE)    AS NEXT_ORG_NM
						, F_COM_GET_JIKCHAK_NM(T.ENTER_CD, T.SABUN, T.NEXT_SDATE) AS NEXT_JIKCHAK_NM
						, F_COM_GET_JIKWEE_NM(T.ENTER_CD, T.SABUN, T.NEXT_SDATE)  AS NEXT_JIKWEE_NM
						, F_COM_GET_JIKGUB_NM(T.ENTER_CD, T.SABUN, T.NEXT_SDATE)  AS NEXT_JIKGUB_NM
						, F_COM_GET_JOB_NM2(T.ENTER_CD, T.SABUN, T.NEXT_SDATE)    AS NEXT_JOB_NM
						, T.NEXT_SDATE
						, T.NEXT_EDATE
					FROM THRM151 A,
                    		(
                    -----------------------------------------
                          SELECT ENTER_CD, SABUN, SDATE, EDATE, ORG_CD,
							DECODE(ENTER_CD||SABUN, LAG(ENTER_CD||SABUN)  OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), LAG(ORG_CD)  OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), '') AS PREV_ORG_CD,
							DECODE(ENTER_CD||SABUN, LAG(ENTER_CD||SABUN)  OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), LAG(SDATE)   OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), '') AS PREV_SDATE,
							DECODE(ENTER_CD||SABUN, LAG(ENTER_CD||SABUN)  OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), LAG(EDATE)   OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), '') AS PREV_EDATE,
							DECODE(ENTER_CD||SABUN, LEAD(ENTER_CD||SABUN) OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), LEAD(ORG_CD) OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), '') AS NEXT_ORG_CD,
							DECODE(ENTER_CD||SABUN, LEAD(ENTER_CD||SABUN) OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), LEAD(SDATE)  OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), '') AS NEXT_SDATE,
							DECODE(ENTER_CD||SABUN, LEAD(ENTER_CD||SABUN) OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), LEAD(EDATE)  OVER (ORDER BY ENTER_CD, SABUN, SDATE, ROW_CNT1), '') AS NEXT_EDATE

                            FROM (
                                  SELECT ENTER_CD,
								       SABUN,
								       ORG_CD,
								       SDATE,
								       NVL(EDATE, '99991231') AS EDATE,
								       ROW_CNT1
								  FROM (SELECT ENTER_CD,
								               SABUN,
								               hist.ORD_YMD AS SDATE,
								               CASE WHEN LEAD_TYPE_CD = 'D' THEN LEAD_YMD --다음 발령이 퇴직인 경우에는 발령일자를 종료일자로 한다.
                                                ELSE TO_CHAR(TO_DATE(LEAD_YMD, 'YYYYMMDD') -1 , 'YYYYMMDD') END EDATE,
								               ORG_CD ,
								               ROW_NUMBER () OVER (PARTITION BY ENTER_CD, SABUN ORDER BY ORD_YMD ASC) AS ROW_CNT1,
								               ORD_TYPE_CD,
								               PRE_YMD
								          FROM (select A.ENTER_CD,
								                       A.SABUN,
								                       A.ORD_TYPE_CD,
								                       A.ord_ymd,
								                       A.org_cd,
								                       LAG(A.ORD_YMD) OVER (PARTITION BY A.ENTER_CD, A.SABUN ORDER BY A.ENTER_CD, A.SABUN, A.ORD_YMD) AS PRE_YMD,
								                       LEAD(A.ORD_YMD) OVER (PARTITION BY A.ENTER_CD, A.SABUN ORDER BY A.ENTER_CD, A.SABUN, A.ORD_YMD) AS LEAD_YMD,
								                       LEAD(A.ORD_TYPE_CD) OVER (PARTITION BY A.ENTER_CD, A.SABUN ORDER BY A.ENTER_CD, A.SABUN, A.ORD_YMD) AS LEAD_TYPE_CD,
								                       ROW_NUMBER () OVER (PARTITION BY A.ENTER_CD, A.SABUN ORDER BY A.ORD_YMD ASC) AS ROW_CNT
								                  from THRM191 A, THRM100 B
								                 where A.ENTER_CD = B.ENTER_CD
                                                   AND A.SABUN = B.SABUN
                                                   AND A.enter_cd = #{ssnEnterCd}
								                 ) hist
								         ) B
                                  ) where sdate <> edate
                    -----------------------------
                          ) T
                     WHERE 1=1
                       AND A.ENTER_CD = T.ENTER_CD
                       AND A.SABUN    = T.SABUN
                       AND A.SDATE    = (SELECT MAX(SDATE)
                                           FROM THRM151
                                          WHERE ENTER_CD = A.ENTER_CD
                                            AND SABUN    = A.SABUN
                                            AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231'))
											 AND A.ENTER_CD = TRIM(#{ssnEnterCd})
                       AND (    T.SDATE BETWEEN NVL(REPLACE(TRIM(#{sdate}),'-',''), '19000101') AND NVL(REPLACE(TRIM(#{edate}),'-',''), '99991231')
                             OR T.EDATE BETWEEN NVL(REPLACE(TRIM(#{sdate}),'-',''), '19000101') AND NVL(REPLACE(TRIM(#{edate}),'-',''), '99991231'))
                       ]]>
					  <if test='searchYmd != null and !searchYmd.equals("")'>
					    AND NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')) BETWEEN T.SDATE AND NVL(T.EDATE, '99991231')					--기준일
					  </if>
					  <if test='searchOrgNm !=null and !searchOrgNm.equals("")'>
					    AND UPPER(F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))) LIKE '%' || UPPER(#{searchOrgNm}) || '%'
					  </if>
					  <if test='searchSabunName !=null and !searchSabunName.equals("")'>
					    AND ( UPPER(A.SABUN) LIKE '%'||UPPER(TRIM( #{searchSabunName} ))||'%' OR UPPER(F_COM_GET_NAMES(A.ENTER_CD, A.SABUN)) LIKE '%'||UPPER(TRIM( #{searchSabunName} ))||'%')
					  </if>
					  <if test='statusCd != null and !statusCd.equals("")'>
					    AND A.STATUS_CD IN
		<foreach collection="statusCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
					  </if>
                                              
					  ORDER BY F_COM_JIKJE_SORT(A.ENTER_CD, A.SABUN, NVL(REPLACE(#{searchYmd}, '-', ''), TO_CHAR(SYSDATE, 'YYYYMMDD')))


		</select>

</mapper>
