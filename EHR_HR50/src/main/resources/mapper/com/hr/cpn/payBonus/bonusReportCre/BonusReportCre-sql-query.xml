<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cpn.payBonus.bonusReportCre">

    <!-- 성과급확정 조회 -->
    <select parameterType="map" resultType="cMap"  id="getBonusReportCreList">
        <![CDATA[
             SELECT A.YYYY
                  , A.BONUS_GRP
                  , D.BONUS_TYPE
                  , F_COM_GET_ORG_NM2(B.ENTER_CD, B.SABUN, B.SDATE) AS ORG_NM
                  , A.SABUN
                  , C.NAME
                  , B.JIKWEE_NM
                  , B.JIKCHAK_NM
                  , CASE WHEN BONUS_TYPE = 'DIV' THEN
                        NVL(A.FINAL_MON, A.CONFIRM2_MON) 
                    ELSE 
                        NVL(A.FINAL_MON, A.PLAN_MON) 
                    END AS FINAL_MON
                  , A.REPORT_CRE_YN
              FROM TCPN615 A
                 , THRM151 B
                 , THRM100 C
                 , TCPN610 D
             WHERE A.ENTER_CD  = B.ENTER_CD
               AND A.SABUN     = B.SABUN
               AND A.ENTER_CD  = C.ENTER_CD
               AND A.SABUN     = C.SABUN
               AND A.ENTER_CD  = D.ENTER_CD 
               AND A.YYYY      = D.YYYY
               AND A.BONUS_GRP = D.BONUS_GRP
               AND A.ENTER_CD  = TRIM(#{ssnEnterCd}) /*회사코드*/
               AND A.YYYY      = TRIM(#{searchYear})
               AND B.SDATE     = ( SELECT BB.SDATE
                                     FROM THRM151 BB
                                    WHERE BB.ENTER_CD = B.ENTER_CD
                                      AND BB.SABUN   = B.SABUN
                                      AND TRIM(#{searchYear}) ||'1231' BETWEEN BB.SDATE AND NVL(BB.EDATE, '99991231')
                                 )
        ]]>
    </select>

    <!-- 성과급확정 저장 -->
    <update parameterType="map" id="saveBonusReportCre">
        MERGE INTO TCPN615 T 
             USING (
                    SELECT A.ENTER_CD      AS ENTER_CD 
                         , A.YYYY           AS YYYY
                         , A.BONUS_GRP      AS BONUS_GRP
                         , A.SABUN          AS SABUN
                         , A.FINAL_MON      AS FINAL_MON
                         , A.REPORT_CRE_YN  AS REPORT_CRE_YN
                      FROM ( SELECT NULL AS ENTER_CD 
                                  , NULL AS YYYY
                                  , NULL AS BONUS_GRP
                                  , NULL AS SABUN
                                  , NULL AS FINAL_MON
                                  , NULL AS REPORT_CRE_YN
                               FROM DUAL 
                <foreach item="rm" collection="mergeRows" >
                                UNION ALL 
                               SELECT TRIM(#{ssnEnterCd})     AS ENTER_CD 
                                    , TRIM(#{rm.yyyy})        AS YYYY
                                    , TRIM(#{rm.bonusGrp})    AS BONUS_GRP
                                    , TRIM(#{rm.sabun})       AS SABUN
                                    , TRIM(#{rm.finalMon})    AS FINAL_MON
                                    , TRIM(#{rm.reportCreYn}) AS REPORT_CRE_YN
                                FROM DUAL
                </foreach>
                             ) A 
                         WHERE A.YYYY       IS NOT NULL
                           AND A.BONUS_GRP  IS NOT NULL
                           AND A.SABUN      IS NOT NULL
            ) S 
            ON ( 
                      T.ENTER_CD  = S.ENTER_CD 
                 AND  T.YYYY      = S.YYYY 
                 AND  T.BONUS_GRP = S.BONUS_GRP 
                 AND  T.SABUN     = S.SABUN 
            ) 
            WHEN MATCHED THEN 
               UPDATE SET T.CHKDATE       = SYSDATE 
                        , T.CHKID         = #{ssnSabun}
                        , T.FINAL_MON     = S.FINAL_MON 
                        , T.REPORT_CRE_YN = S.REPORT_CRE_YN 
            WHEN NOT MATCHED THEN 
               INSERT 
               ( 
                          T.ENTER_CD
                        , T.YYYY
                        , T.BONUS_GRP
                        , T.SABUN
                        , T.FINAL_MON
                        , T.REPORT_CRE_YN
                        , T.CHKDATE
                        , T.CHKID
               ) 
               VALUES 
               ( 
                          S.ENTER_CD
                        , S.YYYY
                        , S.BONUS_GRP
                        , S.SABUN
                        , S.FINAL_MON
                        , S.REPORT_CRE_YN
                        , SYSDATE
                        , #{ssnSabun}
               ) 
    </update>

        <!-- 성과급확정 삭제 -->
    <delete id="deleteBonusReportCre">
        DELETE FROM TCPN615
              WHERE ENTER_CD = TRIM(#{ssnEnterCd}) 
                AND ( YYYY,BONUS_GRP,SABUN ) IN ( ( NULL,NULL,NULL) 
        <foreach item="rm" collection="deleteRows" >
            <if test='rm.yyyy and !rm.yyyy.equals("") and rm.bonusGrp and !rm.bonusGrp.equals("") and rm.sabun and !rm.sabun.equals("")'>
                 , ( TRIM( #{rm.yyyy} ),TRIM( #{rm.bonusGrp} ),TRIM( #{rm.sabun} )) 
            </if>
        </foreach>
               )
    </delete>


    <update id="callP_CPN_BONUS_RPT_CRE" parameterType="map" statementType="CALLABLE">
        <![CDATA[
            {CALL P_CPN_BONUS_RPT_CRE(
                      #{sqlCode,    mode=OUT, jdbcType=VARCHAR},
                      #{sqlErrm,    mode=OUT, jdbcType=VARCHAR},
                      #{ssnEnterCd, mode=IN,  jdbcType=VARCHAR},
                      #{searchYear, mode=IN,  jdbcType=VARCHAR},
                      #{ssnSabun,   mode=IN,  jdbcType=VARCHAR})}
        ]]>
    </update>
    
</mapper>