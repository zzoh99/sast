<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="cpn.element.eleLinkMonMgr">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getEleLinkMonMgrList">

				<![CDATA[
				SELECT A.SEQ,
				       A.ELEMENT_CD,
				       --B.ELEMENT_NM,
				       B.ELEMENT_NM2 AS ELEMENT_NM,
				       A.BASIC_MON,
				       A.SDATE,
				       A.EDATE,
				       C.SEARCH_SEQ,
				       C.SEARCH_DESC
				  FROM TCPN023 A,
				       (SELECT SUB1.*
				             , NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', SUB1.LANGUAGE_CD, #{ssnLocaleCd}), ELEMENT_NM) AS ELEMENT_NM2
				          FROM TCPN011 SUB1,
				               (SELECT MAX (SDATE) AS SDATE, ELEMENT_CD
				                  FROM TCPN011
				                 WHERE ENTER_CD = #{ssnEnterCd}
				                   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
				                 GROUP BY ELEMENT_CD) SUB2
				         WHERE SUB1.ENTER_CD = #{ssnEnterCd}
				           AND SUB1.ELEMENT_CD = SUB2.ELEMENT_CD
				           AND SUB1.SDATE = SUB2.SDATE) B,
				       THRI201 C
				 WHERE A.ENTER_CD = #{ssnEnterCd}
				   AND A.ENTER_CD = B.ENTER_CD
				   AND A.ELEMENT_CD = B.ELEMENT_CD
				           ]]>
				<if test='searchElementNm != null and !searchElementNm.equals("")'>
				   AND B.ELEMENT_NM LIKE  '%' || #{searchElementNm} || '%'
				</if>
				   -- 대상자 검색을 위한 검색 순번
				   AND A.ENTER_CD = C.ENTER_CD(+)
				   AND A.SEARCH_SEQ = C.SEARCH_SEQ(+)
				 ORDER BY B.GRP_SORT, B.ELEMENT_CD, A.BASIC_MON DESC



		</select>

<!-- 		저장 -->
		<update parameterType="map" id="saveEleLinkMonMgr">

				<![CDATA[
					MERGE INTO TCPN023 T
					USING	(
							SELECT	  A.SEQ
                                    , A.ELEMENT_CD
                                    , A.SDATE
							        , A.SEARCH_SEQ
							        , A.EDATE
                                    , A.BASIC_MON
							FROM	(
									SELECT	  NULL      AS SEQ
                                            , NULL      AS ELEMENT_CD
                                            , NULL      AS SDATE
									        , NULL		AS SEARCH_SEQ
											, NULL		AS EDATE
											, NULL		AS BASIC_MON
									FROM	DUAL
									]]>
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											<if test='rm.seq != null'>
												<choose>
													<when test='!rm.seq.equals("")'>
														TRIM(#{rm.seq}) 			AS SEQ
													</when>
													<otherwise>
														TO_CHAR( (SELECT (NVL(MAX(TO_NUMBER(SEQ)),0) + ${icnt}) FROM TCPN023) )	AS SEQ
														--icnt 증가
														<bind name="icnt" value="icnt + 1" />
													</otherwise>
												</choose>
											</if>



                                            , TRIM( #{rm.elementCd} )   AS ELEMENT_CD
                                            , TRIM( #{rm.sdate} )       AS SDATE
											, TRIM( #{rm.searchSeq} )	AS SEARCH_SEQ
											, TRIM( #{rm.edate} )	    AS EDATE
											, TRIM( #{rm.basicMon} )	AS BASIC_MON
											FROM   DUAL
</foreach>
									) A WHERE A.SEQ IS NOT NULL
							) S
					ON ( T.ENTER_CD	 = #{ssnEnterCd}
					AND T.ELEMENT_CD = S.ELEMENT_CD
                    AND T.SDATE      = S.SDATE
                    AND T.SEQ        = S.SEQ
                    AND T.SEARCH_SEQ        = S.SEARCH_SEQ
					 )
					WHEN MATCHED THEN
						UPDATE SET	  T.EDATE         = S.EDATE
									, T.BASIC_MON     = S.BASIC_MON
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.ELEMENT_CD
							, T.SDATE
							, T.SEQ
							, T.SEARCH_SEQ
                            , T.EDATE
                            , T.BASIC_MON
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #{ssnEnterCd}
							, S.ELEMENT_CD
                            , S.SDATE
							, S.SEQ
							, S.SEARCH_SEQ
							, S.EDATE
                            , S.BASIC_MON
							, SYSDATE
							, #{ssnSabun}
						)



		</update>
<!-- 		삭제 -->
		<delete parameterType="map" id="deleteEleLinkMonMgr">


					DELETE FROM TCPN023
					WHERE 	(ENTER_CD, ELEMENT_CD, SDATE, SEQ) IN 	(  (NULL, NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										  <if test='rm.elementCd != null and !rm.elementCd.equals("")'>
										      <if test='rm.sdate != null and !rm.sdate.equals("")'>
                                                  <if test='rm.seq != null and !rm.seq.equals("")'>
											         (#{ssnEnterCd}, TRIM( #{rm.elementCd} ), TRIM( #{rm.sdate} ), TRIM( #{rm.seq} ) )
												  </if>
											  </if>
										  </if>
										</if>
</foreach>
										)


		</delete>
	</mapper>
