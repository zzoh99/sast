<?xml version="1.0" encoding="UTF-8"?>
<!--
 * 퇴직계산일자관리
 * @author JM
-->
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="cpn.payRetire.sepPayDayMgr">
		<select parameterType="map" resultType="cMap" id="getSepPayDayMgrList">

				<![CDATA[
					SELECT A.PAY_ACTION_CD
						 , A.PAY_ACTION_NM
						 , A.PAY_YM
						 , A.PAY_CD
						 , A.PAYMENT_YMD
						 , A.ORD_SYMD
						 , A.ORD_EYMD
						 , A.TIME_YM
						 , A.CAL_TAX_METHOD
						 , A.CAL_TAX_SYM
						 , A.CAL_TAX_EYM
						 , A.ADD_TAX_RATE
						 , A.BON_SYMD
						 , A.BON_EYMD
						 , A.BON_CAL_TYPE
						 , A.BON_STD_CNT
						 , A.BON_APPLY_TYPE
						 , A.BON_MON_RATE
						 , A.WKP_METHOD
						 , A.WKP_UPDOWN_UNIT
						 , A.WKP_UPDOWN_TYPE
						 , A.AVGMON_UPDOWN_TYPE
						 , A.AVGMON_UPDOWN_UNIT
						 , A.PAYMENT_METHOD
						 , A.RET_MTH_YN
						 , A.RET_BON_YN
						 , A.RET_ALR_YN
						 , A.RET_ETCBON_YN
						 , A.BIGO
						 , DECODE(B.CLOSE_YN, 'Y', '1', 'N', '0') AS CLOSE_YN
					  FROM TCPN201 A
						 , TCPN981 B
					 WHERE A.ENTER_CD		= B.ENTER_CD(+)
					   AND A.PAY_ACTION_CD	= B.PAY_ACTION_CD(+)
					   AND A.ENTER_CD		= #{ssnEnterCd}
					           		]]>
					   AND A.PAY_CD IN 
					<foreach collection="searchPayCdIn" item="item" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
					<if test='payCd != null and !payCd.equals("")'>
					   AND A.PAY_CD			= #{payCd}
					</if>
					<if test='fromPayYm != null and !fromPayYm.equals("")'>
						<![CDATA[
					   AND A.PAY_YM			>= REPLACE(#{fromPayYm},'-','')
					           ]]>
					</if>
					<if test='toPayYm != null and !toPayYm.equals("")'>
						<![CDATA[
					   AND A.PAY_YM			<= REPLACE(#{toPayYm},'-','')
					           ]]>
					</if>
					<if test='fromPaymentYmd != null and !fromPaymentYmd.equals("")'>
						<![CDATA[
					   AND A.PAYMENT_YMD	>= REPLACE(#{fromPaymentYmd},'-','')
					           ]]>
					</if>
					<if test='toPaymentYmd != null and !toPaymentYmd.equals("")'>
						<![CDATA[
					   AND A.PAYMENT_YMD	<= REPLACE(#{toPaymentYmd},'-','')
					           ]]>
					</if>
					 ORDER BY A.PAYMENT_YMD DESC



		</select>
		<update parameterType="map" id="saveSepPayDayMgr">


					MERGE INTO TCPN201 T
					USING	(
							SELECT A.PAY_ACTION_CD
								 , A.PAY_ACTION_NM
								 , A.PAY_YM
								 , A.PAY_CD
								 , A.PAYMENT_YMD
								 , A.ORD_SYMD
								 , A.ORD_EYMD
								 , A.TIME_YM
								 , A.CAL_TAX_METHOD
								 , A.CAL_TAX_SYM
								 , A.CAL_TAX_EYM
								 , A.ADD_TAX_RATE
								 , A.BON_SYMD
								 , A.BON_EYMD
								 , A.GNT_SYMD
								 , A.GNT_EYMD
								 , A.BON_CAL_TYPE
								 , A.BON_STD_CNT
								 , A.BON_APPLY_TYPE
								 , A.BON_MON_RATE
								 , A.WKP_METHOD
								 , A.WKP_UPDOWN_UNIT
								 , A.WKP_UPDOWN_TYPE
								 , A.AVGMON_UPDOWN_TYPE
								 , A.AVGMON_UPDOWN_UNIT
								 , A.PAYMENT_METHOD
								 , A.RET_MTH_YN
								 , A.RET_BON_YN
								 , A.RET_ALR_YN
								 , A.RET_ETCBON_YN
								 , A.BIGO
							  FROM (
									SELECT NULL	AS PAY_ACTION_CD
										 , NULL	AS PAY_ACTION_NM
										 , NULL	AS PAY_YM
										 , NULL AS PAY_CD
										 , NULL AS PAYMENT_YMD
										 , NULL AS ORD_SYMD
										 , NULL AS ORD_EYMD
										 , NULL AS TIME_YM
										 , NULL AS CAL_TAX_METHOD
										 , NULL AS CAL_TAX_SYM
										 , NULL AS CAL_TAX_EYM
										 , NULL AS ADD_TAX_RATE
										 , NULL AS BON_SYMD
										 , NULL AS BON_EYMD
										 , NULL AS GNT_SYMD
										 , NULL AS GNT_EYMD
										 , NULL AS BON_CAL_TYPE
										 , NULL AS BON_STD_CNT
										 , NULL AS BON_APPLY_TYPE
										 , NULL AS BON_MON_RATE
										 , NULL AS WKP_METHOD
										 , NULL AS WKP_UPDOWN_UNIT
										 , NULL AS WKP_UPDOWN_TYPE
										 , NULL AS AVGMON_UPDOWN_TYPE
										 , NULL AS AVGMON_UPDOWN_UNIT
										 , NULL AS PAYMENT_METHOD
										 , NULL AS RET_MTH_YN
										 , NULL AS RET_BON_YN
										 , NULL AS RET_ALR_YN
										 , NULL AS RET_ETCBON_YN
										 , NULL AS BIGO
									  FROM DUAL
<foreach item="rm" collection="mergeRows" >
									UNION ALL
									SELECT CASE WHEN #{rm.payActionCd} IS NULL OR TRIM(#{rm.payActionCd}) = '' THEN
													(SELECT TRIM(#{rm.payYm})||TRIM(TO_CHAR(TO_NUMBER(NVL(MAX(SUBSTR(PAY_ACTION_CD, 7, 3)), '0')) + 1, '000'))
													   FROM TCPN201
													  WHERE ENTER_CD = #{ssnEnterCd}
													    AND SUBSTR(PAY_ACTION_CD, 1, 6) = TRIM(#{rm.payYm}))
												ELSE TRIM(#{rm.payActionCd}) END PAY_ACTION_CD
										 , TRIM(#{rm.payActionNm}) AS PAY_ACTION_NM
										 , TRIM(#{rm.payYm})					AS PAY_YM
										 , TRIM(#{rm.payCd})					AS PAY_CD
										 , TRIM(#{rm.paymentYmd})				AS PAYMENT_YMD
										 , TRIM(#{rm.ordSymd})					AS ORD_SYMD
										 , TRIM(#{rm.ordEymd})					AS ORD_EYMD
										 , TRIM(#{rm.timeYm})					AS TIME_YM
										 , TRIM(#{rm.calTaxMethod})				AS CAL_TAX_METHOD
										 , TRIM(#{rm.calTaxSym})				AS CAL_TAX_SYM
										 , TRIM(#{rm.calTaxEym})				AS CAL_TAX_EYM
										 , TO_NUMBER(TRIM(#{rm.addTaxRate}))	AS ADD_TAX_RATE
										 , TRIM(#{rm.bonSymd})					AS BON_SYMD
										 , TRIM(#{rm.bonEymd})					AS BON_EYMD
										 , TRIM(#{rm.gntSymd})					AS GNT_SYMD
										 , TRIM(#{rm.gntEymd})					AS GNT_EYMD
										 , TRIM(#{rm.bonCalType})				AS BON_CAL_TYPE
										 , TO_NUMBER(TRIM(#{rm.bonStdCnt}))		AS BON_STD_CNT
										 , TRIM(#{rm.bonApplyType})				AS BON_APPLY_TYPE
										 , TRIM(#{rm.bonMonRate})				AS BON_MON_RATE
										 , TRIM(#{rm.wkpMethod})				AS WKP_METHOD
										 , TRIM(#{rm.wkpUpdownUnit})			AS WKP_UPDOWN_UNIT
										 , TRIM(#{rm.wkpUpdownType})			AS WKP_UPDOWN_TYPE
										 , TRIM(#{rm.avgmonUpdownType})			AS AVGMON_UPDOWN_TYPE
										 , TRIM(#{rm.avgmonUpdownUnit})			AS AVGMON_UPDOWN_UNIT
										 , TRIM(#{rm.paymentMethod})			AS PAYMENT_METHOD
										 , TRIM(#{rm.retMthYn})					AS RET_MTH_YN
										 , TRIM(#{rm.retBonYn})					AS RET_BON_YN
										 , TRIM(#{rm.retAlrYn})					AS RET_ALR_YN
										 , TRIM(#{rm.retEtcbonYn})				AS RET_ETCBON_YN
										 , TRIM(#{rm.bigo})						AS BIGO
									  FROM DUAL
</foreach>
									) A
							WHERE A.PAY_ACTION_CD	IS NOT NULL
							) S
					ON	(	T.ENTER_CD		= #{ssnEnterCd}
						AND	T.PAY_ACTION_CD	= S.PAY_ACTION_CD
						)
					WHEN MATCHED THEN
						UPDATE SET T.PAY_ACTION_NM		= S.PAY_ACTION_NM
								 , T.PAY_YM				= S.PAY_YM
								 , T.PAY_CD				= S.PAY_CD
								 , T.PAYMENT_YMD		= S.PAYMENT_YMD
								 , T.ORD_SYMD			= S.ORD_SYMD
								 , T.ORD_EYMD			= S.ORD_EYMD
								 , T.TIME_YM			= S.TIME_YM
								 , T.CAL_TAX_METHOD		= S.CAL_TAX_METHOD
								 , T.CAL_TAX_SYM		= S.CAL_TAX_SYM
								 , T.CAL_TAX_EYM		= S.CAL_TAX_EYM
								 , T.ADD_TAX_RATE		= S.ADD_TAX_RATE
								 , T.BON_SYMD			= S.BON_SYMD
								 , T.BON_EYMD			= S.BON_EYMD
								 , T.GNT_SYMD			= S.GNT_SYMD
								 , T.GNT_EYMD			= S.GNT_EYMD
								 , T.BON_CAL_TYPE		= S.BON_CAL_TYPE
								 , T.BON_STD_CNT		= S.BON_STD_CNT
								 , T.BON_APPLY_TYPE		= S.BON_APPLY_TYPE
								 , T.BON_MON_RATE		= S.BON_MON_RATE
								 , T.WKP_METHOD			= S.WKP_METHOD
								 , T.WKP_UPDOWN_UNIT	= S.WKP_UPDOWN_UNIT
								 , T.WKP_UPDOWN_TYPE	= S.WKP_UPDOWN_TYPE
								 , T.AVGMON_UPDOWN_TYPE	= S.AVGMON_UPDOWN_TYPE
								 , T.AVGMON_UPDOWN_UNIT	= S.AVGMON_UPDOWN_UNIT
								 , T.PAYMENT_METHOD		= S.PAYMENT_METHOD
								 , T.RET_MTH_YN			= S.RET_MTH_YN
								 , T.RET_BON_YN			= S.RET_BON_YN
								 , T.RET_ALR_YN			= S.RET_ALR_YN
								 , T.RET_ETCBON_YN		= S.RET_ETCBON_YN
								 , T.BIGO				= S.BIGO
								 , T.CHKDATE			= SYSDATE
								 , T.CHKID				= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							T.ENTER_CD
						  , T.PAY_ACTION_CD
						  , T.PAY_ACTION_NM
						  , T.PAY_YM
						  , T.PAY_CD
						  , T.PAYMENT_YMD
						  , T.ORD_SYMD
						  , T.ORD_EYMD
						  , T.TIME_YM
						  , T.CAL_TAX_METHOD
						  , T.CAL_TAX_SYM
						  , T.CAL_TAX_EYM
						  , T.ADD_TAX_RATE
						  , T.BON_SYMD
						  , T.BON_EYMD
						  , T.GNT_SYMD
						  , T.GNT_EYMD
						  , T.BON_CAL_TYPE
						  , T.BON_STD_CNT
						  , T.BON_APPLY_TYPE
						  , T.BON_MON_RATE
						  , T.WKP_METHOD
						  , T.WKP_UPDOWN_UNIT
						  , T.WKP_UPDOWN_TYPE
						  , T.AVGMON_UPDOWN_TYPE
						  , T.AVGMON_UPDOWN_UNIT
						  , T.PAYMENT_METHOD
						  , T.RET_MTH_YN
						  , T.RET_BON_YN
						  , T.RET_ALR_YN
						  , T.RET_ETCBON_YN
						  , T.BIGO
						  , T.CHKDATE
						  , T.CHKID
						)
						VALUES
						(
							#{ssnEnterCd}
						  , S.PAY_ACTION_CD
						  , S.PAY_ACTION_NM
						  , S.PAY_YM
						  , S.PAY_CD
						  , S.PAYMENT_YMD
						  , S.ORD_SYMD
						  , S.ORD_EYMD
						  , S.TIME_YM
						  , S.CAL_TAX_METHOD
						  , S.CAL_TAX_SYM
						  , S.CAL_TAX_EYM
						  , S.ADD_TAX_RATE
						  , S.BON_SYMD
						  , S.BON_EYMD
						  , S.GNT_SYMD
						  , S.GNT_EYMD
						  , S.BON_CAL_TYPE
						  , S.BON_STD_CNT
						  , S.BON_APPLY_TYPE
						  , S.BON_MON_RATE
						  , S.WKP_METHOD
						  , S.WKP_UPDOWN_UNIT
						  , S.WKP_UPDOWN_TYPE
						  , S.AVGMON_UPDOWN_TYPE
						  , S.AVGMON_UPDOWN_UNIT
						  , S.PAYMENT_METHOD
						  , S.RET_MTH_YN
						  , S.RET_BON_YN
						  , S.RET_ALR_YN
						  , S.RET_ETCBON_YN
						  , S.BIGO
						  , SYSDATE
						  , #{ssnSabun}
						)



		</update>
		<delete parameterType="map" id="deleteSepPayDayMgr">


					DELETE FROM TCPN201
					 WHERE ENTER_CD||'_'||PAY_ACTION_CD IN ( NULL
<foreach item="rm" collection="deleteRows" >
						,
							<if test='ssnEnterCd != null and !ssnEnterCd.equals("") and rm.payActionCd != null and !rm.payActionCd.equals("")'>
								TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.payActionCd})
							</if>
</foreach>
							)



		</delete>
	</mapper>
