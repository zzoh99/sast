<?xml version="1.0" encoding="UTF-8"?>
<!--
 * 업로드항목관리
-->
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cpn.payUpload.payUploadEleMgr">
	<select parameterType="map" resultType="cMap" id="getPayUploadEleMgrList">
		SELECT A.PAY_CD
			 , A.ELEMENT_CD
			 , B.ELEMENT_TYPE
			 , A.SEQ
		  FROM TCPN240 A
			 , TCPN011 B
		 WHERE A.ENTER_CD = B.ENTER_CD
		   AND A.ELEMENT_CD = B.ELEMENT_CD
		   AND A.ENTER_CD = #{ssnEnterCd}
		   AND A.PAY_CD   = TRIM(#{searchPayCd})
		   AND B.SDATE = (
							SELECT MAX(SDATE)
							  FROM TCPN011
							 WHERE ENTER_CD = A.ENTER_CD
							   AND ELEMENT_CD = A.ELEMENT_CD
							   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
					     )
		<if test="searchElementType != null and searchElementType neq ''">
		  AND B.ELEMENT_TYPE	= TRIM(#{searchElementType})
		</if>
		 ORDER BY A.SEQ, A.ELEMENT_CD
	</select>

	<update id="savePayUploadEleMgr" parameterType="map">
		MERGE INTO TCPN240 T
		USING	(
				SELECT A.ENTER_CD
					 , A.PAY_CD
					 , A.ELEMENT_CD
					 , A.SEQ
				FROM (
					SELECT NULL		AS ENTER_CD
						 , NULL		AS PAY_CD
						 , NULL		AS ELEMENT_CD
						 , NULL 	AS SEQ
					FROM DUAL
<foreach item="rm" collection="mergeRows" >
				UNION ALL
						SELECT TRIM(#{ssnEnterCd})		AS ENTER_CD
							 , TRIM(#{rm.payCd})		AS PAY_CD
							 , TRIM(#{rm.elementCd})	AS ELEMENT_CD
							 , TRIM(#{rm.seq})			AS SEQ
						  FROM DUAL
</foreach>
						) A
						WHERE A.PAY_CD IS NOT NULL
						AND A.ELEMENT_CD IS NOT NULL
						AND A.SEQ IS NOT NULL
				) S
			ON (	T.ENTER_CD			= S.ENTER_CD
				AND	T.PAY_CD			= S.PAY_CD
				AND	T.ELEMENT_CD		= S.ELEMENT_CD
				)
			WHEN MATCHED THEN
				UPDATE SET T.SEQ		= S.SEQ
						 , T.CHKDATE	= SYSDATE
						 , T.CHKID		= #{ssnSabun}
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.PAY_CD
					, T.ELEMENT_CD
					, T.SEQ
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #{ssnEnterCd}
					, S.PAY_CD
					, S.ELEMENT_CD
					, S.SEQ
					, SYSDATE
					, #{ssnSabun}
				)
	</update>

	<delete id="deletePayUploadEleMgr" parameterType="map">
		DELETE FROM TCPN240
		 WHERE (ENTER_CD, PAY_CD, ELEMENT_CD) IN ( (NULL, NULL, NULL)
		<foreach item="rm" collection="deleteRows">
			<if test="ssnEnterCd != null and ssnEnterCd neq '' and rm.payCd != null and rm.payCd neq '' and rm.elementCd != null and rm.elementCd neq ''">
				, (TRIM(#{ssnEnterCd}), TRIM(#{rm.payCd}), TRIM(#{rm.elementCd}))
			</if>
		</foreach>
		)
	</delete>
</mapper>