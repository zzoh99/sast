<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="cpn.basisConfig.payComMgr">
<!-- 		사업장관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getPayComMgrMasterList">

				<![CDATA[
	 	       SELECT A.BUSINESS_PLACE_CD, A.BUSINESS_PLACE_NM
			     FROM
					  (SELECT MAP_CD AS BUSINESS_PLACE_CD,
							  MAP_NM AS BUSINESS_PLACE_NM
					     FROM TORG109
					    WHERE ENTER_CD = #{ssnEnterCd}
						  AND MAP_TYPE_CD = '100'
						  AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')) A
			    GROUP BY A.BUSINESS_PLACE_CD, A.BUSINESS_PLACE_NM
			    ORDER BY A.BUSINESS_PLACE_CD, A.BUSINESS_PLACE_NM
				]]>


		</select>
		
<!-- 		사업장관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getPayComMgrList">
					SELECT 	  A.ENTER_CD
							, A.BUSINESS_PLACE_CD
							, A.SDATE
							, A.EDATE
							, A.MAP_TYPE_CD
							, A.BUSINESS_PLACE_NM
							, A.BUSINESS_PLACE_ENG_NM
							, A.REGINO
							, A.PRESIDENT, A.ENGPRESIDENT, A.COMTYPE, A.ENGCOMTYPE, A.ITEM, A.ENGITEM
							, A.HI_NO
							, A.NP_NO
							, A.EP_NO
							, A.AI_NO
							, A.TEL_NO
							, A.TAX_NO
							, A.OFFICE_NM
							, A.OFFICE_ENG_NM
							, A.BUSINESS_PLACE_NM
							, A.BUSINESS_PLACE_ENG_NM
							, A.E_UNION_NM
							, A.E_UNION_NO
							, A.E_UNION_UNDER_NO
							, A.MAIN_PLACE_YN
							, A.OTAX_ACCOUNT_NO
							, A.LOCATION_CD
							, A.FILE_SEQ
							, B.ZIP, (B.ADDR || ' ' || B.DETAIL_ADDR) AS ADDR, B.ENG_ADDR
					  FROM TCPN121 A,
                           TSYS015 B,
                           TORG109 C
					 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                       AND A.ENTER_CD = B.ENTER_CD(+)
                       AND A.ENTER_CD = C.ENTER_CD(+)
                       AND A.LOCATION_CD = B.LOCATION_CD(+)
                       AND A.LOCATION_CD = C.MAP_CD(+)
                       AND C.MAP_TYPE_CD(+) = '600'
                       AND A.SDATE = (SELECT MAX(SDATE) FROM TCPN121 WHERE ENTER_CD = TRIM(#{ssnEnterCd}) AND BUSINESS_PLACE_CD = TRIM(#{searchBusinessPlaceCd}))
                       AND A.SDATE BETWEEN C.SDATE(+) AND NVL(C.EDATE(+),'99991231')
			<if test='searchBusinessPlaceCd != null and !searchBusinessPlaceCd.equals("")'>
   					   AND A.BUSINESS_PLACE_CD = TRIM(#{searchBusinessPlaceCd})
			</if>
		</select>

<!-- 		사업장관리 저장 -->
		<update parameterType="map" id="savePayComMgr">

					MERGE INTO TCPN121 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.BUSINESS_PLACE_CD
									, A.SDATE
									, A.EDATE
									, A.MAP_TYPE_CD
									, A.BUSINESS_PLACE_NM
									, A.BUSINESS_PLACE_ENG_NM
									, A.REGINO
									, A.PRESIDENT
									, A.ENGPRESIDENT
									, A.COMTYPE
									, A.ENGCOMTYPE
									, A.ITEM
									, A.ENGITEM
									, A.HI_NO
									, A.NP_NO
									, A.EP_NO
									, A.E_UNION_NM
									, A.E_UNION_NO
									, A.E_UNION_UNDER_NO
									, A.AI_NO
									, A.TEL_NO
									, A.LOCATION_CD
									, A.TAX_NO
									, A.OFFICE_NM
									, A.OFFICE_ENG_NM
									, A.MAIN_PLACE_YN
									, A.OTAX_ACCOUNT_NO
									, A.SABUN
									, A.FILE_SEQ
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS BUSINESS_PLACE_CD
											, NULL		AS SDATE
											, NULL		AS EDATE
											, NULL		AS MAP_TYPE_CD
											, NULL		AS BUSINESS_PLACE_NM
											, NULL		AS BUSINESS_PLACE_ENG_NM
											, NULL		AS PRESIDENT
											, NULL		AS ENGPRESIDENT
											, NULL		AS COMTYPE
											, NULL		AS ENGCOMTYPE
											, NULL		AS ITEM
											, NULL		AS ENGITEM
											, NULL		AS HI_NO
											, NULL		AS NP_NO
											, NULL		AS EP_NO
											, NULL		AS E_UNION_NM
											, NULL		AS E_UNION_NO
											, NULL		AS E_UNION_UNDER_NO
											, NULL		AS AI_NO
											, NULL		AS TEL_NO
											, NULL		AS LOCATION_CD
											, NULL		AS TAX_NO
											, NULL		AS OFFICE_NM
											, NULL		AS OFFICE_ENG_NM
											, NULL		AS MAIN_PLACE_YN
											, NULL		AS OTAX_ACCOUNT_NO
											, NULL		AS SABUN
											, NULL      AS REGINO
											, NULL		AS FILE_SEQ
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  TRIM( #{ssnEnterCd} )	AS ENTER_CD
											, TRIM( #{rm.businessPlaceCd} )	AS BUSINESS_PLACE_CD
											, TRIM( #{rm.sdate} )	AS SDATE
											, TRIM( #{rm.edate} )	AS EDATE
											, TRIM( #{rm.mapTypeCd} )	AS MAP_TYPE_CD
											, TRIM( #{rm.businessPlaceNm} )	AS BUSINESS_PLACE_NM
											, TRIM( #{rm.businessPlaceEngNm} )	AS BUSINESS_PLACE_ENG_NM
											, TRIM( #{rm.president} ) AS PRESIDENT
											, TRIM( #{rm.engpresident} ) AS ENGPRESIDENT
											, TRIM( #{rm.comtype} ) AS COMTYPE
											, TRIM( #{rm.engcomtype} ) AS ENGCOMTYPE
											, TRIM( #{rm.item} ) AS ITEM
											, TRIM( #{rm.engitem} ) AS ENGITEM
											, TRIM( #{rm.hiNo} ) AS HI_NO
											, TRIM( #{rm.npNo} ) AS NP_NO
											, TRIM( #{rm.epNo} ) AS EP_NO
											, TRIM( #{rm.eUnionNm} ) AS E_UNION_NM
											, TRIM( #{rm.eUnionNo} ) AS E_UNION_NO
											, TRIM( #{rm.eUnionUnderNo} ) AS E_UNION_UNDER_NO
											, TRIM( #{rm.aiNo} ) AS AI_NO
											, TRIM( #{rm.telNo} ) AS TEL_NO
											, TRIM( #{rm.locationCd} ) AS LOCATION_CD
											, TRIM( #{rm.taxNo} ) AS TAX_NO
											, TRIM( #{rm.officeNm} ) AS OFFICE_NM
											, TRIM( #{rm.officeEngNm} ) AS OFFICE_ENG_NM
											, TRIM( #{rm.mainPlaceYn} ) AS MAIN_PLACE_YN
											, TRIM( #{rm.otaxAccountNo} ) AS OTAX_ACCOUNT_NO
											, #{ssnSabun} AS SABUN
											, REPLACE(TRIM( #{rm.regino} ),'-','') AS REGINO
											, TRIM( #{rm.fileSeq} ) AS FILE_SEQ
											FROM   DUAL
</foreach>
									) A WHERE A.BUSINESS_PLACE_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD
					AND T.SDATE = S.SDATE
					AND T.BUSINESS_PLACE_CD = S.BUSINESS_PLACE_CD)
					WHEN MATCHED THEN
						UPDATE SET	  T.EDATE = S.EDATE
									, T.MAP_TYPE_CD	= S.MAP_TYPE_CD
									, T.BUSINESS_PLACE_NM	= S.BUSINESS_PLACE_NM
									, T.BUSINESS_PLACE_ENG_NM	= S.BUSINESS_PLACE_ENG_NM
									, T.REGINO = S.REGINO
									, T.PRESIDENT = S.PRESIDENT
									, T.ENGPRESIDENT = S.ENGPRESIDENT
									, T.COMTYPE = S.COMTYPE
									, T.ENGCOMTYPE = S.ENGCOMTYPE
									, T.ITEM = S.ITEM
									, T.ENGITEM = S.ENGITEM
									, T.HI_NO = S.HI_NO
									, T.NP_NO = S.NP_NO
									, T.EP_NO = S.EP_NO
									, T.E_UNION_NM = S.E_UNION_NM
									, T.E_UNION_NO = S.E_UNION_NO
									, T.E_UNION_UNDER_NO = S.E_UNION_UNDER_NO
									, T.AI_NO = S.AI_NO
									, T.TEL_NO = S.TEL_NO
									, T.LOCATION_CD = S.LOCATION_CD
									, T.TAX_NO = S.TAX_NO
									, T.OFFICE_NM = S.OFFICE_NM
									, T.OFFICE_ENG_NM = S.OFFICE_ENG_NM
									, T.MAIN_PLACE_YN = S.MAIN_PLACE_YN
									, T.OTAX_ACCOUNT_NO = S.OTAX_ACCOUNT_NO
									, T.FILE_SEQ = S.FILE_SEQ
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= S.SABUN
					WHEN NOT MATCHED THEN
						INSERT
						(
						      T.ENTER_CD
							, T.BUSINESS_PLACE_CD
							, T.SDATE
							, T.EDATE
							, T.MAP_TYPE_CD
							, T.BUSINESS_PLACE_NM
							, T.BUSINESS_PLACE_ENG_NM
							, T.REGINO
							, T.PRESIDENT
							, T.ENGPRESIDENT
							, T.COMTYPE
							, T.ENGCOMTYPE
							, T.ITEM
							, T.ENGITEM
							, T.HI_NO
							, T.NP_NO
							, T.EP_NO
							, T.E_UNION_NM
							, T.E_UNION_NO
							, T.E_UNION_UNDER_NO
							, T.AI_NO
							, T.TEL_NO
							, T.LOCATION_CD
							, T.TAX_NO
							, T.OFFICE_NM
							, T.OFFICE_ENG_NM
							, T.MAIN_PLACE_YN
							, T.OTAX_ACCOUNT_NO
							, T.FILE_SEQ
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.BUSINESS_PLACE_CD
							, S.SDATE
							, S.EDATE
							, S.MAP_TYPE_CD
							, S.BUSINESS_PLACE_NM
							, S.BUSINESS_PLACE_ENG_NM
							, S.REGINO
							, S.PRESIDENT
							, S.ENGPRESIDENT
							, S.COMTYPE
							, S.ENGCOMTYPE
							, S.ITEM
							, S.ENGITEM
							, S.HI_NO
							, S.NP_NO
							, S.EP_NO
							, S.E_UNION_NM
							, S.E_UNION_NO
							, S.E_UNION_UNDER_NO
							, S.AI_NO
							, S.TEL_NO
							, S.LOCATION_CD
							, S.TAX_NO
							, S.OFFICE_NM
							, S.OFFICE_ENG_NM
							, S.MAIN_PLACE_YN
							, S.OTAX_ACCOUNT_NO
							, S.FILE_SEQ
							, SYSDATE
							, S.SABUN
						)
		</update>
		
<!-- 		사업장관리 삭제 -->
		<delete parameterType="map" id="deletePayComMgr">

					DELETE FROM TCPN121
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND ENTER_CD||'_'||BUSINESS_PLACE_CD IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.businessPlaceCd != null and !rm.businessPlaceCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.businessPlaceCd})
										</if>
</foreach>
										)

		</delete>

	</mapper>
