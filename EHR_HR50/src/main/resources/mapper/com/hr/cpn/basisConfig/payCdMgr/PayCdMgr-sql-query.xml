<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="cpn.basisConfig.payCdMgr">
<!-- 		조회 -->
		<select parameterType="map" resultType="cMap" id="getPayCdMgrList">
				<![CDATA[
					SELECT PAY_CD
					     , PAY_NM
					     , BUSINESS_PLACE_CD
					     , RUN_TYPE
					     , PAYMENT_MM
					     , PAYMENT_DD
					     , SEP_BON_YN
					     , BP_CAL_YN
					     , ELEMENT_SET_CD
					     , SEP_PAY_CD
					     , SEARCH_SEQ
					     , (SELECT SEARCH_DESC FROM THRI201 WHERE ENTER_CD = A.ENTER_CD AND SEARCH_SEQ = A.SEARCH_SEQ) AS SEARCH_SEQ_NM
					     , BON_RATE
					     , ACCOUNT_TYPE
					     , GROUP_1
					     , GROUP_2
					     , GROUP_3
					     , GROUP_4
					     , GROUP_5
					     , MAN_DED_YN
					     , SPC_DED_YN
					     , CURRENCY_CD
					     , A.LANGUAGE_CD
					     , F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tcpn051',  A.LANGUAGE_CD,#{ssnLocaleCd}) AS LANGUAGE_NM
					  FROM TCPN051 A
					 WHERE ENTER_CD = #{ssnEnterCd}
					 ORDER BY PAY_CD, PAY_NM
				]]>
		</select>

<!-- 		저장 -->
		<update parameterType="map" id="savePayCdMgr">
					MERGE INTO TCPN051 T
                    USING   (
                            SELECT    A.PAY_CD
                                    , A.BUSINESS_PLACE_CD
                                    , A.RUN_TYPE
                                    , A.PAY_NM
									, A.SEP_BON_YN
									, A.BP_CAL_YN
									, A.ELEMENT_SET_CD
									, A.SEP_PAY_CD
									, A.SEARCH_SEQ
									, A.PAYMENT_DD
									, A.PAYMENT_MM
									, A.BON_RATE
									, A.ACCOUNT_TYPE
									, A.MAN_DED_YN
									, A.SPC_DED_YN
									, A.GROUP_1
									, A.GROUP_2
									, A.GROUP_3
									, A.GROUP_4
									, A.GROUP_5
									, A.CURRENCY_CD
									, A.LANGUAGE_CD
                            FROM    (
                                    SELECT    NULL AS PAY_CD
                                            , NULL AS BUSINESS_PLACE_CD
                                            , NULL AS RUN_TYPE
                                            , NULL AS PAY_NM
											, NULL AS SEP_BON_YN
											, NULL AS BP_CAL_YN
											, NULL AS ELEMENT_SET_CD
											, NULL AS SEP_PAY_CD
											, NULL AS SEARCH_SEQ
											, NULL AS PAYMENT_DD
											, NULL AS PAYMENT_MM
											, NULL AS BON_RATE
											, NULL AS ACCOUNT_TYPE
											, NULL AS MAN_DED_YN
											, NULL AS SPC_DED_YN
											, NULL AS GROUP_1
											, NULL AS GROUP_2
											, NULL AS GROUP_3
											, NULL AS GROUP_4
											, NULL AS GROUP_5
											, NULL AS CURRENCY_CD
											, NULL AS LANGUAGE_CD
                                    FROM    DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
                            UNION ALL
                                    SELECT    TRIM(#{rm.payCd})       AS PAY_CD
                                            , TRIM(#{rm.businessPlaceCd})     AS BUSINESS_PLACE_CD
                                            , TRIM(#{rm.runType})     AS RUN_TYPE
                                            , TRIM(#{rm.payNm})       AS PAY_NM
											, TRIM(#{rm.sepBonYn})    AS SEP_BON_YN
											, TRIM(#{rm.bpCalYn})     AS BP_CAL_YN
											, TRIM(#{rm.elementSetCd})     AS ELEMENT_SET_CD
											, TRIM(#{rm.sepPayCd})    AS SEP_PAY_CD
											, TRIM(#{rm.searchSeq})   AS SEARCH_SEQ
											, TRIM(#{rm.paymentDd})   AS PAYMENT_DD
											, TRIM(#{rm.paymentMm})   AS PAYMENT_MM
											, TRIM(#{rm.bonRate})     AS BON_RATE
											, TRIM(#{rm.accountType}) AS ACCOUNT_TYPE
											, TRIM(#{rm.manDedYn})    AS MAN_DED_YN
											, TRIM(#{rm.spcDedYn})    AS SPC_DED_YN
											, TRIM(#{rm.group1})      AS GROUP_1
											, TRIM(#{rm.group2})      AS GROUP_2
											, TRIM(#{rm.group3})      AS GROUP_3
											, TRIM(#{rm.group4})      AS GROUP_4
											, TRIM(#{rm.group5})      AS GROUP_5
											, TRIM(#{rm.currencyCd})  AS CURRENCY_CD
											, TRIM(#{rm.languageCd})  AS LANGUAGE_CD
                                        FROM   DUAL
</foreach>
                                    ) A WHERE A.PAY_CD IS NOT NULL
                            ) S
                    ON (    T.ENTER_CD  = #{ssnEnterCd}
                        AND T.PAY_CD = S.PAY_CD
                       )
                    WHEN MATCHED THEN
                        UPDATE SET    T.BUSINESS_PLACE_CD = S.BUSINESS_PLACE_CD
									, T.RUN_TYPE       = S.RUN_TYPE
									, T.PAY_NM         = S.PAY_NM
									, T.SEP_BON_YN     = S.SEP_BON_YN
									, T.BP_CAL_YN      = S.BP_CAL_YN
									, T.ELEMENT_SET_CD      = S.ELEMENT_SET_CD
									, T.SEP_PAY_CD     = S.SEP_PAY_CD
									, T.SEARCH_SEQ     = S.SEARCH_SEQ
									, T.PAYMENT_DD     = S.PAYMENT_DD
									, T.PAYMENT_MM     = S.PAYMENT_MM
									, T.BON_RATE       = S.BON_RATE
									, T.ACCOUNT_TYPE   = S.ACCOUNT_TYPE
									, T.MAN_DED_YN     = S.MAN_DED_YN
									, T.SPC_DED_YN     = S.SPC_DED_YN
									, T.GROUP_1        = S.GROUP_1
									, T.GROUP_2        = S.GROUP_2
									, T.GROUP_3        = S.GROUP_3
									, T.GROUP_4        = S.GROUP_4
									, T.GROUP_5        = S.GROUP_5
									, T.CURRENCY_CD    = S.CURRENCY_CD
									, T.LANGUAGE_CD    = S.LANGUAGE_CD
									, T.CHKDATE        = SYSDATE
									, T.CHKID          = #{ssnSabun}
                    WHEN NOT MATCHED THEN
                        INSERT
                        (
							  T.ENTER_CD
							, T.PAY_CD
							, T.BUSINESS_PLACE_CD
							, T.RUN_TYPE
							, T.PAY_NM
							, T.SEP_BON_YN
							, T.BP_CAL_YN
							, T.ELEMENT_SET_CD
							, T.SEP_PAY_CD
							, T.SEARCH_SEQ
							, T.PAYMENT_DD
							, T.PAYMENT_MM
							, T.BON_RATE
							, T.ACCOUNT_TYPE
							, T.MAN_DED_YN
							, T.SPC_DED_YN
							, T.GROUP_1
							, T.GROUP_2
							, T.GROUP_3
							, T.GROUP_4
							, T.GROUP_5
							, T.CURRENCY_CD
							, T.LANGUAGE_CD
							, T.CHKDATE
							, T.CHKID
                        )
                        VALUES
                        (
                              #{ssnEnterCd}
                            , S.PAY_CD
							, S.BUSINESS_PLACE_CD
							, S.RUN_TYPE
							, S.PAY_NM
							, S.SEP_BON_YN
							, S.BP_CAL_YN
							, S.ELEMENT_SET_CD
							, S.SEP_PAY_CD
							, S.SEARCH_SEQ
							, S.PAYMENT_DD
							, S.PAYMENT_MM
							, S.BON_RATE
							, S.ACCOUNT_TYPE
							, S.MAN_DED_YN
							, S.SPC_DED_YN
							, S.GROUP_1
							, S.GROUP_2
							, S.GROUP_3
							, S.GROUP_4
							, S.GROUP_5
							, S.CURRENCY_CD
							, S.LANGUAGE_CD
							, SYSDATE
                            , #{ssnSabun}
                        )
		</update>
		
<!-- 		삭제 -->
		<delete parameterType="map" id="deletePayCdMgr">
					DELETE FROM TCPN051
                    WHERE   (ENTER_CD, PAY_CD) IN   (  (NULL, NULL)
<foreach item="rm" collection="deleteRows" >
                        ,
                                        <if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
                                           <if test='rm.payCd != null and !rm.payCd.equals("")'>
                                             (#{ssnEnterCd}, TRIM(#{rm.payCd}))
										   </if>
										</if>
</foreach>
                                        )
		</delete>
	</mapper>
