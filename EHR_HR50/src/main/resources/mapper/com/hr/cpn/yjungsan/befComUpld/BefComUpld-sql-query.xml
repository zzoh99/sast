<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cpn.yjungsan.befComUpld">
    <select parameterType="map" resultType="cMap" id="getBefComUpldList">
		<![CDATA[
		SELECT A.ENTER_CD
			 , A.WORK_YY
			 , A.ADJUST_TYPE
			 , A.SABUN
			 , A.SEQ
			 , A.ENTER_NO
			 , A.ENTER_NM
			 , A.WORK_S_YMD
			 , A.WORK_E_YMD
			 , A.PAY_MON
			 , A.BONUS_MON
			 , A.ETC_BONUS_MON
			 , A.INCOME_TAX_MON
			 , A.INHBT_TAX_MON
			 , A.RURAL_TAX_MON
			 , A.PEN_MON
			 , A.HEL_MON
			 , A.EMP_MON
			 , A.NOTAX_ABROAD_MON
			 , A.NOTAX_WORK_MON
			 , A.NOTAX_RESEARCH_MON
			 , A.NOTAX_BABY_MON
			 , A.NOTAX_TRAIN_MON /* 2019.12.09.수련보조수당 비과세 */
			 , A.NOTAX_ETC_MON   /* 2019.12.09.기타 비과세 */
			 , A.NOTAX_FORN_MON
			 , A.NOTAX_REPORTER_MON
			 , A.NOTAX_FOOD_MON
			 , A.STOCK_BUY_MON
			 , A.STOCK_UNION_MON
			 , A.ETC_MON1
			 , A.ETC_MON2
			 , A.ETC_MON3
			 , A.ETC_MON4
			 , A.REDUCE_S_YMD
			 , A.REDUCE_E_YMD
			 , A.IMWON_RET_OVER_MON
			 , A.NAPSE_YN
			 , A.FIN_TOT_TAX_MON
			 , B.NAME
			 , F_COM_GET_ORG_NM21(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
		FROM TCPN817 A
		   ,THRM100 B
		WHERE A.ENTER_CD      = B.ENTER_CD
		  AND A.SABUN         = B.SABUN
		  AND A.ENTER_CD      = #{ssnEnterCd}
		  AND A.WORK_YY       = #{searchWorkYy}
		  AND A.ADJUST_TYPE   LIKE '%'|| #{searchAdjustType} ||'%'
		  AND A.ADJUST_TYPE   IN (SELECT CODE
								  FROM TSYS005
								  WHERE ENTER_CD = #{ssnEnterCd}
									AND GRCODE_CD = 'C00303'
									AND USE_YN = 'Y')
		  AND ( A.SABUN LIKE '%' || TRIM(#{searchSbNm}) || '%' OR B.NAME LIKE '%' || TRIM(#{searchSbNm}) || '%' )
		  AND DECODE('',#{searchBizPlaceCd},'A',F_CPN_YEA_BP_CD(A.ENTER_CD,A.WORK_YY,A.ADJUST_TYPE,A.SABUN)) = DECODE('',#{searchBizPlaceCd},'A',#{searchBizPlaceCd})
		]]>
	</select>

	<delete parameterType="map" id="deleteBefComUpld">
		DELETE FROM TCPN817
		WHERE ENTER_CD				= #{ssnEnterCd}
			AND SABUN || '#' || WORK_YY || '#' || ADJUST_TYPE || '#' || SEQ IN ( NULL
			<foreach item="rm" collection="deleteRows" >
				, TRIM( #{rm.sabun} ) || '#' || TRIM( #{rm.workYy} ) || '#' ||
				TRIM( #{rm.adjustType} ) || '#' || TRIM( #{rm.seq} )
			</foreach>
			)
	</delete>

	<update parameterType="map" id="saveBefComUpld">
		MERGE INTO TCPN817 T
		USING (
		<foreach item="rm" collection="mergeRows" separator=" UNION ALL " index="idx">
			SELECT
			#{ssnEnterCd} AS ENTER_CD,
			TRIM(#{rm.workYy}) AS WORK_YY,
			TRIM(#{rm.adjustType}) AS ADJUST_TYPE,
			TRIM(#{rm.sabun}) AS SABUN,
			CASE WHEN TRIM(#{rm.seq}) IS NULL OR TRIM(#{rm.seq}) = '0' THEN
			(SELECT (NVL(MAX(SEQ),0) + (#{idx} + 1))
			FROM TCPN817
			WHERE ENTER_CD = #{ssnEnterCd}
			AND SABUN = TRIM(#{rm.sabun})
			AND WORK_YY = TRIM(#{rm.workYy})
			AND ADJUST_TYPE = TRIM(#{rm.adjustType})
			)
			ELSE TO_NUMBER(#{rm.seq}) END SEQ,
			#{rm.enterNo} AS ENTER_NO,
			#{rm.enterNm} AS ENTER_NM,
			#{rm.payMon} AS PAY_MON,
			#{rm.bonusMon} AS BONUS_MON,
			#{rm.etcBonusMon} AS ETC_BONUS_MON,
			#{rm.incomeTaxMon} AS INCOME_TAX_MON,
			#{rm.inhbtTaxMon} AS INHBT_TAX_MON,
			#{rm.ruralTaxMon} AS RURAL_TAX_MON,
			#{rm.penMon} AS PEN_MON,
			#{rm.helMon} AS HEL_MON,
			#{rm.empMon} AS EMP_MON,
			#{rm.notaxAbroadMon} AS NOTAX_ABROAD_MON,
			#{rm.notaxWorkMon} AS NOTAX_WORK_MON,
			#{rm.notaxTrainMon} AS NOTAX_TRAIN_MON,
			#{rm.notaxEtcMon} AS NOTAX_ETC_MON,
			#{rm.notaxResearchMon} AS NOTAX_RESEARCH_MON,
			#{rm.notaxBabyMon} AS NOTAX_BABY_MON,
			#{rm.notaxFornMon} AS NOTAX_FORN_MON,
			#{rm.notaxReporterMon} AS NOTAX_REPORTER_MON,
			#{rm.notaxFoodMon} AS NOTAX_FOOD_MON,
			#{rm.workSYmd} AS WORK_S_YMD,
			#{rm.workEYmd} AS WORK_E_YMD,
			#{rm.stockBuyMon} AS STOCK_BUY_MON,
			#{rm.stockUnionMon} AS STOCK_UNION_MON,
			#{rm.etcMon1} AS ETC_MON1,
			#{rm.etcMon2} AS ETC_MON2,
			#{rm.etcMon3} AS ETC_MON3,
			#{rm.etcMon4} AS ETC_MON4,
			#{rm.reduceSYmd} AS REDUCE_S_YMD,
			#{rm.reduceEYmd} AS REDUCE_E_YMD,
			#{rm.imwonRetOverMon} AS IMWON_RET_OVER_MON,
			#{rm.napseYn} AS NAPSE_YN,
			#{rm.finTotTaxMon} AS FIN_TOT_TAX_MON
			FROM dual
		</foreach>
		) S
		ON (
			T.ENTER_CD = S.ENTER_CD
			AND T.WORK_YY = S.WORK_YY
			AND T.ADJUST_TYPE = S.ADJUST_TYPE
			AND T.SABUN = S.SABUN
			AND T.SEQ = S.SEQ
		)
		WHEN MATCHED THEN
			UPDATE SET
			T.ENTER_NO = S.ENTER_NO,
			T.ENTER_NM = S.ENTER_NM,
			T.PAY_MON = S.PAY_MON,
			T.BONUS_MON = S.BONUS_MON,
			T.ETC_BONUS_MON = S.ETC_BONUS_MON,
			T.INCOME_TAX_MON = S.INCOME_TAX_MON,
			T.INHBT_TAX_MON = S.INHBT_TAX_MON,
			T.RURAL_TAX_MON = S.RURAL_TAX_MON,
			T.PEN_MON = S.PEN_MON,
			T.HEL_MON = S.HEL_MON,
			T.EMP_MON = S.EMP_MON,
			T.NOTAX_ABROAD_MON = S.NOTAX_ABROAD_MON,
			T.NOTAX_WORK_MON = S.NOTAX_WORK_MON,
			T.NOTAX_TRAIN_MON = S.NOTAX_TRAIN_MON,
			T.NOTAX_ETC_MON = S.NOTAX_ETC_MON,
			T.NOTAX_RESEARCH_MON = S.NOTAX_RESEARCH_MON,
			T.NOTAX_BABY_MON = S.NOTAX_BABY_MON,
			T.NOTAX_FORN_MON = S.NOTAX_FORN_MON,
			T.NOTAX_REPORTER_MON = S.NOTAX_REPORTER_MON,
			T.NOTAX_FOOD_MON = S.NOTAX_FOOD_MON,
			T.WORK_S_YMD = S.WORK_S_YMD,
			T.WORK_E_YMD = S.WORK_E_YMD,
			T.STOCK_BUY_MON = S.STOCK_BUY_MON,
			T.STOCK_UNION_MON = S.STOCK_UNION_MON,
			T.ETC_MON1 = S.ETC_MON1,
			T.ETC_MON2 = S.ETC_MON2,
			T.ETC_MON3 = S.ETC_MON3,
			T.ETC_MON4 = S.ETC_MON4,
			T.REDUCE_S_YMD = S.REDUCE_S_YMD,
			T.REDUCE_E_YMD = S.REDUCE_E_YMD,
			T.IMWON_RET_OVER_MON = S.IMWON_RET_OVER_MON,
			T.NAPSE_YN = S.NAPSE_YN,
			T.FIN_TOT_TAX_MON = S.FIN_TOT_TAX_MON,
			T.CHKDATE = SYSDATE,
			T.CHKID = #{ssnSabun}
		WHEN NOT MATCHED THEN
			INSERT (
			ENTER_CD,
			WORK_YY,
			ADJUST_TYPE,
			SABUN,
			SEQ,
			ENTER_NO,
			ENTER_NM,
			PAY_MON,
			BONUS_MON,
			ETC_BONUS_MON,
			INCOME_TAX_MON,
			INHBT_TAX_MON,
			RURAL_TAX_MON,
			PEN_MON,
			HEL_MON,
			EMP_MON,
			NOTAX_ABROAD_MON,
			NOTAX_WORK_MON,
			NOTAX_TRAIN_MON,
			NOTAX_ETC_MON,
			NOTAX_RESEARCH_MON,
			NOTAX_BABY_MON,
			NOTAX_FORN_MON,
			NOTAX_REPORTER_MON,
			NOTAX_FOOD_MON,
			WORK_S_YMD,
			WORK_E_YMD,
			STOCK_BUY_MON,
			STOCK_UNION_MON,
			ETC_MON1,
			ETC_MON2,
			ETC_MON3,
			ETC_MON4,
			REDUCE_S_YMD,
			REDUCE_E_YMD,
			IMWON_RET_OVER_MON,
			NAPSE_YN,
			FIN_TOT_TAX_MON,
			CHKDATE,
			CHKID
			) VALUES (
			S.ENTER_CD,
			S.WORK_YY,
			S.ADJUST_TYPE,
			S.SABUN,
			S.SEQ,
			S.ENTER_NO,
			S.ENTER_NM,
			S.PAY_MON,
			S.BONUS_MON,
			S.ETC_BONUS_MON,
			S.INCOME_TAX_MON,
			S.INHBT_TAX_MON,
			S.RURAL_TAX_MON,
			S.PEN_MON,
			S.HEL_MON,
			S.EMP_MON,
			S.NOTAX_ABROAD_MON,
			S.NOTAX_WORK_MON,
			S.NOTAX_TRAIN_MON,
			S.NOTAX_ETC_MON,
			S.NOTAX_RESEARCH_MON,
			S.NOTAX_BABY_MON,
			S.NOTAX_FORN_MON,
			S.NOTAX_REPORTER_MON,
			S.NOTAX_FOOD_MON,
			S.WORK_S_YMD,
			S.WORK_E_YMD,
			S.STOCK_BUY_MON,
			S.STOCK_UNION_MON,
			S.ETC_MON1,
			S.ETC_MON2,
			S.ETC_MON3,
			S.ETC_MON4,
			S.REDUCE_S_YMD,
			S.REDUCE_E_YMD,
			S.IMWON_RET_OVER_MON,
			S.NAPSE_YN,
			S.FIN_TOT_TAX_MON,
			SYSDATE,
			#{ssnSabun}
			)
	</update>
</mapper>