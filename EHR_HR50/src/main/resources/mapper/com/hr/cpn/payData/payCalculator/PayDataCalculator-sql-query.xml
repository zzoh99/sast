<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="cpn.payData.payCalculator">
		
		<select id="getPayCalculatorByPayActionCd" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT ENTER_CD
			     , PAY_ACTION_CD
			     , PAY_ACTION_NM
			     , PAY_YM
			     , PAY_CD
			     , RUN_TYPE
			     , PAYMENT_YMD
			     , ORD_SYMD
			     , ORD_EYMD
			     , TIME_YM
			     , CAL_TAX_METHOD
			     , CAL_TAX_SYM
			     , CAL_TAX_EYM
			     , ADD_TAX_RATE
			     , BON_SYMD
			     , BON_EYMD
			     , GNT_SYMD
			     , GNT_EYMD
			     , BON_CAL_TYPE
			     , BON_STD_CNT
			     , BON_APPLY_TYPE
			     , BON_MON_RATE
			     , PAYMENT_METHOD
			     , MAN_CNT
			     , DECODE(CLOSE_YN, 'Y', '1', 'N', '0') AS CLOSE_YN
			     , BIGO
			     , '0' AS DETAIL
			     , (SELECT COUNT(*) FROM TCPN221 AA WHERE AA.ENTER_CD = A.ENTER_CD AND AA.PAY_ACTION_CD = A.PAY_ACTION_CD ) AS CNT
			     , TAX_PERIORD_CHOICE_YN
			     , '0' AS CNT_DETAIL
			FROM (
			        SELECT DISTINCT A.ENTER_CD
			                      , A.PAY_ACTION_CD
			                      , A.PAY_ACTION_NM
			                      , A.PAY_YM
			                      , A.PAY_CD
			                      , B.RUN_TYPE
			                      , A.PAYMENT_YMD
			                      , A.ORD_SYMD
			                      , A.ORD_EYMD
			                      , A.TIME_YM
			                      , A.CAL_TAX_METHOD
			                      , A.CAL_TAX_SYM
			                      , A.CAL_TAX_EYM
			                      , A.ADD_TAX_RATE
			                      , A.BON_SYMD
			                      , A.BON_EYMD
			                      , A.GNT_SYMD
			                      , A.GNT_EYMD
			                      , A.BON_CAL_TYPE
			                      , A.BON_STD_CNT
			                      , A.BON_APPLY_TYPE
			                      , A.BON_MON_RATE
			                      , A.PAYMENT_METHOD
			                      , A.BIGO
	                              , (SELECT COUNT(*)
	                                FROM TCPN203
	                                WHERE ENTER_CD = A.ENTER_CD
	                                AND PAY_ACTION_CD = A.PAY_ACTION_CD) AS MAN_CNT
	                              , C.CLOSE_YN
	                              , A.TAX_PERIORD_CHOICE_YN
			          FROM TCPN201 A, TCPN051 B
			              , TCPN981 C
			         WHERE A.ENTER_CD      = #{ssnEnterCd}
			           AND A.PAY_ACTION_CD = #{payActionCd}
			           AND B.ENTER_CD      = A.ENTER_CD
				       AND B.PAY_CD        = A.PAY_CD
				       AND B.RUN_TYPE      NOT IN ('00004')
				       AND A.PAY_CD IN (SELECT PAY_CD
										FROM TCPN051
										WHERE ENTER_CD = #{ssnEnterCd}
										  AND RUN_TYPE NOT IN ('00004') )
				       AND A.ENTER_CD      = C.ENTER_CD      (+)
				       AND A.PAY_ACTION_CD = C.PAY_ACTION_CD (+)
				    ) A
		]]>
		</select>
		
		<select id="getPaySearchTargetList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT A.SABUN
			     , F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
			     , F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKWEE_NM
			     , F_COM_GET_JIKCHAK_NM(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS JIKCHAK_NM
			     , F_COM_GET_NAMES(A.ENTER_CD,A.SABUN, #{ssnLocaleCd}) AS NAME
			     , A.SABUN AS T_SABUN
			     , NVL(F_COM_GET_MAP_CD(A.ENTER_CD, '100', A.SABUN),'') AS BUSINESS_PLACE_CD
			  FROM THRM100 A, THRM151 B
			 WHERE A.ENTER_CD = #{ssnEnterCd}
			   AND A.ENTER_CD = B.ENTER_CD
			   AND A.SABUN = B.SABUN
			   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND B.EDATE
			   AND B.STATUS_CD NOT IN ('RA', 'EA', 'FB', 'RAA')
		]]>
			<if test='searchWord != null and searchWord neq ""'>
		<![CDATA[
			   AND (
			   		F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) LIKE '%' || TRIM( #{searchWord} ) || '%'
			   		OR
			   		F_COM_GET_NAMES(A.ENTER_CD,A.SABUN) LIKE '%' || TRIM( #{searchWord} ) || '%'
			   )
		]]>
			</if>
		</select>
		
		<select id="getPaymentStaticsPeoples" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT F_CPN_BASE_SQLSYNTAX_COUNT(
							A.ENTER_CD
						  , A.SEARCH_SEQ
						  , '회사코드=''' || A.ENTER_CD || ''':' ||
						  	'기준일자=''' || A.ORD_EYMD || ''':' || 
						  	'지급일자=''' || A.PAYMENT_YMD || ''':' || 
						  	'시작일자=''' || A.SYMD || ''':' || 
						  	'종료일자=''' || A.EYMD || ''':' || 
						  	'급여계산코드=''' || A.PAY_ACTION_CD || ''':' ||
						  	'급여년월=''' || A.PAY_YM || '''') AS TOTAL_CNT
				 , (SELECT COUNT(*) AS CNT FROM TCPN203 B WHERE A.ENTER_CD = B.ENTER_CD AND A.PAY_ACTION_CD = B.PAY_ACTION_CD) AS TARGET_CNT
				FROM (
					SELECT B.SEARCH_SEQ
				  	     , A.ENTER_CD
				  	     , A.ORD_EYMD
				  	     , A.PAY_ACTION_CD
				  	     , A.PAYMENT_YMD 
				  	     , A.PAY_YM
				  	     , CASE WHEN B.RUN_TYPE IN ('00001','R0001','ETC', 'J0001') THEN A.ORD_SYMD ELSE NVL(A.BON_SYMD, A.ORD_SYMD) END AS SYMD
				  	     , CASE WHEN B.RUN_TYPE IN ('00001','R0001','ETC', 'J0001') THEN A.ORD_EYMD ELSE NVL(A.BON_EYMD, A.ORD_EYMD) END AS EYMD
				      FROM TCPN201 A
				  	     , TCPN051 B
				 	 WHERE A.ENTER_CD = #{ssnEnterCd}
				   	   AND A.PAY_ACTION_CD = #{payActionCd}
				   	   AND A.ENTER_CD = B.ENTER_CD
				   	   AND A.PAY_CD = B.PAY_CD
				) A
		]]>
		</select>
		
		<select id="getPaymentStatics" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT	'PAY' AS GUBUN
			, 		REPORT_NM
			, 		TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
			FROM 	(
			        	SELECT	B.REPORT_NM2 AS REPORT_NM
			            , 		MIN(B.PRIORITY) PRIORITY
			            , 		SUM(A.BASIC_MON) AS BASIC_MON
			            , 		SUM(A.RESULT_MON) AS RESULT_MON
			          	FROM 	TCPN205 A
			            , 		(
									SELECT	SUB1.*
			                     	, 		NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', SUB1.LANGUAGE_CD2, #{ssnLocaleCd}), REPORT_NM) AS REPORT_NM2
			                  		FROM 	TCPN011 SUB1
			                 		WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
			                   		AND 	SUB1.ELEMENT_CD NOT IN (
			                   										SELECT 	A.ELEMENT_CD
			                                                 		FROM 	TCPN011 A
			                                                    	, 		(
			                                                    				SELECT 	B.CODE
			                                                            		, 		TRIM(B.CODE_NM) AS CODE_NM
			                                                         			FROM 	TSYS001 A
			                                                            		, 		TSYS005 B
			                                                        			WHERE 	A.GRCODE_CD      = B.GRCODE_CD
			                                                          			AND 	B.ENTER_CD       = #{ssnEnterCd}
			                                                          			AND 	A.GRCODE_CD      = 'C00011'
			                                                          			AND 	NVL(B.NOTE1,'0') = '1'
			                                                    			) B
			                                                		WHERE A.ENTER_CD    = #{ssnEnterCd}
			                                                  		AND A.ATTRIBUTE_3 = B.CODE
			                                                  		UNION
			                                                  		SELECT	ELEMENT_CD
			                                                 		FROM 	TCPN071 X, TCPN072 Y
			                                                		WHERE 	X.ENTER_CD       = Y.ENTER_CD
			                                                  		AND 	X.ELEMENT_SET_CD = Y.ELEMENT_SET_CD
			                                                  		AND 	X.ENTER_CD       = #{ssnEnterCd}
			                                                  		AND 	X.ELEMENT_SET_CD = '30'
			                                                  		AND 	TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
			                                               		  )
			             		) B
			         	WHERE 	A.ENTER_CD      = #{ssnEnterCd}
			           	AND 	A.PAY_ACTION_CD = #{payActionCd}
			           	AND 	B.ELEMENT_TYPE  = 'A'
			           	AND 	(B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')
			           	AND 	A.ENTER_CD      = B.ENTER_CD
			           	AND 	A.ELEMENT_CD    = B.ELEMENT_CD
			       	GROUP BY	B.REPORT_NM2
			       	ORDER BY	PRIORITY
			      )
			UNION ALL
			SELECT 	'PAY_TOT' AS GUBUN
			, 		'' AS REPORT_NM
			, 		TRIM(TO_CHAR(NVL(SUM(A.RESULT_MON),0),'999,999,999,990')) AS RESULT_MON
			FROM	TCPN205 A
			, 		(
						SELECT	SUB1.*
						FROM 	TCPN011 SUB1
						WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
					  	AND 	SUB1.ELEMENT_CD NOT IN (
					  									SELECT	A.ELEMENT_CD
													  	FROM 	TCPN011 A
														, 		(
																	SELECT	B.CODE
																 	, 		TRIM(B.CODE_NM) AS CODE_NM
															 		FROM 	TSYS001 A
																 	, 		TSYS005 B
															 		WHERE 	A.GRCODE_CD		 = B.GRCODE_CD
															   		AND 	B.ENTER_CD		 =  #{ssnEnterCd}
															   		AND 	A.GRCODE_CD		 = 'C00011'
															   		AND 	NVL(B.NOTE1,'0') = '1'
																) B
													 	WHERE A.ENTER_CD		=  #{ssnEnterCd}
													   	AND A.ATTRIBUTE_3	= B.CODE
			
													   	UNION
			
													   	SELECT	ELEMENT_CD
													  	FROM 	TCPN071 X, TCPN072 Y
													 	WHERE 	X.ENTER_CD		 = Y.ENTER_CD
													   	AND 	X.ELEMENT_SET_CD = Y.ELEMENT_SET_CD
													   	AND 	X.ENTER_CD		 = #{ssnEnterCd}
													   	AND 	X.ELEMENT_SET_CD = '30'
													   	AND 	TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
													  )
					) B
			WHERE	A.ENTER_CD		= #{ssnEnterCd}
			AND 	A.PAY_ACTION_CD	= #{payActionCd}
			AND 	B.ELEMENT_TYPE	= 'A'
			AND 	(B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')
			AND 	A.ENTER_CD		= B.ENTER_CD
			AND 	A.ELEMENT_CD	= B.ELEMENT_CD
			UNION ALL
			SELECT 	'DEDUCT' AS GUBUN
			, 		REPORT_NM
			, 		TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
			FROM 	(
						SELECT	B.REPORT_NM2      AS REPORT_NM
						, 		MIN(B.PRIORITY)   AS PRIORITY
						, 		SUM(A.BASIC_MON)  AS BASIC_MON
						, 		SUM(A.RESULT_MON) AS RESULT_MON
					  	FROM	TCPN205 A
						, 		(
									SELECT	SUB1.*
								 	, 		NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', SUB1.LANGUAGE_CD2, #{ssnLocaleCd}),REPORT_NM) AS REPORT_NM2
									FROM 	TCPN011 SUB1
									WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
							  		AND 	SUB1.ELEMENT_CD NOT IN (
							  										SELECT	A.ELEMENT_CD
															  		FROM 	TCPN011 A
																 	, 		(
																 				SELECT	B.CODE
																		 		, 		TRIM(B.CODE_NM) AS CODE_NM
																	 			FROM 	TSYS001 A
																		 		, TSYS005 B
																	 			WHERE A.GRCODE_CD	 = B.GRCODE_CD
																	   			AND B.ENTER_CD		 = #{ssnEnterCd}
																	   			AND A.GRCODE_CD		 = 'C00011'
																	   			AND NVL(B.NOTE1,'0') = '1'
																			) B
															 		WHERE A.ENTER_CD		= #{ssnEnterCd}
															   		AND A.ATTRIBUTE_3	= B.CODE
			
															   		UNION
			
															   		SELECT	ELEMENT_CD
															  		FROM 	TCPN071 X, TCPN072 Y
															 		WHERE 	X.ENTER_CD		 = Y.ENTER_CD
															   		AND 	X.ELEMENT_SET_CD = Y.ELEMENT_SET_CD
															   		AND 	X.ENTER_CD		 = #{ssnEnterCd}
															   		AND 	X.ELEMENT_SET_CD = '30'
															   		AND 	TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
																   )
								) B
					 	WHERE	A.ENTER_CD		= #{ssnEnterCd}
					   	AND 	A.PAY_ACTION_CD	= #{payActionCd}
					   	AND 	B.ELEMENT_TYPE	= 'D'
					   	AND 	(B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')
					   	AND 	A.ENTER_CD		= B.ENTER_CD
					   	AND 	A.ELEMENT_CD	= B.ELEMENT_CD
					 GROUP BY B.REPORT_NM2
					 ORDER BY PRIORITY
					)
			UNION ALL
			SELECT	'DEDUCT_TOT' AS GUBUN
			, 		'' AS REPORT_NM
			, 		TRIM(TO_CHAR(NVL(SUM(A.RESULT_MON),0),'999,999,999,990')) AS RESULT_MON
			FROM 	TCPN205 A
			, 		(
						SELECT	SUB1.*
						FROM 	TCPN011 SUB1
						WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
					  	AND 	SUB1.ELEMENT_CD NOT IN (
					  									SELECT	A.ELEMENT_CD
													  	FROM 	TCPN011 A
														, 		(
																	SELECT	B.CODE
																 	, 		TRIM(B.CODE_NM) AS CODE_NM
															 		FROM 	TSYS001 A
																 	, 		TSYS005 B
															 		WHERE 	A.GRCODE_CD		 = B.GRCODE_CD
															   		AND 	B.ENTER_CD		 = #{ssnEnterCd}
															   		AND 	A.GRCODE_CD		 = 'C00011'
															   		AND 	NVL(B.NOTE1,'0') = '1'
																) B
													 	WHERE	A.ENTER_CD		= #{ssnEnterCd}
													   	AND 	A.ATTRIBUTE_3	= B.CODE
			
													   	UNION
			
														SELECT	ELEMENT_CD
													  	FROM 	TCPN071 X, TCPN072 Y
													 	WHERE 	X.ENTER_CD		 = Y.ENTER_CD
													   	AND 	X.ELEMENT_SET_CD = Y.ELEMENT_SET_CD
													   	AND 	X.ENTER_CD		 = #{ssnEnterCd}
													   	AND 	X.ELEMENT_SET_CD = '30'
													   	AND 	TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
													   )
					) B
			WHERE	A.ENTER_CD		= #{ssnEnterCd}
			AND 	A.PAY_ACTION_CD	= #{payActionCd}
			AND 	B.ELEMENT_TYPE	= 'D'
			AND 	(B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')
			AND 	A.ENTER_CD		= B.ENTER_CD
			AND 	A.ELEMENT_CD	= B.ELEMENT_CD
			UNION ALL
			SELECT	'BASIC' AS GUBUN
			, 		REPORT_NM
			, 		TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
			FROM	(
						SELECT	TRIM(A.REPORT_NM) AS REPORT_NM
						, 		SUM(A.RESULT_MON) AS RESULT_MON
						,		MAX(SEQ)		  AS SEQ
						FROM 	(
									SELECT 	Z.REPORT_NM2 			 AS REPORT_NM
									, 		SUM(NVL(Y.RESULT_MON,0)) AS RESULT_MON
									, 		MAX(Z.GRP_SORT) 		 AS SEQ
									FROM 	TCPN201 X
									, 		TCPN294 Y
									, 		(
												SELECT	SUB1.*
											 	, 		NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', SUB1.LANGUAGE_CD2, #{ssnLocaleCd}), SUB1.REPORT_NM) AS REPORT_NM2
									 	FROM	TCPN011 SUB1
										, 		(
													SELECT	MAX(SDATE) AS SDATE
													, 		ELEMENT_CD
													FROM 	TCPN011
													WHERE 	ENTER_CD = #{ssnEnterCd}
													AND 	TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
											     GROUP BY	ELEMENT_CD
												) SUB2
										WHERE	SUB1.ENTER_CD	= SUB1.ENTER_CD
										AND 	SUB1.ELEMENT_CD	= SUB2.ELEMENT_CD
										AND 	SUB1.SDATE		= SUB2.SDATE
									) Z
							WHERE 	X.ENTER_CD		= Y.ENTER_CD
							AND 	X.PAY_ACTION_CD	= Y.PAY_ACTION_CD
							AND 	Y.ENTER_CD		= Z.ENTER_CD
							AND 	Y.ELEMENT_CD	= Z.ELEMENT_CD
							AND 	X.ENTER_CD		= #{ssnEnterCd}
							AND 	X.PAY_ACTION_CD	= #{payActionCd}
							AND     Y.ELEMENT_CD IN (
														SELECT	AA.ELEMENT_CD
							                         	FROM 	TCPN072 AA
							                         	, 		TCPN071 BB
							                         	, 		TCPN051 CC
							                         	WHERE 	AA.ENTER_CD 	  = BB.ENTER_CD
							                         	AND 	AA.ELEMENT_SET_CD = BB.ELEMENT_SET_CD
							                         	AND 	AA.ENTER_CD 	  = CC.ENTER_CD
							                         	AND 	BB.ELEMENT_SET_CD = CC.ELEMENT_SET_CD
							                         	AND 	CC.PAY_CD 		  = X.PAY_CD
							                         	AND 	AA.BASE_SHOW_YN   = 'Y'
													)
								 GROUP BY 	Y.ENTER_CD, Y.PAY_ACTION_CD, Y.SABUN, Y.ELEMENT_CD, Z.REPORT_NM2
								) A
					  GROUP BY 	A.REPORT_NM, A.SEQ
					  ORDER BY 	A.SEQ
					)
			UNION ALL
			SELECT	'BASIC_TOT' AS GUBUN
			, 		'' 			AS REPORT_NM
			, 		TRIM(TO_CHAR(NVL(SUM(RESULT_MON),0),'999,999,999,990')) AS RESULT_MON
			FROM 	(
						SELECT 	Z.REPORT_NM2 AS REPORT_NM
						, 		Y.RESULT_MON AS RESULT_MON
						FROM 	TCPN201 X
						, 		TCPN294 Y
						, 		(
									SELECT	SUB1.*
								 	, 		NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', SUB1.LANGUAGE_CD2, #{ssnLocaleCd}), SUB1.REPORT_NM) AS REPORT_NM2
						 	FROM	TCPN011 SUB1
							, 		(
										SELECT	MAX(SDATE) AS SDATE
										, 		ELEMENT_CD
										FROM 	TCPN011
										WHERE 	ENTER_CD = #{ssnEnterCd}
										AND 	TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
								     GROUP BY	ELEMENT_CD
									) SUB2
							WHERE	SUB1.ENTER_CD	= SUB1.ENTER_CD
							AND 	SUB1.ELEMENT_CD	= SUB2.ELEMENT_CD
							AND 	SUB1.SDATE		= SUB2.SDATE
						) Z
				WHERE 	X.ENTER_CD		= Y.ENTER_CD
				AND 	X.PAY_ACTION_CD	= Y.PAY_ACTION_CD
				AND 	Y.ENTER_CD		= Z.ENTER_CD
				AND 	Y.ELEMENT_CD	= Z.ELEMENT_CD
				AND 	X.ENTER_CD		= #{ssnEnterCd}
				AND 	X.PAY_ACTION_CD	= #{payActionCd}
				AND     Y.ELEMENT_CD IN (
											SELECT	AA.ELEMENT_CD
				                         	FROM 	TCPN072 AA
				                         	, 		TCPN071 BB
				                         	, 		TCPN051 CC
				                         	WHERE 	AA.ENTER_CD 	  = BB.ENTER_CD
				                         	AND 	AA.ELEMENT_SET_CD = BB.ELEMENT_SET_CD
				                         	AND 	AA.ENTER_CD 	  = CC.ENTER_CD
				                         	AND 	BB.ELEMENT_SET_CD = CC.ELEMENT_SET_CD
				                         	AND 	CC.PAY_CD 		  = X.PAY_CD
				                         	AND 	AA.BASE_SHOW_YN   = 'Y'
										)
			)
			UNION ALL
			SELECT	'TAX' AS GUBUN
			, 		REPORT_NM
			, 		TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
			FROM 	(
						SELECT	B.REPORT_NM2 AS REPORT_NM
						, 		MIN(B.PRIORITY) PRIORITY
						, 		SUM(A.BASIC_MON) AS BASIC_MON
						, 		SUM(A.RESULT_MON) AS RESULT_MON
					  	FROM 	TCPN205 A
						, 		(
									SELECT	SUB1.*
								 	, 		NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', SUB1.LANGUAGE_CD2, #{ssnLocaleCd}), REPORT_NM) AS REPORT_NM2
									FROM 	TCPN011 SUB1
									WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
							  		AND 	SUB1.ELEMENT_CD IN (
							  									SELECT	ELEMENT_CD
																FROM 	TCPN071 X
														   		, 		TCPN072 Y
																WHERE 	X.ENTER_CD		 = Y.ENTER_CD
														  		AND 	X.ELEMENT_SET_CD = Y.ELEMENT_SET_CD
														  		AND 	X.ENTER_CD		 = #{ssnEnterCd}
														  		AND 	X.ELEMENT_SET_CD = '30'
														  		AND 	TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
															   )
								) B
					 	WHERE	A.ENTER_CD	    = #{ssnEnterCd}
					   	AND 	A.PAY_ACTION_CD	= #{payActionCd}
					   	AND 	A.ENTER_CD		= B.ENTER_CD
					   	AND 	A.ELEMENT_CD	= B.ELEMENT_CD
					 GROUP BY 	B.REPORT_NM2
					 ORDER BY 	PRIORITY
					)
			UNION ALL
			SELECT	'TAX_TOT' AS GUBUN
			, 		'' AS REPORT_NM
			, 		DECODE(TRIM(TO_CHAR(NVL(SUM(A.BASIC_MON),0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(SUM(A.BASIC_MON),0),'999,999,999,990'))) AS RESULT_MON
			FROM 	TCPN205 A
			, 		(
						SELECT	SUB1.*
						FROM 	TCPN011 SUB1
						WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
					  	AND 	SUB1.ELEMENT_CD IN (
					  								SELECT	ELEMENT_CD
													FROM 	TCPN071 X
												   	, 		TCPN072 Y
													WHERE 	X.ENTER_CD		 = Y.ENTER_CD
												  	AND 	X.ELEMENT_SET_CD = Y.ELEMENT_SET_CD
												  	AND 	X.ENTER_CD		 = #{ssnEnterCd}
												  	AND 	X.ELEMENT_SET_CD = '30'
												  	AND 	TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
												   )
					) B
			WHERE 	A.ENTER_CD	    = #{ssnEnterCd}
			AND 	A.PAY_ACTION_CD	= #{payActionCd}
			AND 	A.ENTER_CD		= B.ENTER_CD
			AND 	A.ELEMENT_CD	= B.ELEMENT_CD
			UNION ALL
			SELECT	'TAX_FREE' AS GUBUN
			, 		REPORT_NM
			, 		TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
			FROM 	(
						SELECT	B.REPORT_NM2 AS REPORT_NM
						, 		MIN(B.PRIORITY) PRIORITY
						, 		SUM(A.BASIC_MON) AS BASIC_MON
						, 		SUM(A.RESULT_MON) AS RESULT_MON
					  	FROM 	TCPN205 A
						, 		(
									SELECT	SUB1.*
								 	, 		NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', SUB1.LANGUAGE_CD2, #{ssnLocaleCd}), REPORT_NM) AS REPORT_NM2
									FROM 	TCPN011 SUB1
									WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
							  		AND 	SUB1.ELEMENT_CD IN (
							  									SELECT	A.ELEMENT_CD
														  		FROM 	TCPN011 A
															 	, 		(
															 			 SELECT	B.CODE
																		 , 		TRIM(B.CODE_NM) AS CODE_NM
																		 FROM 	TSYS001 A
																		 , 		TSYS005 B
																		 WHERE 	A.GRCODE_CD		 = B.GRCODE_CD
																		 AND 	B.ENTER_CD		 = #{ssnEnterCd}
																		 AND 	A.GRCODE_CD		 = 'C00011'
																		 AND 	NVL(B.NOTE1,'0') = '1'
															   			) B
														 		WHERE 	A.ENTER_CD	  = #{ssnEnterCd}
														   		AND 	A.ATTRIBUTE_3 = B.CODE
															   )
								) B
						WHERE	A.ENTER_CD		= #{ssnEnterCd}
						AND 	A.PAY_ACTION_CD	= #{payActionCd}
						AND 	A.ENTER_CD		= B.ENTER_CD
						AND 	A.ELEMENT_CD	= B.ELEMENT_CD
					 GROUP BY 	B.REPORT_NM2
					 ORDER BY 	PRIORITY
					)
			UNION ALL
			SELECT	'TAX_FREE_TOT' AS GUBUN
			, 		'' AS REPORT_NM
			, 		DECODE(TRIM(TO_CHAR(NVL(SUM(A.RESULT_MON),0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(SUM(A.RESULT_MON),0),'999,999,999,990'))) AS RESULT_MON
			FROM	TCPN205 A
			, 		(
						SELECT	SUB1.*
						FROM 	TCPN011 SUB1
						WHERE 	SUB1.ENTER_CD = #{ssnEnterCd}
					  	AND 	SUB1.ELEMENT_CD IN (
					  								SELECT	A.ELEMENT_CD
												  	FROM 	TCPN011 A
													, (
														SELECT	B.CODE
														, 		TRIM(B.CODE_NM) AS CODE_NM
														FROM 	TSYS001 A
														, 		TSYS005 B
														WHERE 	A.GRCODE_CD		 = B.GRCODE_CD
														AND 	B.ENTER_CD		 = #{ssnEnterCd}
														AND 	A.GRCODE_CD		 = 'C00011'
														AND 	NVL(B.NOTE1,'0') = '1'
													  ) B
												 	WHERE A.ENTER_CD	= #{ssnEnterCd}
												   	AND A.ATTRIBUTE_3= B.CODE
												)
					) B
			WHERE	A.ENTER_CD		= #{ssnEnterCd}
			AND 	A.PAY_ACTION_CD	= #{payActionCd}
			AND 	A.ENTER_CD		= B.ENTER_CD
			AND 	A.ELEMENT_CD	= B.ELEMENT_CD
		]]>
		</select>
		
		<select id="getPaymentThenPrev" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT PRE_MONEY
				 , CUR_MONEY
				 , ABS(CUR_MONEY - PRE_MONEY) AS DIFF_MONEY
				 , ROUND(((CUR_MONEY/PRE_MONEY) * 100) - 100, 2) AS DIFF_PER
			  FROM (
			  	SELECT (SELECT SUM(B.TOT_EARNING_MON) - SUM(B.TOT_DED_MON) FROM TCPN303 B WHERE B.ENTER_CD = A.ENTER_CD AND B.PAY_ACTION_CD = A.PRE_PAY_ACTION_CD) AS PRE_MONEY
					 , (SELECT SUM(B.TOT_EARNING_MON) - SUM(B.TOT_DED_MON) FROM TCPN303 B WHERE B.ENTER_CD = A.ENTER_CD AND B.PAY_ACTION_CD = A.CUR_PAY_ACTION_CD) AS CUR_MONEY
				  FROM (
					SELECT A.ENTER_CD
						 , A.PAY_ACTION_CD AS PRE_PAY_ACTION_CD
						 , B.PAY_ACTION_CD AS CUR_PAY_ACTION_CD
					  FROM TCPN201 A, (
						SELECT ENTER_CD
							 , PAY_ACTION_CD
							 , PAY_CD
						  FROM TCPN201 
						 WHERE ENTER_CD = #{ssnEnterCd}
						   AND PAY_ACTION_CD = #{payActionCd}
					  ) B
					 WHERE A.ENTER_CD = B.ENTER_CD
					   AND A.PAY_CD = B.PAY_CD
					   AND A.PAY_ACTION_CD <> B.PAY_ACTION_CD
					 ORDER BY PAYMENT_YMD DESC  
				  ) A
				 WHERE ROWNUM = 1
			  ) A
		]]>
		</select>
		
		<select id="getPaymentTransferInfo" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.BANK_CD,
			       F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'H30001', B.BANK_CD) AS BANK_NM,
			       REPLACE(CRYPTIT.DECRYPT(B.ACCOUNT_NO, B.ENTER_CD),'-','')	AS	ACCOUNT_NO,
			       A.SABUN,
			       A.NAME,
			       A.MON
			 FROM (
			 		SELECT T3.SABUN,
					       T3.NAME,
					       NVL(SUM(T3.PAYMENT_MON), 0) AS MON,
					       T1.PAYMENT_YMD,
					       T1.ENTER_CD,
					       T5.ACCOUNT_TYPE
					  FROM TCPN201 T1, TCPN203 T2, TCPN303 T3, TCPN051 T5
					 WHERE T1.ENTER_CD = #{ssnEnterCd}
					   AND T1.PAY_ACTION_CD = #{searchPayActionCd}
					   AND T1.ENTER_CD = T2.ENTER_CD
					   AND T1.PAY_ACTION_CD = T2.PAY_ACTION_CD
					   AND T2.ENTER_CD = T3.ENTER_CD
					   AND T2.PAY_ACTION_CD = T3.PAY_ACTION_CD
					   AND T2.SABUN = T3.SABUN
					   AND T1.ENTER_CD = T5.ENTER_CD
					   AND T1.PAY_CD = T5.PAY_CD ]]>
			<if test='businessPlaceCd != null and businessPlaceCd neq ""'>
					   AND T2.BUSINESS_PLACE_CD = #{businessPlaceCd}
			</if>
			<if test='searchWord != null and searchWord neq ""'>
					   AND T3.SABUN||T3.NAME LIKE '%'||TRIM(#{searchWord})||'%'
			</if>
		<![CDATA[
					GROUP BY T3.SABUN, T3.NAME, T1.PAYMENT_YMD, T1.ENTER_CD, T5.ACCOUNT_TYPE ) A, TCPN180 B
			WHERE A.ENTER_CD = B.ENTER_CD(+)
			  AND A.SABUN = B.SABUN(+)
			  AND A.ACCOUNT_TYPE = B.ACCOUNT_TYPE(+)
			  AND A.PAYMENT_YMD BETWEEN B.SDATE(+) AND NVL(B.EDATE(+),'99991231') ]]>
			<if test='searchAccountNo and searchAccountNo.equals("Y")'>
			  AND ( REPLACE(CRYPTIT.DECRYPT(B.ACCOUNT_NO, B.ENTER_CD),'-','') IS NULL OR B.BANK_CD IS NULL )
			</if>
		</select>
		
		<select id="getPayCalcPersonalInfo" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.PAY_ACTION_NM
				 , A.JIKCHAK_NM
				 , A.JIKWEE_NM
				 , A.ORG_NM
				 , A.SABUN
				 , A.NAME
			  FROM (
				SELECT ROW_NUMBER() OVER(ORDER BY B.SDATE DESC) AS RNUM
					 , A.ENTER_CD
					 , B.JIKCHAK_NM
					 , B.JIKWEE_NM
					 , F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD'), 'ko_KR') AS ORG_NM
					 , A.SABUN
					 , A.NAME 
				  FROM THRM100 A
				     , THRM151 B
				 WHERE A.ENTER_CD = B.ENTER_CD
				   AND A.SABUN = B.SABUN
				   AND A.ENTER_CD = #{ssnEnterCd}
				   AND A.SABUN = #{searchSabun}
			  ) A, TCPN201 B
			 WHERE A.RNUM = 1
			   AND A.ENTER_CD = B.ENTER_CD
			   AND B.PAY_ACTION_CD = #{payActionCd}
		]]>
		</select>
		
		<select id="getPayCalcWorkTime" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT ENTER_CD
				 , BIZ_CD
				 , ELEMENT_CD
				 , ELEMENT_NM
				 , ELE_VALUE
				 , UNIT
				 , ELE_VALUE||UNIT AS ELE_VALUE_UNIT
			 FROM TCPN296 X
			WHERE ENTER_CD		= #{ssnEnterCd}
			  AND PAY_ACTION_CD	= #{payActionCd}  
			  AND SABUN			= #{searchSabun}
			ORDER BY X.ELEMENT_CD
		]]>
		</select> 
		
		<select id="getPayCalcFormila" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT DISTINCT 
				   B.ELEMENT_CD
				 , C.ELEMENT_NM
				 , C.REPORT_NM
				 , NVL(D.FORMULA,NVL(B.FORMULA_CHG,F_CPN_GET_CAL_VALUE_NM (B.ENTER_CD,B.ELEMENT_CD,B.SEARCH_SEQ,B.S_YM))) AS FORMULA       
				 , A.RESULT_MON
			     , CASE WHEN NVL(A.RESULT_MON,0) = 0 THEN ''
				       ELSE TRIM(TO_CHAR(NVL(A.RESULT_MON,0),'999,999,999,990')) 
				   END RESULT_MON_FOR				
			 FROM (	SELECT 
					 	  X.ENTER_CD 	   
						, X.ELEMENT_CD
						, X.SABUN
						, X.PAY_ACTION_CD
						, X.RESULT_MON
					 FROM TCPN205 X
					WHERE 1=1
					  AND X.ENTER_CD 		= #{ssnEnterCd}  
					  AND X.PAY_ACTION_CD 	= #{payActionCd} 
					  AND X.SABUN 			= #{searchSabun}
					UNION
					SELECT 
						Y.ENTER_CD 	   
						, Y.ELEMENT_CD
						, Y.SABUN
						, Y.PAY_ACTION_CD
						, Y.RESULT_MON
					 FROM TCPN294 Y 
					WHERE 1=1
					  AND Y.ENTER_CD 		= #{ssnEnterCd}  
					  AND Y.PAY_ACTION_CD 	= #{payActionCd} 
					  AND Y.SABUN 			= #{searchSabun} ) A
				, TCPN230 B
				, TCPN011 C
				, (SELECT 
						X.ENTER_CD
						, X.ELEMENT_CD
						, X.SABUN
						, X.S_YM
						, X.E_YM
						, X.FORMULA				
					 FROM TCPN235 X
					 	, TCPN201 Y
					WHERE  X.ENTER_CD = Y.ENTER_CD
					  AND X.ENTER_CD = #{ssnEnterCd} 
					  AND X.SABUN 	 = #{searchSabun}  
					  AND Y.PAY_ACTION_CD 	= #{payActionCd} 
					  AND NVL(X.APPLY_YN,'N') = 'Y'
					  AND Y.PAY_YM BETWEEN X.S_YM AND NVL(X.E_YM, '999912'))D		
				, TCPN201 E 					  		  
			WHERE A.ENTER_CD 		= B.ENTER_CD
			  AND A.ELEMENT_CD 		= B.ELEMENT_CD  
			  AND A.ELEMENT_CD		= C.ELEMENT_CD
			  AND A.ENTER_CD		= C.ENTER_CD
	          AND A.ENTER_CD 		= D.ENTER_CD(+)
	          AND A.SABUN    		= D.SABUN(+)
	          AND A.ELEMENT_CD 		= D.ELEMENT_CD(+)	
			  AND A.ENTER_CD 		= E.ENTER_CD
			  AND A.PAY_ACTION_CD 	= E.PAY_ACTION_CD        
			  AND A.ENTER_CD 		= #{ssnEnterCd}   
			  AND A.PAY_ACTION_CD 	= #{payActionCd} 
			  AND A.SABUN 			= #{searchSabun}  
			  AND C.ELEMENT_TYPE	= #{elementType}
			  AND NVL(B.DISPLAY_YN,'N') = 'Y'
	          AND (B.SEARCH_SEQ IS NULL OR  B.SEARCH_SEQ IN (NVL((SELECT F.SEARCH_SEQ
	                                                       FROM TCPN206 F
	                                                      WHERE F.ENTER_CD 		= E.ENTER_CD
	                                                        AND F.PAY_ACTION_CD = E.PAY_ACTION_CD 
	                                                        AND F.SABUN  		= A.SABUN
	                                                        AND F.ELEMENT_CD 	= A.ELEMENT_CD),B.SEARCH_SEQ)))
			  AND E.PAY_YM BETWEEN B.S_YM AND NVL(B.E_YM, '999912')			
			  AND B.S_YM BETWEEN SUBSTR(C.SDATE,0,6) AND SUBSTR(NVL(C.EDATE, '999912'),0,6)			  	
            ORDER BY B.ELEMENT_CD 
		]]>
		</select>
		
		
	</mapper>