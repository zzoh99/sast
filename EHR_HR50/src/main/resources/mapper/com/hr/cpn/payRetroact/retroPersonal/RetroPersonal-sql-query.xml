<?xml version="1.0" encoding="UTF-8"?>
<!--
 * 월별급여지급현황
 * @author JM
-->
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="cpn.payRetroact.retroPersonal">
		<select parameterType="map" resultType="cMap" id="getRetroPersonalLst">

				<![CDATA[

SELECT  'PAY' AS GUBUN, REPORT_NM, TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
  FROM (
	SELECT ROWNUM AS RNUM, REPORT_NM, BASIC_MON, RESULT_MON, ELEMENT_TYPE
	  FROM (
				SELECT B.REPORT_NM, MIN(B.PRIORITY) PRIORITY, SUM(A.BASIC_MON) AS BASIC_MON,  NVL(SUM(A.RESULT_MON),0) AS RESULT_MON, MAX(B.ELEMENT_TYPE) AS ELEMENT_TYPE
				  FROM TCPN205 A,
					    (   SELECT SUB1.*
							  FROM TCPN011 SUB1,
								   (  	SELECT MAX(SDATE) AS SDATE, ELEMENT_CD
										  FROM TCPN011
										 WHERE ENTER_CD = #{ssnEnterCd}
										   AND (SELECT PAYMENT_YMD FROM TCPN201
                                                 WHERE ENTER_CD = #{ssnEnterCd}
                                                   AND PAY_ACTION_CD = #{payActionCd}) BETWEEN SDATE AND NVL(EDATE, '99991231')
										GROUP BY ELEMENT_CD ) SUB2
						     WHERE SUB1.ENTER_CD      = #{ssnEnterCd}
							   AND SUB1.ELEMENT_CD    = SUB2.ELEMENT_CD
							   AND SUB1.SDATE         = SUB2.SDATE
				         ) B
				 WHERE A.ENTER_CD  = #{ssnEnterCd}
				   AND A.PAY_ACTION_CD = #{payActionCd}
				   AND A.SABUN = #{sabun}
				   AND B.ELEMENT_TYPE = 'A'
				   -- 회사부담금 제외
				   AND (B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')

				   -- 항목테이블 조인
				   AND A.ENTER_CD  = B.ENTER_CD
				   AND A.ELEMENT_CD = B.ELEMENT_CD
				   --AND A.TOT_MON_YN = 'N'
				 GROUP BY B.REPORT_NM
				 ORDER BY PRIORITY
    		)
       )
       UNION ALL
SELECT  'PAY_TOT' AS GUBUN, '' AS REPORT_NM, TRIM(TO_CHAR(NVL(SUM(RESULT_MON),0),'999,999,999,990')) AS RESULT_MON
  FROM (
	SELECT ROWNUM AS RNUM, REPORT_NM, BASIC_MON, RESULT_MON, ELEMENT_TYPE
	  FROM (
				SELECT B.REPORT_NM, MIN(B.PRIORITY) PRIORITY, SUM(A.BASIC_MON) AS BASIC_MON, NVL(SUM(A.RESULT_MON),0) AS RESULT_MON, MAX(B.ELEMENT_TYPE) AS ELEMENT_TYPE
				  FROM TCPN205 A,
					    (   SELECT SUB1.*
							  FROM TCPN011 SUB1,
								   (  	SELECT MAX(SDATE) AS SDATE, ELEMENT_CD
										  FROM TCPN011
										 WHERE ENTER_CD = #{ssnEnterCd}
										   AND (SELECT PAYMENT_YMD FROM TCPN201
                                                 WHERE ENTER_CD = #{ssnEnterCd}
                                                   AND PAY_ACTION_CD = #{payActionCd}) BETWEEN SDATE AND NVL(EDATE, '99991231')
										GROUP BY ELEMENT_CD ) SUB2
						     WHERE SUB1.ENTER_CD      = #{ssnEnterCd}
							   AND SUB1.ELEMENT_CD    = SUB2.ELEMENT_CD
							   AND SUB1.SDATE         = SUB2.SDATE
				         ) B
				 WHERE A.ENTER_CD  = #{ssnEnterCd}
				   AND A.PAY_ACTION_CD = #{payActionCd}
				   AND A.SABUN = #{sabun}
				   AND B.ELEMENT_TYPE = 'A'
				   -- 회사부담금 제외
				   AND (B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')

				   -- 항목테이블 조인
				   AND A.ENTER_CD  = B.ENTER_CD
				   AND A.ELEMENT_CD = B.ELEMENT_CD
				   --AND A.TOT_MON_YN = 'N'
				 GROUP BY B.REPORT_NM
				 ORDER BY PRIORITY
    		)
       )
       UNION ALL
SELECT  'DEDUCT' AS GUBUN, REPORT_NM, TRIM(TO_CHAR(NVL(RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
  FROM (
	SELECT ROWNUM AS RNUM, REPORT_NM, BASIC_MON, RESULT_MON, ELEMENT_TYPE
	  FROM (
				SELECT B.REPORT_NM, MIN(B.PRIORITY) PRIORITY, SUM(A.BASIC_MON) AS BASIC_MON, NVL(SUM(A.RESULT_MON),0) AS RESULT_MON, MAX(B.ELEMENT_TYPE) AS ELEMENT_TYPE
				  FROM TCPN205 A,
					    (   SELECT SUB1.*
							  FROM TCPN011 SUB1,
								   (  	SELECT MAX(SDATE) AS SDATE, ELEMENT_CD
										  FROM TCPN011
										 WHERE ENTER_CD = #{ssnEnterCd}
										   AND (SELECT PAYMENT_YMD FROM TCPN201
                                                 WHERE ENTER_CD = #{ssnEnterCd}
                                                   AND PAY_ACTION_CD = #{payActionCd}) BETWEEN SDATE AND NVL(EDATE, '99991231')
										GROUP BY ELEMENT_CD ) SUB2
						     WHERE SUB1.ENTER_CD      = #{ssnEnterCd}
							   AND SUB1.ELEMENT_CD    = SUB2.ELEMENT_CD
							   AND SUB1.SDATE         = SUB2.SDATE
				         ) B
				 WHERE A.ENTER_CD  = #{ssnEnterCd}
				   AND A.PAY_ACTION_CD = #{payActionCd}
				   AND A.SABUN = #{sabun}
				   AND B.ELEMENT_TYPE = 'D'
				   -- 회사부담금 제외
				   AND (B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')

				   -- 항목테이블 조인
				   AND A.ENTER_CD  = B.ENTER_CD
				   AND A.ELEMENT_CD = B.ELEMENT_CD
				   --AND A.TOT_MON_YN = 'N'
				 GROUP BY B.REPORT_NM
				 ORDER BY PRIORITY
    		)
       )
       UNION ALL
SELECT  'DEDUCT_TOT' AS GUBUN, '' AS REPORT_NM, TRIM(TO_CHAR(NVL(SUM(RESULT_MON),0),'999,999,999,990')) AS RESULT_MON
  FROM (
	SELECT ROWNUM AS RNUM, REPORT_NM, BASIC_MON, RESULT_MON, ELEMENT_TYPE
	  FROM (
				SELECT B.REPORT_NM, MIN(B.PRIORITY) PRIORITY, SUM(A.BASIC_MON) AS BASIC_MON, NVL(SUM(A.RESULT_MON),0) AS RESULT_MON, MAX(B.ELEMENT_TYPE) AS ELEMENT_TYPE
				  FROM TCPN205 A,
					    (   SELECT SUB1.*
							  FROM TCPN011 SUB1,
								   (  	SELECT MAX(SDATE) AS SDATE, ELEMENT_CD
										  FROM TCPN011
										 WHERE ENTER_CD = #{ssnEnterCd}
										   AND (SELECT PAYMENT_YMD FROM TCPN201
                                                 WHERE ENTER_CD = #{ssnEnterCd}
                                                   AND PAY_ACTION_CD = #{payActionCd}) BETWEEN SDATE AND NVL(EDATE, '99991231')
										GROUP BY ELEMENT_CD ) SUB2
						     WHERE SUB1.ENTER_CD      = #{ssnEnterCd}
							   AND SUB1.ELEMENT_CD    = SUB2.ELEMENT_CD
							   AND SUB1.SDATE         = SUB2.SDATE
				         ) B
				 WHERE A.ENTER_CD  = #{ssnEnterCd}
				   AND A.PAY_ACTION_CD = #{payActionCd}
				   AND A.SABUN = #{sabun}
				   AND B.ELEMENT_TYPE = 'D'
				   -- 회사부담금 제외
				   AND (B.DEDUCTION_TYPE IS NULL OR B.DEDUCTION_TYPE <> 'ER_CAG')

				   -- 항목테이블 조인
				   AND A.ENTER_CD  = B.ENTER_CD
				   AND A.ELEMENT_CD = B.ELEMENT_CD
				   --AND A.TOT_MON_YN = 'N'
				 GROUP BY B.REPORT_NM
				 ORDER BY PRIORITY
    		)
       )
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getRetroPersonalMap">

				<![CDATA[
				SELECT
					   DECODE(TRIM(TO_CHAR(NVL(A.TOT_EARNING_MON,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.TOT_EARNING_MON,0),'999,999,999,990'))) AS TOT_EARNING_MON
					 , DECODE(TRIM(TO_CHAR(NVL(A.EX_TOT_MON,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.EX_TOT_MON,0),'999,999,999,990'))) AS EX_TOT_MON
					 , DECODE(TRIM(TO_CHAR(NVL(A.NOTAX_TOT_MON,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.NOTAX_TOT_MON,0),'999,999,999,990'))) AS NOTAX_TOT_MON
					 , DECODE(TRIM(TO_CHAR(NVL(A.TOT_DED_MON,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.TOT_DED_MON,0),'999,999,999,990'))) AS TOT_DED_MON
					 , DECODE(TRIM(TO_CHAR(NVL(A.BON_BASE_MON,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.BON_BASE_MON,0),'999,999,999,990'))) AS BON_BASE_MON
					 , DECODE(TRIM(TO_CHAR(NVL(A.PAYMENT_MON,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.PAYMENT_MON,0),'999,999,999,990'))) AS PAYMENT_MON
					 , DECODE(TRIM(TO_CHAR(NVL(A.BON_BASE_RATE,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.BON_BASE_RATE,0),'999,999,999,990'))) AS BON_BASE_RATE
					 , DECODE(TRIM(TO_CHAR(NVL(A.BON_RATE,0),'999,999,999,990')),'0',NULL,TRIM(TO_CHAR(NVL(A.BON_RATE,0),'999,999,999,990'))) AS BON_RATE
				  FROM TCPN303 A
				 WHERE ENTER_CD  = #{ssnEnterCd}
				   AND PAY_ACTION_CD = #{payActionCd}
				   AND SABUN = #{sabun}
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getRetroPersonalDtlList">

				<![CDATA[
							SELECT E.ENTER_CD
							      ,A.PAY_ACTION_CD
							      ,E.PAY_ACTION_CD AS RTR_PAY_ACTION_CD
							      ,E.PAYMENT_YMD
							      ,E.PAY_CD
							      ,D.SABUN
							      , NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn051', B.LANGUAGE_CD, #{ssnLocaleCd}), B.PAY_NM) AS PAY_NM
							      ,'0' AS DETAIL
							 FROM TCPN503 A -- TCPN503 A -- 소급대상소득관리
							     ,TCPN051 B -- TCPN051 B
							     ,TCPN203 C -- TCPN203 C -- 소급대상자
							     ,TCPN203 D -- TCPN203 D -- 소급대상급여일자의 대상자
							     ,TCPN201 E -- TCPN201 E -- 소급대상급여일자
							WHERE A.ENTER_CD      = #{ssnEnterCd}
							  AND A.PAY_ACTION_CD =  #{payActionCd}
							  AND A.ENTER_CD      = B.ENTER_CD
							  AND A.ENTER_CD      = C.ENTER_CD
							  AND A.ENTER_CD      = D.ENTER_CD
							  AND A.ENTER_CD      = E.ENTER_CD
							  AND A.PAY_ACTION_CD = C.PAY_ACTION_CD
							  AND D.PAY_ACTION_CD = A.RTR_PAY_ACTION_CD
							  AND E.PAY_ACTION_CD = A.RTR_PAY_ACTION_CD
							  AND C.SABUN         = D.SABUN
							  AND B.PAY_CD        = E.PAY_CD
							  AND C.SABUN         = #{sabun}
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getRetroPersonalDtlList2">

				<![CDATA[
					SELECT B.ELEMENT_TYPE
						, B.ELEMENT_CD
						, NVL(F_COM_GET_LANGUAGE_MAPPING(#{ssnEnterCd}, 'tcpn011', B.LANGUAGE_CD, #{ssnLocaleCd}),B.ELEMENT_NM ) ELEMENT_NM
						, TRIM(B.REPORT_NM)	AS REPORT_NM
						, A.BASIC_MON
						, A.RESULT_MON
						, C.NOTE
						FROM TCPN205 A
						, TCPN011 B
						, TCPN110 C
					WHERE A.ENTER_CD		= #{ssnEnterCd}
						 AND A.PAY_ACTION_CD	= #{payActionCd}
						 AND A.SABUN			= #{sabun}
						 AND A.ELEMENT_CD		= B.ELEMENT_CD
						 AND A.ENTER_CD		= B.ENTER_CD
						 AND A.ENTER_CD		= C.ENTER_CD(+)
						 AND A.SABUN			= C.SABUN(+)
						 AND A.PAY_ACTION_CD	= C.PAY_ACTION_CD(+)
						 AND A.ELEMENT_CD		= C.ELEMENT_CD(+)
						 AND A.RESULT_MON		= C.PAYMENT_MON(+)
					ORDER BY ELEMENT_TYPE, ELEMENT_CD
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getRetroDetailPopLst">

				<![CDATA[
							SELECT
								  ROWNUM AS RNUM
								, (CASE WHEN (result.REPORT_NM = '***' AND ELEMENT_TYPE = 'A') THEN '수당합계'
								        WHEN (result.REPORT_NM = '***' AND ELEMENT_TYPE = 'D') THEN '공제합계'
								        ELSE result.REPORT_NM END) ITEM_NM
							    , TRIM(TO_CHAR(NVL(result.GI_RESULT_MON,0),'999,999,999,990')) AS GI_RESULT_MON
							    , TRIM(TO_CHAR(NVL(result.RESULT_MON,0),'999,999,999,990')) AS RESULT_MON
							    , TRIM(TO_CHAR(NVL(result.GAP_MON,0),'999,999,999,990')) AS GAP_MON
							FROM
							(
								SELECT ELEMENT_TYPE
									, DECODE( temp.NO, '1', '***', REPORT_NM ) as REPORT_NM
							    , SUM(src.GI_RESULT_MON) AS GI_RESULT_MON
									, SUM(src.RESULT_MON)    AS RESULT_MON
									, SUM(src.GAP_MON)       AS GAP_MON
								FROM
								(
								    SELECT SUM(A.GI_RESULT_MON) AS GI_RESULT_MON--소급전
								          ,SUM(A.RESULT_MON)    AS RESULT_MON  --소급후
								          ,SUM(A.GAP_MON)       AS GAP_MON   --차액
								          ,B.ELEMENT_TYPE
								          ,B.REPORT_NM
								          ,B.PRIORITY
								      FROM  TCPN505 A --TCPN505 A -- 소급_개인별항목계산결과
								          , TCPN011 B --TCPN011 B
								          , TCPN201 C --TCPN201 C -- 소급대상급여일자
								    WHERE A.ENTER_CD          = #{ssnEnterCd} -- 회사코드
								      AND A.PAY_ACTION_CD     = #{payActionCd} -- 소급급여일자
								      AND A.RTR_PAY_ACTION_CD = #{rtrPayActionCd} --소급대상급여일자
								      AND A.ENTER_CD          = B.ENTER_CD
								      AND A.ELEMENT_CD        = B.ELEMENT_CD
								      AND A.ENTER_CD          = C.ENTER_CD
								      AND A.RTR_PAY_ACTION_CD = C.PAY_ACTION_CD
								      AND A.SABUN             = #{sabun} --사번
								      AND B.SDATE = (SELECT MAX(D.SDATE) FROM TCPN011 D
								                      WHERE D.ENTER_CD = B.ENTER_CD
								                        AND D.ELEMENT_CD = B.ELEMENT_CD
								                        AND C.PAYMENT_YMD BETWEEN D.SDATE AND NVL(D.EDATE,'99991231')
								                    )

								    GROUP BY B.ELEMENT_TYPE , B.REPORT_NM, B.PRIORITY
								) src, -- copy_t 없어서 그냥 테이블 사용
								( SELECT ROWNUM AS NO FROM TCPN201 WHERE ROWNUM <= 2 ) temp
								GROUP BY ELEMENT_TYPE, DECODE( temp.NO, '1', '***', REPORT_NM )
                                ORDER BY MAX(PRIORITY)
							) result
							ORDER BY RNUM
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getRetroDetailPopMap">

				<![CDATA[
							SELECT ENTER_CD, PAY_ACTION_CD, SABUN, NAME, RES_NO
							     , EMP_YMD, GEMP_YMD, MANAGE_CD, BUSINESS_PLACE_CD, PAY_TYPE
							     , WORK_TYPE, ORG_CD, PLACE_WORK_CD, JOB_CD, JIKGUB_CD
							     , SAL_CLASS, JIKWEE_CD, JIKCHAK_CD

							     , TRIM(TO_CHAR(NVL(TOT_EARNING_MON,0),'999,999,999,990')) AS TOT_EARNING_MON
							     , TRIM(TO_CHAR(NVL(EX_TOT_MON,0),'999,999,999,990')) AS EX_TOT_MON
							     , TRIM(TO_CHAR(NVL(TOT_DED_MON,0),'999,999,999,990')) AS TOT_DED_MON
							     , TRIM(TO_CHAR(NVL(PAYMENT_MON,0),'999,999,999,990')) AS PAYMENT_MON
							     , TRIM(TO_CHAR(NVL(NOTAX_TOT_MON,0),'999,999,999,990')) AS NOTAX_TOT_MON
							     , BON_RATE
							     , TRIM(TO_CHAR(NVL(BON_BASE_MON,0),'999,999,999,990')) AS BON_BASE_MON
							     , BON_BASE_RATE
							     , NOTAX_ABROAD_MON, NOTAX_WORK_MON, NOTAX_FOOD_MON, MTH_MON
							     , NOTAX_CAR_MON, NOTAX_ETC_MON, NOTAX_FORN_MON, TAXIBLE_EARN_MON, INCOME_DED_MON
							     , INCOME_MON, TOT_MAN_DED_MON, TOT_SPC_DED_MON, TAX_BASE_MON, CAL_TAX_MON
							     , INCTAX_DED_MON, ITAX_MON, RTAX_MON
							     , EI_MON, NP_MON, HI_MON
							     , BON_MTH_CNT, OVERTIME_HOUR, NIGHTWORK_HOUR, HOLIDAY_WORK_HOUR
							     , HOLIDAY_OT_HOUR, FESTIVAL_WORK_HOUR, H_MON, STD_H_MON, STD_HOUR
							  FROM TCPN303
							 WHERE ENTER_CD  = #{ssnEnterCd}
							   AND PAY_ACTION_CD = #{rtrPayActionCd}
							   AND SABUN = #{sabun}
				]]>


		</select>
		<select parameterType="map" resultType="cMap" id="getRetroDetailPopList1">

				<![CDATA[
					SELECT
						'PAY' AS GUBUN
						, REPORT_NM
						, TRIM(TO_CHAR(NVL(RESULT_MON, 0), '999,999,999,990')) AS RESULT_MON
					FROM
						(
							SELECT
								ROWNUM AS RNUM
								, REPORT_NM
								, BASIC_MON
								, RESULT_MON
								, ELEMENT_TYPE
							FROM
								(
									SELECT
										B.REPORT_NM
										, MIN(B.PRIORITY) PRIORITY
										, SUM(A.BASIC_MON) AS BASIC_MON
										, NVL(SUM(A.RESULT_MON), 0) AS RESULT_MON
										, MAX(B.ELEMENT_TYPE) AS ELEMENT_TYPE
									FROM
										TCPN505 A
										, (
											SELECT SUB1.*
											FROM
												TCPN011 SUB1
												, (
													SELECT
														MAX(SDATE) AS SDATE
														, ELEMENT_CD
													FROM
														TCPN011
													WHERE
														ENTER_CD = #{ssnEnterCd}
														AND (
															SELECT
																PAYMENT_YMD
															FROM
																TCPN201
															WHERE
																ENTER_CD = #{ssnEnterCd}
																AND PAY_ACTION_CD = #{payActionCd}
														) BETWEEN SDATE AND NVL(EDATE, '99991231')
													GROUP BY
														ELEMENT_CD
												) SUB2
											WHERE
												SUB1.ENTER_CD = #{ssnEnterCd}
												AND SUB1.ELEMENT_CD = SUB2.ELEMENT_CD
												AND SUB1.SDATE = SUB2.SDATE
										) B
									WHERE
										A.ENTER_CD = #{ssnEnterCd}
										AND A.PAY_ACTION_CD = #{payActionCd}
										AND A.RTR_PAY_ACTION_CD = #{rtrPayActionCd}
										AND A.SABUN = #{sabun}
										AND B.ELEMENT_TYPE = 'A'
										-- 회사부담금 제외
										AND (
											B.DEDUCTION_TYPE IS NULL
												OR B.DEDUCTION_TYPE <> 'ER_CAG'
										)
										-- 항목테이블 조인
										AND A.ENTER_CD = B.ENTER_CD
										AND A.ELEMENT_CD = B.ELEMENT_CD
										--AND A.TOT_MON_YN = 'N'
					
										GROUP BY B.REPORT_NM
									ORDER BY
										PRIORITY
								)
						)
				]]>


		</select>
		
		<!-- 수당 상세 -->
		<select parameterType="map" resultType="cMap" id="getRetroDetailPopList2">

				<![CDATA[
					SELECT
						'DEDUCT' AS GUBUN
						, REPORT_NM
						, TRIM(TO_CHAR(NVL(RESULT_MON, 0), '999,999,999,990')) AS RESULT_MON
					FROM
						(
							SELECT
								ROWNUM AS RNUM
								, REPORT_NM
								, BASIC_MON
								, RESULT_MON
								, ELEMENT_TYPE
							FROM
								(
									SELECT
										B.REPORT_NM
										, MIN(B.PRIORITY) PRIORITY
										, SUM(A.BASIC_MON) AS BASIC_MON
										, NVL(SUM(A.RESULT_MON), 0) AS RESULT_MON
										, MAX(B.ELEMENT_TYPE) AS ELEMENT_TYPE
									FROM
										TCPN505 A
										, (
											SELECT
												SUB1.*
											FROM
												TCPN011 SUB1
												, (
													SELECT
														MAX(SDATE) AS SDATE
														, ELEMENT_CD
													FROM
														TCPN011
													WHERE
														ENTER_CD = #{ssnEnterCd}
														AND (
															SELECT
																PAYMENT_YMD
															FROM
																TCPN201
															WHERE
																ENTER_CD = #{ssnEnterCd}
																AND PAY_ACTION_CD = #{payActionCd}
														) BETWEEN SDATE AND NVL(EDATE, '99991231')
													GROUP BY
														ELEMENT_CD
												) SUB2
											WHERE
												SUB1.ENTER_CD = #{ssnEnterCd}
												AND SUB1.ELEMENT_CD = SUB2.ELEMENT_CD
												AND SUB1.SDATE = SUB2.SDATE
										) B
									WHERE
										A.ENTER_CD = #{ssnEnterCd}
										AND A.PAY_ACTION_CD = #{payActionCd}
										AND A.RTR_PAY_ACTION_CD = #{rtrPayActionCd}
										AND A.SABUN = #{sabun}
										AND B.ELEMENT_TYPE = 'D'
										-- 회사부담금 제외
										AND (
											B.DEDUCTION_TYPE IS NULL
												OR B.DEDUCTION_TYPE <> 'ER_CAG'
										)
										-- 항목테이블 조인
										AND A.ENTER_CD = B.ENTER_CD
										AND A.ELEMENT_CD = B.ELEMENT_CD
										--AND A.TOT_MON_YN = 'N'
					
										GROUP BY B.REPORT_NM
									ORDER BY
										PRIORITY
								)
						)
				]]>


		</select>
	</mapper>
