<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.competency.competencyMgr">
<!-- 		역량사전 조회 -->
		<select parameterType="map" resultType="cMap" id="getCompetencyMgrList">

				<![CDATA[
						SELECT '0' AS DETAIL,
						       A.COMPETENCY_CD,
						       A.COMPETENCY_NM,
						       A.COMPETENCY_TYPE,
						       A.ESSENTIAL_YN,
						       A.MEMO,
						       A.MEASURE_TYPE,
						       A.GMEASURE_CD,
						       B.GMEASURE_NM,
						       A.MAIN_APP_TYPE,
						       A.RENEWAL,
						       A.UNIT,
						       A.SDATE,
						       A.EDATE
						 FROM  TORG051 A, TSYS021 B
						WHERE A.ENTER_CD = B.ENTER_CD(+)
						  AND A.GMEASURE_CD = B.GMEASURE_CD(+)
						  AND A.ENTER_CD = TRIM(#{ssnEnterCd})
						          ]]>
					<if test='searchCompetencyCd != null and !searchCompetencyCd.equals("")'>
						  AND A.COMPETENCY_CD LIKE '%'||TRIM(#{searchCompetencyCd})||'%'
					</if>
					<if test='searchCompetencyNm != null and !searchCompetencyNm.equals("")'>
						  AND A.COMPETENCY_NM LIKE '%'||TRIM(#{searchCompetencyNm})||'%'
					</if>
					<if test='searchSdate != null and !searchSdate.equals("")'>
						  AND REPLACE(TRIM(#{searchSdate}),'-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
					</if>
						ORDER BY A.MAIN_APP_TYPE, A.COMPETENCY_CD, A.SDATE, A.EDATE					 


		</select>
		
<!-- 		역량사전 저장 -->	
		<update parameterType="map" id="saveCompetencyMgr">

					MERGE INTO TORG051 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.COMPETENCY_CD
									, A.SDATE
									, A.EDATE									
									, A.COMPETENCY_NM
									, A.COMPETENCY_TYPE
									, A.ESSENTIAL_YN
									, A.MEMO
									, A.MEASURE_TYPE
									, A.GMEASURE_CD
									, A.MAIN_APP_TYPE
									, A.RENEWAL
									, A.UNIT
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS COMPETENCY_CD
											, NULL		AS SDATE
											, NULL		AS EDATE											
											, NULL		AS COMPETENCY_NM
											, NULL		AS COMPETENCY_TYPE
											, NULL		AS ESSENTIAL_YN
											, NULL		AS MEMO
											, NULL		AS MEASURE_TYPE
											, NULL		AS GMEASURE_CD
											, NULL		AS MAIN_APP_TYPE
											, NULL		AS RENEWAL
											, NULL		AS UNIT
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT	
											  TRIM( #{ssnEnterCd} )	AS ENTER_CD
											, TRIM( #{rm.competencyCd} )	AS COMPETENCY_CD
											, TRIM( #{rm.sdate} )	AS SDATE
											, TRIM( #{rm.edate} )	AS EDATE
											, TRIM( #{rm.competencyNm} )	AS COMPETENCY_NM
											, TRIM( #{rm.competencyType} ) AS COMPETENCY_TYPE
											, TRIM( #{rm.essentialYn} )	AS ESSENTIAL_YN
											, TRIM( #{rm.memo} ) AS MEMO
											, TRIM( #{rm.measureType} ) AS MEASURE_TYPE
											, TRIM( #{rm.gmeasureCd} ) AS GMEASURE_CD
											, TRIM( #{rm.mainAppType} ) AS MAIN_APP_TYPE
											, TRIM( #{rm.renewal} ) AS RENEWAL
											, TRIM( #{rm.unit} ) AS UNIT
											FROM   DUAL
</foreach>
									) A WHERE A.COMPETENCY_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.COMPETENCY_CD = S.COMPETENCY_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.SDATE	= S.SDATE	
									, T.EDATE	= S.EDATE									
									, T.COMPETENCY_NM	= S.COMPETENCY_NM
									, T.COMPETENCY_TYPE = S.COMPETENCY_TYPE
									, T.ESSENTIAL_YN	= S.ESSENTIAL_YN
									, T.MEMO = S.MEMO
									, T.MEASURE_TYPE = S.MEASURE_TYPE
									, T.GMEASURE_CD = S.GMEASURE_CD
									, T.MAIN_APP_TYPE = S.MAIN_APP_TYPE
									, T.RENEWAL = S.RENEWAL
									, T.UNIT = S.UNIT
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT 
						(	
						      T.ENTER_CD
							, T.COMPETENCY_CD
							, T.SDATE
							, T.EDATE							
							, T.COMPETENCY_NM
							, T.COMPETENCY_TYPE
							, T.ESSENTIAL_YN
							, T.MEMO
							, T.MEASURE_TYPE
							, T.GMEASURE_CD
							, T.MAIN_APP_TYPE
							, T.RENEWAL
							, T.UNIT				
							, T.CHKDATE
							, T.CHKID
						) 
						VALUES 
						(
							  S.ENTER_CD
							, S.COMPETENCY_CD
							, S.SDATE
							, S.EDATE							
							, S.COMPETENCY_NM
							, S.COMPETENCY_TYPE
							, S.ESSENTIAL_YN
							, S.MEMO
							, S.MEASURE_TYPE
							, S.GMEASURE_CD
							, S.MAIN_APP_TYPE
							, S.RENEWAL
							, S.UNIT
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
<!-- 		역량사전 삭제 -->
		<delete parameterType="map" id="deleteCompetencyMgr">

					DELETE FROM TORG051 
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND ENTER_CD||'_'||COMPETENCY_CD IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.competencyCd != null and !rm.competencyCd.equals("")'>
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.competencyCd})
										</if>
</foreach>
										)
		</delete>
		
		<select parameterType="map" resultType="cMap" id="getCompetencyMgrGmeasureCdList">

				<![CDATA[
						SELECT GMEASURE_CD AS CODE, GMEASURE_NM AS CODE_NM
						  FROM TSYS021
						 WHERE ENTER_CD = #{ssnEnterCd}
				]]>


		</select>


</mapper>