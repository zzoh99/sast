<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.organization.corpInfoMgr">
<!-- 		법인관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getCorpInfoMgrList">

				<![CDATA[
				SELECT A.ENTER_CD, A.ENTER_NM, A.ENTER_ENG_NM, A.ENTER_NO, A.PRESIDENT, A.EPRESIDENT, A.TEL_NO, A.FAX_NO, B.LOCATION_CD, A.DOMAIN, A.MEMO, A.SEQ,
				       B.ZIP, (B.ADDR || ' ' || B.DETAIL_ADDR) AS ADDR, (B.DETAIL_ENG_ADDR||', '||B.ENG_ADDR) AS ENG_ADDR, A.AFFILIATION, A.ALIAS, A.USE_YN, A.S_YMD, A.E_YMD, A.LANG_USE_YN,
				       A.PRESIDENT_JIKCHAK, A.E_PRESIDENT_JIKCHAK
				     , A.LANGUAGE_CD
				     , F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'torg900', A.LANGUAGE_CD, #{ssnLocaleCd}) AS LANGUAGE_NM
				     , A.LANGUAGE_CD2
				     , F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'torg900', A.LANGUAGE_CD2, #{ssnLocaleCd}) AS LANGUAGE_NM2
				     , A.COPYRIGHT
				  FROM TORG900 A
				  LEFT OUTER JOIN TORG109 C
				                       ON C.ENTER_CD = A.ENTER_CD
				                      AND C.MAP_TYPE_CD  = '600'
				                      AND C.MAP_CD = A.LOCATION_CD
				                      AND (C.ENTER_CD, C.MAP_TYPE_CD, C.MAP_CD, C.SDATE) IN (SELECT ENTER_CD, MAP_TYPE_CD, MAP_CD, MAX(SDATE)
				                                                                               FROM TORG109
				                                                                              WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
				                                                                              GROUP BY ENTER_CD, MAP_TYPE_CD, MAP_CD)

				  LEFT OUTER JOIN TSYS015 B
				                       ON B.ENTER_CD = C.ENTER_CD
				                      AND B.LOCATION_CD = C.MAP_CD
				 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
				   AND A.ENTER_NM LIKE '%'||TRIM(#{searchEnterNm})||'%'
				 ORDER BY A.SEQ, A.ENTER_NM
				]]>


		</select>

<!-- 		법인관리 조회 -->
		<select parameterType="map" resultType="cMap" id="getCorpInfoMgrListDetail">

				<![CDATA[
				SELECT A.ENTER_CD, A.ENTER_NM, A.ENTER_ENG_NM, A.ENTER_NO, A.PRESIDENT, A.EPRESIDENT, A.TEL_NO, A.FAX_NO, A.LOCATION_CD, A.DOMAIN, A.MEMO, A.SEQ,
				       B.ZIP, (B.ADDR || ' ' || B.DETAIL_ADDR) AS ADDR, (B.DETAIL_ENG_ADDR||', '||B.ENG_ADDR) AS ENG_ADDR, A.SDATE, A.EDATE, A.AFFILIATION, A.ALIAS
				  FROM TORG902 A
				  LEFT OUTER JOIN TORG109 C
				                       ON C.ENTER_CD = A.ENTER_CD
				                      AND A.LOCATION_CD = C.MAP_CD
				                      AND (C.ENTER_CD, C.MAP_TYPE_CD, C.MAP_CD, C.SDATE) IN (SELECT ENTER_CD, MAP_TYPE_CD, MAP_CD, MAX(SDATE)
				                                                                               FROM TORG109
				                                                                              WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
				                                                                                AND MAP_TYPE_CD  = '600'
				                                                                              GROUP BY ENTER_CD, MAP_TYPE_CD, MAP_CD)
				  LEFT OUTER JOIN TSYS015 B
				                       ON B.ENTER_CD = C.ENTER_CD
				                      AND B.LOCATION_CD = C.MAP_CD
				 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
				 ORDER BY A.SEQ, A.ENTER_NM
				]]>


		</select>

<!-- 		법인관리 저장 -->
		<update parameterType="map" id="saveCorpInfoMgr">

					MERGE INTO TORG900 T
					USING	(
							SELECT A.ENTER_CD
							     , A.ENTER_NM
							     , A.ENTER_ENG_NM
							     , A.ENTER_NO
							     , A.PRESIDENT
							     , A.EPRESIDENT
							     , A.TEL_NO
							     , A.FAX_NO
							     , A.LOCATION_CD
							     , A.DOMAIN
							     , A.MEMO
							     , A.SEQ
							     , A.AFFILIATION
							     , A.ALIAS
							     , A.USE_YN
							     , A.S_YMD
							     , A.E_YMD
							     , A.LANG_USE_YN
							     , A.PRESIDENT_JIKCHAK
							     , A.E_PRESIDENT_JIKCHAK
							     , A.LANGUAGE_CD
							     , A.LANGUAGE_CD2
							     , A.COPYRIGHT
							  FROM (
									SELECT NULL		AS ENTER_CD
									     , NULL		AS ENTER_NM
									     , NULL		AS ENTER_ENG_NM
									     , NULL		AS ENTER_NO
									     , NULL		AS PRESIDENT
									     , NULL		AS EPRESIDENT
									     , NULL		AS TEL_NO
									     , NULL		AS FAX_NO
									     , NULL		AS LOCATION_CD
									     , NULL		AS DOMAIN
									     , NULL		AS MEMO
									     , NULL		AS SEQ
									     , NULL		AS AFFILIATION
									     , NULL		AS ALIAS
									     , NULL		AS USE_YN
									     , NULL		AS S_YMD
									     , NULL		AS E_YMD
									     , NULL		AS LANG_USE_YN
									     , NULL		AS PRESIDENT_JIKCHAK
									     , NULL		AS E_PRESIDENT_JIKCHAK
									     , NULL		AS LANGUAGE_CD
									     , NULL		AS LANGUAGE_CD2
									     , NULL		AS COPYRIGHT
									  FROM DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT TRIM( #{ssnEnterCd} ) AS ENTER_CD
									     , TRIM( #{rm.enterNm} ) AS ENTER_NM
									     , TRIM( #{rm.enterEngNm}) AS ENTER_ENG_NM
									     , TRIM( #{rm.enterNo}) AS ENTER_NO
									     , TRIM( #{rm.president}) AS PRESIDENT
									     , TRIM( #{rm.epresident}) AS EPRESIDENT
									     , TRIM( #{rm.telNo}) AS TEL_NO
									     , TRIM( #{rm.faxNo}) AS FAX_NO
									     , TRIM( #{rm.locationCd}) AS LOCATION_CD
									     , TRIM( #{rm.domain}) AS DOMAIN
									     , TRIM( #{rm.memo} ) AS MEMO
									     , TRIM( #{rm.seq} ) AS SEQ
									     , TRIM( #{rm.affiliation}) AS AFFILIATION
									     , TRIM( #{rm.alias}) AS ALIAS
									     , TRIM( #{rm.useYn}) AS USE_YN
									     , TRIM( #{rm.sYmd}) AS S_YMD
									     , TRIM( #{rm.eYmd}) AS E_YMD
									     , TRIM( #{rm.langUseYn}) AS LANG_USE_YN
									     , TRIM( #{rm.presidentJikchak}) AS PRESIDENT_JIKCHAK
									     , TRIM( #{rm.ePresidentJikchak}) AS E_PRESIDENT_JIKCHAK
									     , TRIM( #{rm.languageCd}) AS LANGUAGE_CD
									     , TRIM( #{rm.languageCd2}) AS LANGUAGE_CD2
									     , TRIM( #{rm.copyright}) AS COPYRIGHT
									  FROM DUAL
</foreach>
									) A WHERE A.ENTER_NM IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD )
					WHEN MATCHED THEN
						UPDATE SET T.ENTER_NM = S.ENTER_NM
								 , T.ENTER_ENG_NM = S.ENTER_ENG_NM
								 , T.ENTER_NO = S.ENTER_NO
								 , T.PRESIDENT = S.PRESIDENT
								 , T.EPRESIDENT = S.EPRESIDENT
								 , T.TEL_NO = S.TEL_NO
								 , T.FAX_NO = S.FAX_NO
								 , T.LOCATION_CD = S.LOCATION_CD
								 , T.DOMAIN = S.DOMAIN
								 , T.MEMO = S.MEMO
								 , T.SEQ = S.SEQ
								 , T.AFFILIATION = S.AFFILIATION
								 , T.ALIAS = S.ALIAS
								 , T.USE_YN = S.USE_YN
								 , T.S_YMD = S.S_YMD
								 , T.E_YMD = S.E_YMD
								 , T.CHKDATE = SYSDATE
								 , T.CHKID = #{ssnSabun}
								 , T.LANG_USE_YN = S.LANG_USE_YN
								 , T.PRESIDENT_JIKCHAK = S.PRESIDENT_JIKCHAK
								 , T.E_PRESIDENT_JIKCHAK = S.E_PRESIDENT_JIKCHAK
								 , T.LANGUAGE_CD = S.LANGUAGE_CD
								 , T.LANGUAGE_CD2 = S.LANGUAGE_CD2
								 , T.COPYRIGHT = S.COPYRIGHT
					WHEN NOT MATCHED THEN
						INSERT
						(
						      T.ENTER_CD
							, T.ENTER_NM
							, T.ENTER_ENG_NM
							, T.ENTER_NO
							, T.PRESIDENT
							, T.EPRESIDENT
							, T.TEL_NO
							, T.FAX_NO
							, T.LOCATION_CD
							, T.DOMAIN
							, T.MEMO
							, T.SEQ
							, T.AFFILIATION
							, T.ALIAS
							, T.USE_YN
							, T.S_YMD
							, T.E_YMD
							, T.CHKDATE
							, T.CHKID
							, T.LANG_USE_YN
							, T.PRESIDENT_JIKCHAK
							, T.E_PRESIDENT_JIKCHAK
							, T.LANGUAGE_CD
							, T.LANGUAGE_CD2
							, T.COPYRIGHT
						)
						VALUES
						(
							  S.ENTER_CD
							, S.ENTER_NM
							, S.ENTER_ENG_NM
							, S.ENTER_NO
							, S.PRESIDENT
							, S.EPRESIDENT
							, S.TEL_NO
							, S.FAX_NO
							, S.LOCATION_CD
							, S.DOMAIN
							, S.MEMO
							, S.SEQ
							, S.AFFILIATION
							, S.ALIAS
							, S.USE_YN
							, S.S_YMD
							, S.E_YMD
							, SYSDATE
							, #{ssnSabun}
							, S.LANG_USE_YN
							, S.PRESIDENT_JIKCHAK
							, S.E_PRESIDENT_JIKCHAK
							, S.LANGUAGE_CD
							, S.LANGUAGE_CD2
							, S.COPYRIGHT
						)
		</update>

<!-- 		법인관리 저장 -->
		<update parameterType="map" id="saveCorpInfoMgrDetail">

				<![CDATA[
					MERGE INTO TORG902 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.ENTER_NM
									, A.ENTER_ENG_NM
									, A.ENTER_NO
									, A.PRESIDENT
									, A.EPRESIDENT
									, A.TEL_NO
									, A.FAX_NO
									, A.LOCATION_CD
									, A.DOMAIN
									, A.MEMO
									, A.SEQ
									, A.SDATE
									, A.EDATE
									, A.AFFILIATION
									, A.ALIAS
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS ENTER_NM
											, NULL		AS ENTER_ENG_NM
											, NULL		AS ENTER_NO
											, NULL		AS PRESIDENT
											, NULL		AS EPRESIDENT
											, NULL		AS TEL_NO
											, NULL		AS FAX_NO
											, NULL		AS LOCATION_CD
											, NULL		AS DOMAIN
											, NULL		AS MEMO
											, NULL		AS SEQ
											, NULL		AS SDATE
											, NULL		AS EDATE
											, NULL		AS AFFILIATION
											, NULL		AS ALIAS
									FROM	DUAL
]]>
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  TRIM( #{ssnEnterCd} )	AS ENTER_CD
											, TRIM( #{rm.enterNm} )	AS ENTER_NM
											, TRIM( #{rm.enterEngNm})	AS ENTER_ENG_NM
											, TRIM( #{rm.enterNo})	AS ENTER_NO
											, TRIM( #{rm.president})	AS PRESIDENT
											, TRIM( #{rm.epresident})	AS EPRESIDENT
											, TRIM( #{rm.telNo})	AS TEL_NO
											, TRIM( #{rm.faxNo})	AS FAX_NO
											, TRIM( #{rm.locationCd}) AS LOCATION_CD
											, TRIM( #{rm.domain}) AS DOMAIN
											, TRIM( #{rm.memo} ) AS MEMO
											, TRIM( #{rm.seq} ) AS SEQ
											, TRIM( #{rm.sdate} ) AS SDATE
											, TRIM( #{rm.edate} ) AS EDATE
											, TRIM( #{rm.affiliation}) AS AFFILIATION
											, TRIM( #{rm.alias}) AS ALIAS
											FROM   DUAL
</foreach>
<![CDATA[
									) A WHERE A.ENTER_NM IS NOT NULL
										AND	  A.SDATE IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.SDATE = S.SDATE)
					WHEN MATCHED THEN
						UPDATE SET
									  T.ENTER_NM = S.ENTER_NM
									, T.ENTER_ENG_NM	= S.ENTER_ENG_NM
									, T.ENTER_NO	= S.ENTER_NO
									, T.PRESIDENT	= S.PRESIDENT
									, T.EPRESIDENT	= S.EPRESIDENT
									, T.TEL_NO	= S.TEL_NO
									, T.FAX_NO = S.FAX_NO
									, T.LOCATION_CD = S.LOCATION_CD
									, T.DOMAIN = S.DOMAIN
									, T.MEMO = S.MEMO
									, T.SEQ = S.SEQ
									, T.EDATE = S.EDATE
									, T.AFFILIATION = S.AFFILIATION
									, T.ALIAS = S.ALIAS
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
						      T.ENTER_CD
							, T.ENTER_NM
							, T.ENTER_ENG_NM
							, T.ENTER_NO
							, T.PRESIDENT
							, T.EPRESIDENT
							, T.TEL_NO
							, T.FAX_NO
							, T.LOCATION_CD
							, T.DOMAIN
							, T.MEMO
							, T.SEQ
							, T.SDATE
							, T.EDATE
							, T.AFFILIATION
							, T.ALIAS
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.ENTER_NM
							, S.ENTER_ENG_NM
							, S.ENTER_NO
							, S.PRESIDENT
							, S.EPRESIDENT
							, S.TEL_NO
							, S.FAX_NO
							, S.LOCATION_CD
							, S.DOMAIN
							, S.MEMO
							, S.SEQ
							, S.SDATE
							, S.EDATE
							, S.AFFILIATION
							, S.ALIAS
							, SYSDATE
							, #{ssnSabun}
						)
				]]>


		</update>

<!-- 		법인관리 삭제 -->
		<delete parameterType="map" id="deleteCorpInfoMgr">

					DELETE FROM TORG900
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND ENTER_CD IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test='rm.enterCd != null and !rm.enterCd.equals("")'>
											TRIM(#{rm.enterCd})
										</if>
</foreach>
										)
		</delete>

<!-- 		법인관리 삭제 -->
		<delete parameterType="map" id="deleteCorpInfoMgrDetail">

					DELETE FROM TORG902
					 WHERE (ENTER_CD, SDATE) IN ( (NULL, NULL)
					<foreach item="rm" collection="deleteRows" >
					,
						<if  test='(ssnEnterCd != null and !ssnEnterCd.equals(""))
							and (rm.sdate != null and !rm.sdate.equals(""))
							'>
								( #{ssnEnterCd}, TRIM(#{rm.sdate}) )
						</if>
					</foreach>
					)
		</delete>

<!-- 		법인관리 LOCATION 조회 -->
		<select parameterType="map" resultType="cMap" id="getCorpInfoMgrLocationMap">

				<![CDATA[
						SELECT B.ZIP, (B.ADDR || ' ' || B.DETAIL_ADDR) AS ADDR, B.ENG_ADDR
						  FROM TORG109 A
						  LEFT OUTER JOIN TSYS015 B
						    ON B.ENTER_CD = A.ENTER_CD
						   AND B.LOCATION_CD = A.MAP_CD
						 WHERE A.ENTER_CD = #{ssnEnterCd}
						   AND A.MAP_TYPE_CD  = '600'
						   AND A.MAP_CD = TRIM(#{searchLocationCd})
					       AND A.SDATE = (SELECT MAX (SDATE) FROM TORG109
						                   WHERE ENTER_CD = A.ENTER_CD
						                     AND MAP_TYPE_CD = A.MAP_TYPE_CD
						                     AND MAP_CD = A.MAP_CD
						                     AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231'))
				]]>


		</select>


</mapper>