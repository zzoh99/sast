<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.organization.orgExpMgr">
<!-- 		조직구분예외사항 조회 -->
		<select parameterType="map" resultType="cMap" id="getOrgExpMgrList">

				<![CDATA[
				SELECT SABUN, F_COM_GET_NAMES(ENTER_CD,SABUN, #{ssnLocaleCd}) AS NAME, F_COM_GET_NAMES(ENTER_CD,SABUN,'ALIAS') AS ALIAS
				      , ORG_CD, ORG_NM, JIKCHAK_NM, JIKGUB_NM, JIKWEE_NM, STATUS_NM, MAP_TYPE_CD, MAP_CD
                	  , MAP_NM
                	  , MEMO, SDATE, EDATE
                FROM(				
						SELECT A.ENTER_CD
						      ,A.SABUN
						      ,B.NAME
						      ,F_COM_GET_ORG_CD(A.ENTER_CD,A.SABUN, NVL(A.EDATE, '99991231')) AS ORG_CD
						      ,F_COM_GET_ORG_NM2(A.ENTER_CD, A.SABUN, NVL(A.EDATE, '99991231'),#{ssnLocaleCd}) AS ORG_NM
						      ,F_COM_GET_JIKCHAK_NM(A.ENTER_CD, A.SABUN, NVL(A.EDATE, '99991231'),#{ssnLocaleCd}) AS JIKCHAK_NM
						      ,F_COM_GET_JIKGUB_NM(A.ENTER_CD, A.SABUN, NVL(A.EDATE, '99991231'),#{ssnLocaleCd}) AS JIKGUB_NM
						      ,F_COM_GET_JIKWEE_NM(A.ENTER_CD, A.SABUN, NVL(A.EDATE, '99991231'),#{ssnLocaleCd}) AS JIKWEE_NM
						      ,C.STATUS_CD
						      ,F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H10010', C.STATUS_CD, #{ssnLocaleCd}) AS STATUS_NM
						      ,A.MAP_TYPE_CD
						      ,A.MAP_CD
		                      ,F_COM_GET_MAP_NM2(A.ENTER_CD, A.MAP_TYPE_CD, A.MAP_CD, NVL(A.EDATE, '99991231'), #{ssnLocaleCd}) AS MAP_NM
						      ,A.MEMO
						      ,A.SDATE
						      ,A.EDATE
						  FROM TORG113 A, THRM100 B, THRM151 C
						 WHERE A.ENTER_CD = B.ENTER_CD
						   AND A.ENTER_CD = C.ENTER_CD
						   AND A.SABUN    = B.SABUN 
						   AND A.SABUN    = C.SABUN 
						   AND A.ENTER_CD = TRIM(#{ssnEnterCd})
						   AND A.SDATE = (SELECT MAX(X.SDATE)
						                   FROM TORG113 X
						                  WHERE X.ENTER_CD = A.ENTER_CD
						                    AND X.SABUN = A.SABUN
						                    AND X.MAP_TYPE_CD = A.MAP_TYPE_CD
						                    AND X.MAP_CD = A.MAP_CD
						                    AND X.SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
						                   )                    
						  AND C.SDATE = (SELECT MAX(X.SDATE)
						                   FROM THRM151 X
						                  WHERE X.ENTER_CD = C.ENTER_CD
						                    AND X.SABUN = C.SABUN
						                    AND X.SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
					                    )				   
				   )
				   WHERE 1=1
				             ]]>
<if test='searchMapTypeCd != null and !searchMapTypeCd.equals("") '>
				   		AND MAP_TYPE_CD LIKE '%'||TRIM(#{searchMapTypeCd})||'%'
</if>
<if test='searchMapNm != null and !searchMapNm.equals("") '>
				   		AND MAP_NM LIKE '%'||UPPER( TRIM(#{searchMapNm}) ) ||'%'
</if>
<if test='searchName != null and !searchName.equals("") '>
				   		AND (F_COM_GET_NAMES(ENTER_CD, SABUN) LIKE '%'||TRIM(#{searchName})||'%' OR F_COM_GET_NAMES(ENTER_CD, SABUN,'ALIAS') LIKE '%'||TRIM(#{searchName})||'%')
</if>
				ORDER BY STATUS_CD ASC, F_COM_JIKJE_SORT(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD'))

		</select>
		
<!-- 		조직구분예외사항 저장 -->	
		<update parameterType="map" id="saveOrgExpMgr">

					MERGE INTO TORG113 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.SABUN
									, A.MAP_TYPE_CD
									, A.MAP_CD
									, A.MEMO
									, A.SDATE
									, A.EDATE
							FROM	(
									SELECT	  NULL		AS ENTER_CD   
											, NULL		AS SABUN      
											, NULL		AS MAP_TYPE_CD
											, NULL		AS MAP_CD     
											, NULL		AS MEMO
											, NULL		AS SDATE      
											, NULL		AS EDATE      
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT	
											  TRIM( #{ssnEnterCd} )		AS ENTER_CD
											, TRIM( #{rm.sabun} )		AS SABUN
											, TRIM( #{rm.mapTypeCd})	AS MAP_TYPE_CD
											, TRIM( #{rm.mapCd})		AS MAP_CD
											, TRIM( #{rm.memo} )		AS MEMO
											, TRIM( #{rm.sdate} )		AS SDATE
											, TRIM( #{rm.edate} )		AS EDATE
											FROM   DUAL
</foreach>
									) A WHERE A.SDATE IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.SABUN = S.SABUN AND T.MAP_TYPE_CD = S.MAP_TYPE_CD AND T.MAP_CD = S.MAP_CD AND T.SDATE = S.SDATE )
					WHEN MATCHED THEN
						UPDATE SET	
								   T.EDATE = S.EDATE
								   ,T.MEMO = S.MEMO
					WHEN NOT MATCHED THEN
						INSERT 
						(	
						      T.ENTER_CD   
							, T.SABUN      
							, T.MAP_TYPE_CD
							, T.MAP_CD     
							, T.MEMO
							, T.SDATE      
							, T.EDATE      
							, T.CHKDATE
							, T.CHKID
						) 
						VALUES 
						(
							  S.ENTER_CD   
							, S.SABUN      
							, S.MAP_TYPE_CD
							, S.MAP_CD
							, S.MEMO       
							, S.SDATE      
                            , S.EDATE      
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
<!-- 		조직구분예외사항 삭제 -->
		<delete parameterType="map" id="deleteOrgExpMgr">

					DELETE FROM TORG113 
					WHERE ENTER_CD = #{ssnEnterCd}
					  AND ENTER_CD||'_'||SABUN||'_'||MAP_TYPE_CD||'_'||MAP_CD||'_'||SDATE IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
							<if test='ssnEnterCd != null and !ssnEnterCd.equals("") and rm.sabun != null and !rm.sabun.equals("") and rm.mapTypeCd != null and !rm.mapTypeCd.equals("") and rm.mapCd != null and !rm.mapCd.equals("") and rm.sdate != null and !rm.sdate.equals("")'>
								TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.sabun})||'_'||TRIM(#{rm.mapTypeCd})||'_'||TRIM(#{rm.mapCd})||'_'||TRIM(#{rm.sdate})
							</if>
</foreach>
										)
		</delete>


</mapper>