<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.organization.orgSchemeModMgr">

		<select parameterType="map" resultType="cMap" id="getOrgSchemeModMgrLeftList">

				<![CDATA[
						SELECT A.ENTER_CD,
						       A.ORG_CD,
						       A.SDATE,
						       A.EDATE,
						       A.OBJECT_TYPE,
						       A.ORG_NM,
						       A.ORG_FULL_NM,
						       A.ORG_ENG_NM,
						       A.INOUT_TYPE,
						       A.ORG_TYPE,
						       A.TEL_NO,
						       A.CO_TEL_NO,
						       A.MISSION,
						       A.LOCATION_CD,
						       A.ROLE_MEMO,
						       A.KEY_JOB_MEMO,
						       A.VISUAL_YN,
						       A.MEMO,
						       NVL(B.DEL_YN,'0') AS DEL_YN, VISUAL_YN,
						       (CASE WHEN ( SELECT COUNT(Y.ORG_CD) FROM TORG103 X, TORG105 Y WHERE X.ENTER_CD = Y.ENTER_CD AND X.SDATE = Y.SDATE AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN X.SDATE AND NVL(X.EDATE, '99991231') AND Y.ENTER_CD = A.ENTER_CD AND Y.ORG_CD = A.ORG_CD AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231') ) > 0 THEN 1 ELSE 0 END) AS ORG_SCHEME_USE_YN,
						       A.WORK_AREA_CD,
						       F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H90202', A.WORK_AREA_CD, #{ssnLocaleCd}) AS WORK_AREA_NM
						 FROM  TORG101 A,
						  	   ( SELECT ENTER_CD, ORG_CD, COUNT(*)  AS DEL_YN FROM THRM151 WHERE ENTER_CD = TRIM(#{ssnEnterCd}) GROUP BY  ENTER_CD, ORG_CD ) B
						WHERE A.ENTER_CD = B.ENTER_CD(+)
						  AND A.ORG_CD = B.ORG_CD(+)
						  AND A.ENTER_CD = TRIM(#{ssnEnterCd})
						          ]]>
					<if test='searchOrgCd != null and !searchOrgCd.equals("")'>
						  AND A.ORG_CD LIKE '%'||TRIM(#{searchOrgCd})||'%'
					</if>
					<if test='searchOrgNm != null and !searchOrgNm.equals("")'>
						  AND A.ORG_NM LIKE '%'||TRIM(#{searchOrgNm})||'%'
					</if>
					<if test='searchBaseDate != null and !searchBaseDate.equals("")'>
						  AND REPLACE(TRIM(#{searchBaseDate}),'-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
					</if>
					<if test='searchVisualYn != null and !searchVisualYn.equals("")'>
						  AND A.VISUAL_YN = #{searchVisualYn}
					</if>
						ORDER BY A.ORG_CD, A.SDATE, A.EDATE

		</select>

		<update parameterType="map" id="saveOrgSchemeModMgrLeft">

					MERGE INTO TORG101 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.ORG_CD
									, A.SDATE
									, A.EDATE
									, A.OBJECT_TYPE
									, A.ORG_NM
									, A.ORG_FULL_NM
									, A.ORG_ENG_NM
									, A.INOUT_TYPE
									, A.ORG_TYPE
									, A.TEL_NO
									, A.CO_TEL_NO
									, A.MISSION
									, A.LOCATION_CD
									, A.ROLE_MEMO
									, A.KEY_JOB_MEMO
									, A.VISUAL_YN
									, A.MEMO
									, A.WORK_AREA_CD
									, A.WORK_AREA_NM
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS ORG_CD
											, NULL		AS SDATE
											, NULL		AS EDATE
											, NULL		AS OBJECT_TYPE
											, NULL		AS ORG_NM
											, NULL      AS ORG_FULL_NM
											, NULL		AS ORG_ENG_NM
											, NULL		AS INOUT_TYPE
											, NULL		AS ORG_TYPE
											, NULL		AS TEL_NO
											, NULL		AS CO_TEL_NO
											, NULL		AS MISSION
											, NULL		AS LOCATION_CD
											, NULL		AS ROLE_MEMO
											, NULL		AS KEY_JOB_MEMO
											, NULL		AS VISUAL_YN
											, NULL		AS MEMO
											, NULL		AS WORK_AREA_CD
											, NULL		AS WORK_AREA_NM
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT
											  TRIM( #{ssnEnterCd} )	AS ENTER_CD
											, TRIM( #{rm.orgCd} )	AS ORG_CD
											, TRIM( #{rm.sdate} )	AS SDATE
											, TRIM( #{rm.edate} )	AS EDATE
											, TRIM( #{rm.objectType})	AS OBJECT_TYPE
											, TRIM( #{rm.orgNm})	AS ORG_NM
											, TRIM( #{rm.orgFullNm}) AS ORG_FULL_NM
											, TRIM( #{rm.orgEngNm}) AS ORG_ENG_NM
											, TRIM( #{rm.inoutType}) AS INOUT_TYPE
											, TRIM( #{rm.orgType}) AS ORG_TYPE
											, TRIM( #{rm.telNo}) AS TEL_NO
											, TRIM( #{rm.coTelNo}) AS CO_TEL_NO
											, TRIM( #{rm.mission}) AS MISSION
											, TRIM( #{rm.locationCd} ) AS LOCATION_CD
											, TRIM( #{rm.roleMemo}) AS ROLE_MEMO
											, TRIM( #{rm.keyJobMemo}) AS KEY_JOB_MEMO
											, TRIM( #{rm.visualYn}) AS VISUAL_YN
											, TRIM( #{rm.memo} ) AS MEMO
											, TRIM( #{rm.workAreaCd}) AS WORK_AREA_CD
											, TRIM( #{rm.workAreaNm}) AS WORK_AREA_NM
											FROM   DUAL
</foreach>
									) A WHERE A.ORG_CD IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.ORG_CD = S.ORG_CD AND T.SDATE = S.SDATE )
					WHEN MATCHED THEN
						UPDATE SET	  T.EDATE	= S.EDATE
									, T.OBJECT_TYPE	= S.OBJECT_TYPE
									, T.ORG_NM	= S.ORG_NM
									, T.ORG_FULL_NM = S.ORG_FULL_NM
									, T.ORG_ENG_NM = S.ORG_ENG_NM
									, T.INOUT_TYPE = S.INOUT_TYPE
									, T.ORG_TYPE = S.ORG_TYPE
									, T.TEL_NO = S.TEL_NO
									, T.CO_TEL_NO = S.CO_TEL_NO
									, T.MISSION = S.MISSION
									, T.LOCATION_CD = S.LOCATION_CD
									, T.ROLE_MEMO = S.ROLE_MEMO
									, T.KEY_JOB_MEMO = S.KEY_JOB_MEMO
									, T.VISUAL_YN = S.VISUAL_YN
									, T.MEMO = S.MEMO
									, T.WORK_AREA_CD = S.WORK_AREA_CD
									, T.WORK_AREA_NM = S.WORK_AREA_NM
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
						      T.ENTER_CD
							, T.ORG_CD
							, T.SDATE
							, T.EDATE
							, T.OBJECT_TYPE
							, T.ORG_NM
							, T.ORG_FULL_NM
							, T.ORG_ENG_NM
							, T.INOUT_TYPE
							, T.ORG_TYPE
							, T.TEL_NO
							, T.CO_TEL_NO
							, T.MISSION
							, T.LOCATION_CD
							, T.ROLE_MEMO
							, T.KEY_JOB_MEMO
							, T.VISUAL_YN
							, T.MEMO
							, T.WORK_AREA_CD
							, T.WORK_AREA_NM
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.ORG_CD
							, S.SDATE
							, S.EDATE
							, S.OBJECT_TYPE
							, S.ORG_NM
							, S.ORG_FULL_NM
							, S.ORG_ENG_NM
							, S.INOUT_TYPE
							, S.ORG_TYPE
							, S.TEL_NO
							, S.CO_TEL_NO
							, S.MISSION
							, S.LOCATION_CD
							, S.ROLE_MEMO
							, S.KEY_JOB_MEMO
							, S.VISUAL_YN
							, S.MEMO
							, S.WORK_AREA_CD
							, S.WORK_AREA_NM
							, SYSDATE
							, #{ssnSabun}
						)
		</update>

		<delete parameterType="map" id="deleteOrgSchemeModMgrLeft">

					DELETE	FROM TORG101
					WHERE	(ENTER_CD, ORG_CD, SDATE) IN ((NULL, NULL, NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test='ssnEnterCd != null and !ssnEnterCd.equals("")'>
										<if test='rm.orgCd != null and !rm.orgCd.equals("")'>
										<if test='rm.sdate != null and !rm.sdate.equals("")'>
												( TRIM( #{ssnEnterCd} ) , TRIM( #{rm.orgCd} ) , TRIM( #{rm.sdate} ) )
										</if>
										</if>
										</if>
</foreach>

										)
		</delete>

</mapper>