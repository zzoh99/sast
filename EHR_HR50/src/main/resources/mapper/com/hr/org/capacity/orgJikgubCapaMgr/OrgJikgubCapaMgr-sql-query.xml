<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.capacity.orgJikgubCapaMgr">
<!-- 		직급별정원등록 조회 -->
		<select parameterType="map" resultType="cMap" id="getOrgJikgubCapaMgrSheet1List">

				<![CDATA[
					    SELECT 	LEVEL AS "_level",
					    		PRIOR_ORG_CD, 
					    		ORG_CD, 
					    		F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, TO_CHAR(sysdate, 'YYYYMMDD')) AS ORG_NM
					      FROM (
					          	SELECT *
					          	  FROM TORG105 A
								 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
								   AND A.SDATE = (SELECT MAX(SDATE) FROM TORG103 WHERE ENTER_CD = TRIM(#{ssnEnterCd}))
							   ) A
					     START WITH A.PRIOR_ORG_CD = '0'
					   CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD 
						   AND PRIOR A.SDATE = A.SDATE 
						   AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD 
						 ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL						
				]]>


		</select>
		
		<select parameterType="map" resultType="cMap" id="getOrgJikgubCapaMgrSheet2List">

				<![CDATA[		
					SELECT A.ENTER_CD, A.ORG_CD, A.ORG_JIK_CNT, A.CHANGE_REASON, A.SDATE, A.EDATE, B.NOW_CNT, 
					       A.MON_1, A.MON_2, A.MON_3, A.MON_4, A.MON_5, A.MON_6, A.MON_7, A.MON_8, A.MON_9, A.MON_10, A.MON_11, A.MON_12
					FROM THRM313 A, 
			             (SELECT Y.ENTER_CD, Y.ORG_CD, COUNT(*) NOW_CNT
			                FROM THRM100 X
			                JOIN THRM151 Y
			                  ON X.ENTER_CD = Y.ENTER_CD
			                 AND X.SABUN = Y.SABUN
			               WHERE Y.ENTER_CD = TRIM(#{ssnEnterCd})
			                 AND Y.ORG_CD = TRIM(#{searchOrgCd})
			                 AND TRIM(#{year})||'1231' BETWEEN Y.SDATE AND NVL(Y.EDATE, '99991231')
			                 AND Y.STATUS_CD NOT LIKE 'RA%'
			               GROUP BY Y.ENTER_CD, Y.ORG_CD) B
					WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
					    AND A.ORG_CD = TRIM(#{searchOrgCd})
					    AND A.SDATE = TRIM(#{year})||'0101'
					    AND A.ENTER_CD = B.ENTER_CD(+)
					ORDER BY A.SDATE DESC
				]]>


		</select>
		
<!-- 		직급별정원등록 저장 -->	
		<update parameterType="map" id="saveOrgJikgubCapaMgr">

				<![CDATA[
					MERGE INTO THRM313 T
					USING	(
							SELECT	  A.ENTER_CD
									 ,A.ORG_CD
									 ,A.SDATE
									 ,A.EDATE
									 ,A.ORG_JIK_CNT
									 ,A.NOW_CNT
									 ,A.MON_1
									 ,A.MON_2
									 ,A.MON_3
									 ,A.MON_4
									 ,A.MON_5
									 ,A.MON_6
									 ,A.MON_7
									 ,A.MON_8
									 ,A.MON_9
									 ,A.MON_10
									 ,A.MON_11
									 ,A.MON_12
									 ,A.CHANGE_REASON
							FROM	(
									SELECT	NULL AS ENTER_CD
											,NULL AS ORG_CD
											,NULL AS SDATE
											,NULL AS EDATE
											,NULL AS ORG_JIK_CNT
											,NULL AS NOW_CNT
											,NULL AS MON_1
											,NULL AS MON_2
											,NULL AS MON_3
											,NULL AS MON_4
											,NULL AS MON_5
											,NULL AS MON_6
											,NULL AS MON_7
											,NULL AS MON_8
											,NULL AS MON_9
											,NULL AS MON_10
											,NULL AS MON_11
											,NULL AS MON_12
											,NULL AS CHANGE_REASON
									FROM	DUAL
									]]>
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT   #{ssnEnterCd}			AS ENTER_CD
											, TRIM( #{rm.orgCd} )	AS ORG_CD
											, TRIM( #{rm.sdate} )	AS SDATE
											, TRIM( #{rm.edate} )	AS EDATE
											, TRIM( #{rm.orgJikCnt})	AS ORG_JIK_CNT
											, TRIM( #{rm.nowCnt})	AS NOW_CNT
											, TRIM( #{rm.mon1})	AS MON_1
											, TRIM( #{rm.mon2})	AS MON_2
											, TRIM( #{rm.mon3})	AS MON_3
											, TRIM( #{rm.mon4})	AS MON_4
											, TRIM( #{rm.mon5})	AS MON_5
											, TRIM( #{rm.mon6})	AS MON_6
											, TRIM( #{rm.mon7})	AS MON_7
											, TRIM( #{rm.mon8})	AS MON_8
											, TRIM( #{rm.mon9})	AS MON_9
											, TRIM( #{rm.mon10})	AS MON_10
											, TRIM( #{rm.mon11})	AS MON_11
											, TRIM( #{rm.mon12})	AS MON_12
											, TRIM( #{rm.changeReason}) AS CHANGE_REASON
											FROM   DUAL
</foreach>
									) A WHERE A.ORG_CD IS NOT NULL AND A.SDATE IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.ORG_CD = S.ORG_CD AND T.SDATE = S.SDATE )
					WHEN MATCHED THEN
						UPDATE SET	  T.EDATE	= S.EDATE
									, T.ORG_JIK_CNT	= S.ORG_JIK_CNT
									, T.NOW_CNT	= S.NOW_CNT
									, T.MON_1	= S.MON_1
									, T.MON_2	= S.MON_2
									, T.MON_3	= S.MON_3
									, T.MON_4	= S.MON_4
									, T.MON_5	= S.MON_5
									, T.MON_6	= S.MON_6
									, T.MON_7	= S.MON_7
									, T.MON_8	= S.MON_8
									, T.MON_9	= S.MON_9
									, T.MON_10	= S.MON_10
									, T.MON_11	= S.MON_11
									, T.MON_12	= S.MON_12
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT 
						(
							  T.ENTER_CD
							, T.ORG_CD
							, T.SDATE
							, T.EDATE
							, T.ORG_JIK_CNT
							, T.NOW_CNT
							, T.MON_1
							, T.MON_2
							, T.MON_3
							, T.MON_4
							, T.MON_5
							, T.MON_6
							, T.MON_7
							, T.MON_8
							, T.MON_9
							, T.MON_10
							, T.MON_11
							, T.MON_12
							, T.CHKDATE
							, T.CHKID
						) 
						VALUES 
						(
							  S.ENTER_CD
							, S.ORG_CD
							, S.SDATE
							, S.EDATE
							, S.ORG_JIK_CNT
							, S.NOW_CNT
							, S.MON_1
							, S.MON_2
							, S.MON_3
							, S.MON_4
							, S.MON_5
							, S.MON_6
							, S.MON_7
							, S.MON_8
							, S.MON_9
							, S.MON_10
							, S.MON_11
							, S.MON_12
							, SYSDATE
							, #{ssnSabun}
						)

		</update>
<!-- 		직급별정원등록 삭제 -->
		<delete parameterType="map" id="deleteOrgJikgubCapaMgr">

					DELETE FROM THRM313 
					WHERE 	(ENTER_CD, ORG_CD, SDATE) IN 	(  (NULL,NULL,NULL)
<foreach item="rm" collection="deleteRows" >
						,
										<if test="rm.orgCd != null and rm.orgCd != ''">
											(TRIM(#{ssnEnterCd}) , TRIM(#{rm.orgCd}) , TRIM(#{rm.sdate}))
										</if>
</foreach>
										)
		</delete>
		
<!-- 조직별 직급별 현인원 조회 -->
		<select parameterType="map" resultType="cMap" id="getNowCnt">

				<![CDATA[
		            SELECT COUNT(*) AS CNT
		              FROM THRM151
		             WHERE ENTER_CD = #{ssnEnterCd}
		               AND ORG_CD =  TRIM(#{searchOrgCd})
		               AND TRIM(#{year})||'1231' BETWEEN SDATE AND EDATE AND STATUS_CD NOT LIKE 'RA%'
				]]>


		</select>


</mapper>