<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="org.organization.orgMappingMgr">
<!-- 		조직구분등록 조회 -->
		<select parameterType="map" resultType="cMap" id="getOrgMappingMgrSheet1List">

				<![CDATA[
					    SELECT 	LEVEL AS "_level",
					    		A.PRIOR_ORG_CD,
					    		A.ORG_CD,
					    		F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TRIM(#{searchOrgSchemeSdate}), #{ssnLocaleCd}) AS ORG_NM
					      FROM (
					          	SELECT A.*
					          	  FROM TORG105 A, TORG101 B
								 WHERE A.ENTER_CD = B.ENTER_CD
								   AND A.ORG_CD = B.ORG_CD
								   AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
								   AND A.ENTER_CD = TRIM(#{ssnEnterCd})
								   AND A.SDATE = TRIM(#{searchOrgSchemeSdate})
							   ) A
					     START WITH A.PRIOR_ORG_CD = '0'
					   CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
						   AND PRIOR A.SDATE = A.SDATE
						   AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
						 ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getOrgMappingMgrSheet2List1">

				<![CDATA[
					  SELECT A.ORG_CD,
					  		 F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, B.SDATE) AS ORG_NM,
					  		 A.MAP_TYPE_CD,
					  		 A.MAP_CD,
					  		 B.MAP_NM,
					  		 A.SDATE,
					  		 A.EDATE
				        FROM TORG107 A, 
				        ( SELECT ENTER_CD, MAP_TYPE_CD, MAP_CD, MAP_NM, SDATE, EDATE FROM TORG109
                              UNION ALL
                              SELECT ENTER_CD,'900' AS MAP_TYPE_CD,JOB_CD AS MAP_CD, JOB_NM AS  MAP_NM, SDATE, EDATE FROM TORG201)  B
				       WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
				       ]]>
			<choose>
			     <when test='searchOrgType != null and searchOrgType.equals("Y")'>
				         AND A.ORG_CD IN ( SELECT #{searchOrgCd}
                                            FROM DUAL
                                            UNION
                                          SELECT ORG_CD
                                        	FROM (
                                        	      SELECT *
													FROM TORG105
												   WHERE ENTER_CD = TRIM(#{ssnEnterCd})
													 AND SDATE = #{searchOrgSchemeSdate}
					 							 )
                                           START WITH PRIOR_ORG_CD = #{searchOrgCd}
                                           CONNECT BY PRIOR ENTER_CD = ENTER_CD
                                               AND PRIOR SDATE = SDATE
                                           	   AND PRIOR ORG_CD = PRIOR_ORG_CD
                                           )
                </when>
                <otherwise>
                          AND A.ORG_CD = #{searchOrgCd}
                </otherwise>
            </choose>
				         AND A.ENTER_CD = B.ENTER_CD
				         AND A.MAP_TYPE_CD = B.MAP_TYPE_CD
				         AND A.MAP_CD = B.MAP_CD
				       ORDER BY F_COM_GET_ORG_SEQ(A.ENTER_CD,A.ORG_CD,TO_CHAR(SYSDATE,'YYYYMMDD')), A.MAP_TYPE_CD, A.SDATE

		</select>

		<select parameterType="map" resultType="cMap" id="getOrgMappingMgrSheet2List2">

				<![CDATA[
					  SELECT A.ORG_CD,
					  		 F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, B.SDATE) AS ORG_NM,
					  		 A.MAP_TYPE_CD,
					  		 A.MAP_CD,
					  		 B.MAP_NM,
					  		 A.SDATE,
					  		 A.EDATE
				        FROM TORG107 A, TORG109 B
				       WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
				         AND A.ORG_CD IN (SELECT #{searchOrgCd}
										    FROM DUAL
										  UNION
										  SELECT ORG_CD
										    FROM TORG105
										   WHERE ENTER_CD = TRIM(#{ssnEnterCd})
										     AND SDATE = #{searchOrgSchemeSdate}
										   START WITH PRIOR_ORG_CD = #{searchOrgCd}
										   CONNECT BY PRIOR ENTER_CD = ENTER_CD
											   AND PRIOR SDATE = SDATE
											   AND PRIOR ORG_CD = PRIOR_ORG_CD )
				         AND A.ENTER_CD = B.ENTER_CD
				         AND A.MAP_TYPE_CD = B.MAP_TYPE_CD
				         AND A.MAP_CD = B.MAP_CD
				         AND B.SDATE = (SELECT MAX (SDATE) FROM TORG109
					                     WHERE ENTER_CD = B.ENTER_CD
					                       AND MAP_TYPE_CD = B.MAP_TYPE_CD
					                       AND MAP_CD = B.MAP_CD
					                       AND A.SDATE BETWEEN SDATE AND NVL(EDATE,'99991231'))
				       ORDER BY A.MAP_TYPE_CD, A.MAP_CD
				]]>


		</select>

		<select parameterType="map" resultType="cMap" id="getOrgMappingMgrDupCheckMap">

				<![CDATA[
				SELECT COUNT(1) CNT
				  FROM TORG107 A
				 WHERE A.ENTER_CD    = #{ssnEnterCd}
				   AND A.ORG_CD      = #{searchOrgCd}
				   AND A.MAP_TYPE_CD = #{searchMapTypeCd}
				   AND A.MAP_CD      = #{searchMapCd}
				   AND A.SDATE      != #{searchSdate}
				   AND (   NVL(A.EDATE, '29991231') BETWEEN NVL(#{searchSdate},' ') AND NVL(#{searchEdate},'29991231')
		            OR     NVL(A.SDATE, '29991231') BETWEEN NVL(#{searchSdate},' ') AND NVL(#{searchEdate},'29991231')
		            OR   ( NVL(A.SDATE, '29991231') < NVL(#{searchSdate},' ')  AND  NVL(A.EDATE, '29991231') > NVL(#{searchEdate},'29991231'))
		               )
				]]>


		</select>

<!-- 		조직구분등록 저장 -->
		<update parameterType="map" id="saveOrgMappingMgr">

					MERGE INTO TORG107 T
					USING	(
							SELECT	  A.ENTER_CD
									, A.ORG_CD
									, A.MAP_TYPE_CD
									, A.MAP_CD
									, A.SDATE
									, A.EDATE
							FROM	(
									SELECT	  NULL		AS ENTER_CD
											, NULL		AS ORG_CD
											, NULL		AS MAP_TYPE_CD
											, NULL		AS MAP_CD
											, NULL		AS SDATE
											, NULL		AS EDATE
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows" >
							UNION ALL
									SELECT   #{ssnEnterCd}			AS ENTER_CD
											, TRIM( #{rm.orgCd} )	AS ORG_CD
											, TRIM( #{rm.mapTypeCd})	AS MAP_TYPE_CD
											, TRIM( #{rm.mapCd})	AS MAP_CD
											, TRIM( #{rm.sdate} )	AS SDATE
											, TRIM( #{rm.edate} )	AS EDATE
											FROM   DUAL

						<if test='searchOrgType  != null and searchOrgType.equals("Y")'>
									UNION ALL
									SELECT #{ssnEnterCd}			AS ENTER_CD
										, ORG_CD
										, TRIM( #{rm.mapTypeCd})	AS MAP_TYPE_CD
										, TRIM( #{rm.mapCd})	AS MAP_CD
										, TRIM( #{rm.sdate} )	AS SDATE
										, TRIM( #{rm.edate} )	AS EDATE
									  FROM (
											SELECT *
											 FROM TORG105
											WHERE ENTER_CD = TRIM(#{ssnEnterCd})
											  AND SDATE = TRIM(#{searchOrgSchemeSdate})
											)
							        START WITH PRIOR_ORG_CD = TRIM(#{rm.orgCd})
							      CONNECT BY PRIOR ENTER_CD = ENTER_CD
							             AND PRIOR SDATE = SDATE
							             AND PRIOR ORG_CD = PRIOR_ORG_CD
						</if>
</foreach>
									) A WHERE A.ORG_CD IS NOT NULL AND A.MAP_TYPE_CD IS NOT NULL AND A.MAP_CD IS NOT NULL AND A.SDATE IS NOT NULL
							) S
					ON ( T.ENTER_CD = S.ENTER_CD AND T.ORG_CD = S.ORG_CD AND T.MAP_TYPE_CD = S.MAP_TYPE_CD AND T.MAP_CD = S.MAP_CD AND T.SDATE = S.SDATE )
					WHEN MATCHED THEN
						UPDATE SET	  T.EDATE	= S.EDATE
									, T.CHKDATE	= SYSDATE
									, T.CHKID	= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.ORG_CD
							, T.MAP_TYPE_CD
							, T.MAP_CD
							, T.SDATE
							, T.EDATE
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  S.ENTER_CD
							, S.ORG_CD
							, S.MAP_TYPE_CD
							, S.MAP_CD
							, S.SDATE
							, S.EDATE
							, SYSDATE
							, #{ssnSabun}
						)
		</update>
<!-- 		조직구분등록 삭제 -->
		<delete parameterType="map" id="deleteOrgMappingMgr">

					DELETE FROM TORG107
					WHERE 	ENTER_CD||'_'||ORG_CD||'_'||MAP_TYPE_CD||'_'||MAP_CD||'_'||SDATE IN 	(  NULL
<foreach item="rm" collection="deleteRows" >
						,
										<if test="rm.orgCd != null and rm.orgCd != ''">
											TRIM(#{ssnEnterCd})||'_'||TRIM(#{rm.orgCd})||'_'||TRIM(#{rm.mapTypeCd})||'_'||TRIM(#{rm.mapCd})||'_'||TRIM(#{rm.sdate})
											<if test='searchOrgType  != null and searchOrgType.equals("Y")'>
											,(
                                                SELECT #{ssnEnterCd} ||'_'|| ORG_CD ||'_'|| TRIM( #{rm.mapTypeCd}) ||'_'|| TRIM( #{rm.mapCd})  ||'_'|| TRIM( #{rm.sdate} )
                                                FROM (
														SELECT *
														FROM TORG105
														WHERE ENTER_CD = TRIM(#{ssnEnterCd})
														AND SDATE = TRIM(#{searchOrgSchemeSdate})
                                               		 )
                                                START WITH PRIOR_ORG_CD = TRIM(#{rm.orgCd})
                                                CONNECT BY PRIOR ENTER_CD = ENTER_CD
                                                AND PRIOR SDATE = SDATE
                                                AND PRIOR ORG_CD = PRIOR_ORG_CD
                                                )
											</if>
										</if>

</foreach>
										)
		</delete>


</mapper>