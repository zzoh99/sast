<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="common.language">
	<select id="getEmpInfos" parameterType="map" resultType="cMap">
    <![CDATA[
		SELECT *
		FROM (
				 SELECT A.ENTER_CD, -- 회사코드
						A.SABUN, -- 사번
						A.NAME, -- 이름
						F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H00010', A.SEX_TYPE, #{ssnLocaleCd}) AS SEX_TYPE_NM, -- 성별
						A.BIR_YMD, -- 생년월일
						A.EMP_YMD, -- 입사일
						F_COM_GET_CAREER_CNT(A.ENTER_CD, A.SABUN, 'Y', 'YYMM', '1', NULL, #{ssnLocaleCd}) AS ALL_CAREER_YYMM_CNT, -- 총경력년월
						B.ENTER_NM,
						F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM, -- 부서명
						B.JIKWEE_NM, -- 직위명
						B.JIKGUB_NM, -- 직급명
						B.JIKCHAK_NM -- 직책명
				 FROM THRM100 A
						  LEFT JOIN (
					 SELECT SUB1.*, SUB2.ENTER_NM
					 FROM THRM151 SUB1
							  JOIN TORG900 SUB2 ON SUB1.ENTER_CD = SUB2.ENTER_CD
					 WHERE SUB1.ENTER_CD = NVL(#{enterCd}, #{ssnEnterCd})
					   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
				 ) B ON A.ENTER_CD = B.ENTER_CD AND A.SABUN = B.SABUN
				 WHERE A.ENTER_CD = NVL(#{enterCd}, #{ssnEnterCd}) ]]>
					 <if test='sabun != null and !sabun.equals("")'>
            AND A.SABUN = #{sabun}
					 </if>
		<![CDATA[	 )
		WHERE ROWNUM <= 100
		]]>
</select>


	<select id="getEmpSchoolList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H20130', A.ACA_CD) AS ACA_NM -- 학력구분
			 , A.ACA_SCH_NM --학교명
			 , A.ACAMAJ_NM --전공
			 , A.DOUMAJ_NM --복수전공
			 , A.SUBMAJ_NM --부전공
			 , A.ACA_POINT --학점
			 , A.ACA_POINT_MANJUM --학점만점
			 , A.ACA_S_YM --입학년월
			 , A.ACA_E_YM --졸업년월
			 , A.ACA_YN --졸업구분
			 , A.ACA_PLACE_NM --소재지
			 , A.D_TYPE --주야간
			 , A.ENTRY_TYPE --편입여부
			 , A.ACA_TYPE --최종학력
		FROM THRM115 A
		WHERE A.ENTER_CD = #{enterCd}
		  AND A.SABUN = #{sabun}
		ORDER BY A.ACA_E_YM  DESC
		]]>
	</select>

	<select id="getEmpEduList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT D.EDU_COURSE_NM , -- 과정명
			   E.EDU_S_YMD, --시작일
			   E.EDU_E_YMD, --종료일
			   C.EDU_ORG_NM , --교육기관
			   F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L20020', D.IN_OUT_TYPE) AS IN_OUT_TYPE_NM, --사내/외
			   F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L10010', D.EDU_BRANCH_CD) AS EDU_BRANCH_NM, --교육구분
			   F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L10015', D.EDU_M_BRANCH_CD) AS EDU_M_BRANCH_NM, --교육분류
			   F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L10050', D.EDU_METHOD_CD) AS EDU_METHOD_NM, --시행방법
			   E.REAL_EXPENSE_MON, --교육비
			   E.LABOR_APPLY_YN, --고용보험적용여부
			   A.EDU_CONFIRM_TYPE --교육수료여부
		FROM TTRA301 A ,
			 TTRA001 C ,
			 TTRA101 D,
			 TTRA121 E
		WHERE A.ENTER_CD = #{enterCd}
		  AND A.SABUN = #{sabun}
		  AND A.ENTER_CD = C.ENTER_CD(+)
		  AND A.ENTER_CD = D.ENTER_CD
		  AND A.EDU_SEQ = D.EDU_SEQ
		  AND D.EDU_ORG_CD  = C.EDU_ORG_CD
		  AND A.ENTER_CD = E.ENTER_CD
		  AND A.EDU_SEQ = E.EDU_SEQ
		  AND A.EDU_EVENT_SEQ = E.EDU_EVENT_SEQ
		ORDER BY D.EDU_COURSE_NM , A.EDU_EVENT_SEQ
		]]>
	</select>

	<select id="getEmpLicenseList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT  A.LICENSE_NM
			 , A.LICENSE_GRADE
			 , A.LIC_S_YMD
			 , A.LIC_U_YMD
			 , A.LIC_E_YMD
			 , A.OFFICE_CD
		FROM THRM113 A
		WHERE A.ENTER_CD = #{enterCd}
		  AND A.SABUN = #{sabun}
		ORDER BY A.LIC_S_YMD DESC
		]]>
	</select>

	<select id="getEmpLanguageList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT	F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20300', A.FOREIGN_CD) AS F_TEST_NM
		     , F_TEST_CD
			 , F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20307', A.F_TEST_CD) AS FOREIGN_NM --시험명
			 , A.APPLY_YMD --시험일자
			 , A.TEST_POINT --등급
			 , A.PASS_SCORES --점수
			 , A.OFFICE_NM AS F_TEST_ORG_NM --시험기
		FROM 	THRM125 A
		WHERE	A.ENTER_CD = #{enterCd}
		  AND 	A.SABUN    = #{sabun}
		ORDER BY 	A.APPLY_YMD DESC
		]]>
	</select>

	<select id="getEmpOverStudyList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT	A.CITY_NM		/*	도시					*/
			 ,	A.SDATE			/*	시작일				*/
			 ,	A.EDATE			/*	종료일				*/
			 ,	A.PURPOSE		/*	연수목적				*/
			 ,	A.NOTE			/*	연수내용				*/
		FROM	THRM131	A
		WHERE	A.ENTER_CD	=	#{enterCd}
		  AND		A.SABUN		=	#{sabun}
		ORDER	BY
			A.SDATE	DESC
		]]>
	</select>

	<select id="getEmpCareerList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT A.CMP_NM -- 직장명
			 , A.SDATE --입사일
			 , A.EDATE --퇴사일
			 , A.DEPT_NM --부서
			 , A.JIKWEE_NM --직위
			 , A.JOB_NM --담당업무
		     , F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H10040', A.MANAGE_CD) AS MANAGE_NM --H10040
			 , A.MEMO2 --퇴직사유
		FROM THRM117 A
		WHERE A.ENTER_CD = #{enterCd}
		  AND A.SABUN = TRIM( #{sabun} )
		ORDER BY A.SDATE DESC
		]]>
	</select>

	<select id="getEmpPunishList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20270', A.PUNISH_CD) AS PUNISH_NM  --H20270
			 , A.PUNISH_MEMO
		FROM THRM129 A
		WHERE A.ENTER_CD = #{enterCd}
		  AND A.SABUN = #{sabun}
		ORDER BY A.PUNISH_YMD DESC
		]]>
	</select>

	<select id="getEmpAppResultList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT B.APPRAISAL_NM AS APP_TYPE_NM
			 , B.APPRAISAL_YY AS APP_YEAR
			 , A.FINAL_POINT AS APP_SCORE
		FROM TPAP551 A JOIN TPAP101 B
							ON A.ENTER_CD = B.ENTER_CD
								AND A.APPRAISAL_CD = B.APPRAISAL_CD
		WHERE A.ENTER_CD = TRIM(#{enterCd})
		  AND A.SABUN = #{sabun}
		ORDER BY A.APP_ORG_CD, A.JIKCHAK_CD, A.JIKWEE_CD
		]]>
	</select>

	<select id="getAll" parameterType="map" resultType="cMap">
    <![CDATA[
		WITH School_JSON AS (
			SELECT
				A.ENTER_CD,
				A.SABUN,
				'[' || REGEXP_REPLACE(
						XMLAGG(
								XMLELEMENT(
										e,
										'{"acaNm":"' || F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H20130', A.ACA_CD) || '",' ||
										'"acaSchNm":"' || A.ACA_SCH_NM || '",' ||
										'"acamajNm":"' || A.ACAMAJ_NM || '",' ||
										'"doumajNm":"' || A.DOUMAJ_NM || '",' ||
										'"submajNm":"' || A.SUBMAJ_NM || '",' ||
										'"acaPoint":"' || A.ACA_POINT || '",' ||
										'"acaPointManjum":"' || A.ACA_POINT_MANJUM || '",' ||
										'"acaSYm":"' || A.ACA_S_YM || '",' ||
										'"acaEYm":"' || A.ACA_E_YM || '",' ||
										'"acaYn":"' || A.ACA_YN || '",' ||
										'"acaPlaceNm":"' || A.ACA_PLACE_NM || '",' ||
										'"dType":"' || A.D_TYPE || '",' ||
										'"entryType":"' || A.ENTRY_TYPE || '",' ||
										'"acaType":"' || A.ACA_TYPE || '"}'
								).EXTRACT('//text()') ORDER BY A.ACA_E_YM
						).GETCLOBVAL(),
						',') || ']' AS school
			FROM
				THRM115 A
			GROUP BY
				A.ENTER_CD,
				A.SABUN
		),
			 License_JSON AS (
				 SELECT
					 A.ENTER_CD,
					 A.SABUN,
					 '[' || REGEXP_REPLACE(
							 XMLAGG(
									 XMLELEMENT(
											 e,
											 '{"licenseNm":"' || A.LICENSE_NM || '",' ||
											 '"licenseGrade":"' || A.LICENSE_GRADE || '",' ||
											 '"licSYmd":"' || A.LIC_S_YMD || '",' ||
											 '"licUYmd":"' || A.LIC_U_YMD || '",' ||
											 '"licEYmd":"' || A.LIC_E_YMD || '",' ||
											 '"officeCd":"' || A.OFFICE_CD || '"}'
									 ).EXTRACT('//text()') ORDER BY A.LIC_S_YMD DESC
							 ).GETCLOBVAL(),
							 ',') || ']' AS license
				 FROM
					 THRM113 A
				 GROUP BY
					 A.ENTER_CD,
					 A.SABUN
			 ),
			 OverStudy_JSON AS (
				 SELECT
					 A.ENTER_CD,
					 A.SABUN,
					 '[' || REGEXP_REPLACE(
							 XMLAGG(
									 XMLELEMENT(
											 e,
											 '{"cityNm":"' || A.CITY_NM || '",' ||
											 '"sdate":"' || A.SDATE || '",' ||
											 '"edate":"' || A.EDATE || '",' ||
											 '"purpose":"' || A.PURPOSE || '",' ||
											 '"note":"' || A.NOTE || '"}'
									 ).EXTRACT('//text()') ORDER BY A.SDATE DESC
							 ).GETCLOBVAL(),
							 ',') || ']' AS overStudy
				 FROM
					 THRM131 A
				 GROUP BY
					 A.ENTER_CD,
					 A.SABUN
			 ),
			 Career_JSON AS (
				 SELECT
					 A.ENTER_CD,
					 A.SABUN,
					 '[' || REGEXP_REPLACE(
							 XMLAGG(
									 XMLELEMENT(
											 e,
											 '{"cmpNm":"' || A.CMP_NM || '",' ||
											 '"sdate":"' || A.SDATE || '",' ||
											 '"edate":"' || A.EDATE || '",' ||
											 '"deptNm":"' || A.DEPT_NM || '",' ||
											 '"jikweeNm":"' || A.JIKWEE_NM || '",' ||
											 '"jobNm":"' || A.JOB_NM || '",' ||
											 '"manageNm":"' || F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H10040', A.MANAGE_CD) || '",' ||
											 '"memo2":"' || A.MEMO2 || '"}'
									 ).EXTRACT('//text()') ORDER BY A.SDATE DESC
							 ).GETCLOBVAL(),
							 ',') || ']' AS career
				 FROM
					 THRM117 A
				 GROUP BY
					 A.ENTER_CD,
					 A.SABUN
			 ),
			 Punish_JSON AS (
				 SELECT
					 A.ENTER_CD,
					 A.SABUN,
					 '[' || REGEXP_REPLACE(
							 XMLAGG(
									 XMLELEMENT(
											 e,
											 '{"punishNm":"' || F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H20270', A.PUNISH_CD) || '",' ||
											 '"punishMemo":"' || A.PUNISH_MEMO || '"}'
									 ).EXTRACT('//text()') ORDER BY A.PUNISH_YMD DESC
							 ).GETCLOBVAL(),
							 ',') || ']' AS punish
				 FROM
					 THRM129 A
				 GROUP BY
					 A.ENTER_CD,
					 A.SABUN
			 ),
			 AppResult_JSON AS (
				 SELECT
					 A.ENTER_CD,
					 A.SABUN,
					 '[' || REGEXP_REPLACE(
							 XMLAGG(
									 XMLELEMENT(
											 e,
											 '{"appTypeNm":"' || B.APPRAISAL_NM || '",' ||
											 '"appYear":"' || B.APPRAISAL_YY || '",' ||
											 '"appScore":"' || A.FINAL_POINT || '"}'
									 ).EXTRACT('//text()') ORDER BY A.APP_ORG_CD, A.JIKCHAK_CD, A.JIKWEE_CD
							 ).GETCLOBVAL(),
							 ',') || ']' AS appResult
				 FROM
					 TPAP551 A
						 JOIN TPAP101 B ON A.ENTER_CD = B.ENTER_CD AND A.APPRAISAL_CD = B.APPRAISAL_CD
				 WHERE
					 A.ENTER_CD =  NVL(#{enterCd}, #{ssnEnterCd})]]>
						 <if test='sabun != null and !sabun.equals("")'>
			AND A.SABUN = #{sabun}
				</if> <![CDATA[
		GROUP BY
			A.ENTER_CD,
			A.SABUN
			),
			Language_JSON AS (
		SELECT
			A.ENTER_CD,
			A.SABUN,
			'[' || REGEXP_REPLACE(
			XMLAGG(
			XMLELEMENT(
			e,
			'{"fTestNm":"' || F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20300', A.FOREIGN_CD) || '",' ||
			'"fTestCd":"' || A.F_TEST_CD || '",' ||
			'"foreignNm":"' || F_COM_GET_GRCODE_NAME(A.ENTER_CD,'H20307', A.F_TEST_CD) || '",' ||
			'"applyYmd":"' || A.APPLY_YMD || '",' ||
			'"testPoint":"' || A.TEST_POINT || '",' ||
			'"passScores":"' || A.PASS_SCORES || '",' ||
			'"fTestOrgNm":"' || A.OFFICE_NM || '"}'
			).EXTRACT('//text()') ORDER BY A.APPLY_YMD DESC
			).GETCLOBVAL(),
			',') || ']' AS language
		FROM
			THRM125 A
		GROUP BY
			A.ENTER_CD,
			A.SABUN
			),
			Edu_JSON AS (
		SELECT
			A.ENTER_CD,
			A.SABUN,
			'[' || REGEXP_REPLACE(
			XMLAGG(
			XMLELEMENT(
			e,
			'{"eduCourseNm":"' || D.EDU_COURSE_NM || '",' ||
			'"eduSYmd":"' || E.EDU_S_YMD || '",' ||
			'"eduEYmd":"' || E.EDU_E_YMD || '",' ||
			'"eduOrgNm":"' || C.EDU_ORG_NM || '",' ||
			'"inOutTypeNm":"' || F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L20020', D.IN_OUT_TYPE) || '",' ||
			'"eduBranchNm":"' || F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L10010', D.EDU_BRANCH_CD) || '",' ||
			'"eduMBranchNm":"' || F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L10015', D.EDU_M_BRANCH_CD) || '",' ||
			'"eduMethodNm":"' || F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'L10050', D.EDU_METHOD_CD) || '",' ||
			'"realExpenseMon":"' || E.REAL_EXPENSE_MON || '",' ||
			'"laborApplyYn":"' || E.LABOR_APPLY_YN || '",' ||
			'"eduConfirmType":"' || A.EDU_CONFIRM_TYPE || '"}'
			).EXTRACT('//text()') ORDER BY D.EDU_COURSE_NM, A.EDU_EVENT_SEQ
			).GETCLOBVAL(),
			',') || ']' AS edu
		FROM
			TTRA301 A
			JOIN TTRA001 C ON A.ENTER_CD = C.ENTER_CD
			JOIN TTRA101 D ON A.ENTER_CD = D.ENTER_CD AND A.EDU_SEQ = D.EDU_SEQ
			JOIN TTRA121 E ON A.ENTER_CD = E.ENTER_CD AND A.EDU_SEQ = E.EDU_SEQ AND A.EDU_EVENT_SEQ = E.EDU_EVENT_SEQ
		WHERE
			A.ENTER_CD =  NVL(#{enterCd}, #{ssnEnterCd})]]>
			<if test='sabun != null and !sabun.equals("")'>
		  AND A.SABUN = #{sabun}
			</if> <![CDATA[
		GROUP BY
			A.ENTER_CD,
			A.SABUN
			)
		SELECT
			A.ENTER_CD,
			A.SABUN,
			A.NAME,
			F_COM_GET_GRCODE_NAME(A.ENTER_CD, 'H00010', A.SEX_TYPE, #{ssnLocaleCd}) AS SEX_TYPE_NM,
			A.BIR_YMD,
			A.EMP_YMD,
			F_COM_GET_CAREER_CNT(A.ENTER_CD, A.SABUN, 'Y', 'YYMM', '1', NULL, #{ssnLocaleCd}) AS ALL_CAREER_YYMM_CNT,
			B.ENTER_NM,
			F_COM_GET_ORG_NM(B.ENTER_CD, B.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM,
			B.JIKWEE_NM,
			B.JIKGUB_NM,
			B.JIKCHAK_NM,
			REPLACE(S.school, '&quot;', '"') AS school,
			REPLACE(L.license, '&quot;', '"') AS license,
			REPLACE(O.overStudy, '&quot;', '"') AS overStudy,
			REPLACE(C.career, '&quot;', '"') AS career,
			REPLACE(P.punish, '&quot;', '"') AS punish,
			REPLACE(R.appResult, '&quot;', '"') AS appResult,
			REPLACE(G.language, '&quot;', '"') AS language,
        REPLACE(E.edu, '&quot;', '"') AS edu
		FROM
			THRM100 A
			LEFT JOIN
			(SELECT SUB1.*, SUB2.ENTER_NM
			FROM THRM151 SUB1
			JOIN TORG900 SUB2 ON SUB1.ENTER_CD = SUB2.ENTER_CD
			WHERE SUB1.ENTER_CD =  NVL(#{enterCd}, #{ssnEnterCd})
			AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
			) B ON A.ENTER_CD = B.ENTER_CD AND A.SABUN = B.SABUN
			LEFT JOIN
			School_JSON S ON A.ENTER_CD = S.ENTER_CD AND A.SABUN = S.SABUN
			LEFT JOIN
			License_JSON L ON A.ENTER_CD = L.ENTER_CD AND A.SABUN = L.SABUN
			LEFT JOIN
			OverStudy_JSON O ON A.ENTER_CD = O.ENTER_CD AND A.SABUN = O.SABUN
			LEFT JOIN
			Career_JSON C ON A.ENTER_CD = C.ENTER_CD AND A.SABUN = C.SABUN
			LEFT JOIN
			Punish_JSON P ON A.ENTER_CD = P.ENTER_CD AND A.SABUN = P.SABUN
			LEFT JOIN
			AppResult_JSON R ON A.ENTER_CD = R.ENTER_CD AND A.SABUN = R.SABUN
			LEFT JOIN
			Language_JSON G ON A.ENTER_CD = G.ENTER_CD AND A.SABUN = G.SABUN
			LEFT JOIN
			Edu_JSON E ON A.ENTER_CD = E.ENTER_CD AND A.SABUN = E.SABUN
		WHERE
			A.ENTER_CD = NVL(#{enterCd}, #{ssnEnterCd})]]>
			<if test='sabun != null and !sabun.equals("")'>
		  AND A.SABUN = #{sabun}
			</if> <![CDATA[
		ORDER BY
			A.SABUN
		]]>
</select>

</mapper>