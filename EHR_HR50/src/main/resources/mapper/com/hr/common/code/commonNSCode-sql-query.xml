<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="common.code.ns">
	
	<select id="getGroupEnterCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT CODE, CODE_NM
		     FROM (
			   	   SELECT #{ssnEnterCd} AS CODE
		 	            , F_COM_GET_ENTER_NM(#{ssnEnterCd}, '1') AS CODE_NM
		 	            , 0 as SEQ
		 	         FROM DUAL
			   	    UNION
		 	       SELECT A.TO_ENTER_CD AS CODE
		 	            , B.ENTER_NM AS CODE_NM
		 	            , DECODE(A.TO_ENTER_CD, #{ssnEnterCd}, 0, B.SEQ) AS SEQ
		 	         FROM TSYS399 A, TORG900 B
		 	        WHERE 1=1
		 	          AND A.FR_ENTER_CD = #{ssnEnterCd}
		 	          AND A.SABUN = #{ssnSabun}
		 	          AND A.TO_ENTER_CD = B.ENTER_CD
		 	          AND B.USE_YN = 'Y'
	 	          )
	 	     ORDER BY SEQ ASC
		]]>
	</select>
	
	<select id="getCommonCodeLists2" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT GRCODE_CD, CODE, CODE_NM, MEMO, NOTE1, NOTE2, NOTE3, NOTE4
			  FROM (
				SELECT DISTINCT GRCODE_CD, '' AS CODE, '' AS CODE_NM, '' AS MEMO, '' AS NOTE1, '' AS NOTE2, '' AS NOTE3, '' AS NOTE4, -1 AS SEQ, '' AS USE_YN
			      FROM TSYS005
			     WHERE 1 = 1
			       AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN S_YMD AND E_YMD]]>
		<choose>
			<when test="enterCd != null and enterCd neq ''">
			<![CDATA[ AND ENTER_CD = #{enterCd} ]]>
			</when>
			<otherwise>
			<![CDATA[ AND ENTER_CD = #{ssnEnterCd} ]]>
			</otherwise>
		</choose>
				  AND GRCODE_CD IN
			  <foreach collection="grpCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			  </foreach>
		<if test="useYn != null and useYn neq ''">
		<![CDATA[	  AND USE_YN = TRIM(#{useYn})  ]]>
		</if>
		<if test="visualYn != null and visualYn neq ''">
		<![CDATA[
					  AND VISUAL_YN = TRIM(#{visualYn})
		]]>
		</if>
		<![CDATA[
			UNION ALL
			SELECT GRCODE_CD, CODE, CODE_NM, MEMO, NOTE1, NOTE2, NOTE3, NOTE4,SEQ, USE_YN
			  FROM TSYS005
			 WHERE 1 = 1 AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
		<choose>
			<when test="enterCd != null and enterCd neq ''">
			<![CDATA[
			   AND ENTER_CD = #{enterCd}
			]]>
			</when>
			<otherwise>
			<![CDATA[
			   AND ENTER_CD = #{ssnEnterCd}
			]]>
			</otherwise>
		</choose>
			   AND GRCODE_CD IN
		<foreach collection="grpCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		<if test="useYn != null and useYn neq ''">
		<![CDATA[
			   AND USE_YN = TRIM(#{useYn})
		]]>
		</if>
		<if test="visualYn != null and visualYn neq ''">
		<![CDATA[
			   AND VISUAL_YN = TRIM(#{visualYn})
		]]>
		</if>
		<![CDATA[
			) ORDER BY GRCODE_CD, USE_YN DESC, SEQ, CODE_NM, CODE
		]]>
	</select>
	
	<select id="getRecruitJobTypeList" parameterType="map" resultType="cMap">
		<![CDATA[
		   	SELECT 	  DISTINCT A.RECRUIT_JOB_TYPE AS CODE, B.CODE_NM
			FROM 	  TSTF203 A ,TSYS005 B
			WHERE     A.ENTER_CD = B.ENTER_CD
			AND       A.ENTER_CD = #{ssnEnterCd}
			AND       A.SEQ = #{searchRecruitTitle}
		    AND       B.GRCODE_CD = 'F90001'
			AND       A.RECRUIT_JOB_TYPE = B.CODE
			AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
			ORDER BY  A.RECRUIT_JOB_TYPE
		]]>
	</select>
	
	<select id="getRecruitJobCodeList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT     A.RECRUIT_JOB_CODE AS CODE
		   			 , B.RECRUIT_JOB_NM AS CODE_NM
			FROM 	   TSTF203 A
					 , TSTF101 B
			WHERE     A.ENTER_CD = B.ENTER_CD
			AND       A.RECRUIT_JOB_CODE = B.RECRUIT_JOB_CODE
			AND       A.ENTER_CD = #{ssnEnterCd}
			AND       A.SEQ = #{searchRecruitTitle} ]]>
		<if test="searchRecruitType != null and searchRecruitType neq ''">
		<![CDATA[
			AND A.RECRUIT_JOB_TYPE = TRIM(#{searchRecruitType})
		]]>
		</if>
		<![CDATA[
			ORDER BY  A.SEQ
		]]>
	</select>
	
	<select id="getPaperItemTypeList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT 	 PAPER_ITEM AS CODE
					,PAPER_ITEM AS CODE_NM
			FROM     TSTF109
			WHERE    ENTER_CD = #{ssnEnterCd}
			AND      SEQ = #{searchRecruitTitle}
			AND      PAPER_ITEM_TYPE = #{searchPaperItemType}
			ORDER BY SUNBUN
		]]>
	</select>
	
	<select id="getStep2GroupNoList" parameterType="map" resultType="cMap">
		 <![CDATA[
		    SELECT 	 STEP2_GROUP_NO AS CODE
					,(SELECT STEP_GROUP
					  FROM   TSTF211
					  WHERE  ENTER_CD = A.ENTER_CD
					  AND    SEQ = A.SEQ
					  AND    STEP2_GROUP_NO = A.STEP2_GROUP_NO
					  AND    INTERVIEW_SEQ = A.INTERVIEW_SEQ
					  ) AS CODE_NM
			FROM     TSTF214 A
			WHERE    ENTER_CD      = #{ssnEnterCd}
			AND      SEQ           = #{searchSeq}
			AND      INTERVIEW_SEQ = #{searchInterviewSeq}
			AND      SABUN         = #{ssnSabun}
			ORDER BY CODE
	 	]]>
	</select>
	
	<select id="getStep2ItemNoCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT    STEP2_ITEM_NO       AS CODE
			        , STEP2_ITEM_NM       AS CODE_NM
			FROM	  TSTF215
			WHERE     ENTER_CD       = #{ssnEnterCd}
			AND       SEQ            = #{searchSeq}
			AND       INTERVIEW_SEQ  = #{searchInterviewSeq}
		]]>
	</select>
	
	<select id="getStepCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT  STEP_CD AS CODE
		           ,CODE_NM
		    FROM    TSTF832 A,
		            TSYS005 B
		    WHERE   A.ENTER_CD   =  #{ssnEnterCd}
		    AND     A.SEQ        =  #{searchRecruitTitle}
		    AND     A.STEP_CD    =  B.CODE
		    AND     B.GRCODE_CD  =  'F65030'
		    AND     B.NOTE1      =  'Y'
			  AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
		    ORDER BY A.ORDER_SEQ
		]]>
	</select>
	
	<select id="getPrizeCdList" parameterType="map" resultType="cMap">
		 <![CDATA[
				SELECT PRIZE_ID AS CODE
				     , PRIZE_NAME AS CODE_NM
				  FROM THRM471
				 WHERE ENTER_CD = #{ssnEnterCd} ]]>
		<if test="openYn != null and openYn neq ''">
		<![CDATA[
				   AND OPEN_YN = #{openYn}
		]]>
		</if>
		<![CDATA[
				 ORDER BY PRIZE_S_DATE DESC
	    ]]>
	</select>
	
	<select id="getFamCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT ]]>
		<choose>
			<when test="famNmflag != null and famNmflag neq ''">
			<![CDATA[
				   FAM_NM AS CODE
				 , FAM_NM AS CODE_NM
			     , FAM_CD AS FAM_CD
			]]>
			</when>
			<otherwise>
			<![CDATA[
				   FAM_CD AS CODE
				 , FAM_NM AS CODE_NM
			]]>
			</otherwise>
		</choose>
		<![CDATA[
			  FROM THRM111
			 WHERE ENTER_CD = #{ssnEnterCd} ]]>
		<if test="sabun != null and sabun neq ''">
		<![CDATA[
			   AND SABUN = TRIM(#{sabun})
		]]>
		</if>
		<if test="famCd != null and famCd neq '' and famCd neq 'BABY' ">
		<![CDATA[
			   AND FAM_CD = TRIM(#{famCd})
		]]>
		</if>
		<if test="famCd != null and famCd neq '' and famCd eq 'BABY' ">
		   AND FAM_CD IN (SELECT CODE
							FROM TSYS005
						   WHERE ENTER_CD  = #{ssnEnterCd}
							 AND GRCODE_CD = 'H20120'
							 AND USE_YN = 'Y'
							 AND NOTE2='자녀'
						 )
		</if>
		<![CDATA[
			   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
			 ORDER BY FAM_CD
       ]]>
	</select>
	
	<select id="getInfantFamCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT ]]>
		<choose>
			<when test="famNmflag != null and famNmflag neq ''">
			<![CDATA[
				   FAM_NM AS CODE
				 , FAM_NM AS CODE_NM
			     , FAM_CD AS FAM_CD
			]]>
			</when>
			<otherwise>
			<![CDATA[
				   FAM_CD AS CODE
				 , FAM_NM AS CODE_NM
			]]>
			</otherwise>
		</choose>
		<![CDATA[
			  FROM THRM111
			 WHERE ENTER_CD = #{ssnEnterCd} ]]>
		<if test="sabun != null and sabun neq ''">
			   AND SABUN = TRIM(#{sabun})
		</if>
		<![CDATA[
			   AND FAM_CD IN (SELECT CODE FROM TSYS005 WHERE ENTER_CD = #{ssnEnterCd} AND NOTE3 IN ('06', '07') AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD)
			   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
			 ORDER BY FAM_CD
       ]]>
	</select>
	
	<select id="getEnterCdList" parameterType="map" resultType="cMap">
		<![CDATA[
	 	       SELECT   ENTER_CD AS CODE
	 	       		, NVL(DECODE(#{ssnLocaleCd}, 'en_US', ENTER_ENG_NM, ENTER_NM), ENTER_NM) AS CODE_NM
	 	       FROM TORG900
	 	       WHERE ROWNUM = 1
	 	       ORDER BY SEQ ASC
	 	   ]]>
	</select>
	
	<select id="getEnterCdAllList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT ENTER_CD AS CODE
	 	            , NVL(DECODE(#{ssnLocaleCd}, 'en_US', ENTER_ENG_NM, ENTER_NM), ENTER_NM) AS CODE_NM
	 	       FROM TORG900 ]]>
	 	<if test="enterCd != null and enterCd neq ''">
	 	<![CDATA[
	 		  WHERE ENTER_CD IN (#{enterCd})
	 	]]>
	 	</if>
	 	<![CDATA[
	 	      ORDER BY SEQ ASC
		]]>
	</select>
	
	<select id="getOrgMapItemBpCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT A.CODE, A.CODE_NM, MAX(SORT) AS SORT
			     FROM
					  (SELECT MAP_CD AS CODE,
							  MAP_NM AS CODE_NM, SORT
					     FROM TORG109
					    WHERE ENTER_CD = #{ssnEnterCd}
						  AND MAP_TYPE_CD = '100'
						  AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')) A
			    GROUP BY A.CODE, A.CODE_NM
			    ORDER BY SORT, A.CODE, A.CODE_NM
		]]>
	</select>
	
	<select id="getOrgSchemeSdate" parameterType="map" resultType="cMap">
		<![CDATA[
	 	       SELECT DISTINCT  A.SDATE AS CODE
	 	                      , A.ORG_CHART_NM||'['||TO_CHAR(TO_DATE(A.SDATE,'YYYYMMDD'),'YYYY-MM-DD')||']' AS CODE_NM
	 	                      , A.EDATE
				  FROM TORG103 A
				 WHERE 1=1 ]]>
		<choose>
			<when test="searchEnterCd != null and searchEnterCd neq ''">
			<![CDATA[AND A.ENTER_CD = #{searchEnterCd}]]>
			</when>
			<otherwise>
			<![CDATA[AND A.ENTER_CD = #{ssnEnterCd}]]>
			</otherwise>
		</choose>
		/* 권한그룹(TSYS307) 미래시점조회여부(PRE_SRCH_YN) 에 따른 조회 */
		<if test='ssnPreSrchYn neq "Y"'>
			<![CDATA[AND A.SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')]]>
		</if>
		<![CDATA[
				 ORDER BY A.SDATE DESC
	 	   ]]>
	</select>
	
	<select id="getOrgSchemeEdate" parameterType="map" resultType="cMap">
		<![CDATA[
				SELECT DISTINCT
					   A.EDATE AS CODE
					 , NVL(A.EDATE, '99991231') AS CODE_NM
				  FROM TORG103 A
				 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
				 ORDER BY A.EDATE DESC
	 	   ]]>
	</select>
	
	<select id="getJobCdList" parameterType="map" resultType="cMap">
		<![CDATA[
				 SELECT JOB_CD AS CODE
				 	  , JOB_NM AS CODE_NM
				  FROM TORG201
				 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
				   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
				 ORDER BY JOB_NM
			]]>
	</select>
	
	<select id="getOrgCdList" parameterType="map" resultType="cMap">
		<![CDATA[
				 SELECT ORG_CD AS CODE
				 	  , NVL(DECODE(#{ssnLocaleCd}, 'en_US', ORG_ENG_NM, ORG_NM), ORG_NM) AS CODE_NM
				  FROM TORG101
				 WHERE ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
		<if test="searchDate != null and searchDate neq ''">
		<![CDATA[
				AND REPLACE(TRIM( #{searchDate} ), '-', '') BETWEEN SDATE AND NVL(EDATE, '99991231')
		]]>
		</if>
		<![CDATA[
				 ORDER BY ORG_NM
			]]>
	</select>
	
	<select id="getTorg109List" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT MAP_CD		AS CODE
				 , MAP_NM AS CODE_NM
			  FROM TORG109 A
			 WHERE ENTER_CD		= #{ssnEnterCd}
		       AND SDATE = (SELECT MAX (SDATE) FROM TORG109
		                   WHERE ENTER_CD = A.ENTER_CD
		                     AND MAP_TYPE_CD = A.MAP_TYPE_CD
		                     AND MAP_CD = A.MAP_CD
		                     AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')) ]]>
	   <if test="mapTypeCd != null and mapTypeCd neq ''">
	   <![CDATA[			 AND MAP_TYPE_CD	= #{mapTypeCd} ]]>
	   </if>
	   <![CDATA[
			ORDER BY MAP_NM
		]]>
	</select>
	
	<select id="getMaxOrgCdList" parameterType="map" resultType="cMap">
		<![CDATA[
				SELECT #{pFixedValue} || LPAD(SUBSTR(MAX(ORG_CD),3,5)+TO_NUMBER(#{pCnt}), '4',0) AS CODE, '' AS CODE_NM
				  FROM (
				    SELECT RPAD(MAX(ORG_CD),5,0) AS ORG_CD
				      FROM TORG101
				      WHERE ORG_CD LIKE #{pFixedValue} || '%'
				        AND LENGTH(ORG_CD) = 5
			      UNION ALL
			        SELECT RPAD(MAX(ORG_CD),5,0) AS ORG_CD
				      FROM TORG801
				      WHERE ORG_CD LIKE #{pFixedValue} || '%'
				        AND LENGTH(ORG_CD) = 5
			      UNION ALL
				    SELECT #{pFixedValue} || '0000' AS ORG_CD
				      FROM DUAL
				  )
				]]>
	</select>
	
	<select id="getCommonWorkOrgCdList" parameterType="map" resultType="cMap">
		<![CDATA[
		   SELECT MAP_CD AS CODE
		   		, NVL(F_COM_GET_LANGUAGE_MAPPING (ENTER_CD, 'torg109', LANGUAGE_CD, #{ssnLocaleCd}),MAP_NM) AS CODE_NM
			 FROM TORG109
			WHERE ENTER_CD = #{ssnEnterCd}
			  AND MAP_TYPE_CD = '500'
			ORDER BY MAP_TYPE_CD, SORT, MAP_CD
       ]]>
	</select>
	
	<select id="getHdCntrCdList" parameterType="map" resultType="cMap">
		<![CDATA[
					SELECT A.ORG_CD AS CODE
					     , A.ORG_NM AS CODE_NM
					  FROM TORG101 A
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					   AND A.ORG_CD IN ( SELECT ORG_CD
					                       FROM TORG105
					                      WHERE ENTER_CD = A.ENTER_CD
					                        AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231') )
					 ORDER BY A.ORG_NM
				]]>
	</select>
	
	<select id="getDivsionWorkSheetRegOrgList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT	DISTINCT A.ORG_CD	AS CODE
                  , 		F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS CODE_NM
			FROM 	TABLE(THRM151_AUTH(#{ssnEnterCd}, #{ssnSearchType}, #{ssnSabun}, #{ssnGrpCd}, TO_CHAR(SYSDATE, 'YYYYMMDD'))) A
			WHERE 	A.ENTER_CD = #{ssnEnterCd}
			AND 	TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE,'99991231')
			AND 	A.ORG_CD IS NOT NULL
			AND 	A.STATUS_CD <> 'RAA'
	   ORDER BY 	F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'))
		]]>
	</select>
	
	<select id="getTTRA309EduYearList" parameterType="map" resultType="cMap">
		<![CDATA[
		  SELECT DISTINCT SUBSTR(EDU_SYMD,0,4) AS CODE
		  		, SUBSTR(EDU_SYMD,0,4) || '년' AS CODE_NM
	        FROM TTRA309
	        WHERE ENTER_CD = #{ssnEnterCd}
	          AND SABUN = #{searchSabun}
	        ORDER BY CODE DESC
		]]>
	</select>
	
	<select id="getTTRA005HeaderList" resultType="cMap">
		<![CDATA[
		      SELECT A.SURVEY_ITEM_CD,
			       A.SURVEY_ITEM_NM,
			       A.SURVEY_ITEM_DESC,
			       A.START_YMD,
			       A.END_YMD,
			       A.SEQ,
			       A.SURVEY_ITEM_TYPE
			  FROM TTRA005 A
			ORDER BY A.SURVEY_ITEM_TYPE, A.SEQ ASC
	 	   ]]>
	</select>
	
	<select id="getEduSurveyStaPeopleCnt" parameterType="map" resultType="cMap">
		<![CDATA[
	      SELECT SUM(CNT) AS COUNT, SUM(YSUM) AS YSUM, SUM(CNT) - SUM(YSUM) AS NSUM,
		       CASE WHEN SUM(TOTALAVE) = 0 THEN 0
		            ELSE (
		                  CASE WHEN SUM(YSUM) = 0  THEN 0
		                       ELSE ROUND(SUM(TOTALAVE)/SUM(ITEM_CNT)/SUM(YSUM),1)
		                  END)
		            END AS TOTALAVE
		  FROM (
		         SELECT CNT, YSUM, TOTALAVE, 0 AS ITEM_CNT
		           FROM (
		            SELECT COUNT(*) AS CNT
		                  ,0 AS YSUM
		                  ,0 AS TOTALAVE
		              FROM TTRA121 A
		                  ,TTRA201 B
		                  ,THRI103 C
		             WHERE A.ENTER_CD      = B.ENTER_CD
		               AND A.EDU_SEQ       = B.EDU_SEQ
		               AND A.EDU_COURSE_CD = B.EDU_COURSE_CD
		               AND A.EDU_EVENT_SEQ = B.EDU_EVENT_SEQ
		               AND B.ENTER_CD      = C.ENTER_CD
		               AND B.APPL_SEQ      = C.APPL_SEQ
		               AND A.ENTER_CD = #{ssnEnterCd} ]]>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq ''">
		 <![CDATA[
					   AND A.EDU_SEQ = #{searchEduSeq1}
					   AND A.EDU_COURSE_CD = #{searchEduCourseCd1}
		 ]]>
		 </if>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq '' and searchEduSeq2 != null and searchEduSeq2 neq ''">
		 <![CDATA[
		 			   AND A.EDU_SEQ = #{searchEduSeq2}
		               AND A.EDU_COURSE_CD = #{searchEduCourseCd2}	
		 ]]>
		 </if>
		 <![CDATA[
		               AND A.EDU_EVENT_SEQ >= NVL(#{searchEduEventSeq1}, 0)
		               AND A.EDU_EVENT_SEQ <= NVL(#{searchEduEventSeq2}, 99999999999999)
		               AND A.INNER_YN = 'N'
		               AND C.APPL_STATUS_CD = '99'
		            HAVING COUNT(*) > 0
		            UNION
		            SELECT COUNT(*) AS CNT
		                  ,0 AS YSUM
		                  ,0 AS TOTALAVE
		              FROM TTRA121 A
		                  ,TTRA301 B
		             WHERE A.ENTER_CD      = B.ENTER_CD
		               AND A.EDU_SEQ       = B.EDU_SEQ
		               AND A.EDU_COURSE_CD = B.EDU_COURSE_CD
		               AND A.EDU_EVENT_SEQ = B.EDU_EVENT_SEQ
		               AND A.ENTER_CD = #{ssnEnterCd} ]]>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq ''">
		 <![CDATA[
		 			   AND A.EDU_SEQ = #{searchEduSeq1}
		               AND A.EDU_COURSE_CD = #{searchEduCourseCd1}
		 ]]>
		 </if>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq '' and searchEduSeq2 != null and searchEduSeq2 neq ''">
		 <![CDATA[
		 			   AND A.EDU_SEQ = #{searchEduSeq2}
		               AND A.EDU_COURSE_CD = #{searchEduCourseCd2}
		 ]]>
		 </if>
		 <![CDATA[
		               AND A.EDU_EVENT_SEQ >= NVL(#{searchEduEventSeq1}, 0)
		               AND A.EDU_EVENT_SEQ <= NVL(#{searchEduEventSeq2}, 99999999999999)
		               AND A.INNER_YN = 'Y'
		            HAVING COUNT(*) > 0
		         )
		         UNION
		         SELECT  0 AS CNT
		               , SUM(YSUM) AS YSUM
		               , 0 AS TOTALAVE
		               , SUM(ITEM_CNT) AS ITEM_CNT
		          FROM(
		          SELECT A.EDU_EVENT_SEQ
		               ,COUNT(DISTINCT A.SABUN) AS YSUM
		               ,COUNT(DISTINCT A.SURVEY_ITEM_CD) AS ITEM_CNT
		           FROM TTRA151 A /* TTRA151 */
		          WHERE A.ENTER_CD = #{ssnEnterCd} ]]>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq ''">
		 <![CDATA[
		 		    AND A.EDU_SEQ = #{searchEduSeq1}
	                AND A.EDU_COURSE_CD = #{searchEduCourseCd1}
		 ]]>
		 </if>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq '' and searchEduSeq2 != null and searchEduSeq2 neq ''">
		 <![CDATA[
		 			AND A.EDU_SEQ = #{searchEduSeq2}
	                AND A.EDU_COURSE_CD = #{searchEduCourseCd2}
		 ]]>
		 </if>
		 <![CDATA[
		               AND A.EDU_EVENT_SEQ >= NVL(#{searchEduEventSeq1}, 0)
		               AND A.EDU_EVENT_SEQ <= NVL(#{searchEduEventSeq2}, 99999999999999)
		           GROUP BY  A.EDU_EVENT_SEQ
		           )
		         UNION
		         SELECT 0 AS CNT
		               ,0 AS YSUM
		               ,SUM(POINT) AS TOTALAVE
		               ,0 AS ITEM_CNT
		          FROM TTRA151 A /* TTRA151 */
		         WHERE A.ENTER_CD = #{ssnEnterCd} ]]>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq ''">
		 <![CDATA[
		 		   AND A.EDU_SEQ = #{searchEduSeq1}
	               AND A.EDU_COURSE_CD = #{searchEduCourseCd1}
		 ]]>
		 </if>
		 <if test="searchEduSeq1 != null and searchEduSeq1 neq '' and searchEduSeq2 != null and searchEduSeq2 neq ''">
		 <![CDATA[
		 		   AND A.EDU_SEQ = #{searchEduSeq2}
	               AND A.EDU_COURSE_CD = #{searchEduCourseCd2}
		 ]]>
		 </if>
	   <![CDATA[
		            AND A.EDU_EVENT_SEQ >= NVL(#{searchEduEventSeq1}, 0)
		            AND A.EDU_EVENT_SEQ <= NVL(#{searchEduEventSeq2}, 99999999999999)
		      )
 	   ]]>
	</select>
	
	<select id="getEduModuleList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT EDU_MODULE_SEQ	AS	CODE
				 , EDU_MODULE_NM	AS	CODE_NM
			  FROM TTRA102
			 WHERE ENTER_CD		=	#{ssnEnterCd}
			   AND EDU_SEQ		=	'99999'
			   AND EDU_M_BRANCH_CD=	#{searchEduMBranchCd}
		]]>
	</select>
	
	<select id="getCompAppraisalCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT COMP_APPRAISAL_CD AS CODE, COMP_APPRAISAL_NM AS CODE_NM
			FROM TPAP521
			WHERE ENTER_CD = #{ssnEnterCd}
			ORDER BY APPRAISAL_YY DESC, COMP_APPRAISAL_CD DESC
		]]>
	</select>
	
	<select id="getAppraisalCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT   APPRAISAL_CD as CODE
				   , APPRAISAL_NM as CODE_NM
			FROM     TPAP101 A
			WHERE    ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
		<if test="searchEvlYy != null and searchEvlYy neq ''">
		<![CDATA[
			  AND APPRAISAL_YY = #{searchEvlYy}
		]]>
		</if>
		<if test="searchAppTypeCd != null and searchAppTypeCd neq ''">
			  AND APP_TYPE_CD IN
			<foreach collection="searchAppTypeCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="searchDAppTypeCd != null and searchDAppTypeCd neq ''">
			  AND D_APP_TYPE_CD IN
			<foreach collection="searchDAppTypeCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test='searchCloseYn != null and searchCloseYn eq "N"'>
			<![CDATA[
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') <= APP_E_YMD
			  AND NVL(CLOSE_YN, 'N') = 'N'
			]]>
		</if>
		<![CDATA[
			ORDER BY APPRAISAL_CD DESC, APP_S_YMD DESC, APP_E_YMD DESC
		]]>
	</select>

	<select id="getAppraisalCdList2" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT A.APPRAISAL_CD
			 , A.APPRAISAL_NM
			 , TO_CHAR(TO_DATE(A.APP_S_YMD, 'YYYYMMDD'), 'YYYY.MM.DD') AS APP_S_YMD
			 , TO_CHAR(TO_DATE(A.APP_E_YMD, 'YYYYMMDD'), 'YYYY.MM.DD') AS APP_E_YMD
			 , DECODE(A.CLOSE_YN, 'Y', '종료', '진행중')                 AS STATUS_NM
			 , A.CLOSE_YN
		FROM TPAP101 A
		WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
		  AND A.APPRAISAL_YY = TRIM(#{searchAppYear})
		  AND A.APP_TYPE_CD <> 'D'
		  AND EXISTS
			(
				SELECT 1
				FROM TPAP105
				WHERE ENTER_CD = A.ENTER_CD
				AND APPRAISAL_CD = A.APPRAISAL_CD ]]>
		<if test="searchAppStepCds != null and searchAppStepCds neq ''">
				AND APP_STEP_CD IN
			<foreach collection="searchAppStepCds" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<![CDATA[
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN APP_AS_YMD AND NVL(APP_AE_YMD, '99991231')
			)
		ORDER BY A.APPRAISAL_YY DESC, A.APP_TIME_CD DESC, A.APPRAISAL_CD DESC
		]]>
	</select>

	<select id="getAppraisalCdListSelfMbo" parameterType="map" resultType="cMap">
		<![CDATA[
		     SELECT APPRAISAL_CD CODE, APPRAISAL_NM CODE_NM FROM (
                       SELECT DISTINCT A.APPRAISAL_CD, A.APPRAISAL_NM
                       FROM TPAP101 A
                           ,TPAP105 B
                           ,TPAP104 C
                      WHERE A.ENTER_CD = B.ENTER_CD
                        AND A.APPRAISAL_CD = B.APPRAISAL_CD
                        AND B.ENTER_CD = C.ENTER_CD
                        AND B.APPRAISAL_CD = C.APPRAISAL_CD
                        AND B.APP_STEP_CD = C.APP_STEP_CD
                        AND A.ENTER_CD = #{ssnEnterCd}
                        AND B.APP_STEP_CD = '5'
                        AND A.APP_TYPE_CD = 'C' 
                        AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.APP_AS_YMD AND B.APP_AE_YMD
                        AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.APP_AS_YMD AND C.APP_AE_YMD
                      ORDER BY APPRAISAL_CD DESC
                  )	
		]]>
	</select>
	
	<select id="getAppHqCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT GRP_ID AS CODE,
				   GRP_NM AS CODE_NM
                    FROM TPAP144
                   WHERE ENTER_CD = TRIM(#{ssnEnterCd})
                     AND APPRAISAL_CD = #{searchAppraisalCd}
                   ORDER BY GRP_NM
		]]>
	</select>
	
	<select id="getAppStepCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT APP_STEP_CD AS CODE, B.CODE_NM AS CODE_NM
			FROM TPAP105 A,TSYS005 B
			WHERE A.ENTER_CD = B.ENTER_CD
				AND A.APP_STEP_CD = B.CODE
				AND B.GRCODE_CD = 'P00005'
				AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
				/*AND B.NOTE1 = 'Y'*/
				AND A.ENTER_CD = TRIM(#{ssnEnterCd})
				AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd}) ]]>
		<if test="searchAppStepCdNot != null and searchAppStepCdNot neq ''">
			AND APP_STEP_CD not in
			<foreach collection="searchAppStepCdNot" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<![CDATA[
			ORDER BY B.SEQ ASC
		]]>
	</select>
	
	<select id="getAppStepNm" parameterType="map" resultType="cMap">
		<![CDATA[
				SELECT APP_STEP_CD AS CODE, B.CODE_NM AS CODE_NM
				FROM TPAP105 A,TSYS005 B
				WHERE A.ENTER_CD = B.ENTER_CD
					AND A.APP_STEP_CD = B.CODE
					AND B.GRCODE_CD = 'P00005'
					AND B.NOTE1 = 'Y'
				  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
					AND A.ENTER_CD = TRIM(#{ssnEnterCd})
					AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
                       AND A.APP_STEP_CD = TRIM(#{searchAppStepCd})
                   ORDER BY B.SEQ ASC
			]]>
	</select>
	
	<select id="getAppOrgCdList" parameterType="map" resultType="cMap">
		<![CDATA[
             SELECT DISTINCT APP_ORG_CD AS CODE, APP_ORG_NM AS CODE_NM
               FROM TPAP201 A
              WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
                AND A.APP_STEP_CD = TRIM(#{searchAppStepCd})
                AND A.APP_YN = 'Y'
                AND A.SABUN = TRIM(#{searchSabun})
              ORDER BY APP_ORG_CD
		]]>
	</select>
	
	<select id="getAppManagerOrgCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT DISTINCT APP_ORG_CD AS CODE, (SELECT AA.APP_ORG_NM
                                                   FROM TPAP160 AA
                                                   WHERE AA.ENTER_CD = A.ENTER_CD
                                                     AND AA.APPRAISAL_CD = A.APPRAISAL_CD
                                                     AND AA.APP_STEP_CD = A.APP_STEP_CD
                                                     AND AA.APP_ORG_CD = A.APP_ORG_CD) AS CODE_NM
                FROM TPAP202 A
               WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                 AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
                 AND A.APP_STEP_CD = TRIM(#{searchAppStepCd})
                 --AND A.APP_YN = 'Y'
                 AND A.APP_SABUN = TRIM(#{searchSabun})
               ORDER BY APP_ORG_CD
		]]>
	</select>
	
	<select id="getAppraisalCdListMbo" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT A.APPRAISAL_CD AS CODE
				 , A.APPRAISAL_NM AS CODE_NM
			FROM TPAP101 A
				,TPAP105 B
			WHERE A.ENTER_CD = B.ENTER_CD
				AND A.APPRAISAL_CD = B.APPRAISAL_CD
				AND A.ENTER_CD    = TRIM(#{ssnEnterCd})
				AND B.APP_STEP_CD = TRIM(#{searchAppStepCd}) ]]>
		<if test="searchAppYear != null and searchAppYear neq ''">
				AND A.APPRAISAL_YY = TRIM(#{searchAppYear})
		</if>
		<![CDATA[
				AND A.APP_TYPE_CD <> 'D'
				AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.APP_AS_YMD AND NVL(B.APP_AE_YMD,'99991231')
				AND (
					   ( DECODE((SELECT SABUN FROM TPAP993 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{ssnSabun} ),'','N','Y') = 'Y' )
					OR ( DECODE((SELECT SABUN FROM TPAP993 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{ssnSabun} ),'','N','Y') = 'N' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.APP_AS_YMD AND NVL(B.APP_AE_YMD, '99991231') )
				)
			ORDER BY A.APPRAISAL_YY DESC, A.APP_TIME_CD DESC
		]]>
	</select>

	<!-- 평가년도 조회 -->
	<select id="getAppYearList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT A.APPRAISAL_YY AS CODE
			 , A.APPRAISAL_YY AS CODE_NM
		FROM TPAP101 A
		   , TPAP105 B
		WHERE A.ENTER_CD = B.ENTER_CD
		  AND A.APPRAISAL_CD = B.APPRAISAL_CD
		  AND A.ENTER_CD    = TRIM(#{ssnEnterCd})
		  AND B.APP_STEP_CD = TRIM(#{searchAppStepCd})
		  AND A.APP_TYPE_CD <> 'D'
		GROUP BY A.APPRAISAL_YY
		ORDER BY A.APPRAISAL_YY DESC
		]]>
	</select>

	<select id="getAppraisalCdListMbo2" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT A.APPRAISAL_CD AS CODE
				 , A.APPRAISAL_NM AS CODE_NM
			FROM TPAP101 A
				,TPAP105 B
			WHERE A.ENTER_CD = B.ENTER_CD
				AND A.APPRAISAL_CD = B.APPRAISAL_CD
				AND A.ENTER_CD    = TRIM(#{ssnEnterCd})
				AND B.APP_STEP_CD = TRIM(#{searchAppStepCd})
				AND A.APP_TYPE_CD <> 'D'
			ORDER BY A.APPRAISAL_YY DESC, A.APP_TIME_CD DESC
		]]>
	</select>
	
	<select id="getAppraisalCdListSeqMbo" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT B.APPRAISAL_CD AS CODE, B.APPRAISAL_NM AS CODE_NM
			     , B.CLOSE_YN
			     , DECODE(NVL(B.APP_GRADING_METHOD, 'C'), 'C', 'C', 'P', 'P', 'C') AS APP_GRADING_METHOD
			     , C.NOTE1
			     , C.NOTE2
			     , C.NOTE3
			     , C.NOTE4
			  FROM TPAP104 A, TPAP101 B, TSYS005 C
			 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
			   AND A.APP_STEP_CD = TRIM(#{searchAppStepCd})
			   AND A.APPRAISAL_SEQ = TRIM(#{searchAppSeqCd})
			   AND B.APP_TYPE_CD <> 'D'
			   AND (
					   ( DECODE((SELECT SABUN FROM TPAP993 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{ssnSabun} ),'','N','Y') = 'Y' )
					OR ( DECODE((SELECT SABUN FROM TPAP993 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{ssnSabun} ),'','N','Y') = 'N' AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.APP_AS_YMD AND A.APP_AE_YMD )
				)
			   AND C.GRCODE_CD(+) = 'P20007'
			   AND C.USE_YN(+) = 'Y'
			   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.S_YMD AND C.E_YMD
			   AND A.ENTER_CD = B.ENTER_CD
			   AND A.APPRAISAL_CD = B.APPRAISAL_CD
			   AND B.ENTER_CD = C.ENTER_CD(+)
			   AND DECODE(NVL(B.APP_GRADING_METHOD, 'C'), 'C', 'C', 'P', 'P', 'C') = C.CODE(+)
			ORDER BY B.APPRAISAL_YY DESC, B.APP_TIME_CD DESC
		]]>
	</select>
	
	<select id="getAppraisalCdListSeqMbo2" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT B.APPRAISAL_CD AS CODE, B.APPRAISAL_NM AS CODE_NM
		     , B.CLOSE_YN
		     , DECODE(NVL(B.APP_GRADING_METHOD, 'C'), 'C', 'C', 'P', 'P', 'C') AS APP_GRADING_METHOD
		     , C.NOTE1
		     , C.NOTE2
		     , C.NOTE3
		     , C.NOTE4
		  FROM TPAP104 A, TPAP101 B, TSYS005 C
		 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
		   AND A.APP_STEP_CD = TRIM(#{searchAppStepCd})
		   AND A.APPRAISAL_SEQ = TRIM(#{searchAppSeqCd})
		   AND B.APP_TYPE_CD <> 'D'
		   AND C.GRCODE_CD(+) = 'P20007'
		   AND C.USE_YN(+) = 'Y'
		   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.S_YMD AND C.E_YMD
		   AND A.ENTER_CD = B.ENTER_CD
		   AND A.APPRAISAL_CD = B.APPRAISAL_CD
		   AND B.ENTER_CD = C.ENTER_CD(+)
		   AND DECODE(NVL(B.APP_GRADING_METHOD, 'C'), 'C', 'C', 'P', 'P', 'C') = C.CODE(+)
		   AND B.APP_TYPE_CD NOT IN (CASE WHEN A.ENTER_CD IN ('IDS', 'UWS') THEN 'C' ELSE 'X' END)
		ORDER BY B.APPRAISAL_YY DESC, B.APP_TIME_CD DESC
	]]>
	</select>

	<select id="getAppraisalCdListSeqMbo3" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT B.APPRAISAL_CD AS CODE, B.APPRAISAL_NM AS CODE_NM
			 , B.CLOSE_YN
			 , DECODE(NVL(B.APP_GRADING_METHOD, 'C'), 'C', 'C', 'P', 'P', 'C') AS APP_GRADING_METHOD
			 , C.NOTE1
			 , C.NOTE2
			 , C.NOTE3
			 , C.NOTE4
		FROM TPAP104 A, TPAP101 B, TSYS005 C
		WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
		  AND A.APP_STEP_CD = TRIM(#{searchAppStepCd})
		  AND A.APPRAISAL_SEQ = TRIM(#{searchAppSeqCd})
          AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
		  AND B.APP_TYPE_CD <> 'D'
		  AND (
			( DECODE((SELECT SABUN FROM TPAP993 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{ssnSabun} ),'','N','Y') = 'Y' )
				OR ( DECODE((SELECT SABUN FROM TPAP993 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{ssnSabun} ),'','N','Y') = 'N' AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.APP_AS_YMD AND A.APP_AE_YMD )
			)
		  AND C.GRCODE_CD(+) = 'P20007'
		  AND C.USE_YN(+) = 'Y'
		  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.S_YMD AND C.E_YMD
		  AND A.ENTER_CD = B.ENTER_CD
		  AND A.APPRAISAL_CD = B.APPRAISAL_CD
		  AND B.ENTER_CD = C.ENTER_CD(+)
		  AND DECODE(NVL(B.APP_GRADING_METHOD, 'C'), 'C', 'C', 'P', 'P', 'C') = C.CODE(+)
		ORDER BY B.APPRAISAL_YY DESC, B.APP_TIME_CD DESC
		]]>
	</select>

	<select id="getAppraisalYyListMbo" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT A.APPRAISAL_CD AS CODE, A.APPRAISAL_YY AS CODE_NM
			FROM TPAP101 A
				,TPAP105 B
			WHERE A.ENTER_CD = B.ENTER_CD
				AND A.APPRAISAL_CD = B.APPRAISAL_CD
				AND A.ENTER_CD    = TRIM(#{ssnEnterCd})
				AND B.APP_STEP_CD = TRIM(#{searchAppStepCd})
				AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.APP_AS_YMD AND NVL(B.APP_AE_YMD,'99991231')
			ORDER BY A.APPRAISAL_YY DESC, A.APP_TIME_CD DESC
		]]>
	</select>
	
	<select id="getAppOrgCdListMboTargetApr" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT DISTINCT A.APP_ORG_CD AS CODE
				 , C.APP_ORG_NM AS CODE_NM, C.ORG_SEQ
			  FROM TPAP201 A, TPAP202 B, TPAP160 C, THRM100 D
			 WHERE A.ENTER_CD     = B.ENTER_CD
			   AND A.APPRAISAL_CD = B.APPRAISAL_CD
			   AND A.APP_ORG_CD   = B.APP_ORG_CD
			   AND A.SABUN        = B.SABUN
			   AND A.APP_STEP_CD  = B.APP_STEP_CD
               AND A.ENTER_CD     = C.ENTER_CD
			   AND A.APPRAISAL_CD = C.APPRAISAL_CD
			   AND A.APP_STEP_CD  = C.APP_STEP_CD
			   AND A.APP_ORG_CD   = C.APP_ORG_CD
			   AND A.ENTER_CD     = D.ENTER_CD
			   AND A.SABUN        = D.SABUN
			   AND A.ENTER_CD     = TRIM(#{ssnEnterCd})
			   AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
			   AND A.APP_STEP_CD  = TRIM(#{searchAppStepCd}) ]]>
		<if test="searchAppSabun != null and searchAppSabun neq ''">
		<![CDATA[
			   AND B.APP_SABUN    = TRIM(#{searchAppSabun})
		]]>
		</if>
		<![CDATA[			
			   AND B.APP_SEQ_CD   = TRIM(#{searchAppSeqCd})
			   AND A.APP_YN       = 'Y'
            ORDER BY C.ORG_SEQ
		]]>
	</select>

	<select parameterType="map" resultType="cMap" id="getAppOrgCdListMboTarget">

			<![CDATA[
					SELECT A.APP_ORG_CD AS CODE
						 , F_PAPN_APP_ORG_NM(A.ENTER_CD, A.APPRAISAL_CD, A.APP_STEP_CD, A.APP_ORG_CD, #{ssnLocaleCd}) AS CODE_NM
					FROM TPAP201 A
					WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
						AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
				]]>
						<choose><when test='searchSabun != null and !searchSabun.equals("")'>
							AND A.SABUN = TRIM(#{searchSabun})
						</when>
						<otherwise>
							AND A.SABUN = TRIM(#{ssnSabun})
						</otherwise>
						</choose>

						AND A.APP_STEP_CD = TRIM(#{searchAppStepCd})

						<if test='searchAppYn != null and !searchAppYn.equals("")'>
							AND A.APP_YN = TRIM(#{searchAppYn})
						</if>

					ORDER BY 1

	</select>
	
	<select id="getAppSeqCdListMbo" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT B.CODE
			 , F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'P00003', B.CODE, #{ssnLocaleCd}) AS CODE_NM
		FROM (
				SELECT DISTINCT X.ENTER_CD, X.APP_SEQ_CD
				FROM TPAP202 X
					,TPAP201 Y
				WHERE X.ENTER_CD = Y.ENTER_CD
					AND X.APPRAISAL_CD = Y.APPRAISAL_CD
					AND X.APP_STEP_CD = Y.APP_STEP_CD
					AND X.SABUN = Y.SABUN
					AND X.APP_ORG_CD = Y.APP_ORG_CD
					AND X.ENTER_CD = TRIM(#{ssnEnterCd})
					AND X.APPRAISAL_CD = TRIM(#{searchAppraisalCd}) ]]>
		<if test="searchAppStepCd != null and searchAppStepCd neq ''">
		<![CDATA[
					AND X.APP_STEP_CD IN ('1','3')
		]]>
		</if>
		<if test="searchAppSabun != null and searchAppSabun neq ''">
		<![CDATA[
					AND X.APP_SABUN = TRIM(#{searchAppSabun})
		]]>
		</if>
	<![CDATA[
					AND X.APP_SEQ_CD IN ('1','2','6')
					AND Y.APP_YN = 'Y'
			) A
			,TSYS005 B
		WHERE A.ENTER_CD = B.ENTER_CD
			AND A.APP_SEQ_CD = B.CODE
			AND B.GRCODE_CD = 'P00003'
		AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
		ORDER BY B.SEQ
	]]>
	</select>
	
	<select id="getAppSeqCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT B.CODE
			 , F_COM_GET_GRCODE_NAME(B.ENTER_CD, 'P00003', B.CODE, #{ssnLocaleCd}) AS CODE_NM
		  FROM TSYS005 B
         WHERE B.ENTER_CD =TRIM(#{ssnEnterCd})
           AND B.GRCODE_CD='P00003'
           AND B.NOTE1='Y'
		   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
		<if test="searchNote3 != null and searchNote3 neq ''">
			<![CDATA[
			AND B.NOTE3 = TRIM(#{searchNote3})
		]]>
		</if>
		<![CDATA[
		ORDER BY B.SEQ
		]]>
	</select>
	
	<select id="getAppGroupCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT DISTINCT B.APP_GROUP_CD AS CODE
			 , C.APP_GROUP_NM AS CODE_NM, C.SEQ
		FROM TPAP202 B, TPAP133 C
		WHERE B.ENTER_CD = C.ENTER_CD
			AND B.APPRAISAL_CD = C.APPRAISAL_CD
			AND B.APP_GROUP_CD = C.APP_GROUP_CD
			AND B.ENTER_CD = TRIM(#{ssnEnterCd})
			AND B.APPRAISAL_CD = TRIM(#{searchAppraisalCd}) ]]>
	<if test="searchAppSabun != null and searchAppSabun neq ''">
		<![CDATA[
			AND B.APP_SABUN = TRIM(#{searchAppSabun})
		]]>
	</if>
	<if test="searchAppStepCd != null and searchAppStepCd neq ''">
		<![CDATA[
			AND B.APP_STEP_CD = TRIM(#{searchAppStepCd})
		]]>
	</if>
	<if test="searchAppSeqCd != null and searchAppSeqCd neq ''">
		<![CDATA[
			AND B.APP_SEQ_CD = #{searchAppSeqCd}
		]]>
	</if>
	<![CDATA[
		ORDER BY C.SEQ,B.APP_GROUP_CD
	]]>
	</select>
	
	<select id="getAppraisalCdListAppType" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT APPRAISAL_CD AS CODE
			 , NVL(F_COM_GET_LANGUAGE_MAPPING (ENTER_CD, 'tpap101', LANGUAGE_CD, #{ssnLocaleCd}),APPRAISAL_NM) AS CODE_NM
		FROM     TPAP101
		WHERE    ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
	<if test="searchEvlYy != null and searchEvlYy neq ''">
	<![CDATA[
		  AND APPRAISAL_YY = #{searchEvlYy}
	]]>
	</if>
	<if test="searchAppTypeCd != null and searchAppTypeCd neq ''">

		  AND APP_TYPE_CD IN
		<foreach collection="searchAppTypeCd" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>

	</if>
	<![CDATA[
		ORDER BY APPRAISAL_YY DESC, APP_S_YMD DESC, APP_E_YMD DESC, APPRAISAL_CD
	]]>
	</select>
	
	<select id="getAppScheduleCodeList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT APPRAISAL_CD as CODE
		 	  , NVL(F_COM_GET_LANGUAGE_MAPPING (ENTER_CD, 'tpap101', LANGUAGE_CD, #{ssnLocaleCd}), APPRAISAL_NM) AS CODE_NM
		 	  , APPRAISAL_YY
		 FROM   TPAP101
		 WHERE  ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
	<if test="searchEvlYy != null and searchEvlYy neq ''">
	<![CDATA[
		   AND  APPRAISAL_YY = #{searchEvlYy}
	]]>
	</if>
	<![CDATA[
		   AND  APP_TYPE_CD <> 'Z'
		ORDER BY APPRAISAL_YY DESC
		       , APP_TIME_CD DESC
		       , F_COM_GET_GRCODE_SEQ (ENTER_CD, 'P10003', APP_TYPE_CD)
		       , APP_S_YMD DESC
		       , APP_E_YMD DESC
		       , APPRAISAL_CD
	]]>
	</select>
	
	<select id="getAppSelfReportCodeList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.APPRAISAL_CD as CODE
			 , NVL(F_COM_GET_LANGUAGE_MAPPING (A.ENTER_CD, 'tpap101', A.LANGUAGE_CD, #{ssnLocaleCd}),A.APPRAISAL_NM) AS CODE_NM
	     FROM TPAP101 A
	    WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
	      AND A.APP_TYPE_CD = 'E'
	 ORDER BY A.APPRAISAL_YY DESC, A.APP_TIME_CD DESC, F_COM_GET_GRCODE_SEQ(A.ENTER_CD, 'P10003', A.APP_TYPE_CD), A.APP_S_YMD DESC, A.APP_E_YMD DESC, A.APPRAISAL_CD
	]]>
	</select>
	
	<select id="getAppGroupMgrCodeList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT APPRAISAL_CD AS CODE
				 , NVL(F_COM_GET_LANGUAGE_MAPPING (ENTER_CD, 'tpap101', LANGUAGE_CD, #{ssnLocaleCd}),APPRAISAL_NM) AS CODE_NM
			FROM TPAP101
			WHERE ENTER_CD = TRIM(#{ssnEnterCd})
			ORDER BY APPRAISAL_YY DESC, APP_S_YMD DESC, APP_E_YMD DESC, APPRAISAL_CD
		]]>
	</select>
	
	<select id="getAppRateMgrCodeList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT A.APPRAISAL_CD AS CODE
				 , NVL(F_COM_GET_LANGUAGE_MAPPING (A.ENTER_CD, 'tpap101', A.LANGUAGE_CD, #{ssnLocaleCd}),A.APPRAISAL_NM) AS CODE_NM
			     FROM TPAP101 A
			    WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
			 ORDER BY A.APPRAISAL_YY DESC, A.APP_TIME_CD DESC, F_COM_GET_GRCODE_SEQ(A.ENTER_CD, 'P10003', A.APP_TYPE_CD), A.APP_S_YMD DESC, A.APP_E_YMD DESC, A.APPRAISAL_CD
		]]>
	</select>
	
	<select id="getOrgCodeListType" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT   ORG_CD  AS CODE
               , F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, TO_CHAR( SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS CODE_NM
        FROM     TORG101
        WHERE    ENTER_CD = #{ssnEnterCd}
        AND      ORG_TYPE = #{searchOrgType}
        AND      TO_CHAR( SYSDATE,'YYYYMMDD')  BETWEEN SDATE AND NVL(EDATE,'99991231')
	]]>
	</select>
	
	<select id="getCompMboCodeListType" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT   COMP_MBO_SEQ  AS CODE
               , COMP_MBO      AS CODE_NM
        FROM     TPAP341
        WHERE    ENTER_CD     = #{ssnEnterCd}
        AND      APPRAISAL_YY = #{searchAppraisalYy}
	]]>
	</select>
	
	<select id="getAppraisalCdListMobOrgTargetReg" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.APPRAISAL_CD AS CODE
		     , NVL(F_COM_GET_LANGUAGE_MAPPING (A.ENTER_CD, 'tpap101', A.LANGUAGE_CD, #{ssnLocaleCd}),A.APPRAISAL_NM) AS CODE_NM
		  FROM TPAP101 A
		      ,TPAP105 B
		      ,TPAP104 C
		 WHERE A.ENTER_CD      = B.ENTER_CD
		   AND A.APPRAISAL_CD  = B.APPRAISAL_CD
		   AND B.ENTER_CD      = C.ENTER_CD
		   AND B.APPRAISAL_CD  = C.APPRAISAL_CD
		   AND B.APP_STEP_CD   = C.APP_STEP_CD
		   AND A.ENTER_CD      = #{ssnEnterCd} ]]>
	<if test="searchAppTypeCd != null and searchAppTypeCd neq ''">
	<![CDATA[
		   AND A.APP_TYPE_CD   =  #{searchAppTypeCd}
	]]>
	</if>
	<if test="searchAppStepCd != null and searchAppStepCd neq ''">
	<![CDATA[
		   AND B.APP_STEP_CD   =  #{searchAppStepCd}
	]]>
	</if>
	<if test="searchAppraisalSeq != null and searchAppraisalSeq neq ''">
	<![CDATA[
		   AND C.APPRAISAL_SEQ   =  #{searchAppraisalSeq}
	]]>
	</if>
	<![CDATA[
		   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.APP_AS_YMD AND NVL(C.APP_AE_YMD,'99991231')
		 ORDER BY A.APPRAISAL_YY DESC, A.APP_TIME_CD DESC, F_COM_GET_GRCODE_SEQ(A.ENTER_CD, 'P10003', A.APP_TYPE_CD), A.APP_S_YMD DESC, A.APP_E_YMD DESC, A.APPRAISAL_CD
	]]>
	</select>
	
	<select id="getAppraisalCdListAppPrcs" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.APPRAISAL_CD AS CODE
		     , NVL(F_COM_GET_LANGUAGE_MAPPING (A.ENTER_CD, 'tpap101', A.LANGUAGE_CD, #{ssnLocaleCd}), A.APPRAISAL_NM) AS CODE_NM
		  FROM TPAP101 A
		  	  ,TPAP105 B
		 WHERE A.ENTER_CD     = B.ENTER_CD
		   AND A.APPRAISAL_CD = B.APPRAISAL_CD
		   AND A.ENTER_CD     = #{ssnEnterCd}
		   AND A.APP_TYPE_CD  IN ('A','B', 'D', 'F', 'H') -- 업적 ,역량,인턴, 목표합의서,조직
		   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN B.APP_AS_YMD AND NVL(B.APP_AE_YMD,'99991231')
		 GROUP BY A.APPRAISAL_CD,A.APPRAISAL_NM
		 ORDER BY A.APPRAISAL_CD DESC, APPRAISAL_NM
	]]>
	</select>
	
	<select id="getAppIndexGubunCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT CODE, CODE_NM
			FROM TSYS005
			WHERE ENTER_CD = #{ssnEnterCd}
			AND GRCODE_CD = 'P00011'
			AND USE_YN = 'Y'
			AND NOTE2 = '1'
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
		]]>
	</select>
	
	<select id="getTargetIndexKpiCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT   SEQ    AS CODE
         			,TARGET AS CODE_NM
			FROM     TPAP331
			WHERE    ENTER_CD     = #{ssnEnterCd}
			AND      APPRAISAL_CD =  ( SELECT APPRAISAL_CD FROM TPAP101 WHERE ENTER_CD = #{ssnEnterCd} AND APP_TYPE_CD = 'H' AND APPRAISAL_YY =  (SELECT APPRAISAL_YY  FROM TPAP101 WHERE ENTER_CD = #{ssnEnterCd} AND APPRAISAL_CD = #{searchAppraisalCd}) )
			AND      SABUN        = #{searchAppSabun}
		]]>
	</select>
	
	<select id="getTargetIndexKpiCdListSabun" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT   SEQ    AS CODE
         			,TARGET AS CODE_NM
			FROM     TPAP331
			WHERE    ENTER_CD     = #{ssnEnterCd}
			AND      APPRAISAL_CD =  ( SELECT APPRAISAL_CD FROM TPAP101 WHERE ENTER_CD = #{ssnEnterCd} AND APP_TYPE_CD = 'H' AND APPRAISAL_YY =  (SELECT APPRAISAL_YY  FROM TPAP101 WHERE ENTER_CD = #{ssnEnterCd} AND APPRAISAL_CD = #{searchAppraisalCd}) )
			AND      SABUN        = (SELECT A.APP_SABUN -- 평가자사번
							         FROM   TPAP202 A
							               ,TPAP201 B
							         WHERE A.ENTER_CD     = B.ENTER_CD
							           AND A.APPRAISAL_CD = B.APPRAISAL_CD
							           AND A.SABUN        = B.SABUN
							           AND A.APP_STEP_CD  = B.APP_STEP_CD
							           AND A.ENTER_CD     = #{ssnEnterCd}
							           AND A.APPRAISAL_CD = #{searchAppraisalCd}
							           AND A.SABUN        = #{searchSabun}
							           AND A.APP_STEP_CD  = '5'
		                               AND A.APP_SEQ_CD   = '1'
							           AND B.APP_YN       = 'Y' /* 평가포함여부 */ )
		]]>
	</select>
	
	<select id="getHdteamMboCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT   HDTEAM_MBO_SEQ   AS CODE
         					,HDTEAM_MBO       AS CODE_NM
			FROM     TPAP343
			WHERE    ENTER_CD = #{ssnEnterCd}
			AND      APPRAISAL_YY = (   SELECT   APPRAISAL_YY FROM TPAP101
										WHERE    ENTER_CD     = #{ssnEnterCd}
									    AND      APPRAISAL_CD = #{searchAppraisalCd}
									 )
			AND     HDTEAM_CD     = ( SELECT F_COM_GET_PRIOR_ORG_CD( #{ssnEnterCd} ,F_COM_GET_ORG_CD( #{ssnEnterCd} , #{searchSabun} , TO_CHAR(SYSDATE,'YYYYMMDD') ) , TO_CHAR(SYSDATE,'YYYYMMDD')  ) FROM DUAL)
		]]>
	</select>
	
	<select id="getAppTypeCdList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT	  CODE
					, CODE_NM
			FROM	TSYS005
			WHERE	ENTER_CD = #{ssnEnterCd}
			  AND	GRCODE_CD  = 'P10003'
			  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
		<if test="useYn != null and useYn neq ''">
		<![CDATA[
			  AND USE_YN = TRIM(#{useYn})
		]]>
		</if>
		<![CDATA[
 					AND CODE <> 'Z'
			ORDER BY USE_YN DESC, SEQ, CODE, CODE_NM
		]]>
	</select>
	
	<select id="getAppGroupCdList1" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT   APP_GROUP_CD	AS	CODE
				,F_PAPN_APP_GROUP_NM(ENTER_CD, APPRAISAL_CD, APP_GROUP_CD, #{ssnLocaleCd}) AS CODE_NM
 		FROM 	 TPAP133
		WHERE    ENTER_CD = #{ssnEnterCd}
		AND      APPRAISAL_CD = #{searchAppraisalCd}
		ORDER BY  SEQ
				, APP_GROUP_NM
	]]>
	</select>
	
	<select id="getBusinessPlaceCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE, CODE_NM FROM
               (
		 	       SELECT DISTINCT  BUSINESS_PLACE_CD AS CODE
		 	                      , BUSINESS_PLACE_NM AS CODE_NM
		 	                      , BUSINESS_PLACE_CD
		 	       FROM TCPN121
		 	       WHERE 1=1 ]]>
	<choose>
		<when test="enterCd != null and enterCd neq ''">
		<![CDATA[
					  AND ENTER_CD = #{enterCd}
		]]>
		</when>
		<otherwise>
		<![CDATA[
					  AND ENTER_CD = #{ssnEnterCd}
		]]>
		</otherwise>
	</choose>
	<if test="searchBusinessPlaceCd != null and searchBusinessPlaceCd neq ''">
	<![CDATA[
					 AND BUSINESS_PLACE_CD = TRIM(#{searchBusinessPlaceCd}) ]]>
	</if>
	<![CDATA[
		 	         AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231') ]]>
	<if test="searchChkPlace != null and searchChkPlace neq ''">
	<![CDATA[
					 AND BUSINESS_PLACE_CD IN ( SELECT A.SCOPE_VALUE FROM TSYS319 A  -- 그룹별사용자별권한범위항목관리
	 	                                    	 WHERE A.ENTER_CD = #{ssnEnterCd}
		 	                                       AND A.SABUN    = #{sabun}
		 	                                       AND A.GRP_CD   = #{grpCd}
		 	                                       AND A.AUTH_SCOPE_CD = 'C10')
	]]>
	</if>
	<![CDATA[
		 	       ORDER BY BUSINESS_PLACE_CD
	 	       )
	]]>
	</select>
	
	<select id="getLocationCdListAuth" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT LOCATION_CD AS CODE, NVL(F_COM_GET_LANGUAGE_MAPPING (ENTER_CD, 'tsys015', LANGUAGE_CD, #{ssnLocaleCd}), LOCATION_NM) AS CODE_NM
	      FROM TSYS015
		 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchChkPlace != null and searchChkPlace neq ''">
	<![CDATA[
		   AND LOCATION_CD IN ( SELECT A.SCOPE_VALUE FROM TSYS319 A
                                 WHERE A.ENTER_CD = #{ssnEnterCd}
                                   AND A.SABUN    = #{sabun}
                                   AND A.GRP_CD   = #{grpCd}
                                   AND A.AUTH_SCOPE_CD = 'L10')
	]]>
	</if>
	<![CDATA[
	       ORDER BY LOCATION_CD
	]]>
	</select>
	
	<select id="getTcpn121List" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.BUSINESS_PLACE_CD	AS CODE
			 , CASE WHEN #{ssnLocaleCd} is null AND #{ssnLocaleCd} = 'ko_KR' THEN A.BUSINESS_PLACE_NM
			        WHEN #{ssnLocaleCd} = 'en_US' THEN A.BUSINESS_PLACE_ENG_NM
			        ELSE A.BUSINESS_PLACE_NM END AS CODE_NM
		  FROM TCPN121 A
			 , TORG109 B
		 WHERE A.ENTER_CD = #{ssnEnterCd}
		   AND A.ENTER_CD = B.ENTER_CD
		   AND NVL(A.MAP_TYPE_CD,'100') = B.MAP_TYPE_CD
		   AND A.BUSINESS_PLACE_CD = B.MAP_CD
		   AND A.SDATE = ( SELECT MAX(SDATE)
		                     FROM TCPN121
		                    WHERE ENTER_CD = A.ENTER_CD
		                      AND BUSINESS_PLACE_CD = A.BUSINESS_PLACE_CD
		                      AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231') )
		   AND B.SDATE = (SELECT MAX(SDATE) FROM TORG109
		                   WHERE ENTER_CD = B.ENTER_CD
		                     AND MAP_TYPE_CD = B.MAP_TYPE_CD
		                     AND MAP_CD = B.MAP_CD
		                     AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231'))
		   AND EXISTS
			   (
			       SELECT 1
			         FROM TORG107
			        WHERE ENTER_CD = A.ENTER_CD
			          AND MAP_TYPE_CD = '100'
			          AND MAP_CD = B.MAP_CD
			   )
		]]>
		<if test='ssnSearchType != null and "O".equals(ssnSearchType)'>
		<![CDATA[
		   AND EXISTS
		       ( SELECT 1
		           FROM TSYS319  -- 그룹별사용자별권한범위항목관리
	 	          WHERE ENTER_CD = A.ENTER_CD
	 	            AND SCOPE_VALUE = A.BUSINESS_PLACE_CD
		            AND SABUN    = #{ssnSabun}
		            AND GRP_CD   = #{ssnGrpCd}
		            AND AUTH_SCOPE_CD = 'C10' )
		]]>
		</if>
		<![CDATA[
		ORDER BY B.MAP_NM
		]]>
	</select>
	
	<select id="getSheetHeaderCnt1" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT COUNT(SEQ) AS CNT, 'TRASH'
	      FROM (
	            SELECT  NUM, '' AS PAY_CD, 'A' AS ELEMENT_TYPE, SEQ, ELEMENT_NM AS REPORT_NM, DATAFORMAT
	              FROM (
	                     SELECT DISTINCT 9 AS NUM, DENSE_RANK() OVER (ORDER BY BIZ_CD, ELEMENT_CD) AS SEQ, ELEMENT_NM, 'dtHidden' AS DATAFORMAT
	                       FROM TCPN295
	                      WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchPayActionCd != null and searchPayActionCd neq ''">
	<![CDATA[
							AND PAY_ACTION_CD = #{searchPayActionCd}
	]]>
	</if>
	<![CDATA[
	                     UNION ALL
	                     SELECT DISTINCT 10 AS NUM, DENSE_RANK() OVER (ORDER BY BIZ_CD, ELEMENT_CD) AS SEQ, ELEMENT_NM, 'dtHidden' AS DATAFORMAT
	                       FROM TCPN296
	                      WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchPayActionCd != null and searchPayActionCd neq ''">
	<![CDATA[
						    AND PAY_ACTION_CD = #{searchPayActionCd}
	]]>
	</if>
	<![CDATA[      
	                   ) ORDER BY NUM, SEQ
	    )
	]]>
	</select>
	
	<select id="getSheetHeaderCnt2" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT COUNT(A.PAY_CD) AS CNT, 'TRASH'
          FROM (SELECT ENTER_CD, SEQ, REPORT_NM, PAY_CD
                FROM TCPN993 A
               WHERE A.USE_YN       = 'Y'
                 AND A.ENTER_CD     = #{ssnEnterCd} ]]>
    <if test="searchElementType != null and searchElementType neq ''">
    <![CDATA[
    			 AND A.ELEMENT_TYPE = #{searchElementType}
    ]]>
    </if>
    <![CDATA[
             ) A, TCPN201 B
             WHERE A.ENTER_CD = B.ENTER_CD
                        AND A. PAY_CD = B.PAY_CD ]]>
    <if test="searchPayActionCd != null and searchPayActionCd neq ''">
    <![CDATA[
    					AND B.PAY_ACTION_CD = #{searchPayActionCd}
    ]]>
    </if>
	</select>
	
	<select id="getTcpn911List" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.TAX_ELE_CD			AS CODE
			 , TRIM(A.TAX_ELE_NM)	AS CODE_NM
		  FROM TCPN911 A
		 WHERE A.ENTER_CD		= #{ssnEnterCd}
		   AND A.TAX_ELE_TYPE	= '1'
		   AND A.SDATE			= (	SELECT MAX(SDATE)
		   							  FROM TCPN911
			   						 WHERE ENTER_CD	= A.ENTER_CD
			   						   AND SDATE	<= #{reportYmd})
		ORDER BY A.TAX_ELE_CD
	]]>
	</select>
	
	<select id="getTcpn707List" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT RET_INS_CORP	AS CODE
			 , TRIM(F_COM_GET_GRCODE_NAME(ENTER_CD,'H20401',RET_INS_CORP, #{ssnLocaleCd}))	AS CODE_NM
		  FROM TCPN707
		 WHERE ENTER_CD = #{ssnEnterCd}
		ORDER BY RET_INS_CORP
	]]>
	</select>
	
	<select id="getCpnPayCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT DISTINCT  TO_CHAR(PAY_CD) AS CODE
	 	       				  , PAY_NM AS CODE_NM
	 	       FROM TCPN051
	 	       WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test='searchRunType != null and searchRunType neq ""'>
				 AND RUN_TYPE IN
		<foreach collection="searchRunType" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</if>
	<if test='searchPayCdIn != null and searchPayCdIn neq ""'>
				 AND PAY_CD IN
		<foreach collection="searchPayCdIn" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</if>
	<if test='ssnSearchType eq "O"'>
	<![CDATA[
				 AND (BUSINESS_PLACE_CD IN (SELECT DISTINCT REGEXP_SUBSTR(A.PARAM, '[^,]+', 1, LEVEL)
		                                          FROM (SELECT F_COM_GET_AUTH_PARSE(TRIM(#{ssnEnterCd}),'C10',F_COM_GET_AUTH_VALUE(TRIM(#{ssnEnterCd}),TRIM(#{ssnSabun}),TRIM(#{ssnGrpCd}))) AS PARAM FROM dual) A
		                                        CONNECT BY LEVEL <= length(REGEXP_REPLACE(A.PARAM, '[^,]+',''))+1)
					  OR BUSINESS_PLACE_CD IS NULL)
	]]>
	</if>
	<![CDATA[
	 	       ORDER BY CODE
	]]>
	</select>
	
	<select id="getCpnRetPayCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT DISTINCT  PAY_CD AS CODE
       		 , PAY_NM AS CODE_NM
	       FROM TCPN051
	       WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchRetPayCd != null and searchRetPayCd neq ''">
	<![CDATA[
			 AND PAY_CD IN
		<foreach collection="searchRetPayCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
	]]>
	</if>
	<![CDATA[
	       ORDER BY PAY_CD ASC
	]]>
	</select>
	
	<select id="getCpnElementSetCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ELEMENT_SET_CD AS CODE
		     , ELEMENT_SET_NM AS CODE_NM
		FROM TCPN071
		WHERE ENTER_CD = #{ssnEnterCd}
		AND ( PROPERTY_TYPE IN ('1','3','5') OR PROPERTY_TYPE IS NULL )
		ORDER BY ELEMENT_SET_CD
	]]>
	</select>
	
	<select id="getTcpn503List" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT RTR_PAY_ACTION_CD	AS CODE
			 , TRIM(PAY_ACTION_NM)	AS CODE_NM
		  FROM TCPN503
		 WHERE ENTER_CD			= #{ssnEnterCd}
		   AND PAY_ACTION_CD	= #{payActionCd}
		ORDER BY PAY_ACTION_NM
	]]>
	</select>
	
	<select id="getCpnEarnerMaxSabunMap" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT NVL(MAX(TO_NUMBER(SUBSTR(TRIM(SABUN),2,LENGTH(TRIM(SABUN))-1))),0) AS MAX_SABUN
		  FROM TCPN903
		 WHERE ENTER_CD			= #{ssnEnterCd}
		   AND SUBSTR(SABUN,1,1) = 'E'
	]]>
	</select>
	
	<select id="getCpnGetSabunMap" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT MAX(SABUN) AS SABUN
		  FROM TCPN903
		 WHERE ENTER_CD	= #{ssnEnterCd} ]]>
	<if test="resNo != null and resNo neq ''">
	<![CDATA[
		   AND NVL(RES_NO,' ')	= CRYPTIT.ENCRYPT(TRIM(#{resNo}), #{ssnEnterCd})
	]]>
	</if>
	<if test="regino != null and regino neq ''">
	<![CDATA[
		   AND NVL(REGINO,' ')	= #{regino}
	]]>
	</if>
	</select>
	
	<select id="getCpnEtcAnnual" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT C.ELEMENT_CD AS CODE, C.ELEMENT_NM AS CODE_NM
		  FROM TCPN072 A, TCPN081 B, TCPN011 C
		 WHERE A.ENTER_CD = B.ENTER_CD
		   AND A.ELEMENT_SET_CD = B.GLOBAL_VALUE
		   AND A.ENTER_CD = C.ENTER_CD
		   AND A.ELEMENT_CD = C.ELEMENT_CD
		   AND A.ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchElementNm != null and searchElementNm neq ''">
	<![CDATA[
		   AND C.ELEMENT_NM LIKE '%' || #{searchElementNm} || '%'
	]]>
	</if>
	<![CDATA[
		   AND B.GLOBAL_VALUE_CD IN ('ELE_SET_MONTH_MON', 'ELE_SET_YEAR_MON')
		   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
		   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
		   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
		ORDER BY A.ELEMENT_SET_CD, C.PRIORITY
	]]>
	</select>
	
	<select id="getCpnSdate" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT SDATE AS CODE
		     , SUBSTR(SDATE, 1, 4) || '-' || SUBSTR(SDATE, 5, 2) || '-' || SUBSTR(SDATE, 7, 2) AS CODE_NM
		  FROM TCPN001
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND JIKGUB_CD LIKE '%'|| #{searchJikgubCd} ||'%'
		   AND ELEMENT_CD LIKE '%'|| #{searchElementCd} ||'%'
		 GROUP BY SDATE
		 ORDER BY SDATE DESC
      ]]>
	</select>
	
	<select id="getCpnPayUpStaffSdate" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT SDATE AS CODE
		     , SUBSTR(SDATE, 1, 4) || '-' || SUBSTR(SDATE, 5, 2) || '-' || SUBSTR(SDATE, 7, 2) AS CODE_NM
		  FROM TCPN191
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND JIKGUB_CD LIKE '%'|| #{searchJikgubCd} ||'%'
		   AND ELEMENT_CD LIKE '%'|| #{searchElementCd} ||'%'
		 GROUP BY SDATE
		 ORDER BY SDATE DESC
	]]>
	</select>
	
	<select id="getCpnPayUpStaffSalClass" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT SAL_CLASS AS CODE
			 , SAL_CLASS AS CODE_NM
				  FROM TCPN191
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND JIKGUB_CD LIKE '%'|| #{searchJikgubCd} ||'%'
		   AND ELEMENT_CD LIKE '%'|| #{searchElementCd} ||'%'
		 GROUP BY SAL_CLASS
		 ORDER BY TO_NUMBER(SAL_CLASS)
      ]]>
	</select>
	
	<select id="getTaxList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT TAX_RATE_CD AS CODE, TAX_RATE_NM AS CODE_NM
		  FROM TCPN501
		 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchWorkYy != null and searchWorkYy neq ''">
	<![CDATA[
		AND WORK_YY = #{searchWorkYy}
	]]>
	</if>		 
	</select>
	
	<select id="getYearEndItemList" parameterType="map" resultType="cMap">
	<![CDATA[
			SELECT ADJ_ELEMENT_CD AS CODE, ADJ_ELEMENT_NM AS CODE_NM
			     , MAX(LEN) OVER() AS MAX_LEN
			  FROM (
					SELECT ADJ_ELEMENT_CD, ADJ_ELEMENT_NM, LENGTH(ADJ_ELEMENT_CD||' ('||ADJ_ELEMENT_NM||')') AS LEN
					  FROM TCPN803
					 WHERE ENTER_CD       	 = #{ssnEnterCd} ]]>
	<if test="searchWorkYy != null and searchWorkYy neq ''">
	<![CDATA[
					   AND WORK_YY = #{searchWorkYy}
	]]>
	</if>	
	<![CDATA[			 
		     		   AND INCOME_DATA_YN    = 'Y'
					   AND ADJ_PROCESS_CD 	 = 'C010' ]]>
	<if test="adjElementNm != null and adjElementNm eq 'noTax'">
					   AND ADJ_ELEMENT_NM LIKE '%비과세%'
	</if>
	<![CDATA[
			)
	]]>
	</select>
	
	<select id="getYearEndFamList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT DISTINCT CRYPTIT.DECRYPT(A.FAMRES, A.ENTER_CD) AS CODE, A.FAM_NM AS CODE_NM , B.SEQ , A.SABUN
		  FROM TCPN823 A ,(SELECT * FROM TSYS005 WHERE ENTER_CD = #{ssnEnterCd} AND GRCODE_CD = 'C00309' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD) B
		 WHERE A.ENTER_CD       = #{ssnEnterCd}
		   AND A.WORK_YY  	  = #{searchYeaBaseYear} ]]>
	<if test="searchAdjustType != null and searchAdjustType neq ''">
	<![CDATA[
		   AND A.ADJUST_TYPE    LIKE '%'|| #{searchAdjustType} || '%'
	]]>
	</if>
	<if test="searchSabun != null and searchSabun neq ''">
	<![CDATA[
		   AND A.SABUN          LIKE '%'|| #{searchSabun} || '%'
	]]>
	</if>
	<![CDATA[
		   AND A.ENTER_CD = B.ENTER_CD
		   AND A.FAM_CD = B.CODE ]]>
	<if test="searchFamCdWhere != null and searchFamCdWhere neq ''">
	<![CDATA[
		   AND A.FAM_CD NOT IN ('6','7','8')
	]]>
	</if>
	<![CDATA[
		 ORDER BY A.SABUN, B.SEQ
	]]>
	</select>
	
	<select id="getRecentYearEndPayActionInfo" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT PAY_ACTION_CD AS CODE, PAY_ACTION_NM AS CODE_NM
	    FROM tcpn201
	   WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchYear != null and searchYear neq ''">
	<![CDATA[
		 AND PAY_YM  LIKE #{searchYear} || '%'
	]]>
	</if>
	<if test="searchPayCd != null and searchPayCd neq ''">
	<![CDATA[
		 AND PAY_CD = #{searchPayCd}
	]]>
	</if>
	<![CDATA[
	     AND PAY_ACTION_NM LIKE '%연말정산%'
	]]>
	</select>
	
	<select id="getSavingDeductList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE, CODE_NM
	    FROM TSYS005
	   WHERE ENTER_CD = #{ssnEnterCd}
	     AND GRCODE_CD = 'C00317'
	     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD]]>
	   <if test="searchGubun != null and searchGubun neq ''">
	   <![CDATA[
	   		AND NOTE1 IN #{searchGubun}
	   ]]>
	   </if>
	<![CDATA[
	  ORDER BY SEQ
	]]>
	</select>
	
	<select id="getPayingNumCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE, CODE_NM
		    FROM TSYS005
		   WHERE ENTER_CD = #{ssnEnterCd}
		     AND GRCODE_CD = 'C00321'
		     AND CODE <> '00'
			 AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
		  ORDER BY SEQ
	]]>
	</select>
	
	<select id="getYeaBizPlaceCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT X.BUSINESS_PLACE_CD AS CODE
			 , X.BUSINESS_PLACE_NM AS CODE_NM
		  FROM TCPN121 X
		 WHERE X.ENTER_CD = #{ssnEnterCd}
		   AND X.SDATE = (SELECT MAX(Y.SDATE) FROM TCPN121 Y
		                   WHERE Y.ENTER_CD = X.ENTER_CD
		                     AND Y.BUSINESS_PLACE_CD = X.BUSINESS_PLACE_CD
		                     AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN Y.SDATE AND NVL(Y.EDATE,'99991231'))
		ORDER BY 1
	]]>
	</select>
	
	<select id="getRetTaxReCreDayList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT PAY_ACTION_CD AS CODE,
		       PAY_ACTION_NM AS CODE_NM,
		       PAY_CD,
		       PAY_YM
		  FROM
		       (SELECT ROWNUM AS RNUM,
		              PAY_ACTION_CD,
		              PAY_ACTION_NM,
		              PAY_CD,
		              PAY_YM
		         FROM
		              (SELECT PAY_ACTION_CD,
		                     PAY_ACTION_NM,
		                     PAY_CD,
		                     PAY_YM
		                FROM
		                     (SELECT A.PAY_ACTION_CD,
		                            A.PAY_ACTION_NM,
		                            B.PAY_CD,
		                            A.PAY_YM,
		                            CASE B.PAY_CD
		                                WHEN 'S1'
		                                THEN 1
		                                WHEN 'S2'
		                                THEN 2
		                                ELSE 3
		                            END ORDERBY
		                       FROM TCPN201 A,
		                            TCPN051 B ,
		                            TCPN203 C
		                      WHERE A.ENTER_CD = #{ssnEnterCd}
		                            AND A.ENTER_CD = B.ENTER_CD
		                            AND A.PAY_CD = B.PAY_CD
		                            AND A.ENTER_CD = C.ENTER_CD
		                            AND A.PAY_ACTION_CD = C.PAY_ACTION_CD
		                            AND C.SABUN = #{searchSabun}
		                            AND B.RUN_TYPE = '00004'
		                            AND A.PAY_CD NOT IN ('S9', 'S3') /*퇴직 시뮬레이션, 퇴직추계 제외*/
		                   ORDER BY ORDERBY,
		                            A.PAY_YM DESC
		                     )
		              )
		       )
	]]>
	</select>
	
	<select id="getPayCalcMsgYn" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT F_COM_GET_MSG(#{ssnEnterCd}, #{searchBizCd}, #{searchPrgCd}, #{searchPayActionCd}) AS CODE, '' AS CODE_NM FROM dual
	]]>
	</select>
	
	<select id="getSalaryContractReport" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT FILE_NM AS CODE, '' AS CODE_NM
		  FROM TCPN410
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND PAY_TYPE = #{searchPayType}
		   AND #{searchEDate} BETWEEN SDATE AND EDATE
	]]>
	</select>
	
	<select id="getCpnGntCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT GNT_CD AS CODE
					 , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'ttim014', LANGUAGE_CD, #{ssnLocaleCd}),GNT_NM) AS CODE_NM
				  FROM TTIM014
				 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="applYn != null and applYn neq ''">
	<![CDATA[
				   AND NVL(APPL_YN,'N')  = TRIM(#{applYn})
	]]>
	</if>
	<if test="vacationYn != null and vacationYn neq ''">
	<![CDATA[
				   AND NVL(VACATION_YN,'N')  = TRIM(#{vacationYn})
	]]>
	</if>
	<if test="gntStdNm != null and gntStdNm neq ''">
	<![CDATA[
				   AND GNT_CD = F_COM_GET_STD_CD_VALUE(ENTER_CD,TRIM(#{gntStdNm}))
	]]>
	</if>
	<if test="requestNotUseType != null and requestNotUseType neq ''">
	<![CDATA[
				   AND REQUEST_USE_TYPE != TRIM(#{requestNotUseType})
	]]>
	</if>
	<if test="notGntGubunCd != null and notGntGubunCd neq ''">
	<![CDATA[
				   AND GNT_GUBUN_CD NOT IN ( '25', '27', '29' )
	]]>
	</if>
	<![CDATA[
				 ORDER BY SEQ
	]]>
	</select>
	
	<select id="getCpnGntCdList2" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.GNT_CD AS CODE ]]>
	<choose>
		<when test="note3GntNmFlag != null and note3GntNmFlag neq ''">
			 , A.NOTE3  AS CODE_NM
	         , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'ttim014', A.LANGUAGE_CD, #{ssnLocaleCd}),GNT_NM) AS GNT_NM
		</when>
		<otherwise>
			 , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'ttim014', A.LANGUAGE_CD, #{ssnLocaleCd}),GNT_NM) AS CODE_NM
		</otherwise>
	</choose>
	<![CDATA[
       		, A.GNT_GUBUN_CD, A.REQUEST_USE_TYPE, A.NOTE2, A.NOTE3, DECODE(NVL(B.GNT_CD,'N'),'N','N','Y') AS GNT_USE
       		, A.BASE_CNT
       		, A.MAX_CNT
       		, A.GNT_GUBUN_CD
       		, A.APPL_YN --근태신청 여부
       		, A.HOL_INCL_YN
       		, A.VACATION_YN
       		, NVL(B.GNT_CD_DEL1, '') AS GNT_CD_DEL1
			, NVL(A.DIV_CNT, 0) AS DIV_CNT
	    FROM TTIM014 A, TTIM007 B
	   WHERE A.ENTER_CD = B.ENTER_CD(+)
	     AND A.GNT_CD = B.GNT_CD(+)
	     AND A.ENTER_CD = #{ssnEnterCd} ]]>
	<if test="requestNotUseType != null and requestNotUseType neq ''">
		 AND REQUEST_USE_TYPE != TRIM(#{requestNotUseType})
	</if>
	<choose>
		<when test="gntGubunCd != null and gntGubunCd eq 'Not40'">
			AND NOT EXISTS ( SELECT 1
                               FROM TSYS005 X
                              WHERE X.ENTER_CD       = #{ssnEnterCd}
                                AND X.GRCODE_CD      = 'T10003'
                                AND NVL(X.NOTE2,'N') = 'Y'
                                AND X.CODE           = A.GNT_GUBUN_CD
								AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD)
		</when>
		<when test="gntGubunCd != null and gntGubunCd eq 'In40'">
			AND EXISTS ( SELECT 1
                           FROM TSYS005 X
                          WHERE X.ENTER_CD       = #{ssnEnterCd}
                            AND X.GRCODE_CD      = 'T10003'
                            AND NVL(X.NOTE2,'N') = 'Y'
                            AND X.CODE           = A.GNT_GUBUN_CD AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD )
		</when>
		<when test="gntGubunCd != null and gntGubunCd neq ''">
			AND GNT_GUBUN_CD = #{gntGubunCd}
		</when>
	</choose>
		<if test="note3 != null and note3 neq ''">
			AND EXISTS ( SELECT 1
                           FROM TSYS005 X
                          WHERE X.ENTER_CD       = #{ssnEnterCd}
                            AND X.GRCODE_CD      = 'T10003'
                            AND NVL(X.NOTE3,'Y') = #{note3}
                            AND X.CODE           = A.GNT_GUBUN_CD AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD )
		</if>
	<![CDATA[
				ORDER BY A.SEQ
	]]>
	</select>
	
	<select id="getCpnAnnualGntCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.GNT_CD AS CODE
             , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'ttim014', A.LANGUAGE_CD, #{ssnLocaleCd}),GNT_NM) AS CODE_NM
	    FROM TTIM014 A, TTIM007 B
	   WHERE A.ENTER_CD = B.ENTER_CD(+)
	     AND A.GNT_CD = B.GNT_CD(+)
	     AND A.ENTER_CD = #{ssnEnterCd}
	     AND B.GNT_CD = B.GNT_CD_DEL1
		ORDER BY A.SEQ
	]]>
	</select>
	
	<select id="getCpnGntCdTypeList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT REQUEST_USE_TYPE AS CODE
			 , GNT_CD AS CODE_NM
		  FROM TTIM014
		 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="applYn != null and applYn neq ''">
	<![CDATA[
		   AND NVL(APPL_YN,'N')  = TRIM(#{applYn})
	]]>
	</if>
	<if test="vacationYn != null and vacationYn neq ''">
	<![CDATA[
		   AND NVL(VACATION_YN,'N')  = TRIM(#{vacationYn})
	]]>
	</if>
	<if test="gntStdNm != null and gntStdNm neq ''">
	<![CDATA[
		   AND GNT_CD = F_COM_GET_STD_CD_VALUE(ENTER_CD,TRIM(#{gntStdNm}))
	]]>
	</if>
	<if test="requestNotUseType != null and requestNotUseType neq ''">
	<![CDATA[
		   AND REQUEST_USE_TYPE != TRIM(#{requestNotUseType})
	]]>
	</if>
	<![CDATA[
		 ORDER BY SEQ
	]]>
	</select>
	
	<select id="getWorkCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT WORK_CD AS CODE
					 , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'ttim015', LANGUAGE_CD, #{ssnLocaleCd}), WORK_NM) AS CODE_NM
				  FROM TTIM015
				 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchDayType != null and searchDayType neq ''">
	<![CDATA[
				   AND DAY_TYPE = TRIM(#{searchDayType})
	]]>
	</if>
	<![CDATA[
				 ORDER BY SEQ
	]]>
	</select>
	
	<select id="getWorkTimeCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT TIME_CD AS CODE ]]>
	<choose>
		<when test='searchShortNameFlag != null and searchShortNameFlag eq "Y"'>
			 , SHORT_TERM AS CODE_NM
		</when>
		<otherwise>
			 , TIME_NM AS CODE_NM
		</otherwise>
	</choose>
	<![CDATA[
		   FROM TTIM017 A
		  WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchUseYn != null and searchUseYn neq ''">
			AND A.USE_YN  = TRIM(#{searchUseYn})
	</if>
	<if test="searchWorkGrpCd != null and searchWorkGrpCd neq ''">
			AND EXISTS (  SELECT 1
		                   FROM TTIM115 X, TTIM116 Y
		                  WHERE X.ENTER_CD    = Y.ENTER_CD
		                    AND X.WORK_GRP_CD = Y.WORK_GRP_CD
		                    AND X.WORK_GRP_CD = TRIM(#{searchWorkGrpCd})
		                    AND Y.ENTER_CD    = A.ENTER_CD
		                    AND Y.TIME_CD     = A.TIME_CD
		             )
	</if>
	<if test="searchWorkOrgTypeCd != null and searchWorkOrgTypeCd neq ''">
			AND EXISTS (  SELECT 1
		                   FROM TTIM115 X, TTIM116 Y
		                  WHERE X.ENTER_CD    = Y.ENTER_CD
		                    AND X.WORK_GRP_CD = Y.WORK_GRP_CD
		                    AND X.WORK_ORG_TYPE_CD = TRIM(#{searchWorkOrgTypeCd})
		                    AND Y.ENTER_CD    = A.ENTER_CD
		                    AND Y.TIME_CD     = A.TIME_CD
		             )
	</if>
	<![CDATA[
				 ORDER BY SEQ
	]]>
	</select>
	
	<select id="getWorkOrgTimeCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.TIME_CD AS CODE ]]>
	<choose>
		<when test='searchShortNameFlag != null and searchShortNameFlag eq "Y"'>
			 , A.SHORT_TERM AS CODE_NM
		</when>
		<otherwise>
			, A.TIME_NM AS CODE_NM
		</otherwise>
	</choose>
	<![CDATA[
		  FROM TTIM017 A
		 WHERE A.ENTER_CD = #{ssnEnterCd}
                 AND EXISTS ( SELECT 1
                                FROM TTIM115 X, TTIM116 Y
                               WHERE X.ENTER_CD    = A.ENTER_CD
                                 AND X.WORK_GRP_CD = TRIM(#{searchWorkGrpCd})
                                 AND X.ENTER_CD    = Y.ENTER_CD
                                 AND X.WORK_GRP_CD = Y.WORK_GRP_CD
                                 AND Y.TIME_CD     = A.TIME_CD
                             )
		 ORDER BY SEQ
	]]>
	</select>

	<select id="getWorkSchCdList" parameterType="map" resultType="cMap">
		SELECT
		       WORK_SCH_CD AS CODE
			   ,WORK_SCH_SRT_NM AS CODE_NM
		   FROM TWTM031
		  WHERE ENTER_CD = #{ssnEnterCd}
		<if test="searchWorkClassCd != null and searchWorkClassCd neq ''">
			AND WORK_CLASS_CD = #{searchWorkClassCd}
		</if>
	</select>

	<select id="getProcessCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT    PROCESS_CD AS CODE
				, PROCESS_NM AS CODE_NM
		FROM TTIM115
		WHERE ENTER_CD = #{ssnEnterCd}
		AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231')
		GROUP BY PROCESS_CD, PROCESS_NM
		ORDER BY PROCESS_NM
	]]>
	</select>
	
	<select id="getScheIdPlanList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT   A.SCHE_ID AS CODE     --일정코드
				,A.SCHE_NM AS CODE_NM  --일정명
		FROM      TTIM791 A
		WHERE    A.ENTER_CD = #{ssnEnterCd}
		AND      TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231') ]]>
	<if test="scheNmType != null and scheNmType.equals('E')">
		AND      A.SCHE_ID not in ((SELECT SCHE_ID FROM TTIM795 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{searchApplSabun} group by SCHE_ID))
	</if>
	<![CDATA[
		ORDER BY A.SDATE DESC
	]]>
	</select>
	
	<select id="getScheIdRealList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT   A.SCHE_ID AS CODE     --일정코드
				,A.SCHE_NM AS CODE_NM  --일정명
		FROM      TTIM791 A
		WHERE    A.ENTER_CD = #{ssnEnterCd}
		AND      TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231') ]]>
	<if test="scheNmType != null and scheNmType.equals('E')">
		AND      A.SCHE_ID not in ((SELECT SCHE_ID FROM TTIM797 WHERE ENTER_CD = #{ssnEnterCd} AND SABUN = #{searchApplSabun} group by SCHE_ID))
	</if>
	<![CDATA[
		ORDER BY A.SDATE DESC
	]]>
	</select>
	
	<select id="getWorkCdListWithWorkSNm" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT WORK_CD AS CODE
		     , WORK_S_NM AS CODE_NM
		  FROM TTIM015
		 WHERE ENTER_CD = #{ssnEnterCd}
		 ORDER BY SEQ
	]]>
	</select>
	
	<select id="getStdwDdFromTTIM004" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT STDW_S_DD, STDW_E_DD
	   	  FROM TTIM004
	     WHERE ENTER_CD = #{ssnEnterCd}
	   	   AND PAY_TYPE LIKE #{payType}
		 ORDER BY PAY_TYPE
	]]>
	</select>
	
	<select id="getStandDtFromTTIM004" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT F_CPN_GET_STD_YMD(A.ENTER_CD, TO_CHAR(SYSDATE, 'YYYYMM') || '01', TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMM'), A.PAY_TYPE, 'M', 'WS', '') AS SYMD
             , F_CPN_GET_STD_YMD(A.ENTER_CD, TO_CHAR(SYSDATE, 'YYYYMM') || '01', TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMM'), A.PAY_TYPE, 'M', 'WE', '') AS EYMD
          FROM TTIM004 A
         WHERE ENTER_CD = #{ssnEnterCd}
           AND ROWNUM = 1
	]]>
	</select>
	
	<select id="getPayTimeWayTTIM010" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT  A.GNT_CD
			  , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'ttim014', A.LANGUAGE_CD, #{ssnLocaleCd}), GNT_NM) AS GNT_NM
			  FROM TTIM014 A, TTIM010 B
			 WHERE A.ENTER_CD = #{ssnEnterCd}
                AND A.ENTER_CD = B.ENTER_CD
                AND A.GNT_CD = B.GNT_CD
                AND B.SEARCH_SEQ = (SELECT MAX(AA.SEARCH_SEQ)
                						FROM TTIM010 AA
                					   WHERE AA.ENTER_CD = B.ENTER_CD
                					     AND AA.GNT_CD = B.GNT_CD)
	]]>
	</select>
	
	<select id="getGntListTTIM007" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT	A.GNT_CD AS CODE
			  , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'ttim014', B.LANGUAGE_CD, #{ssnLocaleCd}), GNT_NM) AS CODE_NM
			  FROM TTIM007 A, TTIM014 B
			 WHERE A.ENTER_CD = #{ssnEnterCd}
			   AND A.ENTER_CD = B.ENTER_CD
			   AND A.GNT_CD = B.GNT_CD
			   AND B.GNT_GUBUN_CD NOT IN ('15', '16') /*반차, 반반차 휴가는 제외*/
			   AND B.APPL_YN <> 'N' /*근태신청여부가 신청안함이 아닌거*/
			 ORDER BY B.SEQ
	]]>
	</select>
	
	<select id="getComTypeListTTIM010" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.COM_TYPE AS CODE, B.SEARCH_DESC || '(' || C.CODE_NM|| ')' AS CODE_NM, A.GNT_CD, A.SEARCH_SEQ, A.MM
		   FROM TTIM010 A, THRI201 B, TSYS005 C
		  WHERE A.ENTER_CD = B.ENTER_CD
		    AND A.SEARCH_SEQ = B.SEARCH_SEQ
		    AND A.ENTER_CD = #{ssnEnterCd}
		    AND A.ENTER_CD = C.ENTER_CD
		    AND C.GRCODE_CD = 'T10023'
		    AND A.COM_TYPE = C.CODE
			AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.S_YMD AND C.E_YMD
	]]>
	</select>
	
	<select id="getStockgntcntList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT STOCKGNTCNT AS CODE
			 , STOCKGNTCNT AS CODE_NM
		FROM TBEN931
		WHERE ENTER_CD = #{ssnEnterCd}
		ORDER BY STOCKGNTCNT
	]]>
	</select>
	
	<select id="getIssueCntList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ISSUE_NO AS CODE
			 , ISSUE_NM AS CODE_NM
		FROM TBEN451
		WHERE ENTER_CD = #{ssnEnterCd}
		ORDER  BY ISSUE_NO DESC
	]]>
	</select>
	
	<select id="getLoanCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT DISTINCT LOAN_CD AS CODE
		     , LOAN_NM AS CODE_NM
		FROM TBEN621
		WHERE ENTER_CD = #{ssnEnterCd}
		ORDER BY LOAN_CD ASC
	]]>
	</select>
	
	<select id="getSystemStdValueCodeNm" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getSystemStdValueCodeNm */
        	   STD_CD_DESC /* REPLACE(REPLACE(STD_CD_DESC, CHR(10), ' '), CHR(13), ' ') */   AS CODE
        	 , STD_CD_VALUE	AS CODE_NM
          FROM TSYS955
         WHERE ENTER_CD = #{ssnEnterCd} ]]>
    <if test="searchStdCd != null and !searchStdCd.equals('')">
    	   AND STD_CD = #{searchStdCd} /* 'BEN_TRAN_MOVE_MEMO' */
    </if>
    <![CDATA[
             AND BIZ_CD = '09'
	]]>
	</select>
	
	<select id="getTranExpMoveGubun" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getTranExpMoveGubun */
				MOVE_GUBUN	AS  CODE
	         ,  DISTANCE	AS  CODE_NM
		  FROM  TBEN831
		 WHERE  ENTER_CD	=	#{ssnEnterCd}
		   AND  SABUN		=	#{searchApplSabun}
		   AND  MOVE_GUBUN	=	#{moveGubun}
	]]>
	</select>
	
	<select id="getTranExpCost" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getTranExpCost */
               STD_CD_DESC    		AS CODE
             , STD_CD_VALUE			AS CODE_NM
          FROM TSYS955
         WHERE ENTER_CD 	= #{ssnEnterCd}
             AND STD_CD 	= 'BEN_TRAN_EXP_COST'
             AND BIZ_CD 	= 'BEN'
	]]>
	</select>
	
	<select id="getGiftPopupBenCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getGiftPopupBenCd */
				BEN_CD AS CODE
		     ,  BEN_NM AS CODE_NM
		  FROM TBEN851
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND USE_YN='Y' ]]>
	<if test="searchCloseYn != null and !searchCloseYn.equals('')">
	<![CDATA[
		   AND CLOSE_YN IN ('N',NULL)
	]]>
	</if>
	</select>
	
	<select id="getGiftPopupGiftCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT  /* commonNSCode-mapping-query.getGiftPopupGiftCd */
       		   GIFT_CD AS CODE
        	,  GIFT_NM AS CODE_NM
		 FROM TBEN852
		WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchBenCd and !searchBenCd.equals('')">
	<![CDATA[
		  AND BEN_CD = #{searchBenCd}
	]]>
	</if>
	</select>
	
	<select id="getMedExamAppCheckupCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getMedExamAppCheckupCd */
				CHECKUP_CD AS CODE
			  , CHECKUP_NM AS CODE_NM
		  FROM  TBEN881
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND USE_YN='Y' ]]>
	<if test="searchCheckupGubun != null and !searchCheckupGubun.equals('')">
		   AND CHECKUP_GUBUN	=	#{searchCheckupGubun}
	</if>
	<if test="searchDetailGubun != null and !searchDetailGubun.equals('')">
		   AND DETAIL_GUBUN		=	#{searchDetailGubun}
	</if>
	</select>
	
	<select id="getClubInformalCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getClubInformalCd */
				INFORMAL_CD AS CODE
	         ,  INFORMAL_NM AS CODE_NM
		  FROM 	TBEN501
		 WHERE	ENTER_CD = #{ssnEnterCd}
	]]>
	</select>
	
	<select id="getUniformNmLst" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getUniformNmLst */
	 		UNIFORM_CD AS CODE
          , UNIFORM_NM AS CODE_NM
	   FROM TBEN861
	  WHERE ENTER_CD		=	#{ssnEnterCd}
 	    AND UNIFORMGROUP_CD	=	#{searchUniformgroup}
  	    AND SEX_TYPE		=	#{searchSexType}
	]]>
	</select>
	
	<select id="getUniformSizeGubun" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getUniformSearchDate */
			APP_SEQ	AS  CODE
		  , APP_NM	AS  CODE_NM
	   FROM TBEN866
	  WHERE ENTER_CD	=	#{ssnEnterCd}
	]]>
	</select>
	
	<select id="getHriGwInterfaceData" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getHriGwInterfaceData */
			STD_CD AS CODE,
			STD_CD_DESC AS CODE_NM,
			F_COM_GET_CONT_ADDRESS(#{ssnEnterCd}, #{searchApplSabun}, 'M10') AS MAIL_ID,
			(
			SELECT A.PASSWORD FROM TSYS305 A
			 WHERE A.ENTER_CD = #{ssnEnterCd}
			   AND A.SABUN = #{searchApplSabun}
			 ) AS PASSWORD
	  FROM TSYS955
	 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchStdCd and !searchStdCd.equals('')">
	<![CDATA[
	   AND STD_CD = #{searchStdCd}
	]]>
	</if>
	<if test="searchBizCd and !searchBizCd.equals('')">
	<![CDATA[
	   AND BIZ_CD = #{searchBizCd}
	]]>
	</if>
	</select>
	
	<select id="getCommonMainMenuList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT MAIN_MENU_CD AS CODE
			 , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys309', LANGUAGE_CD, #{ssnLocaleCd}), MAIN_MENU_NM) AS CODE_NM
		FROM TSYS309
		WHERE MAIN_MENU_CD LIKE '%'||  #{searchMainMenuCd} ||'%'
		AND ENTER_CD = #{ssnEnterCd}
		AND USE_YN = '1'
		ORDER BY SEQ
	]]>
	</select>

	<select id="getCommonMainMenuList2" parameterType="map" resultType="cMap">
	<![CDATA[
		/* 조건검색관리에서만 사용. 결재 LEVEL 업무구분 추가하기 위함 */
		SELECT CODE, CODE_NM
          FROM (
				SELECT MAIN_MENU_CD AS CODE
					 , NVL(F_COM_GET_LANGUAGE_MAPPING (#{ssnEnterCd}, 'tsys309', LANGUAGE_CD, #{ssnLocaleCd}), MAIN_MENU_NM) AS CODE_NM
					 , SEQ
				  FROM TSYS309
				 WHERE MAIN_MENU_CD LIKE '%'||  #{searchMainMenuCd} ||'%'
				   AND ENTER_CD = #{ssnEnterCd}
				   AND USE_YN = '1'
				 UNION ALL
				SELECT 'APPL_LEVEL' AS CODE, '결재선 레벨' AS CODE_NM, 9999 AS SEQ FROM DUAL
			   )
		ORDER BY SEQ
    ]]>
	</select>
	
	<select id="getUdfCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT UDF_CD AS CODE
		     , UDF_NAME AS CODE_NM
		  FROM TSYS801
		 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="bizCd != null and !bizCd.equals('')">
	<![CDATA[
		   AND BIZ_CD = #{bizCd}
	]]>
	</if>
	<![CDATA[
		 ORDER BY UDF_CD
	]]>
	</select>
	
	<select id="getSystemStdData" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT STD_CD AS CODE, STD_CD_DESC AS CODE_NM
		     , STD_CD_VALUE AS VALUE
		  FROM TSYS955
		 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchStdCd != null and !searchStdCd.equals('')">
		   AND STD_CD = #{searchStdCd}
	</if>
	<if test="searchBizCd != null and !searchBizCd.equals('')">
		   AND BIZ_CD = #{searchBizCd}
	</if>
	</select>
	
	<select id="getSystemStdDataDetail" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT /* commonNSCode-mapping-query.getSystemStdDataDetail */
				STD_CD AS CODE, STD_CD_DESC AS CODE_NM
		  FROM TSYS955
		 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchStdCd != null and !searchStdCd.equals('')">
		   AND STD_CD = #{searchStdCd}
	</if>
	<if test="searchBizCd != null and !searchBizCd.equals('')">
		   AND BIZ_CD = #{searchBizCd}
	</if>
	</select>
	
	<select id="getSystemStdValue" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT STD_CD AS CODE, STD_CD_VALUE AS CODE_NM
		  FROM TSYS955
		 WHERE ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchStdCd != null and !searchStdCd.equals('')">
		   AND STD_CD = #{searchStdCd}
	</if>
	<if test="searchBizCd != null and !searchBizCd.equals('')">
		   AND BIZ_CD = #{searchBizCd}
	</if>
	</select>
	
	<select id="getComCodeNoteList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE
			 , F_COM_GET_GRCODE_NAME(ENTER_CD, GRCODE_CD, CODE, #{ssnLocaleCd}) AS CODE_NM
			 , NOTE1
			 , NOTE2
			 , NOTE3
		FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		AND GRCODE_CD  = #{searchGrcodeCd} AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
	<if test="searchNote1 != null and !searchNote1.equals('')">
		AND NOTE1       = #{searchNote1}
	</if>
	<if test="searchNote2 != null and !searchNote2.equals('')">
		AND NOTE2       = #{searchNote2}
	</if>
	<if test="searchNote3 != null and !searchNote3.equals('')">
		AND NOTE3       = #{searchNote3}
	</if>
	<if test="searchNote4 != null and !searchNote4.equals('')">
		AND NOTE4       = #{searchNote4}
	</if>
	<if test="searchUseYn != null and !searchUseYn.equals('')">
		AND USE_YN      = #{searchUseYn}
	</if>
	<![CDATA[
		ORDER  BY SEQ ASC
	]]>
	</select>
	
	<select id="getComCodeListUseYn" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE
			 , CODE_NM
			 , NOTE1
			 , NOTE2
			 , NOTE3
		FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		AND GRCODE_CD  = #{searchGrcodeCd} AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
	<if test="searchNote1 != null and !searchNote1.equals('')">
		AND NOTE1       = #{searchNote1}
	</if>
	<if test="searchNote2 != null and !searchNote2.equals('')">
		AND NOTE2       = #{searchNote2}
	</if>
	<![CDATA[
		AND USE_YN       = 'Y'
		ORDER  BY SEQ ASC
	]]>
	</select>
	
	<select id="getWorkflowProCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT PRO_CD AS CODE
		     , PRO_NM AS CODE_NM
		  FROM TSYS451
		 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
		 ORDER BY SORT_SEQ
	]]>
	</select>
	
	<select id="getLocationCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.MAP_CD AS CODE
             , A.MAP_NM AS CODE_NM
		     , B.ORDER_SEQ
		  FROM TORG109 A
		  LEFT OUTER JOIN TSYS015 B
		    ON B.ENTER_CD = A.ENTER_CD
		   AND B.LOCATION_CD = A.MAP_CD
		 WHERE 1 = 1 ]]>
	<choose>
		<when test="enterCd != null and !enterCd.equals('')">
		   AND A.ENTER_CD = #{enterCd}
		</when>
		<otherwise>
		   AND A.ENTER_CD = #{ssnEnterCd}
		</otherwise>
	</choose>
	<![CDATA[
		   AND A.MAP_TYPE_CD  = '600'
	       AND A.SDATE = (SELECT MAX (SDATE) FROM TORG109
	                   WHERE ENTER_CD = A.ENTER_CD
	                     AND MAP_TYPE_CD = A.MAP_TYPE_CD
	                     AND MAP_CD = A.MAP_CD
	                     AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231'))
				 ORDER BY B.ORDER_SEQ
	]]>
	</select>
	
	<select id="getGrpCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT   GRP_CD AS CODE
               , GRP_NM AS CODE_NM
           FROM   TSYS307   A
           WHERE   A.ENTER_CD = TRIM(#{ssnEnterCd})
           AND SEARCH_TYPE='O'
           ORDER BY SEQ
	]]>
	</select>
	
	<select id="getLocationCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT LOCATION_CD	AS CODE
			     , LOCATION_NM AS CODE_NM
			  FROM TSYS015
			 WHERE ENTER_CD = #{ssnEnterCd} AND NATIONAL_CD = 'KR'
			 ORDER BY LOCATION_CD
	]]>
	</select>
	
	<select id="getEnterCdAuthList" resultType="cMap">
	<![CDATA[
		 SELECT  CODE
                ,CODE_NM
         FROM (
               SELECT  ENTER_CD AS CODE
                        , ENTER_NM AS CODE_NM
                      ,SEQ
                 FROM  TORG900
                ORDER  BY SEQ, ENTER_NM
              )
	]]>
	</select>
	
	<select id="getRecTypeList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT B.ORD_DETAIL_CD  AS CODE
			 , B.ORD_DETAIL_NM  AS CODE_NM
		  FROM TSYS011 A
		      ,TSYS013 B
		 WHERE A.ENTER_CD = B.ENTER_CD
		   AND A.ORD_TYPE_CD = B.ORD_TYPE_CD
		   AND A.ENTER_CD = #{ssnEnterCd}
		   AND A.ORD_TYPE = #{ordType}
		 ORDER BY A.SEQ
	]]>
	</select>
	
	<select id="getOrdTypeCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.ORD_TYPE_CD AS CODE		-- 발령형태(TSYS011)
		     , A.ORD_TYPE_NM AS CODE_NM
		  FROM TSYS011 A
		 WHERE A.ENTER_CD = #{ssnEnterCd} ]]>
	<if test="searchOrdTypeCd != null and !searchOrdTypeCd.equals('')">
	<![CDATA[
		   AND A.ORD_TYPE_CD	= #{searchOrdTypeCd}
	]]>
	</if>
	<if test="inOrdType != null and !inOrdType.equals('')">
	<![CDATA[
		   AND A.ORD_TYPE IN
		<foreach collection="inOrdType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
	]]>
	</if>
	<![CDATA[
		 ORDER BY A.SEQ
	]]>
	</select>


	<!-- 발령구분코드 -->
	<select parameterType="map" resultType="cMap" id="getOrdTypeList">

			<![CDATA[
				SELECT A.ORD_TYPE_CD AS CODE		-- 발령형태(TSYS011)
				     , A.ORD_TYPE_NM AS CODE_NM
				  FROM TSYS011 A
				 WHERE A.ENTER_CD = #{ssnEnterCd}
				 ]]>
				<if test='searchOrdTypeCd != null and !searchOrdTypeCd.equals("")'>
				   AND A.ORD_TYPE_CD	= #{searchOrdTypeCd}
				</if>
				<if test='inOrdType != null and !inOrdType.equals("")'>
				   AND A.ORD_TYPE IN
					<foreach collection="inOrdType" item="item" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</if>
				 ORDER BY A.SEQ

	</select>


	<select id="getOrdDetailCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.ORD_DETAIL_CD AS CODE
			 , A.ORD_DETAIL_NM AS CODE_NM
		  FROM TSYS013 A
		     , TSYS011 B 
		 WHERE A.ENTER_CD = B.ENTER_CD
	  	   AND A.ORD_TYPE_CD = B.ORD_TYPE_CD
		   AND A.ENTER_CD = #{ssnEnterCd} ]]>
	<if test="notInOrdType != null and !notInOrdType.equals('')">
		   AND B.ORD_TYPE NOT IN
		<foreach collection="notInOrdType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
	</if>
	<if test="inOrdType != null and !inOrdType.equals('')">
		   AND B.ORD_TYPE IN
		<foreach collection="inOrdType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
	</if>
	<if test="ordTypeCd != null and  !ordTypeCd.equals('')">
		   AND A.ORD_TYPE_CD = #{ordTypeCd}
	</if>
	<![CDATA[
		ORDER BY A.ORD_TYPE_CD, A.SEQ
	]]>
	</select>
	
	<select id="getOrdTypeCdManagerList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ORD_TYPE_CD AS CODE
					, ORD_TYPE_NM AS CODE_NM
				FROM (
						SELECT
							A.ORD_TYPE_CD
							, A.ORD_TYPE_NM
							, A.SEQ
							, A.USE_YN
						FROM TSYS011 A
						WHERE A.ENTER_CD = NVL(#{groupEnterCd}, #{ssnEnterCd}) ]]>
		<if test="ordTypeCd != null and !ordTypeCd.equals('')">
						  AND A.ORD_TYPE_CD = TRIM(#{ordTypeCd})
		</if>
				) WHERE 1 = 1
		<if test="useYn != null and !useYn.equals('')">
					AND USE_YN = TRIM(#{useYn})
		</if>
		<if test="codeNm != null and !codeNm.equals('')">
					AND ORD_TYPE_NM LIKE '%' || #{codeNm} || '%'
		</if>
	<![CDATA[
				ORDER BY SEQ
	]]>
	</select>
	
	<select id="getOrdDetailCdManagerList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ORD_DETAIL_CD AS CODE
			 , ORD_DETAIL_NM AS CODE_NM
	     FROM (
				SELECT A.ORD_DETAIL_CD, A.ORD_DETAIL_NM, A.SEQ
				FROM TSYS013 A,  THRM205 B, TSYS011 C
				WHERE A.ENTER_CD = #{ssnEnterCd}
				AND A.ENTER_CD = B.ENTER_CD
			    AND A.ORD_TYPE_CD = B.ORD_TYPE_CD
			    AND A.ENTER_CD = C.ENTER_CD
			    AND A.ORD_TYPE_CD = C.ORD_TYPE_CD
			    AND B.SABUN = #{ssnSabun}
			    AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231') ]]>
		<if test="useYn != null and !useYn.equals('')">
				AND C.USE_YN = #{useYn}
		</if>
		<choose>
			<when test="ordType != null and ordType eq 'not10'">
				AND C.ORD_TYPE != '10'
			</when>
			<when test="ordType != null and !ordType.equals('')">
				AND C.ORD_TYPE = #{ordType}
			</when>
		</choose>
		<if test="ordTypeCd != null and !ordTypeCd.equals('')">
				AND C.ORD_TYPE_CD = #{ordTypeCd}
		</if>
		<![CDATA[
				UNION
				SELECT A.ORD_DETAIL_CD, A.ORD_DETAIL_NM, A.SEQ
				FROM TSYS013 A, THRM207 B, TSYS011 C
				WHERE A.ENTER_CD = #{ssnEnterCd}
				AND A.ENTER_CD = B.ENTER_CD
				AND A.ENTER_CD = C.ENTER_CD
			    AND A.ORD_TYPE_CD = C.ORD_TYPE_CD
				AND B.SABUN = #{ssnSabun}
			    AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231') ]]>
		<if test="useYn != null and !useYn.equals('')">
				AND C.USE_YN = #{useYn}
		</if>
		<choose>
			<when test="ordType != null and ordType.equals('not10')">
				AND C.ORD_TYPE != '10'
			</when>
			<when test="ordType != null and !ordType.equals('')">
				AND C.ORD_TYPE = #{ordType}
			</when>
		</choose>
		<if test="ordTypeCd != null and !ordTypeCd.equals('')">
				AND C.ORD_TYPE_CD = #{ordTypeCd}
		</if>
	<![CDATA[
				)
		ORDER BY SEQ
	]]>
	</select>
	
	<select id="getApplStatusCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE
		     , F_COM_GET_GRCODE_NAME(ENTER_CD, GRCODE_CD, CODE, #{ssnLocaleCd}) AS CODE_NM
		  FROM TSYS005
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND GRCODE_CD = 'R10010'
		   AND USE_YN = 'Y' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
		<if test="applStatusNotCd != null and !applStatusNotCd.equals('')">
		   AND CODE NOT IN
		<foreach collection="applStatusNotCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		</if>
	<![CDATA[
		 ORDER BY SEQ, CODE_NM
	]]>
	</select>
	
	<select id="getAprStatusList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE
			 , F_COM_GET_GRCODE_NAME(ENTER_CD, GRCODE_CD, CODE, #{ssnLocaleCd}) AS CODE_NM
		FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		AND GRCODE_CD = 'R10010'
		AND CODE != '11'
		AND USE_YN = 'Y' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
		ORDER  BY GRCODE_CD ASC
	]]>
	</select>
	
	<select id="getSchAprGubunList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE
			 , F_COM_GET_GRCODE_NAME(ENTER_CD, GRCODE_CD, CODE, #{ssnLocaleCd}) AS CODE_NM
		FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		AND GRCODE_CD = 'B60060' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
		ORDER  BY GRCODE_CD ASC
	]]>
	</select>
	
	<select id="getlocationGbnList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE
			 , F_COM_GET_GRCODE_NAME(ENTER_CD, GRCODE_CD, CODE, #{ssnLocaleCd}) AS CODE_NM
			 , MEMO
			 , NOTE1
			 , NOTE2
			 , NOTE3
		  FROM TSYS005
		 WHERE 1=1 AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
	<choose>
		<when test="enterCd != null and !enterCd.equals('')">
		   AND ENTER_CD = #{enterCd}
		</when>
		<otherwise>
		   AND ENTER_CD = #{ssnEnterCd}
		</otherwise>
	</choose>
	<if test="enterCd != null and !enterCd.equals('')">
		   AND ENTER_CD = #{enterCd}
	</if>
	<![CDATA[
		AND    GRCODE_CD = 'H90200'
		AND    USE_YN = 'Y'
		AND    NOTE1  = '1'
		ORDER BY USE_YN DESC, SEQ, CODE, CODE_NM
	]]>
	</select>
	
	<select id="getTSYS700bbsCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.BBS_CD AS CODE,
		       A.BBS_NM AS CODE_NM
		  FROM TSYS700 A
		 WHERE A.ENTER_CD = #{ssnEnterCd}
		   AND A.TYPE = 'B'
	]]>
	</select>
	
	<select id="getEleSeqList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ELE_SEQ AS CODE, ELE_SUMMARY AS CODE_NM
		FROM TSYS623 B
		WHERE ENTER_CD = TRIM(#{ssnEnterCd})
			AND INFO_SEQ = TRIM(#{searchInfoSeq})
			AND AGREE_YN = 'Y'
		ORDER BY B.ORDER_SEQ
	]]>
	</select>
	
	<select id="getMeritIncreaseCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT MERIT_INCREASE_CD AS CODE, MERIT_INCREASE_NM AS CODE_NM
      	  FROM TCPN551
         WHERE ENTER_CD = TRIM(#{ssnEnterCd}) ]]>
    <if test="gubun != null and !gubun.equals('')">
    	   AND GUBUN IN
		<foreach collection="gubun" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
    </if>
    <![CDATA[
      	 ORDER BY S_YMD DESC
	]]>
	</select>
	
	<select id="getIncentiveCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT INCENTIVE_CD AS CODE, INCENTIVE_NM AS CODE_NM
          FROM TCPN571
    	 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
    	 ORDER BY S_YMD DESC
	]]>
	</select>
	
	<select id="getSearchTypeList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT SEARCH_TYPE
		  FROM TSYS307
		 WHERE ENTER_CD = #{ssnEnterCd}
		   AND GRP_CD = #{grpCd}
	]]>
	</select>
	
	<select id="getOrgLowRankList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ORG_CD AS CODE,
              ORG_NM AS CODE_NM
         FROM(SELECT  A.ENTER_CD,
                      A.ORG_CD,
                      F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM
                FROM TORG105 A
               WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                 AND A.SDATE = (SELECT MAX(SDATE)
                                  FROM TORG103
                                 WHERE ENTER_CD = A.ENTER_CD
                               ) ]]>
    <choose>
    	<when test="grpCd != null and !grpCd.equals('') and (grpCd.equals('89') or grpCd.equals('90')">
    	<![CDATA[
				 AND A.ORG_CD IN (SELECT SCOPE_VALUE
                                         FROM TSYS319
                                        WHERE ENTER_CD = A.ENTER_CD
                                          AND GRP_CD = #{grpCd}
                                          AND AUTH_SCOPE_CD = 'W10'
                                          AND SABUN = #{ssnSabun})		 
    	]]>
    	</when>
    	<when test="grpCd != null and !grpCd.equals('') and searchType.equals('A')">
    	<![CDATA[
    			 START WITH A.PRIOR_ORG_CD = '0'
	                CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
	                AND PRIOR A.SDATE = A.SDATE
	                AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
    	]]>
    	</when>
    	<otherwise>
    	<![CDATA[
    			 AND A.ORG_CD IN (SELECT #{orgCd} AS ORG_CD
                                     FROM DUAL
                                    UNION ALL
                                   SELECT ORG_CD
                                     FROM (SELECT ORG_CD
                                    FROM TORG105
                                   WHERE ENTER_CD = #{ssnEnterCd}
                                     AND SDATE = (SELECT MAX(SDATE)
                                                    FROM TORG103
                                                   WHERE ENTER_CD = #{ssnEnterCd}
                                                     AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND EDATE
                                                  )
                                   START WITH PRIOR_ORG_CD = #{orgCd}
				          CONNECT BY PRIOR ENTER_CD = ENTER_CD
				          AND PRIOR SDATE = SDATE
				          AND PRIOR ORG_CD = PRIOR_ORG_CD
                                           )
                                   )
    	]]>
    	</otherwise>
    </choose>
   	<![CDATA[
             )
		ORDER BY F_COM_GET_ORG_SEQ(ENTER_CD,ORG_CD,TO_CHAR(SYSDATE,'YYYYMMDD'))
	]]>
	</select>
	
	<select id="getBizTripGbSelectData" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT    A.CODE
			 , A.CODE_NM
			   FROM  TSYS005 A
	  WHERE A.ENTER_CD = #{ssnEnterCd}
		AND A.GRCODE_CD = 'G10004'
              AND A.NOTE1 = #{bizGbType}
		AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
	]]>
	</select>
	
	<select id="getBusinessTripSelectData" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT    A.CODE
					 , A.CODE_NM
  			   FROM  TSYS005 A
			  WHERE A.ENTER_CD = #{ssnEnterCd}
				AND A.GRCODE_CD = 'G10003'
                AND A.NOTE1 = #{bizGb} AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
		]]>
	</select>
	
	<select id="getTransitChargeStdMgrSelectData" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT    A.CODE
			 , A.CODE_NM
			   FROM  TSYS005 A
	  WHERE A.ENTER_CD = #{ssnEnterCd}
		AND A.GRCODE_CD = 'B00813'
              AND A.NOTE1 = #{dayFrom} AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
	]]>
	</select>
	
	<select id="getAuthEnterCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ENTER_CD AS CODE
				, NVL(DECODE(NVL(#{ssnLocaleCd},'ko_KR'), 'ko_KR', ENTER_NM, ENTER_ENG_NM), ENTER_NM) AS CODE_NM
				FROM TORG900
				WHERE ENTER_CD IN (
					SELECT #{ssnEnterCd} FROM DUAL
					UNION
					SELECT A.AUTH_ENTER_CD
					FROM TSYS318 A, TSYS307 B
					WHERE A.ENTER_CD = B.ENTER_CD
						AND A.GRP_CD = B.GRP_CD
						AND B.ENTER_ALL_YN = 'Y'
						AND A.ENTER_CD = #{ssnEnterCd} AND A.GRP_CD = #{searchGrpCd}
				)
				ORDER BY DECODE(ENTER_CD, #{ssnEnterCd}, -1, SEQ) ASC
	]]>
	</select>
	
	<select id="getCompetencyCdListTORG051" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT COMPETENCY_CD AS CODE
             , COMPETENCY_NM AS CODE_NM
          FROM TORG051
         WHERE ENTER_CD = #{ssnEnterCd}
         ORDER BY COMPETENCY_CD
	]]>
	</select>
	
	<select id="getCompetencyCdListTORG051_MainAppType" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT COMPETENCY_CD AS CODE
             , COMPETENCY_NM AS CODE_NM
           FROM TORG051
          WHERE ENTER_CD = #{ssnEnterCd} ]]>
     <if test="searchMainAppType != null and !searchMainAppType.equals('')">
     <![CDATA[
     		AND MAIN_APP_TYPE = #{searchMainAppType}
     ]]>
     </if>
     <![CDATA[
             ORDER BY COMPETENCY_CD
	]]>
	</select>
	
	<select id="getAppPeopleMgrAppGroupCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT APP_GROUP_CD AS CODE
             , APP_GROUP_NM AS CODE_NM
        FROM   TPAP133
        WHERE  ENTER_CD     = TRIM(#{ssnEnterCd})
        AND    APPRAISAL_CD = TRIM(#{searchAppraisalCd})
        AND    APP_SEQ_CD   = TRIM(#{searchAppSeqCd})
        ORDER BY CODE_NM ASC
	]]>
	</select>
	
	<select id="getAppClassCd" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.APP_CLASS_CD AS CODE
             , A.APP_CLASS_NM AS CODE_NM
          FROM TPAP011 A
         WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
           AND A.APP_TYPE_CD = TRIM(#{searchAppTypeCd})
         ORDER BY A.SEQ
	]]>
	</select>
	
	<select id="getAppClassPoint" parameterType="map" resultType="cMap">
	<![CDATA[
		 SELECT A.APP_CLASS_CD AS CODE
              , A.PERFORMANCE_POINT AS CODE_NM
           FROM TPAP011 A
          WHERE A.ENTER_CD    = TRIM(#{ssnEnterCd})
            AND A.APP_TYPE_CD = TRIM(#{searchAppTypeCd})
          ORDER BY A.SEQ
	]]>
	</select>
	
	<select id="getAppClassCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT B.APP_CLASS_CD AS CODE
             , B.APP_CLASS_NM AS CODE_NM
	     FROM TPAP101 A, TPAP011 B
	    WHERE A.ENTER_CD     = TRIM(#{ssnEnterCd})
	      AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
	      AND A.ENTER_CD     = B.ENTER_CD
	      AND A.APP_TYPE_CD  = B.APP_TYPE_CD ]]>
	<if test='searchSelf1st != null and searchSelf1st.equals("Y")'>
		  AND B.APP_CLASS_CD NOT IN ( '1', '9' )
	</if>
	<![CDATA[
       ORDER BY B.SEQ
	]]>
	</select>
	
	<select id="getPsnalBasicViewColumn" resultType="cMap">
	<![CDATA[
		SELECT A.COLUMN_ID AS CODE
			 , A.COLUMN_NAME AS CODE_NM
		  FROM USER_TAB_COLUMNS A
		 WHERE A.TABLE_NAME	= TRIM( '인사_인사기본_기준일' )
		 ORDER BY A.COLUMN_ID
	]]>
	</select>
	
	<select id="getTSYS319orgList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT 	LEVEL AS "_level",
	    		PRIOR_ORG_CD AS SCOPE_VALUE_TOP,
	    		ORG_CD                                                           AS CODE,
	    		F_COM_GET_ORG_NM(ENTER_CD, ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS CODE_NM
	    FROM TORG105 A
	    WHERE A.ENTER_CD = #{ssnEnterCd}
	          AND (A.ENTER_CD, A.ORG_CD) in (SELECT ENTER_CD, SCOPE_VALUE FROM TSYS319 WHERE ENTER_CD = #{ssnEnterCd}
	          								  AND AUTH_SCOPE_CD = 'W10' AND SABUN = TRIM( #{searchSabun} )  AND GRP_CD = TRIM( #{ssnGrpCd} ))
	    AND A.SDATE = (
	        SELECT MAX(SDATE)
	        FROM TORG103
	        WHERE ENTER_CD = A.ENTER_CD
	    )
	    START WITH A.PRIOR_ORG_CD = '0'
	    CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
		AND PRIOR A.SDATE = A.SDATE
		AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
		ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL
	]]>
	</select>
	
	<select id="getAppraisalTypeCdMap" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT APPRAISAL_CD
			 , APP_TYPE_CD
		  FROM TPAP101
		 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
		   AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
	]]>
	</select>
	
	<select id="getCheifAppStepCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT APP_STEP_CD AS CODE, B.CODE_NM AS CODE_NM
		FROM TPAP105 A,TSYS005 B
		WHERE A.ENTER_CD = B.ENTER_CD
			AND A.APP_STEP_CD = B.CODE
                     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.APP_AS_YMD AND A.APP_AE_YMD
			AND B.GRCODE_CD = 'P00005'
			AND B.NOTE1 = 'Y'
			AND A.ENTER_CD = TRIM(#{ssnEnterCd})
			AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
	        AND B.CODE IN ( '1', '5' ) AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
		ORDER BY B.SEQ ASC
	]]>
	</select>
	
	<select id="getCheifAppOrgCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT APP_ORG_CD AS CODE, APP_ORG_NM AS CODE_NM
		  FROM TPAP160
		 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
		   AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
		   AND APP_STEP_CD = TRIM(#{searchAppStepCd}) ]]>
	<if test="searchSabun != null and !searchSabun.equals('')">
	<![CDATA[
		   AND SABUN  = TRIM(#{searchSabun})
	]]>
	</if>
	</select>
	
	<select id="getPapAppGroupTypeList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.APP_TYPE_CD AS CODE
		     , B.CODE_NM     AS CODE_NM
		  FROM TPAP222 A, TSYS005 B
		 WHERE A.ENTER_CD     = TRIM(#{ssnEnterCd})
		   AND A.APPRAISAL_CD = TRIM(#{searchAppraisalCd})
		   AND A.ENTER_CD     = B.ENTER_CD
		   AND B.GRCODE_CD    = 'P10003'
		   AND A.APP_TYPE_CD  = B.CODE AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
		GROUP BY A.APP_TYPE_CD, B.CODE_NM, B.SEQ
		 ORDER BY B.SEQ	
	]]>
	</select>
	
	<select id="getRewardKindMgrComboList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.PRIZE_CD AS CODE
			 , B.CODE_NM
		  FROM THRM483 A, TSYS005 B
		 WHERE A.ENTER_CD = #{ssnEnterCd}
           AND A.ENTER_CD = B.ENTER_CD
           AND B.GRCODE_CD = 'H20250'
           AND A.PRIZE_CD = B.CODE AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
		ORDER BY B.SEQ
	]]>
	</select>
	
	<select id="getBenManagerList" parameterType="map" resultType="cMap">
	<![CDATA[
		 SELECT   CODE AS CODE
                , CODE_NM AS CODE_NM
       	   FROM TSYS005
       	  WHERE ENTER_CD  = #{ssnEnterCd}
         	AND GRCODE_CD = 'B10230'
         	AND USE_YN    = 'Y' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD ]]>
    <if test='ssnSearchType.equals("O")'>
   	<![CDATA[
    		AND CODE IN (SELECT BENEFIT_BIZ_CD
                          FROM TBEN993
                          WHERE ENTER_CD = #{ssnEnterCd}
                              AND SABUN = #{ssnSabun})
	]]>
    </if>
    <if test="note1 != null and !note1.equals('')">
    <![CDATA[
    		AND TRIM(NOTE1) = TRIM(#{note1})
    ]]>
    </if>
    <![CDATA[
	                ORDER BY SEQ
	]]>
	</select>
	
	<select id="getWelfarePayDataMgrBenefitBizCdList" parameterType="map" resultType="cMap">
	<choose>
		<when test='searchAdminYn != null and searchAdminYn.equals("Y")'>
		<![CDATA[
			SELECT	A.CODE
			, 		F_COM_GET_GRCODE_NAME(A.ENTER_CD, A.GRCODE_CD, A.CODE, #{ssnLocaleCd}) AS CODE_NM
			, 		A.NOTE1
			, 		A.NOTE2
			, 		A.NOTE3
			FROM 	TSYS005 A
			WHERE 	A.ENTER_CD  = #{ssnEnterCd}
			AND 	A.GRCODE_CD = 'B10230'
			AND 	A.NOTE1     = 'Y' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
		]]>
		</when>
		<otherwise>
		<![CDATA[
			SELECT	A.CODE
			, 		F_COM_GET_GRCODE_NAME(A.ENTER_CD, A.GRCODE_CD, A.CODE, #{ssnLocaleCd}) AS CODE_NM
			, 		A.NOTE1
			, 		A.NOTE2
			, 		A.NOTE3
			FROM	TSYS005 A
			, 		TBEN993 B
			WHERE 	A.ENTER_CD  = #{ssnEnterCd}
			AND 	A.GRCODE_CD = 'B10230'
			AND 	A.NOTE1     = 'Y'
			AND 	A.ENTER_CD  = B.ENTER_CD
			AND 	A.CODE      = B.BENEFIT_BIZ_CD
			AND 	B.SABUN     = #{ssnSabun} AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.S_YMD AND A.E_YMD
		]]>
		</otherwise>
	</choose>
	</select>
	
	<select id="getCurrDateTime" resultType="cMap">
	<![CDATA[
		SELECT TO_CHAR(SYSDATE, 'yyyymmdd') TODAY
		     , TO_CHAR(SYSDATE, 'hh24')     CURR_HOUR
		     , TO_CHAR(SYSDATE, 'mi')       CURR_MIN
		     , TO_CHAR(SYSDATE, 'ss')       CURR_SEC
		  FROM DUAL
	]]>
	</select>
	
	<select id="getOccLocationCd" parameterType="map" resultType="cMap">
	<if test='ssnSearchType.equals("O")'>
	<![CDATA[
		SELECT B.LOCATION_CD AS CODE
              , B.LOCATION_NM AS CODE_NM
         FROM   TSYS319 A
              , TSYS015 B
         WHERE  A.ENTER_CD      = B.ENTER_CD
         AND    A.SCOPE_VALUE   = B.LOCATION_CD
         AND    A.AUTH_SCOPE_CD = 'H90'
         AND    A.SABUN         = #{ssnSabun}
         AND    A.GRP_CD        = #{ssnGrpCd}
         AND    A.ENTER_CD      = #{ssnEnterCd}
         ORDER BY CODE
	]]>
	</if>
	<if test="ssnSearchType.equals('A')"></if>
	<![CDATA[
		SELECT A.LOCATION_CD AS CODE
             , A.LOCATION_NM AS CODE_NM
        FROM   TSYS015 A
        WHERE  A.ENTER_CD = #{ssnEnterCd}
        ORDER BY CODE
	]]>
	</select>
	
	<select id="getCpnGntCdList3" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.GNT_CD AS CODE, A.GNT_NM AS CODE_NM,
         	   A.GNT_GUBUN_CD, A.REQUEST_USE_TYPE, A.NOTE2, DECODE(NVL(B.GNT_CD,'N'),'N','N','Y') AS GNT_USE,
         	   A.BASE_CNT, A.MAX_CNT, A.GNT_GUBUN_CD
         	 , CASE WHEN A.GNT_CD IN ('15', '16', '17', '19', '21', '23', '25') THEN 'Y' ELSE 'N' END AS HALF_YN
	    FROM TTIM014 A, TTIM007 B
	   WHERE A.ENTER_CD = B.ENTER_CD(+)
	     AND A.GNT_CD = B.GNT_CD(+)
	     AND A.ENTER_CD = #{ssnEnterCd}
		 AND REQUEST_USE_TYPE <>'N'
		ORDER BY A.SEQ
	]]>
	</select>
	
	<select id="getTsys319Code" parameterType="map" resultType="cMap">
	<if test='ssnSearchType.equals("O")'>
	<![CDATA[
		SELECT  B.CODE
              , B.CODE_NM
         FROM   TSYS319 A
              , TSYS005 B
        WHERE A.ENTER_CD      = B.ENTER_CD
          AND A.SCOPE_VALUE   = B.CODE
          AND B.GRCODE_CD =   #{searchGrcodeCd} -- 그룹코드
          AND A.AUTH_SCOPE_CD = #{searchAuthScopeCd} -- 권한항목코드
          AND A.ENTER_CD      = #{ssnEnterCd} -- 회사코드
          AND A.SABUN         = #{ssnSabun} -- 사번
          AND A.GRP_CD        = #{ssnGrpCd} -- 권한그룹
          AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.S_YMD AND B.E_YMD
        ORDER BY B.SEQ
	]]>
	</if>
	<if test="ssnSearchType eq 'A'">
	<![CDATA[
		SELECT A.CODE
             , A.CODE_NM
        FROM   TSYS005 A
        WHERE  A.ENTER_CD      = #{ssnEnterCd} -- 회사코드
         AND   A.GRCODE_CD     = #{searchGrcodeCd} -- 그룹코드
        AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
        ORDER BY A.SEQ
	]]>
	</if>
	</select>
	
	<select id="getWorkYm" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT TO_CHAR(LAST_DAY(ADD_MONTHS(YM||'01', 0)),'YYYYMM') AS CODE,
               TO_CHAR(LAST_DAY(ADD_MONTHS(YM||'01', 0)),'YYYYMM') AS CODE_NM
        FROM   TTIM999
        WHERE  ENTER_CD = TRIM(#{ssnEnterCd})
        GROUP BY YM
        ORDER BY YM DESC
	]]>
	</select>
	
	<select id="getGntListTTIM007ANNUALHOLING" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.GNT_CD AS CODE
			 , B.GNT_NM AS CODE_NM
             , ( SELECT MAX(AA.COM_TYPE) KEEP(DENSE_RANK FIRST ORDER BY AA.SEARCH_SEQ DESC)
          		   FROM TTIM010 AA
          		      , (SELECT * FROM TSYS005 WHERE ENTER_CD = #{ssnEnterCd} AND GRCODE_CD = 'T10023' AND NVL(NOTE1, 'N') = 'Y' AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD) BB
          		  WHERE AA.ENTER_CD = A.ENTER_CD
          			AND AA.GNT_CD   = A.GNT_CD
          			AND AA.COM_TYPE = BB.CODE) AS COM_TYPE
		  FROM TTIM007 A, TTIM014 B
				 WHERE A.ENTER_CD	= #{ssnEnterCd}
				   AND A.ENTER_CD	= B.ENTER_CD
				   AND A.GNT_CD		= B.GNT_CD
				   AND A.GNT_CD		= '14'
				   AND B.GNT_GUBUN_CD <> '15' /*반차휴가는 제외*/
		 ORDER BY A.GNT_CD
	]]>
	</select>
	
	<select id="getAnnlVctnScnYear" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT YY AS CODE
             , YY AS CODE_NM
        FROM   TTIM511
        WHERE  ENTER_CD = TRIM(#{ssnEnterCd})
        GROUP BY YY
        ORDER BY YY DESC
	]]>
	</select>
	
	<delete id="deleteThri103" parameterType="map">
	<![CDATA[
		DELETE FROM THRI103
		WHERE  (ENTER_CD, APPL_SEQ) IN ( (NUll, NULL) ]]>
	<foreach item="rm" collection="deleteRows">
		, 
		<if test="ssnEnterCd != null and !ssnEnterCd.equals('') and rm.applSeq != null and !rm.applSeq.equals('')">
			(#{ssnEnterCd}, TRIM(#{rm.applSeq}))
		</if>
	</foreach>
	<![CDATA[ ) ]]>
	</delete>
	
	<delete id="deleteThri107" parameterType="map">
	<![CDATA[
		DELETE FROM THRI107
		WHERE  (ENTER_CD, APPL_SEQ) IN ( (NUll, NULL) ]]>
	<foreach item="rm" collection="deleteRows">
		, 
		<if test="ssnEnterCd != null and !ssnEnterCd.equals('') and rm.applSeq != null and !rm.applSeq.equals('')">
			(#{ssnEnterCd}, TRIM(#{rm.applSeq}))
		</if>
	</foreach>
	<![CDATA[ ) ]]>
	</delete>
	
	<select id="getTimWorkTeamCodeList" parameterType="map" resultType="cMap">
	<![CDATA[
					SELECT B.MAP_CD AS CODE
					     , B.MAP_NM AS CODE_NM
					     , A.WORK_GRP_CD
					     , C.WORK_ORG_TYPE_CD
					 FROM TTIM118 A, TORG109 B, TTIM115 C
					WHERE A.ENTER_CD    = TRIM(#{ssnEnterCd})
					  AND A.ENTER_CD    = B.ENTER_CD
					  AND B.MAP_TYPE_CD = '500'
					  AND A.WORK_ORG_CD = B.MAP_CD
					  AND A.ENTER_CD    = C.ENTER_CD
					  AND A.WORK_GRP_CD = C.WORK_GRP_CD ]]>
	<choose>
		<when test="searchDate != null and !searchDate.equals('')">
					  AND REPLACE(TRIM(#{searchDate}),'-','') BETWEEN A.SDATE AND NVL(A.EDATE, '29991231')
		</when>
		<otherwise>
					  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '29991231')
		</otherwise>
	</choose>
	<if test="searchWorkOrgTypeCd != null and !searchWorkOrgTypeCd.equals('')">
					  AND C.WORK_ORG_TYPE_CD = TRIM(#{searchWorkOrgTypeCd})
	</if>
	<if test="searchWorkGrpCd != null and !searchWorkGrpCd.equals('')">
					  AND A.WORK_GRP_CD = TRIM(#{searchWorkGrpCd})
	</if>
					ORDER BY A.SEQ, B.MAP_CD
	</select>
	
	<select id="getTimWeekTermCodeList" parameterType="map" resultType="cMap">
	<![CDATA[
	    SELECT S_YMD || '_' || E_YMD AS CODE
	         , TO_CHAR(TO_DATE(S_YMD,'YYYYMMDD'),'YYYY-MM-DD') || ' ~ ' || TO_CHAR(TO_DATE(E_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS CODE_NM
	         , S_YMD
	         , E_YMD
	         , WORK_GRP_CD
	         , F_COM_GET_GRCODE_NAME( TRIM(#{ssnEnterCd}), 'T11020',WORK_GRP_CD) AS WORK_GRP_NM
	         , WORK_ORG_CD
                         , ( SELECT MAX(X.MAP_NM) KEEP(DENSE_RANK FIRST ORDER BY X.SDATE DESC)
                               FROM TORG109 X
                              WHERE X.ENTER_CD =  TRIM(#{ssnEnterCd})
                                AND X.MAP_TYPE_CD = '500'
                                AND X.MAP_CD   =  WORK_ORG_CD
                                AND S_YMD BETWEEN X.SDATE AND NVL( X.EDATE , '29991231') ) AS WORK_ORG_NM ]]>
              	<choose>
              		<when test="searchSelYmd != null and !searchSelYmd.equals('')">
              				  , CASE WHEN TRIM(#{searchSelYmd}) BETWEEN S_YMD AND E_YMD THEN 'Y' ELSE 'N' END AS SEL_YN
              		</when>
              		<otherwise>
              				  , 'N' AS SEL_YN
              		</otherwise>
              	</choose>
              	<choose>
              		<when test="searchCnt != null and !searchCnt.equals('')">
              			FROM TABLE(EMP_WORK_TERM( TRIM(#{ssnEnterCd}), TRIM(#{searchSabun}), TRIM(#{searchYmd}), TRIM(#{searchCnt})))
              		</when>
              		<otherwise>
              			FROM TABLE(EMP_WORK_TERM( TRIM(#{ssnEnterCd}), TRIM(#{searchSabun}), TRIM(#{searchYmd})))
              		</otherwise>
              	</choose>
		 WHERE 1 = 1
	<if test="searchWorkOrgCd != null and !searchWorkOrgCd.equals('')">
		  AND WORK_ORG_CD = TRIM(#{searchWorkOrgCd})
	</if>
	<if test="searchWorkGrpCd != null and  !searchWorkGrpCd.equals('')">
		  AND WORK_GRP_CD = TRIM(#{searchWorkGrpCd})
	</if>
	<if test="searchYear != null and !searchYear.equals('')">
		  AND ( SUBSTR(S_YMD,1,4) = TRIM(#{searchYear}) OR SUBSTR(E_YMD,1,4) = TRIM(#{searchYear}) ) 
	</if>
	<if test="searchYmd != null and !searchYmd.equals('')">
		  AND ( S_YMD > TRIM(#{searchYmd}) OR TRIM(#{searchYmd}) BETWEEN S_YMD AND E_YMD )
	</if>
	<if test="searchGubun != null and !searchGubun.equals('')">
	<![CDATA[
		-- 기준관리 TIM_MON_SCHEDULE_APP : 현재 ~ 신청기한(개월수)
			      AND ( S_YMD < TO_CHAR(ADD_MONTHS(SYSDATE, TO_NUMBER(F_COM_GET_STD_CD_VALUE(TRIM(#{ssnEnterCd}), 'TIM_MON_SCHEDULE_APP'))), 'YYYYMMDD')
			         OR TO_CHAR(ADD_MONTHS(SYSDATE, TO_NUMBER(F_COM_GET_STD_CD_VALUE(TRIM(#{ssnEnterCd}), 'TIM_MON_SCHEDULE_APP'))), 'YYYYMMDD') BETWEEN S_YMD AND E_YMD )
			]]>
	</if>
	</select>
	
	<select id="getTimTimeCdCodeList" parameterType="map" resultType="cMap">
	<![CDATA[
         SELECT C.TIME_CD AS CODE
              , C.SHORT_TERM AS CODE_NM
              , NVL(F_TIM_GET_STD_WORK_TIME(C.ENTER_CD, C.TIME_CD, '101' ), 0) AS TIME_HOUR  -- 정규근무 근무시간
              , C.WORK_YN
              , C.RGB_COLOR
              , C.HOL_TIME_HOUR
           FROM TTIM118 A, TTIM116 B, TTIM017 C
          WHERE A.ENTER_CD    = #{ssnEnterCd}
            AND A.WORK_ORG_CD = TRIM(#{searchWorkOrgCd}) ]]>
     <choose>
     	<when test="searchYmd != null and !searchYmd.equals('')">
     		AND REPLACE(TRIM(#{searchYmd}), '-', '') BETWEEN A.SDATE AND NVL(A.EDATE, '29991231')
     	</when>
     	<otherwise>
     		AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '29991231')
     	</otherwise>
     </choose>
            AND A.ENTER_CD    = B.ENTER_CD
            AND A.WORK_GRP_CD = B.WORK_GRP_CD
            AND B.ENTER_CD    = C.ENTER_CD
            AND B.TIME_CD     = C.TIME_CD
      <if test="searchWorkYn != null and !searchWorkYn.equals('')">
      	 	AND C.WORK_YN     = TRIM( #{searchWorkYn} )
      </if>
      <if test="searchUseYn != null and !searchUseYn.equals('')">
      		AND C.USE_YN     = TRIM( #{searchUseYn} )
      </if>
                     ORDER BY C.SEQ
	</select>
	
	<select id="getTarJikgubCdList" resultType="cMap">
	<![CDATA[
		SELECT	CODE
		, 		CODE_NM
		FROM (
			  SELECT JIKGUB_CD AS CODE
                   , F_COM_GET_GRCODE_NAME(ENTER_CD, 'H20010', JIKGUB_CD) AS CODE_NM
                FROM THRM427
               GROUP BY ENTER_CD, JIKGUB_CD
               ORDER BY  	F_COM_GET_GRCODE_SEQ(ENTER_CD, 'H20010', JIKGUB_CD)
              )
	]]>
	</select>
	
	<select id="getAppGradeRateStdClassItemListForCode" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT APP_CLASS_CD AS CODE
					     , APP_CLASS_NM AS CODE_NM
					  FROM TPAP217
					 WHERE ENTER_CD     = #{ssnEnterCd}
					   AND APPRAISAL_CD = #{searchAppraisalCd}
					 ORDER BY SEQ
	]]>
	</select>
	
	<select id="getLongWorkPrizeCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE, CODE_NM
		FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		AND GRCODE_CD = 'H20250'
		AND NVL(NOTE2, 'N') = 'Y'
		  AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN S_YMD AND E_YMD
	]]>
	</select>
	
	<select id="getSeqNmList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT SEQ AS CODE,
				       SEQ_NM AS CODE_NM
				  FROM TSTF901
				 WHERE ENTER_CD = #{ssnEnterCd}
				   AND SEQ IS NOT NULL
				 GROUP BY SEQ,
				       SEQ_NM
				ORDER BY SEQ DESC
	]]>
	</select>
	
	<select id="getBenElementCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.ELEMENT_CD  AS CODE
					     , B.ELEMENT_NM AS CODE_NM
					  FROM TBEN005 A
					     , (SELECT *
					         FROM TCPN011 B
					        WHERE B.ENTER_CD = #{ssnEnterCd}
					              AND B.SDATE = (SELECT MAX (SDATE) AS SDATE
					                               FROM TCPN011
					                              WHERE ENTER_CD   = B.ENTER_CD
					                                AND ELEMENT_CD = B.ELEMENT_CD
					                                AND TO_CHAR (SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL (EDATE, '99991231')
					                            )
					       ) B
					 WHERE A.ENTER_CD       = #{ssnEnterCd}
					   AND A.BENEFIT_BIZ_CD = #{searchBenefitBizCd}
					   AND A.ENTER_CD       = B.ENTER_CD(+)
					   AND A.ELEMENT_CD     = B.ELEMENT_CD(+)
					 GROUP BY A.ELEMENT_CD, B.ELEMENT_NM
	]]>
	</select>
	
	<select id="getOrgCdListGrp" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT CODE_NM, CODE
				  FROM (
				         SELECT X.ORG_NM AS CODE_NM, X.ORG_CD AS CODE
				           FROM (
				                  SELECT F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM, A.ORG_CD
				                    FROM TORG105 A
				                       , TORG101 B
				                   WHERE A.ENTER_CD = B.ENTER_CD
				                     AND A.ORG_CD = B.ORG_CD
				                     AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
				                     AND A.ENTER_CD = #{ssnEnterCd}
				                     AND A.SDATE = (SELECT MAX(SDATE)
				                                      FROM TORG103
				                                     WHERE ENTER_CD = A.ENTER_CD ]]>
			<if test="searchYmd != null and searchYmd.equals('')">
													   AND CASE WHEN LENGTH(REPLACE(#{searchYmd}, '-', '')) = 6 THEN TO_CHAR(LAST_DAY(TO_DATE(REPLACE(#{searchYmd},'-',''),'YYYYMM')), 'YYYYMMDD')
				                                                ELSE REPLACE(#{searchYmd}, '-', '')
				                                           END BETWEEN SDATE AND NVL(EDATE,'29991231')
			</if>
				                                   )
				                   START WITH A.PRIOR_ORG_CD = '0'
				                 CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
				                     AND PRIOR A.SDATE = A.SDATE
				                     AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
				                   ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ
				                ) X
				              , (SELECT ENTER_CD, ORG_CD
				                   FROM TORG107
				                  WHERE ENTER_CD = #{ssnEnterCd}
				                    AND MAP_TYPE_CD = '100'
		<choose>
			<when test="searchBizPlaceCd != null and searchBizPlaceCd.equals('')">
									AND MAP_CD LIKE #{searchBizPlaceCd} || '%'
			</when>
			<otherwise>
									AND MAP_CD = 'ALL' 
			</otherwise>
		</choose>
		<if test="searchYmd != null and !searchYmd.equals('')">
									AND CASE WHEN LENGTH(REPLACE(#{searchYmd},'-','')) = 6 THEN TO_CHAR(LAST_DAY(TO_DATE(REPLACE(#{searchYmd},'-',''),'YYYYMM')), 'YYYYMMDD')
				                             ELSE REPLACE(#{searchYmd},'-','')
				                         END BETWEEN SDATE AND NVL(EDATE,'29991231')
		</if>
		<if test="ssnSearchType != null and ssnSearchType.equals('O') ">
									AND ORG_CD IN (SELECT ORG_CD
				                                     FROM TABLE(THRM151_AUTH(#{ssnEnterCd}, #{ssnSearchType}, #{ssnSabun}, #{ssnGrpCd}, TO_CHAR(SYSDATE, 'YYYYMMDD')))
				                                    GROUP BY ORG_CD)
		</if>
		<![CDATA[
				                ) Y
				          WHERE X.ORG_CD = Y.ORG_CD
				       )]]>
	</select>
	
	<select id="getCpnPayElementCdList" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT ELEMENT_CD AS CODE
			 , ELEMENT_NM AS CODE_NM
		  FROM (
				SELECT SUB1.*
				  FROM TCPN011 SUB1,
						(
						SELECT MAX(SDATE) AS SDATE
							 , ELEMENT_CD
						  FROM TCPN011
						 WHERE ENTER_CD = #{ssnEnterCd}
						   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
						GROUP BY ELEMENT_CD
						) SUB2
				 WHERE SUB1.ENTER_CD	= #{ssnEnterCd}
				   AND SUB1.ELEMENT_CD	= SUB2.ELEMENT_CD
				   AND SUB1.SDATE		= SUB2.SDATE
				)
		 WHERE ENTER_CD		= #{ssnEnterCd} ]]>
	<if test="elementType != null and !elementType.equals('')">
				AND ELEMENT_TYPE = #{elementType}
	</if>
	<![CDATA[
		 ORDER BY ELEMENT_CD
	]]>
	</select>

	<select id="getWtmLeaveCdList" parameterType="map" resultType="cMap">
		<![CDATA[
		SELECT A.GNT_CD AS CODE
		     , NVL(F_COM_GET_LANGUAGE_MAPPING(A.ENTER_CD, 'TWTM041', A.LANGUAGE_CD, #{ssnLocaleCd}), A.GNT_NM) AS CODE_NM
		     , A.COLOR, A.GNT_SHORT_NM
		  FROM TWTM041 A
		 WHERE A.ENTER_CD = #{ssnEnterCd} ]]>
		<if test="searchGntCd != null and searchGntCd neq ''">
		   AND A.GNT_CD = #{searchGntCd}
		</if>
		<if test="searchBasicCdYn != null and searchBasicCdYn = 'Y'">
		    -- 대표코드 조회
			AND A.BASIC_GNT_CD_YN = 'Y'
		</if>
		<if test="isExistsCreStdYn != null and isExistsCreStdYn = 'Y'">
			AND EXISTS
		        (
		            SELECT 1
		              FROM TWTM011
		             WHERE ENTER_CD = A.ENTER_CD
		               AND GNT_CD = A.GNT_CD
				)
		</if>
		<![CDATA[
		 ORDER BY SEQ, CODE
		]]>
	</select>

	<select id="getOrgCdListBySearchType" parameterType="map" resultType="cMap">
		<choose>
			<when test='ssnSearchType != null and ssnSearchType.equals("A")'>
				SELECT '전체' AS CODE_NM, '0' AS CODE FROM DUAL
				UNION ALL
				SELECT ORG_NM AS CODE_NM, ORG_CD AS CODE
				  FROM (
				           SELECT F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR(SYSDATE,'YYYYMMDD')) AS ORG_NM, A.ORG_CD
				             FROM TORG105 A, TORG101 B
				            WHERE A.ENTER_CD = B.ENTER_CD
				              AND A.ORG_CD   = B.ORG_CD
				              AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
				              AND A.ENTER_CD = #{ssnEnterCd}
				              AND A.SDATE =
				                  (
				                      SELECT MAX(SDATE)
				                        FROM TORG103
				                       WHERE ENTER_CD = A.ENTER_CD
				                         AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'29991231')
				                  )
				            START WITH A.PRIOR_ORG_CD = '0'
				          CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
				              AND    PRIOR A.SDATE    = A.SDATE
				              AND    PRIOR A.ORG_CD   = A.PRIOR_ORG_CD
				            ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ
				       )
			</when>
			<otherwise>
				SELECT F_COM_GET_ORG_NM(ENTER_CD,SCOPE_VALUE,TO_CHAR(SYSDATE,'YYYYMMDD')) AS CODE_NM, SCOPE_VALUE AS CODE
				  FROM TSYS319
				 WHERE ENTER_CD      = #{ssnEnterCd}
				   AND AUTH_SCOPE_CD = 'W10'
				   AND GRP_CD        = #{ssnGrpCd}
				   AND SABUN         = #{ssnSabun}
			</otherwise>
		</choose>
	</select>

	<!-- WTM 근무유형 콤보박스 조회 -->
	<select parameterType="map" resultType="cMap" id="getWtmWorkClassCodeList">
		SELECT NVL2(B.WORK_GROUP_CD, A.WORK_CLASS_CD||'_'||B.WORK_GROUP_CD, A.WORK_CLASS_CD) AS CODE
			 , NVL2(B.WORK_GROUP_NM, A.WORK_CLASS_NM||'_'||B.WORK_GROUP_NM, A.WORK_CLASS_NM) AS CODE_NM
			 , A.WORK_CLASS_CD
			 , B.WORK_GROUP_CD
		  FROM TWTM021 A
		  LEFT JOIN TWTM032 B
			ON A.ENTER_CD = B.ENTER_CD
		   AND A.WORK_CLASS_CD = B.WORK_CLASS_CD
		 WHERE A.ENTER_CD = #{ssnEnterCd}
		 ORDER BY A.USE_YN DESC, A.SDATE, B.SDATE, B.WORK_GROUP_CD
	</select>

	<!-- 단축근로 임신주차 코드 리스트 -->
	<select parameterType="map" resultType="cMap" id="getGestatioList">
	   SELECT  CODE
			 , CODE_NM
		 FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		  AND GRCODE_CD = 'WT9002'
		ORDER BY SEQ
	</select>

	<!-- 가족돌봄(가족명 조회)-->
	<select parameterType="map" resultType="cMap" id="getFamilyList">
	   SELECT   FAM_CD AS CODE
			  , FAM_NM AS CODE_NM
		 FROM THRM111
		WHERE 1=1
		  AND ENTER_CD 	= #{ssnEnterCd}
		  AND SABUN 	= #{sabun}
		ORDER BY FAM_CD
	</select>

	<!-- 육아기(자녀명 조회)-->
	<select parameterType="map" resultType="cMap" id="getChildrenList">
	   SELECT   FAM_CD AS CODE
			  , FAM_NM AS CODE_NM
		 FROM THRM111
		WHERE 1=1
		  AND ENTER_CD 	= #{ssnEnterCd}
		  AND SABUN 	= #{sabun}
		  AND FAM_CD IN ('005')
		<if test="childrenNm != null and childrenNm neq ''">
		  AND FAM_NM = TRIM( #{childrenNm} )
		</if>
		ORDER BY FAM_CD
	</select>

	<!-- 사유 리스트 -->
	<select parameterType="map" resultType="cMap" id="getReasonList">
	   SELECT  CODE
			 , CODE_NM
		 FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		  AND GRCODE_CD = 'WT9004'
		ORDER BY SEQ
	</select>

	<select id="getWtmWorkClassCdComboList" parameterType="map" resultType="cMap">
		SELECT X.WORK_CLASS_CD AS CODE
			 , X.WORK_CLASS_NM AS CODE_NM
		  FROM TWTM021 X
		 WHERE X.ENTER_CD = #{ssnEnterCd}
		<if test="searchSdate != null and searchSdate neq ''">
		   AND X.SDATE <![CDATA[ <= ]]> #{searchSdate}
		</if>
		<if test="searchEdate != null and searchEdate neq ''">
		   AND X.EDATE <![CDATA[ >= ]]> #{searchEdate}
		</if>
		<if test="searchWorkTypeCd != null and searchWorkTypeCd neq ''">
		   AND X.WORK_TYPE_CD = #{searchWorkTypeCd}
		</if>
		<if test="searchUseYn != null and searchUseYn neq ''">
		   AND X.USE_YN = #{searchUseYn}
		</if>
		 ORDER BY X.WORK_CLASS_CD
	</select>

	<select id="getWtmWorkCdComboList" parameterType="map" resultType="cMap">
		SELECT X.WORK_CD AS CODE
			 , X.WORK_NM AS CODE_NM
		  FROM TWTM051 X
		 WHERE X.ENTER_CD = #{ssnEnterCd}
		   AND NVL(X.USE_YN, 'N') = 'Y'
		 ORDER BY X.SEQ
	</select>

	<select id="getWtmWorkGroupCdComboList" parameterType="map" resultType="cMap">
		SELECT X.WORK_GROUP_CD AS CODE
			 , X.WORK_GROUP_NM AS CODE_NM
		  FROM TWTM032 X
		 WHERE X.ENTER_CD = #{ssnEnterCd}
		   AND X.WORK_CLASS_CD = #{searchWorkClassCd}
	</select>
</mapper>
