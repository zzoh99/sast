<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="common.code">
	<select id="getCommonCodeList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT A.CODE, NVL(B.KEY_TEXT, A.CODE_NM) AS CODE_NM, A.MEMO, A.NOTE1, A.NOTE2, A.NOTE3, A.NOTE4, A.S_YMD, A.E_YMD
			        FROM TSYS005 A, TLAN_VIEW B
			       WHERE A.ENTER_CD = B.ENTER_CD(+)
			         AND A.LANGUAGE_CD = B.KEY_ID(+)
			         AND B.KEY_LEVEL(+) = 'tsys005' ]]>
		<choose>
			<when test="enterCd != null and enterCd neq ''">
			<![CDATA[AND A.ENTER_CD = #{enterCd}]]>
			</when>
			<otherwise>
			<![CDATA[AND A.ENTER_CD = #{ssnEnterCd}]]>
			</otherwise>
		</choose>
		<![CDATA[      
			         AND A.GRCODE_CD = trim(#{grpCd})
			         AND B.LANG_CD(+)||'_' ||B.COUNTRY_CD(+)  = #{ssnLocaleCd} ]]>
		<if test="useYn != null and useYn neq ''">
		<![CDATA[
					 AND A.USE_YN = TRIM(#{useYn})
		]]>
		</if>
		<if test="code != null and code neq ''">
		<![CDATA[
					 AND A.CODE = TRIM(#{code})
		]]>
		</if>
		<if test="inCode != null and inCode neq ''">
					 AND A.CODE IN
		<foreach collection="inCode" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		</if>
		<if test="notCode != null and notCode neq ''">
		<![CDATA[
					 AND A.CODE != TRIM(#{notCode})
		]]>
		</if>
		<if test="notInCode != null and notInCode neq ''">
					 AND A.CODE NOT IN
		<foreach collection="notInCode" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
		</if>
		<if test="note1 != null and note1 neq ''">
		<![CDATA[
					 AND A.NOTE1 = TRIM(#{note1})
		]]>
		</if>
		<if test="note2 != null and note2 neq ''">
		<![CDATA[
					 AND A.NOTE2 = TRIM(#{note2})
		]]>
		</if>
		<if test="note3 != null and note3 neq ''">
		<![CDATA[
					 AND A.NOTE3 = TRIM(#{note3})
		]]>
		</if>
		AND (NVL(TO_DATE(#{baseSYmd}, 'YYYYMMDD'), SYSDATE) BETWEEN TO_DATE(A.S_YMD, 'YYYYMMDD') AND TO_DATE(A.E_YMD, 'YYYYMMDD')
		<if test='baseEYmd != null and !baseEYmd.equals("")'>
 			OR TO_DATE(#{baseEYmd}, 'YYYYMMDD') BETWEEN TO_DATE(A.S_YMD, 'YYYYMMDD') AND TO_DATE(A.E_YMD, 'YYYYMMDD')
			OR (TO_DATE(A.S_YMD, 'YYYYMMDD') BETWEEN TO_DATE(#{baseSYmd}, 'YYYYMMDD') AND TO_DATE(#{baseEYmd}, 'YYYYMMDD')
			OR TO_DATE(A.E_YMD, 'YYYYMMDD') BETWEEN TO_DATE(#{baseSYmd}, 'YYYYMMDD') AND TO_DATE(#{baseEYmd}, 'YYYYMMDD'))
		</if>)
		<![CDATA[
 			ORDER BY A.GRCODE_CD, A.USE_YN DESC, A.SEQ, CODE_NM, A.CODE
		]]>
	</select>
	
	<select id="getCommonCodeLists" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT GRCODE_CD, CODE, CODE_NM, MEMO, NOTE1, NOTE2, NOTE3, NOTE4, S_YMD, E_YMD
			  FROM TSYS005
 			 WHERE 1 = 1 ]]>
 		<choose>
 			<when test="enterCd != null and enterCd neq ''">
 			<![CDATA[
 			   AND ENTER_CD = #{enterCd}
 			]]>
 			</when>
 			<otherwise>
 			<![CDATA[
 			   AND ENTER_CD = #{ssnEnterCd}
 			]]>
 			</otherwise>
 		</choose>
			AND GRCODE_CD IN
		<foreach collection="grpCd" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
 		<if test="useYn != null and useYn neq ''">
 		<![CDATA[
 			   AND USE_YN = TRIM(#{useYn})
 		]]>
 		</if>
 		<if test="visualYn != null and visualYn neq ''">
 		<![CDATA[
 			   AND VISUAL_YN = TRIM(#{visualYn})
 		]]>
 		</if>
		AND (NVL(TO_DATE(#{baseSYmd}, 'YYYYMMDD'), SYSDATE) BETWEEN TO_DATE(S_YMD, 'YYYYMMDD') AND TO_DATE(E_YMD, 'YYYYMMDD')
		<if test='baseEYmd != null and !baseEYmd.equals("")'>
			OR TO_DATE(#{baseEYmd}, 'YYYYMMDD') BETWEEN TO_DATE(S_YMD, 'YYYYMMDD') AND TO_DATE(E_YMD, 'YYYYMMDD')
			OR (TO_DATE(S_YMD, 'YYYYMMDD') BETWEEN TO_DATE(#{baseSYmd}, 'YYYYMMDD') AND TO_DATE(#{baseEYmd}, 'YYYYMMDD')
			OR TO_DATE(E_YMD, 'YYYYMMDD') BETWEEN TO_DATE(#{baseSYmd}, 'YYYYMMDD') AND TO_DATE(#{baseEYmd}, 'YYYYMMDD'))
		</if>)
 		<![CDATA[
			ORDER BY GRCODE_CD, USE_YN DESC, SEQ, CODE_NM, CODE
		]]>
	</select>
	
	<select id="getAddlCodeList" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT APPL_CD AS CODE
				 , NVL(F_COM_GET_LANGUAGE_MAPPING(ENTER_CD, 'thri101', LANGUAGE_CD1, #{ssnLocaleCd}), APPL_NM) AS CODE_NM
			  FROM THRI101
			 WHERE ENTER_CD = #{ssnEnterCd} ]]>
		<if test="visualYn != null and visualYn neq ''">
		<![CDATA[
			   AND VISUAL_YN = TRIM(#{visualYn})
		]]>
		</if>
		<if test="useYn != null and useYn neq ''">
		<![CDATA[
			   AND USE_YN = TRIM(#{useYn})
		]]>
		</if>
		<if test="comboViewYn != null and comboViewYn neq ''">
		<![CDATA[
			   AND COMBO_VIEW_YN = TRIM(#{comboViewYn})
		]]>
		</if>
		<![CDATA[
			 ORDER BY USE_YN DESC, SEQ
		]]>
	</select>
	
	<select id="getDupCnt" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT COUNT(*) CNT
			  FROM ${table} A
			 WHERE ${cols}  IN ${values}
		]]>
	</select>
	
	<select id="getDupMap" parameterType="map" resultType="cMap">
		<![CDATA[
			SELECT *
              FROM ${table} A
             WHERE ${cols} IN ${values}
		]]>
	</select>

	<select id="getDupCnt2" parameterType="map" resultType="cMap">
		SELECT COUNT(*) CNT
		FROM ${table} A
		WHERE EXISTS (
		SELECT 1
		FROM (
		<foreach collection="valueList" item="item" separator="UNION ALL">
			SELECT
			<foreach collection="colsList" item="col" separator=",">
				#{item.${col}} AS ${col}
			</foreach>
			FROM DUAL
		</foreach>
		) B
		WHERE
		<foreach collection="colsList" item="col" separator="AND">
			A.${col} = B.${col}
		</foreach>
		)
	</select>

	<select  parameterType="map" resultType="cMap" id="getAppSeqClassCode">

					SELECT DISTINCT A.APP_CLASS_CD AS CODE
					     , A.APP_CLASS_NM AS CODE_NM
					  FROM TPAP110 A
					 WHERE A.ENTER_CD     = #{ssnEnterCd}
						<choose>
							<when test='@org.springframework.util.StringUtils@hasText(searchAppraisalCd)'>
							AND A.APPRAISAL_CD = #{searchAppraisalCd}
							</when>
					   		<otherwise>
					   		<if test="searchAppraisalCd != null and searchAppraisalCd neq ''">
							 AND A.APPRAISAL_CD IN
								<foreach collection="searchAppraisalCd" item="item" index="index" open="(" close=")" separator=",">
										#{item}
								</foreach>
							</if>
							</otherwise>
						</choose>
					   AND A.APP_STEP_CD  = '5' --최종단계
	<if test='searchAppSeqCd != null and !searchAppSeqCd.equals("")'>
					   AND A.APP_SEQ_CD   = #{searchAppSeqCd}
	</if>
	</select>

	<!-- 일정관리 평가배분유형 조회 -->
	<select  parameterType="map" resultType="cMap" id="getAppOrgSchemeTypeInfo">

					SELECT APP_GROUP_ORG_TYPE
					  FROM TPAP101
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
							   <choose>
						 <when test='@org.springframework.util.StringUtils@hasText(searchAppraisalCd)'>
					   AND APPRAISAL_CD = TRIM(#{searchAppraisalCd})
						 </when>
						 <otherwise>
						 <if test="searchAppraisalCd != null and searchAppraisalCd neq ''">
					   AND A.APPRAISAL_CD IN
						 <foreach collection="searchAppraisalCd" item="item" index="index" open="(" close=")" separator=",">
						#{item}
						 </foreach>
						 </if>
						 </otherwise>
						 </choose>
	</select>

	<select parameterType="map" resultType="cMap" id="getWorkingTypeCodeList">
		 SELECT CODE,
				CODE_NM
		   FROM TSYS005
		  WHERE ENTER_CD = #{ssnEnterCd}
			AND GRCODE_CD = 'WT9001'
		<if test="useYn != null and useYn neq ''">
			AND USE_YN = TRIM( #{useYn} )
		</if>
		   ORDER BY SEQ
	</select>

	<select parameterType="map" resultType="cMap" id="getCommonWeek">
		SELECT TRUNC(TO_NUMBER(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(REPLACE(#{ymd},'-',''),'YYYYMMDD')) / 7) + 1 AS WEEK
			  ,TO_CHAR(TO_DATE(replace(#{ymd},'-',''),'YYYYMMDD') + 84 - 1, 'YYYYMMDD') AS WEEK12
		  FROM DUAL
	</select>

	<!-- 가족돌봄(가족관계 조회)-->
	<select parameterType="map" resultType="cMap" id="getFamilyRelations">
		SELECT CODE,
			   CODE_NM
		 FROM TSYS005
	   WHERE 1=1
		 AND ENTER_CD = #{ssnEnterCd}
		 AND GRCODE_CD = 'H20120'
		 AND CODE = #{code}
	</select>

	<!-- 반려 사유 리스트(육아기) -->
	<select parameterType="map" resultType="cMap"  id="getCauseOfReturnList">
	   SELECT  CODE
			 , CODE_NM
		 FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		  AND GRCODE_CD = 'WT9003'
		  AND NUM_NOTE = '1'
		ORDER BY SEQ
	</select>

	<!-- 반려 사유 리스트(가족돌봄) -->
	<select parameterType="map" resultType="cMap"  id="getCauseOfReturnList2">
	   SELECT  CODE
			 , CODE_NM
		 FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		  AND GRCODE_CD = 'WT9003'
		  AND NUM_NOTE = '2'
		ORDER BY SEQ
	</select>

	<!-- 대체조치 리스트 -->
	<select parameterType="map" resultType="cMap" id="getReplaceActionList">
	   SELECT  CODE
			 , CODE_NM
		 FROM TSYS005
		WHERE ENTER_CD = #{ssnEnterCd}
		  AND GRCODE_CD = 'WT9005'
		ORDER BY SEQ
	</select>
</mapper>