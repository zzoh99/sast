<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="common.popup">
	
	<select id="getMainSearchProcessMap" parameterType="map" resultType="cMap">
	<![CDATA[
		SELECT A.*
			 , B.PRG_CD
		  FROM (
		  	SELECT A.ENTER_CD
		  		 , A.PROC_MAP_SEQ
				 , A.PROC_MAP_NM || ' | ' || F_PROCESS_LIST_TEXT(A.PROC_MAP_SEQ) AS TXT
				 , A.GRP_CD
				 , B.PROC_SEQ
				 , B.MAIN_MENU_CD
				 , B.PRIOR_MENU_CD
				 , B.MENU_CD
			  FROM PSMT001 A
			  	 , (
			  	 	SELECT *
			  	 	  FROM (
			  	 	  	SELECT ENTER_CD
				  	 		 , PROC_MAP_SEQ 
				  	 		 , PROC_SEQ
				  	 		 , MAIN_MENU_CD
				  	 		 , PRIOR_MENU_CD
				  	 		 , MENU_CD
				  	 		 , ROW_NUMBER() OVER(PARTITION BY PROC_MAP_SEQ ORDER BY SEQ) AS RNUM
				  	 	  FROM PSMT002
				  	 	 WHERE ENTER_CD = #{ssnEnterCd}
				  	 	   AND ACTIVE_YN = 'Y'
			  	 	  ) T
			  	 	 WHERE RNUM = 1
			  	 ) B
			WHERE A.ENTER_CD = B.ENTER_CD
			  AND A.PROC_MAP_SEQ = B.PROC_MAP_SEQ
			  AND A.ENTER_CD = #{ssnEnterCd}
			  AND A.GRP_CD = #{ssnGrpCd}
			  AND A.STATUS = 'Y'
			  AND A.PROC_MAP_NM LIKE '%' || #{searchWord} || '%'
		  ) A, TSYS311 B
		WHERE A.ENTER_CD = B.ENTER_CD
		  AND A.MAIN_MENU_CD = B.MAIN_MENU_CD
		  AND A.PRIOR_MENU_CD = B.PRIOR_MENU_CD
		  AND A.MENU_CD = B.MENU_CD
		  AND A.GRP_CD = B.GRP_CD
		ORDER BY A.TXT
	]]>
	</select>
	
<!-- 		프로그램관리 팝업 조회 -->
	<select parameterType="map" resultType="cMap" id="getCommonCodePopupList">
		
			<![CDATA[
 					SELECT CODE, CODE_NM, MEMO, NOTE1, NOTE2, NOTE3
					FROM TSYS005
   					WHERE ENTER_CD = trim(#{ssnEnterCd})
     				AND GRCODE_CD = trim(#{grpCd})
     				        ]]>
     			 <if test='codeNm  != null and !codeNm.equals("")'>
     				AND LOWER(CODE_NM) LIKE '%'||LOWER(TRIM( #{codeNm} ))||'%'
				 </if>
     			 <if test='note1  != null and !note1.equals("")'>
     				AND NOTE1 = TRIM( #{note1} )
     			 </if>
     			 <if test='note2  != null and !note2.equals("")'>
     				AND NOTE2 = TRIM( #{note2} )
     			 </if>
     				--AND USE_YN = 'Y'
 					ORDER BY USE_YN DESC, SEQ, CODE_NM
				
	</select>

	<select parameterType="map" resultType="cMap" id="getEduPointPopupList">
		
			<![CDATA[
				    SELECT ENTER_CD, YY,EDU_GUBUN_CD,NOTE,EDU_POINT,
						  (
						    SELECT SUM(EDU_REWARD_CNT)
						      FROM TTRA301
						     WHERE ENTER_CD = A.ENTER_CD
						       AND SABUN = #{sabun}
						       AND EDU_E_YMD LIKE A.YY||'%'
						       AND EDU_BRANCH_CD IN (
						           						SELECT CODE
						        						  FROM TSYS005
						        						 WHERE ENTER_CD= A.ENTER_CD
						          						   AND GRCODE_CD='L10010'
						          						   AND NOTE1 = A.EDU_GUBUN_CD)) AS GET_EDU_POINT
					  FROM TTRA003 A
					 WHERE ENTER_CD = #{ssnEnterCd}
					   AND YY = #{searchYyyy}
				]]>
	</select>
	
	<select parameterType="map" resultType="cMap" id="getPrgMgrPopupList">

				<![CDATA[
					SELECT 	  PRG_CD
							, PRG_NM
							, PRG_ENG_NM
							, PRG_PATH
							, USE
							, VERSION
							, MEMO
							, DATE_TRACK_YN
							, LOG_SAVE_YN
				 	FROM TSYS301
                	WHERE 	PRG_CD 	LIKE '%'|| TRIM(#{prgCd}) ||'%'
                  	AND 	PRG_NM 	LIKE '%'|| TRIM(#{prgNm}) ||'%'
                 ]]>	
            	<if test='use != null and !use.equals("")'>
                  	AND 	USE 	=  'Y'
             	</if>
             	<![CDATA[
					ORDER BY CHKDATE DESC, PRG_PATH, PRG_CD, PRG_NM
				]]>					 
		</select>

	<select parameterType="map" resultType="cMap" id="getPwrSrchMgrPopupList">
		
			<![CDATA[/* thri211 */
					SELECT    '0' AS DB_ITEM_DESC
							, A.SEARCH_SEQ
							, A.BIZ_CD
							, A.SEARCH_TYPE
							, A.COMMON_USE_YN
							, A.SEARCH_DESC
							, A.CONDITION_DESC
							, A.DISTR_SEARCH_SEQ
							, TO_CHAR(A.CHKDATE,'YYYYMMDD') AS CHKDATE
							, A.VIEW_CD, C.VIEW_NM, C.VIEW_DESC
		         	FROM THRI201 A, THRI205 C
			   	 	WHERE 1=1
                  	AND A.ENTER_CD	= TRIM(#{ssnEnterCd})
                  	        ]]>
                	<if test='srchType  != null and !srchType.equals("")'>
                  		AND A.SEARCH_TYPE	LIKE '%'||TRIM(#{srchType})||'%'
					</if>
				  	<if test='srchBizCd  != null and !srchBizCd.equals("")'>
                  		AND A.BIZ_CD	LIKE '%'||TRIM(#{srchBizCd})||'%'
					</if>
                  		AND A.SEARCH_DESC	LIKE '%'||TRIM(#{srchDesc})||'%'
				  	AND A.VIEW_CD     	= C.VIEW_CD(+)
              		ORDER BY A.SEARCH_SEQ DESC
				
		
	</select>

	<!-- 		저장 -->
	<update parameterType="map" id="saveAthGrpMuRegPopup">
		 
					MERGE INTO TSYS303 T
					USING	(
							SELECT	  A.MAIN_MENU_CD
									, A.PRIOR_MENU_CD
									, A.MENU_CD
									, A.MENU_SEQ
									, A.TYPE
									, A.MENU_NM
									, A.PRG_CD
									, A.SEARCH_SEQ
									, A.DATA_RW_TYPE
									, A.DATA_PRG_TYPE
									, A.SEQ
									, A.CNT
							FROM	(
									SELECT	  NULL		AS MAIN_MENU_CD
											, NULL		AS PRIOR_MENU_CD
											, NULL		AS MENU_CD
											, NULL		AS MENU_SEQ
											, NULL		AS TYPE
											, NULL		AS MENU_NM
											, NULL		AS PRG_CD
											, NULL		AS SEARCH_SEQ
											, NULL		AS DATA_RW_TYPE
											, NULL		AS DATA_PRG_TYPE
											, NULL		AS SEQ
											, NULL		AS CNT
									FROM	DUAL
<bind name="icnt" value="1" />
<foreach item="rm" collection="mergeRows">
							UNION ALL
									SELECT
											,TRIM(#{rm.mainMenuCd})		AS MAIN_MENU_CD
											,TRIM(#{rm.priorMenuCd})	AS PRIOR_MENU_CD
											,TRIM(#{rm.menuCd})			AS MENU_CD
											,TRIM(#{rm.menuSeq})		AS MENU_SEQ
											,TRIM(#{rm.type})			AS TYPE
											,TRIM(#{rm.menuNm})			AS MENU_NM
											,TRIM(#{rm.prgCd})			AS PRG_CD
											,TRIM(#{rm.searchSeq})		AS SEARCH_SEQ
											,TRIM(#{rm.dataRwType})		AS DATA_RW_TYPE
											,TRIM(#{rm.dataPrgType})	AS DATA_PRG_TYPE
											,TRIM(#{rm.seq})			AS SEQ
											,TRIM(#{rm.cnt})			AS CNT
											FROM DUAL
</foreach>
									) A WHERE A.MAIN_MENU_CD IS NOT NULL
							) S
					ON ( 		T.ENTER_CD		= #{ssnEnterCd}
							AND T.MAIN_MENU_CD	= S.MAIN_MENU_CD )
					WHEN MATCHED THEN
						UPDATE SET	  T.PRIOR_MENU_CD	= S.PRIOR_MENU_CD
									, T.MENU_CD      	= S.MENU_CD
									, T.MENU_SEQ     	= S.MENU_SEQ
									, T.TYPE         	= S.TYPE
									, T.MENU_NM      	= S.MENU_NM
									, T.PRG_CD       	= S.PRG_CD
									, T.SEARCH_SEQ   	= S.SEARCH_SEQ
									, T.DATA_RW_TYPE 	= S.DATA_RW_TYPE
									, T.DATA_PRG_TYPE	= S.DATA_PRG_TYPE
									, T.SEQ          	= S.SEQ
									, T.CNT          	= S.CNT
									, T.CHKDATE			= SYSDATE
									, T.CHKID			= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.MAIN_MENU_CD
							, T.PRIOR_MENU_CD
							, T.MENU_CD
							, T.MENU_SEQ
							, T.TYPE
							, T.MENU_NM
							, T.PRG_CD
							, T.SEARCH_SEQ
							, T.DATA_RW_TYPE
							, T.DATA_PRG_TYPE
							, T.SEQ
							, T.CNT
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #{ssnEnterCd}
							, S.MAIN_MENU_CD
							, S.PRIOR_MENU_CD
							, S.MENU_CD
							, S.MENU_SEQ
							, S.TYPE
							, S.MENU_NM
							, S.PRG_CD
							, S.SEARCH_SEQ
							, S.DATA_RW_TYPE
							, S.DATA_PRG_TYPE
							, S.SEQ
							, S.CNT
							, SYSDATE
							, #{ssnSabun}
						)
	</update>

	<update parameterType="map" id="savePhtRegPopupMap">
		
			<![CDATA[
					MERGE INTO THRM911 T
					USING	(
								SELECT	TRIM(#{searchSabun})	AS SABUN
									,TRIM(#{imageType})		AS IMAGE_TYPE
									,TRIM(#{fileName})		AS FILENAME
								FROM DUAL
							) S
					ON ( T.ENTER_CD = #{ssnEnterCd} AND T.SABUN = S.SABUN AND T.IMAGE_TYPE = S.IMAGE_TYPE )
					WHEN MATCHED THEN
						UPDATE SET	  T.FILENAME	= S.FILENAME
									, T.CHKDATE		= SYSDATE
									, T.CHKID		= #{ssnSabun}
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.SABUN
							, T.IMAGE_TYPE
							, T.FILENAME
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #{ssnEnterCd}
							, S.SABUN
							, S.IMAGE_TYPE
							, S.FILENAME
							, SYSDATE
							, #{ssnSabun}
						)
				]]>
		
		
	</update>
	<!-- 		삭제 -->
	<delete parameterType="map" id="deleteAthGrpMuRegPopup">
		

					DELETE FROM TSYS303
					WHERE 	ENTER_CD,MAIN_MENU_CD  IN 	(  ( NULL, NULL )
		<foreach item="rm" collection="deleteRows">
						, 	( 	#{ssnEnterCd}),
							<if test='rm.mainMenuCd != null and !rm.mainMenuCd.equals("")'>
								TRIM( #{rm.mainMenuCd} )
							</if>
							)
		</foreach>
										)
	</delete>

	<!-- 조직리스트 조회 -->
	<select parameterType="map" resultType="cMap" id="getOrgBasicPopupList">
		
			<![CDATA[
					SELECT A.ORG_CD
					    -- , A.ORG_NM
					     , NVL(DECODE(#{ssnEnterCd}, null, A.ORG_NM, 'zh_CN', A.ORG_NM_CN, 'en_US', A.ORG_NM_US, 'ja_JP', A.ORG_NM_JP, A.ORG_NM ), A.ORG_NM) AS ORG_NM
					     , A.ORG_FULL_NM
					     , A.ORG_ENG_NM
					     , A.INOUT_TYPE
					     , A.ORG_TYPE
					     , A.TEL_NO
					     , A.MEMO
					     , A.SDATE,A.EDATE
					     , A.OBJECT_TYPE
					     , A.CO_TEL_NO
					     , A.LOCATION_CD
					     , A.MISSION
					     , A.ROLE_MEMO
					     , A.KEY_JOB_MEMO
					     , '' AS DEL_YN
					     , A.VISUAL_YN
					     , (CASE WHEN ( SELECT COUNT(Y.ORG_CD) FROM TORG103 X, TORG105 Y WHERE X.ENTER_CD = Y.ENTER_CD AND X.SDATE = Y.SDATE AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN X.SDATE AND NVL(X.EDATE, '99991231') AND Y.ENTER_CD = A.ENTER_CD AND Y.ORG_CD = A.ORG_CD AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231') ) > 0 THEN 1 ELSE 0 END) AS ORG_SCHEME_USE_YN
						 , F_ORG_GET_CHIEF_SABUN(A.ENTER_CD, A.ORG_CD, NVL(REPLACE(TRIM(#{searchBaseDate}),'-',''), TO_CHAR(SYSDATE, 'YYYYMMDD'))) AS CHIEF_SABUN
     					 , F_ORG_GET_CHIEF_NAME(A.ENTER_CD, A.ORG_CD, NVL(REPLACE(TRIM(#{searchBaseDate}),'-',''), TO_CHAR(SYSDATE, 'YYYYMMDD'))) AS CHIEF_NAME
					 FROM TORG101 A
					 ]]>
					 <choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
					 	WHERE A.ENTER_CD = #{searchEnterCd}
				 	 </when><otherwise>
				 	 	WHERE A.ENTER_CD = #{ssnEnterCd}
	</otherwise>
					 </choose>
					<if test='searchBaseDate  != null and !searchBaseDate.equals("")'>
					  AND REPLACE(TRIM(#{searchBaseDate}),'-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
					</if>
					<if test='searchOrgNm  != null and !searchOrgNm.equals("")'>
					  AND NVL(DECODE(#{ssnEnterCd}, null, A.ORG_NM, 'zh_CN', A.ORG_NM_CN, 'en_US', A.ORG_NM_US, 'ja_JP', A.ORG_NM_JP, A.ORG_NM ), A.ORG_NM) LIKE '%'||TRIM(#{searchOrgNm})||'%'
					</if>
					<if test='chkVisualYn != null and chkVisualYn.equals("Y")'>
					  AND NVL(A.VISUAL_YN,'N') = 'Y'
					</if>
					<if test='searchOrgSchemeUseYn != null and searchOrgSchemeUseYn.equals("Y")'>
						AND EXISTS
					        (
							    SELECT 1
						          FROM TORG103 T1
						             , TORG105 T2
						         WHERE T1.ENTER_CD = T2.ENTER_CD
						           AND T1.SDATE = T2.SDATE
						           AND T1.ENTER_CD = A.ENTER_CD
						           AND T2.ORG_CD = A.ORG_CD
						           AND T1.SDATE = ( SELECT MAX(SDATE)
						                              FROM TORG103
						                             WHERE ENTER_CD = T1.ENTER_CD
						                               AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231') )
						    )
					</if>
					ORDER BY ORG_SCHEME_USE_YN DESC, A.ORG_NM ASC, A.SDATE DESC
                
		
		
	</select>
	<select parameterType="map" resultType="cMap" id="getOrgBasicGrpCdCheck">
		
			<![CDATA[
					SELECT	A.SEARCH_TYPE
					FROM	TSYS313 A
						,	THRM100	B
						,	THRM151 C
					WHERE	A.ENTER_CD	=	TRIM(#{ssnEnterCd})
					AND		A.GRP_CD	=	TRIM(#{ssnGrpCd})
					AND		A.ENTER_CD	=	B.ENTER_CD
					AND		A.SABUN		=	B.SABUN
					AND		B.ENTER_CD	=	C.ENTER_CD
					AND		B.SABUN		=	C.SABUN
					AND		B.SABUN		=	TRIM(#{ssnSabun})
					AND		TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
                ]]>
		
		
	</select>
	<select parameterType="map" resultType="cMap" id="getOrgBasicGrpUserPopupList">
		
			<![CDATA[
                                    SELECT *
                FROM (
                        SELECT    -- LEVEL AS "_level",
                                A.PRIOR_ORG_CD,
                                A.ORG_CD,
                                B.ORG_NM,
								DECODE((SELECT COUNT(*) FROM TSYS319 WHERE ENTER_CD = A.ENTER_CD AND SCOPE_VALUE = A.ORG_CD AND AUTH_SCOPE_CD = TRIM('W10') AND SABUN = TRIM(#{ssnSabun})  AND GRP_CD = TRIM(#{ssnGrpCd}) AND ENTER_CD = TRIM(#{ssnEnterCd})), 0, 0, 1) AS CHK
                                   , B.SDATE
                                   , B.EDATE
, (CASE WHEN ( SELECT COUNT(Y.ORG_CD) FROM TORG103 X, TORG105 Y WHERE X.ENTER_CD = Y.ENTER_CD AND X.SDATE = Y.SDATE AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN X.SDATE AND NVL(X.EDATE, '99991231') AND Y.ENTER_CD = B.ENTER_CD AND Y.ORG_CD = B.ORG_CD AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231') ) > 0 THEN 1 ELSE 0 END) AS ORG_SCHEME_USE_YN
                        FROM TORG105 A, TORG101 B
                        WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                        AND A.ENTER_CD = B.ENTER_CD
                        AND A.ORG_CD = B.ORG_CD
                        AND A.SDATE BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
                                ]]>
                        <if test='searchOrgNm != null and !searchOrgNm.equals("")'>
					  		AND B.ORG_NM LIKE '%'||TRIM(#{searchOrgNm})||'%'
						</if>
                        <choose><when test='searchBaseDate != null and !searchBaseDate.equals("")'>
					  		AND REPLACE(TRIM(#{searchBaseDate}),'-','') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
	                        AND A.SDATE = (
	                            SELECT MAX(SDATE)
	                            FROM TORG103
	                            WHERE ENTER_CD = A.ENTER_CD
	                              AND REPLACE(TRIM(#{searchBaseDate}),'-','') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
	                        )
	                    </when><otherwise>
						AND A.SDATE = (
	                            SELECT MAX(SDATE)
	                            FROM TORG103
	                            WHERE ENTER_CD = A.ENTER_CD
	                        )
						</otherwise></choose>
						<![CDATA[
                        START WITH A.PRIOR_ORG_CD = '0'
                        CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
                        AND PRIOR A.SDATE = A.SDATE
                        AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
                        ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ, A.ORG_LEVEL
                     ) WHERE CHK <> 0
                ]]>
		
		
	</select>

	<!-- 평가대상자생성시 조직조회 -->
	<select parameterType="map" resultType="cMap" id="getOrgBasicPopupList2">
		
			<![CDATA[
					SELECT A.APP_ORG_CD AS ORG_CD
					     , A.APP_ORG_NM AS ORG_NM
					 FROM TPAP160 A
				 	WHERE A.ENTER_CD = #{ssnEnterCd}
				 	          ]]>
					<if test='appraisalCd  != null and !appraisalCd.equals("")'>
					  AND A.APPRAISAL_CD = TRIM(#{appraisalCd})
					</if>
					<if test='appStepCd  != null and !appStepCd.equals("")'>
					  AND A.APP_STEP_CD = TRIM(#{appStepCd})
					</if>
					<if test='searchOrgNm  != null and !searchOrgNm.equals("")'>
					  AND A.APP_ORG_NM LIKE '%'||TRIM(#{searchOrgNm})||'%'
					</if>
					ORDER BY A.APP_ORG_CD

		
		
	</select>

	<select parameterType="map" resultType="cMap" id="getAppPeopleShowPopList">
		
			<![CDATA[
                SELECT B.NAME, B.SABUN
                	  ,SUM(CASE WHEN NVL(B.MAIN_ORG_YN,'N') = 'Y' THEN 1 ELSE 0 END) AS DUPLE_CNT
				  FROM TPAP201 B
				 WHERE B.ENTER_CD =#{ssnEnterCd}
				   AND B.APPRAISAL_CD = #{appraisalCd}
				   AND B.APP_STEP_CD = '5'
				 GROUP BY B.NAME, B.SABUN
				HAVING (SUM(CASE WHEN B.APP_YN = 'Y' AND NVL(B.MAIN_ORG_YN,'N') = 'Y' THEN 1 ELSE 0 END) >= 2 /* 2개이상주관부서 인원수 */
				 OR (SUM(CASE WHEN B.APP_YN = 'Y' THEN 1 ELSE 0 END) >= 1 AND SUM(CASE WHEN NVL(B.MAIN_ORG_YN,'N') = 'Y' THEN 1 ELSE 0 END) = 0) /* 주관부서가 없는 인원수 */
				)
                ]]>
		
		
	</select>

	<!-- 평가제외자 리스트 -->
	<select parameterType="map" resultType="cMap" id="getAppPeopleShowPopExList">
		
			<![CDATA[
                SELECT B.NAME, B.SABUN, F_COM_GET_GRCODE_NAME(B.ENTER_CD,'P00018', B.APP_EX_CD) AS MEMO
				  FROM TPAP201 B
				 WHERE B.ENTER_CD =#{ssnEnterCd}
				   AND B.APPRAISAL_CD = #{appraisalCd}
				   AND B.APP_STEP_CD = '5'
                   AND NVL(B.APP_YN, 'N') = 'N'
                ]]>
		
		
	</select>


	<!-- 조직리스트(트리형태) 조회 -->
	<select parameterType="map" resultType="cMap" id="getOrgTreePopupList">
		
			<![CDATA[
					SELECT LEVEL AS "_level"
					     , B.ORG_CHART_NM
					     , A.SDATE
					     , A.PRIOR_ORG_CD
					     , F_COM_GET_ORG_NM(A.ENTER_CD, A.PRIOR_ORG_CD, #{searchSdate} , #{ssnLocaleCd}) AS PRIOR_ORG_NM
					     , A.ORG_CD
					     , F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, #{searchSdate} , #{ssnLocaleCd}) AS ORG_NM
					     , A.DIRECT_YN
					     , A.SEQ
					     , A.ORG_LEVEL
					     , C.ORG_ENG_NM
					     , C.INOUT_TYPE
						 , C.ORG_TYPE
						 , C.OBJECT_TYPE
						 , C.LOCATION_CD
					     , CASE WHEN LEVEL <= 2 THEN
					            ''
					       ELSE
					            SYS_CONNECT_BY_PATH (A.ORG_CD, '|')
					       END AS TREE_PATH
                         , C.WORK_AREA_CD
                         , C.WORK_AREA_NM
					  FROM TORG105 A, TORG103 B, TORG101 C
				 WHERE 1 = 1
				           ]]>
<choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
				   AND A.ENTER_CD = #{searchEnterCd}
	</when><otherwise>
				   AND A.ENTER_CD = #{ssnEnterCd}
</otherwise></choose>
					   AND A.SDATE = #{searchSdate}
					   AND A.ENTER_CD = B.ENTER_CD
					   AND A.SDATE = B.SDATE
					   AND A.ENTER_CD = C.ENTER_CD
					   AND A.ORG_CD = C.ORG_CD
					   -- AND C.SDATE = ( SELECT MAX(SDATE) FROM TORG101 WHERE ENTER_CD = A.ENTER_CD AND ORG_CD = A.ORG_CD )
					   AND A.SDATE BETWEEN C.SDATE AND NVL(C.EDATE, '99991231')
					 START WITH A.PRIOR_ORG_CD = '0'
					 CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
					    AND PRIOR A.SDATE = A.SDATE
					    AND PRIOR A.ORG_CD = A.PRIOR_ORG_CD
					 ORDER SIBLINGS BY A.PRIOR_ORG_CD, A.SEQ
                
		
	</select>

	<!-- 조직도 명칭 리스트(부서 정보(트리형태) 팝업에서 사용) 조회 -->
	<select parameterType="map" resultType="cMap" id="getOrgChartCodeList">
		
			<![CDATA[
					SELECT A.ORG_CHART_NM AS CODE_NM
					     , A.SDATE AS CODE
					  FROM TORG103 A
					 WHERE A.ENTER_CD = #{ssnEnterCd}
					 ORDER BY A.SDATE DESC, A.ORG_CHART_NM
                ]]>
		
		
	</select>

	<!-- 조직구분항목 조회 -->
	<select parameterType="map" resultType="cMap" id="getOrgMappingItemPopupList">
		
			<![CDATA[

                	SELECT MAP_TYPE_CD, MAP_CD, MAP_NM
                      FROM TORG109 A
                	 WHERE ENTER_CD = #{ssnEnterCd}
				       AND A.SDATE = (SELECT MAX (SDATE) FROM TORG109
				                     WHERE ENTER_CD = A.ENTER_CD
				                       AND MAP_TYPE_CD = A.MAP_TYPE_CD
				                       AND MAP_CD = A.MAP_CD
				                       AND REPLACE(#{searchYmd}, '-', '') BETWEEN SDATE AND NVL(EDATE,'99991231')
				                        ]]>
					                    )
	 				<if test='searchMapTypeCd  != null and !searchMapTypeCd.equals("")'>
						AND MAP_TYPE_CD LIKE '%'||TRIM(#{searchMapTypeCd})||'%'
					</if>
					<if test='searchMapNm  != null and !searchMapNm.equals("")'>
						AND UPPER(MAP_NM) LIKE UPPER('%'||TRIM(#{searchMapNm})||'%')
					</if>
					<if test='searchMapTypeCd != null and (searchMapTypeCd.equals("900") or searchMapTypeCd.equals(""))'>
                    UNION ALL
                    SELECT '900' AS  MAP_TYPE_CD
                      , A.JOB_CD AS MAP_CD
                      , A.JOB_NM AS MAP_NM
                    FROM TORG201 A
                    WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
                    AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(A.EDATE, '99991231')
                    AND A.JOB_TYPE = TRIM( '10030' )
                    </if>
					ORDER BY MAP_TYPE_CD, MAP_CD

		
	</select>

	<!-- 직무코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getJobPopupList">
		
			<![CDATA[
						SELECT '0' AS DETAIL,
							   A.JOB_CD,
						       A.SDATE,
						       A.EDATE,
						       A.JOB_NM,
						       A.JOB_ENG_NM,
						       A.JOB_TYPE,
						       A.MEMO,
						       A.JOB_DEFINE,
						       A.ACADEMY_REQ,
						       A.MAJOR_REQ,
						       A.JIKGUB_REQ,
						       A.CAREER_REQ,
						       A.OTHER_JOB_REQ,
						       A.NOTE,
						       A.SEQ
						 FROM  TORG201 A
						WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
						          ]]>
					<if test='searchJobType  != null and !searchJobType.equals("")'>
						  AND A.JOB_TYPE IN
		<foreach collection="searchJobType" item="item" index="index" open="(" close=")" separator=",">
				#{item}
		</foreach>
					</if>
					<if test='searchJobNm  != null and !searchJobNm.equals("")'>
						  AND A.JOB_NM LIKE '%'||TRIM(#{searchJobNm})||'%'
					</if>
					<if test='searchSdate  != null and !searchSdate.equals("")'>
						  AND REPLACE(TRIM(#{searchSdate}),'-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
					</if>
						ORDER BY A.JOB_CD, A.SDATE, A.EDATE

		
	</select>

	<!-- 직무분류표 조회 -->
	<select parameterType="map" resultType="cMap" id="getJobSchemePopupList">
		
			<![CDATA[
					SELECT '0' AS DETAIL
					     , 0 AS "_level"
					     , '0' AS PRIOR_JOB_CD
					     , '0' AS JOB_CD
					     , '' AS SDATE
					     , '' AS EDATE
					     , DECODE(#{ssnLocaleCd}, NULL, '직무분류표', 'ko_KR', '직무분류표', 'Job Classification') AS JOB_NM
					     , '' AS JOB_ENG_NM
					     , '' AS JOB_TYPE
					     , '' AS MEMO
					     , '' AS JOB_DEFINE
					     , '' AS ACADEMY_REQ
					     , '' AS MAJOR_REQ
					     , '' AS JIKGUB_REQ
					     , '' AS CAREER_REQ
					     , '' AS OTHER_JOB_REQ
					     , '' AS NOTE
					     , 0 AS SEQ
					     , '' AS KEY_POSITION_YN
					  FROM DUAL
					 UNION ALL
					SELECT *
					  FROM (
					        SELECT '0' AS DETAIL
					             , LEVEL AS "_level"
					             , B.PRIOR_JOB_CD
					             , B.JOB_CD
					             , B.SDATE
					             , B.EDATE
					             , A.JOB_NM
					             , A.JOB_ENG_NM
					             , A.JOB_TYPE
					             , A.MEMO
					             , A.JOB_DEFINE
					             , A.ACADEMY_REQ
					             , A.MAJOR_REQ
					             , A.JIKGUB_REQ
					             , A.CAREER_REQ
					             , A.OTHER_JOB_REQ
					             , A.NOTE
					             , B.SEQ
					             , A.KEY_POSITION_YN
					          FROM TORG201 A, TORG204 B
					         WHERE 1=1
					           AND A.ENTER_CD = B.ENTER_CD
					           AND A.JOB_CD = B.JOB_CD
					           AND A.ENTER_CD = TRIM(#{ssnEnterCd})
					                   ]]>
<if test='searchSdate  != null and !searchSdate.equals("")'>
					           AND REPLACE(TRIM(#{searchSdate}),'-','') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
</if>
<if test='searchJobType  != null and !searchJobType.equals("")'>
					           AND A.JOB_TYPE = TRIM( #{searchJobType} )
</if>
<if test='searchJobNm  != null and !searchJobNm.equals("")'>
					           AND A.JOB_NM LIKE ('%'||TRIM(#{searchJobNm})||'%')
</if>
					         START WITH B.PRIOR_JOB_CD = '0'
					       CONNECT
					            BY PRIOR B.ENTER_CD = B.ENTER_CD
					           AND PRIOR B.JOB_CD = B.PRIOR_JOB_CD
					         ORDER SIBLINGS BY B.PRIOR_JOB_CD, B.SEQ
					       )

		
	</select>

	<!-- 역량코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getCompetencyPopupList">
		
			<![CDATA[
						SELECT '0' AS DETAIL,
						       A.COMPETENCY_CD,
						       A.COMPETENCY_NM,
						       A.COMPETENCY_TYPE,
						       A.ESSENTIAL_YN,
						       A.MEMO,
						       A.MEASURE_TYPE,
						       A.GMEASURE_CD,
						       B.GMEASURE_NM,
						       A.MAIN_APP_TYPE,
						       A.RENEWAL,
						       A.UNIT,
						       A.SDATE,
						       A.EDATE
						 FROM  TORG051 A, TSYS021 B
						WHERE A.ENTER_CD = B.ENTER_CD(+)
						  AND A.GMEASURE_CD = B.GMEASURE_CD(+)
						  AND A.ENTER_CD = TRIM(#{ssnEnterCd})
						          ]]>
					<if test='searchCompetencyNm  != null and !searchCompetencyNm.equals("")'>
						  AND A.COMPETENCY_NM LIKE '%'||TRIM(#{searchCompetencyNm})||'%'
					</if>
					<if test='searchSdate  != null and !searchSdate.equals("")'>
						  AND REPLACE(TRIM(#{searchSdate}),'-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
					</if>
						ORDER BY A.COMPETENCY_NM, A.SDATE, A.EDATE
                
		
	</select>

	<!-- 역량분류표 조회 -->
	<select parameterType="map" resultType="cMap" id="getCompetencySchemePopupList">
		
			<![CDATA[
						SELECT '0' AS DETAIL,
								0 AS "_level",
					     	    0 AS PRIOR_COMPETENCY_CD,
					     	    '' AS PRIOR_COMPETENCY_NM,  --2020.07.16 추가
							    0 AS COMPETENCY_CD,
						        '' AS SDATE,
						        '' AS EDATE,
						        '역량분류표' AS COMPETENCY_NM,
						        '' AS MAIN_APP_TYPE,
						        '' AS COMPETENCY_TYPE,
						        '' AS MEMO,
						        '' AS GMEASURE_CD,
						       	'' AS GMEASURE_NM,
						        0 AS SEQ
						  FROM DUAL
						UNION ALL
						SELECT *
						  FROM (
								SELECT '0' AS DETAIL,
									   LEVEL AS "_level",
									   A.PRIOR_COMPETENCY_CD,
									   F_COM_GET_COMPETENCY_NM( A.ENTER_CD, A.PRIOR_COMPETENCY_CD, REPLACE(TRIM(#{searchSdate}),'-','')) AS PRIOR_COMPETENCY_NM, --2020.07.16 추가
									   A.COMPETENCY_CD,
								       B.SDATE,
								       B.EDATE,
								       B.COMPETENCY_NM,
								       B.MAIN_APP_TYPE,
								       A.COMPETENCY_TYPE,
								       B.MEMO,
								       B.GMEASURE_CD,
						       		   C.GMEASURE_NM,
								       A.SEQ
								 FROM  TORG055 A, TORG051 B, TSYS021 C
								WHERE A.ENTER_CD = B.ENTER_CD
								  AND A.COMPETENCY_CD = B.COMPETENCY_CD
								  AND B.ENTER_CD = C.ENTER_CD(+)
						  		  AND B.GMEASURE_CD = C.GMEASURE_CD(+)
								  AND A.ENTER_CD = TRIM(#{ssnEnterCd})
								          ]]>
							<if test='searchSdate  != null and !searchSdate.equals("")'>
								  AND REPLACE(TRIM(#{searchSdate}),'-','') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
							</if>
								 START WITH A.PRIOR_COMPETENCY_CD = '0'
								 CONNECT BY PRIOR A.ENTER_CD = A.ENTER_CD
								    AND PRIOR A.COMPETENCY_CD = A.PRIOR_COMPETENCY_CD
								 ORDER SIBLINGS BY A.PRIOR_COMPETENCY_CD, A.SEQ
								 )

		
	</select>

	<!-- 척도코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getMeasureCdPopupList">
		
			<![CDATA[
					SELECT  '0' AS DETAIL
						  , GMEASURE_CD
						  , GMEASURE_NM
						  , MEMO
						  , TYPE
						  , GMEASURE_TYPE
						  , LEVEL_TYPE
						  , COMMON_YN
						  , ORDER_SEQ
					  FROM TSYS021
					 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
					           ]]>
					 <if test='searchGmeasureNm  != null and !searchGmeasureNm.equals("")'>
					   AND GMEASURE_NM LIKE '%'||TRIM(#{searchGmeasureNm})||'%'
					 </if>
					 ORDER BY ORDER_SEQ
                
		
	</select>

	<!-- 공통사무코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getTaskPopupList">
		
			<![CDATA[
					SELECT
					    A.TASK_CD
					  , A.TASK_NM
					  , A.TASK_ENG_NM
					  , A.SDATE
					  , A.EDATE
					  , DECODE(NVL(A.KEY_TASK_YN, 'N'), 'Y', 1, 0) AS KEY_TASK_YN
					  , A.MEMO
					FROM TORG010 A
					WHERE 1=1
					  AND A.ENTER_CD = TRIM( #{ssnEnterCd} )
					          ]]>
<if test='searchTaskCd  != null and !searchTaskCd.equals("")' >
					  AND A.TASK_CD = TRIM( #{searchTaskCd} )
</if>
<if test='searchTaskNm  != null and !searchTaskNm.equals("")' >
					  AND A.TASK_NM LIKE '%'||TRIM( #{searchTaskNm} )||'%'
</if>
<if test='searchStdDate  != null and !searchStdDate.equals("")' >
					  AND REPLACE(TRIM(#{searchStdDate}),'-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
</if>
					ORDER BY A.TASK_CD, A.SDATE
                 
		
	</select>


	<select parameterType="map" resultType="cMap" id="getOrgEmpList">
		
			<![CDATA[
				SELECT AC.ENTER_NM ,
					   AC.ENTER_CD,
					   A.SABUN AS EMP_SABUN, 								--사번
					   F_COM_GET_NAMES(A.ENTER_CD,A.SABUN, #{ssnLocaleCd}) AS EMP_NAME, 	--성명
					   C.ORG_CD AS ORG_CD,									--조직코드
					   F_COM_GET_ORG_NM(C.ENTER_CD, C.ORG_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS ORG_NM,		--조직명
					   C.JOB_CD AS JOB_CD,																	--직무코드
					   F_COM_GET_JOB_NM(C.ENTER_CD, C.JOB_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), #{ssnLocaleCd}) AS JOB_NM,		--직무명
                       C.JIKWEE_CD AS JIKWEE_CD,                        						--직위코드(H20030)
                       F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'H20030', C.JIKWEE_CD, #{ssnLocaleCd})  AS JIKWEE_NM,  --직위코드명(H20030)
                       C.JIKGUB_CD AS JIKGUB_CD,                        						--직급코드(H20010)
                       F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'H20010', C.JIKGUB_CD, #{ssnLocaleCd}) AS JIKGUB_NM,   --직급코드명(H20010)
                       C.JIKCHAK_CD AS JIKCHAK_CD,                        						--직책코드(H20020)
                       F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'H20020', C.JIKCHAK_CD, #{ssnLocaleCd}) AS JIKCHAK_NM, --직책코드명(H20020)
                       C.STATUS_CD AS STATUS_CD,                        						--재직상태코드(H10010)
                       F_COM_GET_GRCODE_NAME(C.ENTER_CD, 'H10010', C.STATUS_CD, #{ssnLocaleCd}) AS STATUS_NM,   --재직상태명코드(H10010)
					   -- 주소연락처 --
					   F_COM_GET_CONT_ADDRESS(A.ENTER_CD,A.SABUN,'OT') AS OFFICE_TEL,						--사내전화
					   F_COM_GET_CONT_ADDRESS(A.ENTER_CD,A.SABUN,'HT') AS HOME_TEL,							--집전화
					   F_COM_GET_CONT_ADDRESS(A.ENTER_CD,A.SABUN,'FT') AS FAX_NO,								--팩스
					   F_COM_GET_CONT_ADDRESS(A.ENTER_CD,A.SABUN,'HP') AS HAND_PHONE,						--핸드폰
					   F_COM_GET_CONT_ADDRESS(A.ENTER_CD,A.SABUN,'SC1') AS CONNECT_TEL,					--비상연락처
					   F_COM_GET_CONT_ADDRESS(A.ENTER_CD,A.SABUN,'IM') AS MAIL_ID							--메일
				  FROM THRM100 A, (SELECT A.*
				  							  FROM THRM151 A, THRM100 B
				  							  WHERE A.ENTER_CD = B.ENTER_CD
				  							   AND A.SABUN = B.SABUN
				  							   AND A.ENTER_CD = #{ssnEnterCd}
				  							   AND TO_CHAR(sysdate, 'YYYYMMDD') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')) C,
					   TORG900 AC
				  WHERE	A.ENTER_CD = #{ssnEnterCd}
				    AND C.STATUS_CD NOT LIKE 'RA'
				    AND C.ORG_CD = #{searchOrgCd}
				    -- 인사마스터 HISTORY -------------------------------------------------------------------
				    AND A.ENTER_CD = C.ENTER_CD
				    AND A.SABUN = C.SABUN
				    -----------------------------------------------------------------------------------------
				    -- 회사정보 ----------------------------------------------------------------------------
				    AND A.ENTER_CD = AC.ENTER_CD
				    -----------------------------------------------------------------------------------------
				ORDER BY F_ORG_ORG_CHART_SORT(C.ENTER_CD, C.ORG_CD, C.SDATE)
					,F_COM_GET_GRCODE_SEQ(C.ENTER_CD, 'H20030', C.JIKWEE_CD)
					,F_COM_GET_GRCODE_SEQ(C.ENTER_CD, 'H20020', C.JIKCHAK_CD)
					,C.SABUN
				]]>
		
		
	</select>

	<!-- 사진등록 조회 -->
	<select parameterType="map" resultType="cMap" id="getPhtRegPopupMap">
		
			<![CDATA[
					SELECT B.IMGINFO
					FROM TSTF901 A, TSTF210 B
					WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
						AND A.SABUN = #{searchSabun}
						AND A.ENTER_CD = B.ENTER_CD
						AND TO_CHAR(A.APPL_KEY) = B.APPL_KEY
                ]]>
		
		
	</select>
	<!-- -->
	<select parameterType="map" resultType="cMap" id="getOrgMapPopupList">
		
			<![CDATA[
					SELECT MAP_TYPE_CD,MAP_CD,MAP_NM,NOTE
					FROM TORG109 A
					WHERE ENTER_CD = #{ssnEnterCd}
				       AND A.SDATE = (SELECT MAX (SDATE) FROM TORG109
				                     WHERE ENTER_CD = A.ENTER_CD
				                       AND MAP_TYPE_CD = A.MAP_TYPE_CD
				                       AND MAP_CD = A.MAP_CD
				                       AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE,'99991231'))
						AND MAP_TYPE_CD = #{mapTypeCd}
						        ]]>
					<if test='searchText  != null and !searchText.equals("")'>
						AND MAP_NM LIKE '%'||TRIM(#{searchText})||'%'
					</if>
		
	</select>


	<!-- 레이어팝업 공통 코드 조회 -->

	<!-- (팝업)조직코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getLayerOrgCodeList">
		
			<![CDATA[
					  SELECT A.ORG_CD AS CODE
					       , NVL(F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR( SYSDATE,'YYYYMMDD'), #{ssnLocaleCd} ), A.ORG_NM) AS CODE_NM
]]>
<choose><when test='searchText  != null and !searchText.equals("")'>
						   , 0 AS "_level"
</when><otherwise>
						   , LEVEL AS "_level"
</otherwise></choose>
					   FROM TORG101 A, TORG105 B, (SELECT ENTER_CD, ORG_CD, MAX(SDATE) AS SDATE
			                                         FROM TORG101
			                                        WHERE ENTER_CD = #{ssnEnterCd}
<choose><when test='searchBaseDate  != null and !searchBaseDate.equals("")'>
			                                          AND REPLACE(#{searchBaseDate}, '-','') BETWEEN SDATE AND NVL(EDATE, '99991231')
</when><otherwise>
			                                          AND TO_CHAR(sysdate, 'yyyymmdd') BETWEEN SDATE AND NVL(EDATE, '99991231')
</otherwise></choose>
			                                        GROUP BY ENTER_CD, ORG_CD
					                               ) C
			          WHERE A.ENTER_CD = #{ssnEnterCd}
			            AND A.ENTER_CD = B.ENTER_CD
			            AND A.ORG_CD = B.ORG_CD

			            AND B.SDATE = ( SELECT MAX(SDATE)
			                              FROM TORG103
			                             WHERE ENTER_CD = #{ssnEnterCd}
<choose><when test='searchBaseDate  != null and !searchBaseDate.equals("")'>
			                               AND REPLACE(#{searchBaseDate}, '-','') BETWEEN SDATE AND NVL(EDATE, '99991231')
</when><otherwise>
			                               AND TO_CHAR(sysdate, 'yyyymmdd') BETWEEN SDATE AND NVL(EDATE, '99991231')
</otherwise></choose>
			                          )
			            AND A.ENTER_CD  = C.ENTER_CD
						AND A.ORG_CD    = C.ORG_CD
						AND A.SDATE     = C.SDATE

<choose><when test='searchText  != null and !searchText.equals("")'>
						AND A.ORG_NM  LIKE '%' ||  TRIM(#{searchText}) || '%'
			          ORDER BY B.ORDER_SEQ,  B.SEQ
</when><otherwise>
					  START WITH B.PRIOR_ORG_CD = '0'
		            CONNECT BY PRIOR B.ENTER_CD = B.ENTER_CD
		                AND PRIOR B.SDATE       = B.SDATE
		                AND PRIOR B.ORG_CD      = B.PRIOR_ORG_CD
					  ORDER SIBLINGS BY B.ORDER_SEQ,  B.SEQ
</otherwise></choose>		
		
	</select>


	<!-- (팝업)조직코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getLayerOrgCodeList2">
		
			<![CDATA[
					  SELECT A.ORG_CD AS CODE
					       , NVL(F_COM_GET_ORG_NM(A.ENTER_CD, A.ORG_CD, TO_CHAR( SYSDATE,'YYYYMMDD'), #{ssnLocaleCd} ), A.ORG_NM) AS CODE_NM
]]>
<choose><when test='searchText  != null and !searchText.equals("")'>
						   , 0 AS "_level"
</when><otherwise>
						   , LEVEL AS "_level"
</otherwise></choose>
					   FROM TORG101 A, TORG105 B
			          WHERE A.ENTER_CD  = #{ssnEnterCd}
			            AND A.ENTER_CD  = B.ENTER_CD
			            AND A.ORG_CD    = B.ORG_CD
			            AND B.SDATE     = REPLACE(#{searchBaseDate}, '-','')
			            AND REPLACE(#{searchBaseDate}, '-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')

<choose><when test='searchText  != null and !searchText.equals("")'>
						AND A.ORG_NM  LIKE '%' ||  TRIM(#{searchText}) || '%'
			          ORDER BY B.ORDER_SEQ,  B.SEQ
</when><otherwise>
					  START WITH B.PRIOR_ORG_CD = '0'
		            CONNECT BY PRIOR B.ENTER_CD = B.ENTER_CD
		                AND PRIOR B.SDATE       = B.SDATE
		                AND PRIOR B.ORG_CD      = B.PRIOR_ORG_CD
					  ORDER SIBLINGS BY B.ORDER_SEQ,  B.SEQ
</otherwise></choose>
		
	</select>
	<!-- (팝업)직무코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getLayerJobCodeList">
		
			<![CDATA[
						SELECT A.JOB_CD AS CODE,
						       A.JOB_NM AS CODE_NM
						 FROM  TORG201 A
						WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
						  AND A.JOB_TYPE = '10030' --직무
						  ]]>
<choose><when test='searchBaseDate  != null and !searchBaseDate.equals("")'>
			              AND REPLACE(#{searchBaseDate}, '-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
</when><otherwise>
			              AND TO_CHAR(sysdate, 'yyyymmdd') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
</otherwise></choose>
<if test='searchText  != null and !searchText.equals("")'>
			 			AND A.JOB_NM  LIKE '%' ||  TRIM(#{searchText}) || '%'
</if>
<if test='searchJobType  != null and !searchJobType.equals("")'>
						AND A.JOB_TYPE  = TRIM(#{searchJobType})
</if>
						ORDER BY A.JOB_CD, A.SDATE, A.EDATE

	</select>

	<!-- (팝업)직무/직종/직렬 코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getLayerJobCodeList2">
		
			<![CDATA[
						SELECT A.JOB_CD AS CODE,
						       A.JOB_NM AS CODE_NM
						 FROM  TORG201 A
						WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
						          ]]>
<choose><when test='searchBaseDate  != null and !searchBaseDate.equals("")'>
			              AND REPLACE(#{searchBaseDate}, '-','') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
</when><otherwise>
			              AND TO_CHAR(sysdate, 'yyyymmdd') BETWEEN A.SDATE AND NVL(A.EDATE, '99991231')
</otherwise></choose>

<if test='searchText  != null and !searchText.equals("")'>
			 			AND A.JOB_NM  LIKE '%' ||  TRIM(#{searchText}) || '%'
</if>
<if test='searchJobType  != null and !searchJobType.equals("")'>
						AND A.JOB_TYPE  = TRIM(#{searchJobType})
</if>
						ORDER BY A.JOB_CD, A.SDATE, A.EDATE

	</select>


	<!-- (팝업)직종코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getLayerJikjongCodeList">

<choose><when test='searchText  != null and !searchText.equals("")'>
</when><otherwise>
						SELECT ''           AS CODE
						      ,'직무분류표' AS CODE_NM
							  , 0 AS "_level"
						  FROM DUAL
			UNION ALL
</otherwise></choose>
						SELECT *
						  FROM (
								SELECT B.JOB_CD AS CODE
								      ,A.JOB_NM AS CODE_NM

<choose><when test='searchText  != null and !searchText.equals("")'>
								      ,0 AS "_level"
</when><otherwise>
								      ,LEVEL AS "_level"
</otherwise></choose>
								 FROM  TORG201 A, TORG204 B
								WHERE 1=1
								  AND A.ENTER_CD = B.ENTER_CD
								  AND A.JOB_CD = B.JOB_CD
								  AND A.ENTER_CD = TRIM(#{ssnEnterCd})

<choose><when test='searchBaseDate  != null and !searchBaseDate.equals("")'>
								  AND REPLACE(TRIM(#{searchBaseDate}),'-','') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
</when><otherwise>
			             		  AND TO_CHAR(sysdate, 'yyyymmdd') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
	</otherwise>
</choose>

<choose><when test='searchText  != null and !searchText.equals("")'>
								  AND A.JOB_NM LIKE '%'||TRIM(#{searchText})||'%'
							    ORDER BY B.SEQ, A.JOB_NM
</when><otherwise>
								START WITH B.PRIOR_JOB_CD = '0'
							  CONNECT BY PRIOR B.ENTER_CD = B.ENTER_CD
							      AND PRIOR B.JOB_CD = B.PRIOR_JOB_CD
							    ORDER SIBLINGS BY B.PRIOR_JOB_CD, B.SEQ
	</otherwise>
</choose>
								 )

		
	</select>

	<!-- (팝업)근무지코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getLayerWorkAreaCodeList">
		
			<![CDATA[
						SELECT A.CODE AS CODE,
						       A.CODE_NM AS CODE_NM
						  FROM TSYS005 A
						 WHERE A.ENTER_CD = TRIM(#{ssnEnterCd})
						   AND A.GRCODE_CD = 'H90202'
						   AND A.USE_YN = 'Y'
						           ]]>
<if test='searchText  != null and !searchText.equals("")'>
						  AND A.CODE_NM  LIKE '%' ||  TRIM(#{searchText}) || '%'
</if>
						ORDER BY A.SEQ

		
	</select>


	<!-- (팝업)근무지코드 조회 -->
	<select parameterType="map" resultType="cMap" id="getKeywordEmpList">
		
			<![CDATA[
						SELECT DISTINCT ENTER_CD, SABUN, F_COM_GET_NAMES(ENTER_CD, SABUN) AS NAME
						     , F_COM_GET_ORG_NM2(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORG_NM
						     , F_COM_GET_JIKWEE_NM(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS JIKWEE_NM
						     , F_COM_GET_JIKCHAK_NM(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS JIKCHAK_NM
						     , F_COM_GET_MANAGE_NM(ENTER_CD, SABUN, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS MANAGE_NM
						     , (SELECT TO_CHAR(TO_DATE(A.BIR_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') FROM THRM100 A WHERE A.ENTER_CD = T.ENTER_CD AND A.SABUN = T.SABUN) AS BIR_YMD
						     , (SELECT TO_CHAR(TO_DATE(A.EMP_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') FROM THRM100 A WHERE A.ENTER_CD = T.ENTER_CD AND A.SABUN = T.SABUN) AS EMP_YMD
						     , F_COM_GET_CONT_ADDRESS(ENTER_CD, SABUN, 'OT') AS OFFICE_TEL 
						  FROM THRM_KEYWORD T
						 WHERE ENTER_CD = TRIM(#{ssnEnterCd})
						   AND KEYWORD LIKE '%' ||  TRIM(#{searchKeyword}) || '%'
					  ORDER BY SABUN
                ]]>
		
		
	</select>

	<!-- 직급 조회 팝업 -->
	<select parameterType="map" resultType="cMap" id="getJikgubBasicPopupList">
		 
					SELECT *
					  FROM (
					            SELECT A.ENTER_CD
					                 , A.GRCODE_CD
					                 , A.CODE AS JIKGUB_CD
					                 , A.CODE_NM AS JIKGUB_NM
					                 , A.CODE_FULL_NM AS JIKGUB_FULL_NM
					                 , A.CODE_ENG_NM AS JIKGUB_ENG_NM
					                 , A.SEQ
					                 , B.SDATE
					                 , B.EDATE
					                 , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231') AND A.USE_YN = 'Y' THEN '1'
					                        ELSE '0'
					                   END AS SCHEME_USE_YN
					              FROM TSYS005 A
					                 , (
					                         SELECT ENTER_CD
					                              , JIKGUB_CD
					                              , MIN(SDATE) AS SDATE
					                              , MAX(EDATE) AS EDATE
					                           FROM THRM151
					                          WHERE 1 = 1
<choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
					                            AND ENTER_CD = #{searchEnterCd}
	</when><otherwise>
					                            AND ENTER_CD = #{ssnEnterCd}
	</otherwise>
</choose>
					                            AND STATUS_CD = 'AA'
					                            AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
					                          GROUP BY ENTER_CD, JIKGUB_CD
					                   ) B
					             WHERE 1 = 1
					               AND A.ENTER_CD  = B.ENTER_CD(+)
					               AND A.CODE      = B.JIKGUB_CD(+)
<choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
					               AND A.ENTER_CD = #{searchEnterCd}
	</when><otherwise>
					               AND A.ENTER_CD = #{ssnEnterCd}
</otherwise></choose>
					               AND A.GRCODE_CD = 'H20010'
					               AND A.VISUAL_YN = 'Y'
<if test='serachJikgubNm != null and !serachJikgubNm.equals("")'>
					               AND (
					                          A.CODE_NM LIKE '%'||TRIM(#{serachJikgubNm})||'%'
					                       OR A.CODE_FULL_NM LIKE '%'||TRIM(#{serachJikgubNm})||'%'
					                       OR A.CODE_ENG_NM LIKE '%'||TRIM(#{serachJikgubNm})||'%'
					                   )
</if>
								<if test='searchUseYn != null and searchUseYn eq "Y"'>
									AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
									AND A.USE_YN = 'Y'
								</if>
					       )
					 ORDER BY SCHEME_USE_YN DESC, SEQ
			 
	</select>

	<!-- 직책 조회 팝업 -->
	<select parameterType="map" resultType="cMap" id="getJikchakBasicPopupList">
		
			<![CDATA[
					SELECT *
					  FROM (
					            SELECT A.ENTER_CD
					                 , A.GRCODE_CD
					                 , A.CODE AS JIKCHAK_CD
					                 , A.CODE_NM AS JIKCHAK_NM
					                 , A.CODE_FULL_NM AS JIKCHAK_FULL_NM
					                 , A.CODE_ENG_NM AS JIKCHAK_ENG_NM
					                 , A.SEQ
					                 , B.SDATE
					                 , B.EDATE
					                 , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231') AND A.USE_YN = 'Y' THEN '1'
					                        ELSE '0'
					                   END AS SCHEME_USE_YN
					              FROM TSYS005 A
					                 , (
					                         SELECT ENTER_CD
					                              , JIKCHAK_CD
					                              , MIN(SDATE) AS SDATE
					                              , MAX(EDATE) AS EDATE
					                           FROM THRM151
					                          WHERE 1 = 1 ]]>
<choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
					                            AND ENTER_CD = #{searchEnterCd}
	</when><otherwise>
					                            AND ENTER_CD = #{ssnEnterCd}
</otherwise></choose>
					                            AND STATUS_CD = 'AA'
					                            AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
					                          GROUP BY ENTER_CD, JIKCHAK_CD
					                   ) B
					             WHERE 1 = 1
					               AND A.ENTER_CD  = B.ENTER_CD(+)
					               AND A.CODE      = B.JIKCHAK_CD(+)
<choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
					               AND A.ENTER_CD = #{searchEnterCd}
	</when><otherwise>
					               AND A.ENTER_CD = #{ssnEnterCd}
</otherwise></choose>
					               AND A.GRCODE_CD = 'H20020'
					               AND A.VISUAL_YN = 'Y'
<if test='serachJikchakNm != null and !serachJikchakNm.equals("")'>
					               AND (
					                          A.CODE_NM LIKE '%'||TRIM(#{serachJikchakNm})||'%'
					                       OR A.CODE_FULL_NM LIKE '%'||TRIM(#{serachJikchakNm})||'%'
					                       OR A.CODE_ENG_NM LIKE '%'||TRIM(#{serachJikchakNm})||'%'
					                   )
</if>
								<if test='searchUseYn != null and searchUseYn eq "Y"'>
									AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
									AND A.USE_YN = 'Y'
								</if>
					       )
					 ORDER BY SCHEME_USE_YN DESC, SEQ
			 
	</select>

	<!-- 직위 조회 팝업 -->
	<select parameterType="map" resultType="cMap" id="getJikweeBasicPopupList">
		
			<![CDATA[
					SELECT *
					  FROM (
					            SELECT A.ENTER_CD
					                 , A.GRCODE_CD
					                 , A.CODE AS JIKWEE_CD
					                 , A.CODE_NM AS JIKWEE_NM
					                 , A.CODE_FULL_NM AS JIKWEE_FULL_NM
					                 , A.CODE_ENG_NM AS JIKWEE_ENG_NM
					                 , A.SEQ
					                 , B.SDATE
					                 , B.EDATE
					                 , CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231') AND A.USE_YN = 'Y' THEN '1'
					                        ELSE '0'
					                   END AS SCHEME_USE_YN
					              FROM TSYS005 A
					                 , (
					                         SELECT ENTER_CD
					                              , JIKWEE_CD
					                              , MIN(SDATE) AS SDATE
					                              , MAX(EDATE) AS EDATE
					                           FROM THRM151
					                          WHERE 1 = 1 ]]>
<choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
					                            AND ENTER_CD = #{searchEnterCd}
</when><otherwise>
					                            AND ENTER_CD = #{ssnEnterCd}
</otherwise></choose>
					                            AND STATUS_CD = 'AA'
					                            AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND NVL(EDATE, '99991231')
					                          GROUP BY ENTER_CD, JIKWEE_CD
					                   ) B
					             WHERE 1 = 1
					               AND A.ENTER_CD  = B.ENTER_CD(+)
					               AND A.CODE      = B.JIKWEE_CD(+)
<choose><when test='searchEnterCd != null and !searchEnterCd.equals("")'>
					               AND A.ENTER_CD = #{searchEnterCd}
</when><otherwise>
					               AND A.ENTER_CD = #{ssnEnterCd}
</otherwise></choose>
					               AND A.GRCODE_CD = 'H20030'
					               AND A.VISUAL_YN = 'Y'
<if test='serachJikweeNm != null and !serachJikweeNm.equals("")'>
					               AND (
					                          A.CODE_NM LIKE '%'||TRIM(#{serachJikweeNm})||'%'
					                       OR A.CODE_FULL_NM LIKE '%'||TRIM(#{serachJikweeNm})||'%'
					                       OR A.CODE_ENG_NM LIKE '%'||TRIM(#{serachJikweeNm})||'%'
					                   )
</if>
								<if test='searchUseYn != null and searchUseYn eq "Y"'>
									AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.SDATE AND NVL(B.EDATE, '99991231')
									AND A.USE_YN = 'Y'
								</if>
					       )
					 ORDER BY SCHEME_USE_YN DESC, SEQ
		
		
	</select>

	<!-- (팝업) 권한그룹 조직장 조회 -->
	<select parameterType="map" resultType="cMap" id="getAuthGrpPopupList">
		<![CDATA[
			SELECT	A.GRP_CD
				 ,	A.GRP_NM
			  FROM	TSYS307	A
			 WHERE	A.ENTER_CD	= TRIM(#{ssnEnterCd})
			   AND  A.GRP_CD = '30'
			 ORDER	BY SEQ
		]]>
	</select>
</mapper>