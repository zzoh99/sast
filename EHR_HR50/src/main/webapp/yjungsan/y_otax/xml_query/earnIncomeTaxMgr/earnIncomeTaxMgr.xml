<?xml version="1.0" encoding="UTF-8"?>
<!--
	원천징수이행상황신고서
 -->
<root>

	<!-- 원천징수이행상황신고서 조회  -->
	<query id="selectEarnIncomeTaxMgrList">
		<![CDATA[
					SELECT '0'	AS DETAIL1
						 , '0'	AS DETAIL2
						 , '0'	AS DETAIL3
						 , TAX_DOC_NO
						 , BUSINESS_PLACE_CD
						 , REPORT_YMD
						 , RPT_CD
						 , BELONG_YM
						 , BELONG_EYM
						 , PAYMENT_YM
						 , PAYMENT_EYM
						 , ORIGIN_RPT_TYPE
						 , DECODE(YEA_YN,'Y','1','')			AS YEA_YN
						 , DECODE(REFUND_REQ_YN,'Y','1','')		AS REFUND_REQ_YN
						 , DECODE(SUM_PAYMENT_YN,'Y','1','')	AS SUM_PAYMENT_YN
						 , DECODE(TAG_YB,'Y','1','')			AS TAG_YB
						 , DECODE(DANWUI_YN,'Y','1','')			AS DANWUI_YN
						 , DECODE(IWOL_YN,'Y','1','')			AS IWOL_YN
						 , DECODE(GINABBU_YN,'Y','1','')		AS GINABBU_YN
						 , DECODE(CLOSE_YN,'Y','1','')			AS CLOSE_YN
					  FROM TCPN913 A
					 WHERE ENTER_CD	= #ssnEnterCd#
					   AND REPORT_YMD LIKE #year#|| '%'
					ORDER BY REPORT_YMD DESC
			]]>
	</query>

		<!-- 사업자 조회  -->
	<query id="selectEarnIncomeTaxMgrCnt">
		<![CDATA[
				SELECT COUNT(*) AS CNT
				FROM TCPN913 A
				WHERE A.ENTER_CD = #ssnEnterCd#
				  AND A.TAX_DOC_NO = #tax_doc_no#
				  AND A.BUSINESS_PLACE_CD = #business_place_cd#
			]]>
	</query>

	<query id="deleteEarnIncomeTaxMgr">
		<![CDATA[
				DELETE FROM TCPN913
				WHERE ENTER_CD = #ssnEnterCd#
				  AND A.TAX_DOC_NO = #tax_cod_no#
				  AND A.BUSINESS_PLACE_CD = #business_place_cd#
		]]>
	</query>

	<query id="insertEarnIncomeTaxMgr">
		<![CDATA[
				INSERT INTO TCPN913
				( 	 ENTER_CD
					,TAX_DOC_NO
					,BUSINESS_PLACE_CD
					,REPORT_YMD
					,RPT_CD
					,BELONG_YM
					,BELONG_EYM
					,PAYMENT_YM
					,PAYMENT_EYM
					,ORIGIN_RPT_TYPE
					,YEA_YN
					,REFUND_REQ_YN
					,SUM_PAYMENT_YN
					,TAG_YB
					,DANWUI_YN
					,IWOL_YN
					,GINABBU_YN
					,CLOSE_YN
					,CHKDATE
					,CHKID) VALUES
				 (   #ssnEnterCd#
					,#tax_doc_no#
					,#business_place_cd#
					,#report_ymd#
					,#rpt_cd#
					,#belong_ym#
					,#belong_eym#
					,#payment_ym#
					,#payment_eym#
					,#origin_rpt_type#
					,DECODE(#yea_yn#, '1', 'Y', 'N')
					,DECODE(#refund_req_yn#, '1', 'Y', 'N')
					,DECODE(#sum_payment_yn#, '1', 'Y', 'N')
					,DECODE(#tag_yb#, '1', 'Y', 'N')
					,DECODE(#danwui_yn#, '1', 'Y', 'N')
					,DECODE(#iwol_yn#, '1', 'Y', 'N')
					,DECODE(#ginabbu_yn#, '1', 'Y', 'N')
					,DECODE(#close_yn#, '1', 'Y', 'N')
					,sysdate
					,#ssnSabun#
				)
		]]>
	</query>

	<query id="updateEarnIncomeTaxMgr">
		<![CDATA[
				UPDATE TCPN913 SET
				 	REPORT_YMD = #report_ymd#
					,RPT_CD = #rpt_cd#
					,BELONG_YM = #belong_ym#
					,BELONG_EYM = #belong_eym#
					,PAYMENT_YM = #payment_ym#
					,PAYMENT_EYM = #payment_eym#
					,ORIGIN_RPT_TYPE = #origin_rpt_type#
					,YEA_YN = DECODE(#yea_yn#, '1', 'Y', 'N')
					,REFUND_REQ_YN = DECODE(#refund_req_yn#, '1', 'Y', 'N')
					,SUM_PAYMENT_YN = DECODE(#sum_payment_yn#, '1', 'Y', 'N')
					,TAG_YB = DECODE(#tag_yb#, '1', 'Y', 'N')
					,DANWUI_YN = DECODE(#danwui_yn#, '1', 'Y', 'N')
					,IWOL_YN = DECODE(#iwol_yn#, '1', 'Y', 'N')
					,GINABBU_YN = DECODE(#ginabbu_yn#, '1', 'Y', 'N')
					,CLOSE_YN = DECODE(#close_yn#, '1', 'Y', 'N')
					,CHKDATE = sysdate
					,CHKID = #ssnSabun#
			WHERE ENTER_CD = #ssnEnterCd#
		      AND TAX_DOC_NO = #tax_doc_no#
			  AND BUSINESS_PLACE_CD = #business_place_cd#
		]]>
	</query>

	<query id="saveEarnIncomeTaxMgrDtl1Tab3BankInfo">
		<![CDATA[
				UPDATE TCPN913 
				SET BANK_CD = #bankCd#
				 	,ACCOUNT_NO = CRYPTIT.encrypt(#accountNo#, #ssnEnterCd#) 
					,CHKDATE = sysdate
					,CHKID = #ssnSabun#
			WHERE ENTER_CD = #ssnEnterCd#
		      AND TAX_DOC_NO = #taxDocNo#
			  AND BUSINESS_PLACE_CD = #businessPlaceCd#
		]]>
	</query>
	
	<query id="getFileContentList">
		<![CDATA[
			SELECT CONTENT
			  FROM TCPN921
			 WHERE ENTER_CD			 = #ssnEnterCd#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND TAX_DOC_NO		 = #taxDocNo#
			ORDER BY SEQ
		]]>
	</query>

	<query id="getEarnIncomeTaxMgrDtl1Tab1List">
		<![CDATA[
			SELECT A.REPORT_YMD
				 , A.TAX_DOC_NO
				 , A.BUSINESS_PLACE_CD
				 , A.INCOME_NM1
				 , CASE WHEN NVL(TRIM(A.INCOME_NM2), ' ') = NVL(TRIM(A.INCOME_NM3), ' ') THEN ''
						ELSE A.INCOME_NM2 END INCOME_NM2
				 , A.INCOME_NM3
				 , A.TAX_ELE_CD
				 , A.INWON_YN
				 , DECODE(B.INWON_CNT,0,'', B.INWON_CNT) AS INWON_CNT
				 , A.PAYMENT_MON_YN
				 , DECODE(B.PAYMENT_MON,0,'', B.PAYMENT_MON) AS PAYMENT_MON
				 , A.PAYE_ITAX_YN
				 , DECODE(B.PAYE_ITAX_MON,0,'', B.PAYE_ITAX_MON) AS PAYE_ITAX_MON
				 , A.PAYE_ATAX_YN
				 , DECODE(B.PAYE_ATAX_MON,0,'', B.PAYE_ATAX_MON) AS PAYE_ATAX_MON
				 , A.PAYE_ADDTAX_YN
				 , DECODE(B.PAYE_ADDTAX_MON,0,'', B.PAYE_ADDTAX_MON) AS PAYE_ADDTAX_MON
				 , A.REFUND_YN
				 , DECODE(B.REFUND_MON,0,'', B.REFUND_MON) AS REFUND_MON
				 , A.PAY_ITAX_YN
				 , DECODE(B.PAY_ITAX_MON,0,'', B.PAY_ITAX_MON) AS PAY_ITAX_MON
				 , A.PAY_ATAX_YN
				 , DECODE(B.PAY_ATAX_MON,0,'', B.PAY_ATAX_MON) AS PAY_ATAX_MON
				 , DECODE((SELECT COUNT(G.SABUN)
					         FROM TCPN916 G
						    WHERE G.ENTER_CD = B.ENTER_CD
						      AND G.TAX_DOC_NO = B.TAX_DOC_NO
						      AND G.BUSINESS_PLACE_CD = B.BUSINESS_PLACE_CD
						      AND G.TAX_ELE_CD = B.TAX_ELE_CD),0,'1','0') AS DETAIL_LIST
			  FROM (
					SELECT X.TAX_DOC_NO
						 , X.ENTER_CD
						 , X.REPORT_YMD
						 , X.BUSINESS_PLACE_CD
						 , Y.INCOME_NM1
						 , Y.INCOME_NM2
						 , Y.INCOME_NM3
						 , Y.TAX_ELE_CD
						 , Y.INWON_YN
						 , Y.PAYMENT_MON_YN
						 , Y.PAYE_ITAX_YN
						 , Y.PAYE_ATAX_YN
						 , Y.PAYE_ADDTAX_YN
						 , Y.REFUND_YN
						 , Y.PAY_ITAX_YN
						 , Y.PAY_ATAX_YN
						 , Y.SEQ						 
					  FROM TCPN913 X
						 , TCPN911 Y
					 WHERE X.ENTER_CD			= Y.ENTER_CD
					   AND X.ENTER_CD			=  #ssnEnterCd#
					   AND Y.TAX_ELE_TYPE		= '1'
					   AND X.TAX_DOC_NO			= #taxDocNo#
					   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
					   AND Y.SDATE = (	SELECT MAX(SDATE)
										  FROM TCPN911
										 WHERE ENTER_CD		= Y.ENTER_CD
										  -- AND TAX_ELE_CD	= Y.TAX_ELE_CD
										   AND SDATE		<= #reportYmd#)
					) A
				 , TCPN915 B
			 WHERE A.ENTER_CD			= B.ENTER_CD(+)
			   AND A.TAX_DOC_NO			= B.TAX_DOC_NO(+)
			   AND A.BUSINESS_PLACE_CD	= B.BUSINESS_PLACE_CD(+)
			   AND A.TAX_ELE_CD			= B.TAX_ELE_CD(+)
			ORDER BY A.SEQ
		]]>
	</query>

	<query id="getEarnIncomeTaxMgrDtl1Tab1DtlList">
		<![CDATA[
			SELECT X.TAX_DOC_NO
				 , X.REPORT_YMD
				 , X.BUSINESS_PLACE_CD
				 , DECODE(Y.AMT_12,0,'', Y.AMT_12)		AS AMT_12
				 , DECODE(Y.AMT_13,0,'', Y.AMT_13)		AS AMT_13
				 , DECODE(Y.AMT_14,0,'', Y.AMT_14)		AS AMT_14
				 , DECODE(Y.AMT_15,0,'', Y.AMT_15)		AS AMT_15
				 , DECODE(Y.AMT_16,0,'', Y.AMT_16)		AS AMT_16
				 , DECODE(Y.AMT_17_1,0,'', Y.AMT_17_1)	AS AMT_17_1
				 , DECODE(Y.AMT_17_2,0,'', Y.AMT_17_2)	AS AMT_17_2
				 , DECODE(Y.AMT_18,0,'',Y.AMT_18)		AS AMT_18
				 , DECODE(Y.AMT_19,0,'',Y.AMT_19)		AS AMT_19
				 , DECODE(Y.AMT_20,0,'',Y.AMT_20)		AS AMT_20
				 , DECODE(Y.AMT_21,0,'',Y.AMT_21)		AS AMT_21
			  FROM TCPN913 X
				 , TCPN917 Y
			 WHERE X.ENTER_CD			= Y.ENTER_CD(+)
			   AND X.TAX_DOC_NO			= Y.TAX_DOC_NO(+)
			   AND X.BUSINESS_PLACE_CD	= Y.BUSINESS_PLACE_CD(+)
			   AND X.ENTER_CD			= #ssnEnterCd#
			   AND X.TAX_DOC_NO			= #taxDocNo#
			   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
		]]>
	</query>

	<query id="getEarnIncomeTaxMgrDtl1Tab2List">
		<![CDATA[
			SELECT A.TAX_DOC_NO
				 , A.REPORT_YMD
				 , A.BUSINESS_PLACE_CD
				 , A.INCOME_NM1
				 , A.INCOME_NM2
				 , CASE WHEN NVL(TRIM(A.INCOME_NM3), ' ') = NVL(TRIM(A.INCOME_NM4), ' ') THEN ''
						ELSE A.INCOME_NM3 END INCOME_NM3
				 , A.INCOME_NM4
				 , A.TAX_ELE_CD
				 , A.INWON_YN
				 , DECODE(B.INWON_CNT,0,'', B.INWON_CNT) AS INWON_CNT
				 , A.PAYMENT_MON_YN
				 , DECODE(B.PAYMENT_MON,0,'', B.PAYMENT_MON) AS PAYMENT_MON
				 , A.PAYE_ITAX_YN
				 , DECODE(B.PAYE_ITAX_MON,0,'', B.PAYE_ITAX_MON) AS PAYE_ITAX_MON
				 , A.PAYE_ATAX_YN
				 , DECODE(B.PAYE_ATAX_MON,0,'', B.PAYE_ATAX_MON) AS PAYE_ATAX_MON
				 , A.PAYE_ADDTAX_YN
				 , DECODE(B.PAYE_ADDTAX_MON,0,'', B.PAYE_ADDTAX_MON) AS PAYE_ADDTAX_MON
				 , A.REFUND_YN
				 , DECODE(B.REFUND_MON,0,'', B.REFUND_MON) AS REFUND_MON
				 , A.PAY_ITAX_YN
				 , DECODE(B.PAY_ITAX_MON,0,'', B.PAY_ITAX_MON) AS PAY_ITAX_MON
				 , A.PAY_ATAX_YN
				 , DECODE(B.PAY_ATAX_MON,0,'', B.PAY_ATAX_MON) AS PAY_ATAX_MON
				 , A.M_TAX_ELE_CD
				 , A.ATT_TAX_ELE_CD
			  FROM (
					SELECT X.ENTER_CD
						 , X.TAX_DOC_NO
						 , X.REPORT_YMD
						 , X.BUSINESS_PLACE_CD
						 , Y.INCOME_NM1
						 , Y.INCOME_NM2
						 , Y.INCOME_NM3
						 , Y.INCOME_NM4
						 , Y.TAX_ELE_CD
						 , Y.INWON_YN
						 , Y.PAYMENT_MON_YN
						 , Y.PAYE_ITAX_YN
						 , Y.PAYE_ATAX_YN
						 , Y.PAYE_ADDTAX_YN
						 , Y.REFUND_YN
						 , Y.PAY_ITAX_YN
						 , Y.PAY_ATAX_YN
						 , Y.SEQ
						 , Y.M_TAX_ELE_CD
						 , Y.ATT_TAX_ELE_CD
					  FROM TCPN913 X
						 , TCPN911 Y
					 WHERE X.ENTER_CD			= Y.ENTER_CD
					   AND X.ENTER_CD			= #ssnEnterCd#
					   AND Y.TAX_ELE_TYPE		= '2'
					   AND X.TAX_DOC_NO			= #taxDocNo#
					   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
					   AND Y.SDATE = (SELECT MAX(SDATE)
										FROM TCPN911
									   WHERE ENTER_CD	= Y.ENTER_CD
										 --AND TAX_ELE_CD	= Y.TAX_ELE_CD
										 AND SDATE		<= #reportYmd#)
					) A
				 , TCPN915 B
			 WHERE A.ENTER_CD			= B.ENTER_CD(+)
			   AND A.TAX_DOC_NO			= B.TAX_DOC_NO(+)
			   AND A.BUSINESS_PLACE_CD	= B.BUSINESS_PLACE_CD(+)
			   AND A.TAX_ELE_CD			= B.TAX_ELE_CD(+)
			ORDER BY A.SEQ
		]]>
	</query>

	<query id="getEarnIncomeTaxMgrDtl1Tab3List">
		<![CDATA[
			SELECT X.TAX_DOC_NO
				 , X.BUSINESS_PLACE_CD
				 , X.INCOME_CD
				 , X.TAX_ELE_CD
				 , (SELECT Y.INCOME_NM3
					  FROM TCPN911 Y
					 WHERE Y.ENTER_CD	= X.ENTER_CD
					   AND Y.TAX_ELE_CD	= X.TAX_ELE_CD
					   AND Y.SDATE		= (	SELECT MAX(SDATE)
											  FROM TCPN911
											 WHERE ENTER_CD		= Y.ENTER_CD
											   AND TAX_ELE_CD	= Y.TAX_ELE_CD
											   AND SDATE		<= #reportYmd#)
					) AS TAX_ELE_NM
				 , X.BELONG_YM
				 , X.PAYMENT_YM
				 , DECODE(X.INWON_CNT,0,'', X.INWON_CNT) AS INWON_CNT
				 , DECODE(X.TAXABLE_PAY_MON,0,'', X.TAXABLE_PAY_MON) AS TAXABLE_PAY_MON
				 , DECODE(X.FIN_TOT_TAX_MON,0,'', X.FIN_TOT_TAX_MON) AS FIN_TOT_TAX_MON
				 , DECODE(X.CURR_TOT_TAX_MON,0,'', X.CURR_TOT_TAX_MON) AS CURR_TOT_TAX_MON
				 , DECODE(X.PRE_TOT_TAX_MON,0,'', X.PRE_TOT_TAX_MON) AS PRE_TOT_TAX_MON
				 , DECODE(X.GI_TOT_TAX_MON,0,'', X.GI_TOT_TAX_MON) AS GI_TOT_TAX_MON
				 , DECODE(X.BLC_TOT_TAX_MON,0,'', X.BLC_TOT_TAX_MON) AS BLC_TOT_TAX_MON
				 -- 2016-02-23 YHCHOI ADD
				 , DECODE(X.INS_TOT_TAX_MON,0,'', X.INS_TOT_TAX_MON) AS INS_TOT_TAX_MON
				 , DECODE(X.REFUND_MON,0,'', X.REFUND_MON) AS REFUND_MON
				 , DECODE(X.REFUND_REQ_MON,0,'', X.REFUND_REQ_MON) AS REFUND_REQ_MON
			  FROM TCPN919 X
			 WHERE X.ENTER_CD			= #ssnEnterCd#
			   AND X.TAX_DOC_NO			= #taxDocNo#
			   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
		]]>
	</query>

	<query id="getEarnIncomeTaxMgrDtl1Tab3BankInfo">
		<![CDATA[
			SELECT X.BANK_CD AS BANK_CD
				, CRYPTIT.decrypt(X.ACCOUNT_NO, X.ENTER_CD) AS ACCOUNT_NO
			  FROM TCPN913 X
			 WHERE X.ENTER_CD			= #ssnEnterCd#
			   AND X.TAX_DOC_NO			= #taxDocNo#
			   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
		]]>
	</query>
	
	<query id="getEarnIncomeTaxMgrDtl1Tab4List940">
		<![CDATA[
			SELECT X.TAX_DOC_NO, 
               X.BUSINESS_PLACE_CD, 
               X.INCOME_CD, 
               X.TAX_ELE_CD, 
               X.BELONG_YM, 
               X.PAYMENT_YM, 
               X.INWON_CNT, 
               X.PAYMENT_MON, 
               X.PAYE_ITAX_MON, 
               X.PAYE_ATAX_MON, 
               X.PAYE_ADDTAX_MON
			  FROM TCPN940 X
			 WHERE X.ENTER_CD			= #ssnEnterCd#
			   AND X.TAX_DOC_NO			= #taxDocNo#
			   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
		]]>
	</query>
		
	<query id="getEarnIncomeTaxMgrDtl1Tab4List941">
		<![CDATA[
			SELECT X.TAX_DOC_NO, 
               X.BUSINESS_PLACE_CD, 
               X.INCOME_CD, 
               X.SABUN, 
               X.TY_GUBUN, 
               X.SEQ, 
               X.NAME, 
               Cryptit.decrypt(X.RES_NO, X.ENTER_CD) AS RES_NO, 
               X.ENTER_NM, 
               X.ENTER_NO, 
               X.PAYE_ITAX_MON, 
               X.PAYE_ATAX_MON
			  FROM TCPN941 X
			 WHERE X.ENTER_CD			= #ssnEnterCd#
			   AND X.TAX_DOC_NO			= #taxDocNo#
			   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
			 ORDER BY  X.TAX_DOC_NO, 
               X.BUSINESS_PLACE_CD, 
               X.INCOME_CD, 
               X.SABUN, 
			   X.SEQ 
		]]>
	</query>		
	
	<query id="getEarnIncomeTaxMgrDtl1Tab4List942">
		<![CDATA[
	  	SELECT 
			A.TAX_DOC_NO AS TAX_DOC_NO
			,A.BUSINESS_PLACE_CD AS BUSINESS_PLACE_CD
			,NVL(A.PAYE_ITAX_MON, 0) AS AMT_1 -- 차이조정현황_①소득세등_합계
			,NVL(B.PAYE_ITAX_MON, 0) AS AMT_3 -- 차이조정현황_③소득세등_합계
			,NVL(B.PAYE_ITAX_MON, 0) - NVL(A.PAYE_ITAX_MON, 0) AS AMT_3_1 -- 차이조정현황_차이금액(③ - ①)
			,NVL(A.PAYE_ATAX_MON, 0) AS AMT_2 -- 차이조정현황_②농어촌특별세합계
			,NVL(B.PAYE_ATAX_MON, 0) AS AMT_4 -- 차이조정현황_④농어촌특별세합계
			,NVL(B.PAYE_ATAX_MON, 0) - NVL(A.PAYE_ATAX_MON, 0) AS AMT_4_2 -- 차이조정현황_차이금액(③ - ①)
	        ,C.REASON_1_YN 
	        ,C.REASON_2_YN 
	        ,C.REASON_3_YN 
	        ,C.REASON_4_YN 
	        ,C.REASON_5_YN 
	        ,C.REASON_MEMO
			FROM (
				SELECT X.ENTER_CD, X.TAX_DOC_NO, X.BUSINESS_PLACE_CD,
					SUM(NVL(X.PAYE_ITAX_MON,0)) AS PAYE_ITAX_MON,
					SUM(NVL(X.PAYE_ATAX_MON,0)) AS PAYE_ATAX_MON
				FROM TCPN940 X
				WHERE X.ENTER_CD = #ssnEnterCd#
					AND X.TAX_DOC_NO = #taxDocNo#
					AND X.BUSINESS_PLACE_CD =  #businessPlaceCd#
				GROUP BY X.ENTER_CD, X.TAX_DOC_NO, X.BUSINESS_PLACE_CD
			) A, -- 신고납부현황
			(
				SELECT X.ENTER_CD, X.TAX_DOC_NO, X.BUSINESS_PLACE_CD,
					SUM(NVL(X.PAYE_ITAX_MON,0)) AS PAYE_ITAX_MON,
					SUM(NVL(X.PAYE_ATAX_MON,0)) AS PAYE_ATAX_MON
				FROM TCPN941 X
				WHERE X.ENTER_CD = #ssnEnterCd#
					AND X.TAX_DOC_NO = #taxDocNo#
					AND X.BUSINESS_PLACE_CD = #businessPlaceCd#
					AND X.TY_GUBUN = '0' -- 현근무지자료만 취합
				GROUP BY X.ENTER_CD, X.TAX_DOC_NO, X.BUSINESS_PLACE_CD
			) B, -- 기납부세액현황
			TCPN942 C
			WHERE A.ENTER_CD = B.ENTER_CD(+)
				AND A.TAX_DOC_NO = B.TAX_DOC_NO(+)
				AND A.BUSINESS_PLACE_CD = B.BUSINESS_PLACE_CD(+)			   
				AND A.ENTER_CD = C.ENTER_CD(+)
				AND A.TAX_DOC_NO = C.TAX_DOC_NO(+)
				AND A.BUSINESS_PLACE_CD = C.BUSINESS_PLACE_CD(+)	
				AND A.ENTER_CD = #ssnEnterCd#
				AND A.TAX_DOC_NO = #taxDocNo#
				AND A.BUSINESS_PLACE_CD = #businessPlaceCd#		
		]]>
	</query>
	
	<query id="getEarnIncomeTaxMgrDtl1Tab5List943">
		<![CDATA[
			SELECT X.ENTER_CD
					, X.TAX_DOC_NO
					, X.BUSINESS_PLACE_CD
					, X.BELONG_YM
					, X.PAYMENT_YM
					, X.ORIGIN_RPT_TYPE
					, X.INCOME_CD
					, X.AMT_1
					, X.AMT_2
					, X.AMT_3
			  FROM TCPN943 X
			 WHERE X.ENTER_CD			= #ssnEnterCd#
			   AND X.TAX_DOC_NO			= #taxDocNo#
			   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
			 ORDER BY  X.TAX_DOC_NO, 
               X.BUSINESS_PLACE_CD, 
               X.INCOME_CD,
               X.BELONG_YM
		]]>
	</query>	
		
	<query id="getEarnIncomeTaxMgrDtl1Tab5List944">
		<![CDATA[
			SELECT X.ENTER_CD
					, X.TAX_DOC_NO
					, X.BUSINESS_PLACE_CD
					, X.BELONG_YM
					, X.PAYMENT_YM
					, X.SEQ
					, X.AMT_4
					, X.AMT_5
					, X.AMT_6
					, X.AMT_7
					, X.AMT_8
					, X.AMT_9
					, X.AMT_10
			  FROM TCPN944 X
			 WHERE X.ENTER_CD			= #ssnEnterCd#
			   AND X.TAX_DOC_NO			= #taxDocNo#
			   AND X.BUSINESS_PLACE_CD	= #businessPlaceCd#
			 ORDER BY  X.SEQ
		]]>
	</query>
			
	<query id="getEarnIncomeTaxMgrLocationCdList">
		<![CDATA[
			SELECT X.LOCATION_CD		AS CODE
				 , TRIM(X.LOCATION_NM)	AS CODE_NM
			  FROM TSYS015 X
				 , (SELECT DISTINCT TAX_LOCATION_CD AS LOCATION_CD
					  FROM TSYS015
					 WHERE ENTER_CD	= #ssnEnterCd#
					   AND TAX_BP_CD= #businessPlaceCd#
				   ) Y
			 WHERE X.ENTER_CD		= #ssnEnterCd#
			   AND X.LOCATION_CD	= Y.LOCATION_CD
			ORDER BY X.LOCATION_CD
		]]>
	</query>

	<query id="getEarnIncomeTaxMgrDtl2List">
		<![CDATA[
			SELECT X.TAX_DOC_NO
				 , X.BUSINESS_PLACE_CD
				 , X.LOCATION_CD
				 , X.SQ,X.EARN_CD
				 , X.CODE_NM
				 , X.SEQ
				 , DECODE(X.EMP_CNT,'0','',X.EMP_CNT) AS EMP_CNT
				 , DECODE(X.TAX_STD_MON,'0','',X.TAX_STD_MON) AS TAX_STD_MON
				 , DECODE(X.RTAX_MON,'0','',X.RTAX_MON) AS RTAX_MON
				 , DECODE((SELECT COUNT(G.SABUN)
					         FROM TCPN932 G
						    WHERE G.ENTER_CD = #ssnEnterCd#
						      AND G.TAX_DOC_NO = X.TAX_DOC_NO
						      AND G.BUSINESS_PLACE_CD = X.BUSINESS_PLACE_CD
						      AND G.LOCATION_CD = X.LOCATION_CD
						      AND G.EARN_CD = X.EARN_CD),0,'1','0') AS DETAIL_LIST				 
			  FROM (SELECT TAX_DOC_NO
			  			 , BUSINESS_PLACE_CD
			  			 , LOCATION_CD
			  			 , '1' AS SQ
			  			 , A.EARN_CD
			  			 , B.CODE_NM
			  			 , B.SEQ
			  			 , EMP_CNT
			  			 , TAX_STD_MON
			  			 , RTAX_MON
					  FROM TCPN931 A
						 , TSYS005 B
					 WHERE A.ENTER_CD	= #ssnEnterCd#
					   AND A.TAX_DOC_NO	= #taxDocNo#
					   AND A.BUSINESS_PLACE_CD = #businessPlaceCd#
					   AND A.LOCATION_CD= #locationCd#
					   AND A.EARN_CD	<>'99'
					   AND A.ENTER_CD	= B.ENTER_CD
					   AND B.GRCODE_CD	='C00501'
					   AND A.EARN_CD	= B.CODE
					   AND TO_CHAR(SYSDATE,'YYYYMM')||'10' BETWEEN B.S_YMD AND B.E_YMD
					UNION ALL
					SELECT '' AS TAX_DOC_NO
						 , '' AS BUSINESS_PLACE_CD
						 , '' AS LOCATION_CD
						 , '2' AS SQ
						 , '합계'
						 , '합계'
						 , 0
						 , SUM(EMP_CNT)
						 , SUM(TAX_STD_MON)
						 , SUM(RTAX_MON)
					  FROM TCPN931 A
					 WHERE A.ENTER_CD	= #ssnEnterCd#
					   AND A.TAX_DOC_NO	= #taxDocNo#
					   AND A.BUSINESS_PLACE_CD = #businessPlaceCd#
					   AND A.LOCATION_CD= #locationCd#
					   AND A.EARN_CD	<>'99'
					UNION ALL
					SELECT TAX_DOC_NO
						 , BUSINESS_PLACE_CD
						 , LOCATION_CD
						 , '3' AS SQ
						 , A.EARN_CD
						 , B.CODE_NM
						 , B.SEQ
						 , EMP_CNT
						 , TAX_STD_MON
						 , RTAX_MON
					  FROM TCPN931 A
						 , TSYS005 B
					 WHERE A.ENTER_CD	= #ssnEnterCd#
					   AND A.TAX_DOC_NO	= #taxDocNo#
					   AND A.BUSINESS_PLACE_CD = #businessPlaceCd#
					   AND A.LOCATION_CD= #locationCd#
					   AND A.EARN_CD	='99'
					   AND A.ENTER_CD	= B.ENTER_CD
					   AND B.GRCODE_CD	='C00501'
					   AND A.EARN_CD	= B.CODE
					   AND TO_CHAR(SYSDATE,'YYYYMM')||'10' BETWEEN B.S_YMD AND B.E_YMD
					UNION ALL
					SELECT '' AS TAX_DOC_NO
						 , '' AS BUSINESS_PLACE_CD
						 , '' AS LOCATION_CD
						 , '4' AS SQ
						 , '납부세액'
						 , '납부세액'
						 , 0
						 , SUM(EMP_CNT)
						 --, SUM(CASE WHEN EARN_CD='99' THEN TAX_STD_MON*-1 ELSE TAX_STD_MON END)
						 --, SUM(CASE WHEN EARN_CD='99' THEN RTAX_MON*-1 ELSE RTAX_MON END)
                         , SUM(NVL(TAX_STD_MON, 0))
                         , SUM(NVL(RTAX_MON, 0))
					  FROM TCPN931 A
					 WHERE A.ENTER_CD	= #ssnEnterCd#
					   AND A.TAX_DOC_NO	= #taxDocNo#
					   AND A.BUSINESS_PLACE_CD = #businessPlaceCd#
					   AND A.LOCATION_CD= #locationCd#
					) X
			 ORDER BY X.SQ, X.SEQ
		]]>
	</query>
<!-- 지방소득세환급액 조회 항목변경 (20180629) -->
	<query id="getEarnIncomeTaxMgrDtl2RefundMonMap_old">
		<![CDATA[
			SELECT ENTER_CD
				 , TAX_DOC_NO
				 , BUSINESS_PLACE_CD
				 , LOCATION_CD
				 , FUNC_COMMA(E_PRE_NO_REFUND_MON,0) AS E_PRE_NO_REFUND_MON
				 , FUNC_COMMA(E_CRE_REFUND_MON,0) AS E_CRE_REFUND_MON
				 , FUNC_COMMA(E_ADJ_REFUND_MON,0) AS E_ADJ_REFUND_MON
				 , FUNC_COMMA(E_NXT_OVER_MON,0) AS E_NXT_OVER_MON
				 , FUNC_COMMA(R_PRE_NO_REFUND_MON,0) AS R_PRE_NO_REFUND_MON
				 , FUNC_COMMA(R_CRE_REFUND_MON,0) AS R_CRE_REFUND_MON
				 , FUNC_COMMA(R_ADJ_REFUND_MON,0) AS R_ADJ_REFUND_MON
				 , FUNC_COMMA(R_NXT_OVER_MON,0) AS R_NXT_OVER_MON
				 , REQ_DIV
			  FROM TCPN933
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND TAX_DOC_NO	= #taxDocNo#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>

<!-- 지방소득세환급액 조회 항목변경 (20180629) -->	
	<query id="getEarnIncomeTaxMgrDtl2RefundMonMap">
		<![CDATA[
			SELECT ENTER_CD
				 , TAX_DOC_NO
				 , BUSINESS_PLACE_CD
				 , LOCATION_CD
				 , NVL(PAY_ADTX		, 0) AS PAY_ADTX		
				 , NVL(ADTX_AM		, 0) AS ADTX_AM		
				 , NVL(DLQ_ADTX		, 0) AS DLQ_ADTX		
				 , NVL(ADD_MM_RTN	, 0) AS ADD_MM_RTN		
				 , NVL(ADD_MM_AAMT	, 0) AS ADD_MM_AAMT	
				 , NVL(ADD_YY_TRTN	, 0) AS ADD_YY_TRTN	
				 , NVL(ADD_YY_TAMT	, 0) AS ADD_YY_TAMT	
				 , NVL(ADD_ETC_RTN	, 0) AS ADD_ETC_RTN	
				 , NVL(ADD_RDT_ADTX	, 0) AS ADD_RDT_ADTX	
				 , NVL(ADD_RDT_AADD	, 0) AS ADD_RDT_AADD	
				 , NVL(ADD_SUM_RTN	, 0) AS ADD_SUM_RTN	
				 , NVL(ADD_SUM_AAMT	, 0) AS ADD_SUM_AAMT	
				 , NVL(ADD_OUT_AMT	, 0) AS ADD_OUT_AMT	
				 , NVL(ADD_TOT_AMT	, 0) AS ADD_TOT_AMT	
				 , NVL(INTX			, 0) AS INTX			
				 , NVL(TOT_ADTX		, 0) AS TOT_ADTX		
				 , NVL(ADD_OUT_SAMT	, 0) AS ADD_OUT_SAMT	
				 , REQ_DIV
				 , DLQ_CNT
			  FROM TCPN933
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND TAX_DOC_NO	= #taxDocNo#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>

	<query id="getEarnIncomeTaxMgrDtl3Map">
		<![CDATA[
			SELECT ENTER_CD
				 , TAX_DOC_NO
				 , BUSINESS_PLACE_CD
				 , NVL(S_EMP_CNT,0) AS S_EMP_CNT
				 , NVL(D_EMP_CNT,0) AS D_EMP_CNT
				 , NVL(TAX_EXP_MON,0) AS TAX_EXP_MON
				 , NVL(TAX_MON,0) AS TAX_MON
				 , NVL(TAX_EXP_MON+TAX_MON,0) AS TOT_MON
				 , NVL(TAX_CAL_MON,0) AS TAX_CAL_MON
				 , TO_CHAR(TO_DATE(PAYMENT_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS PAYMENT_YMD
				 , NVL(TAX_ADD_MON,0) AS TAX_ADD_MON
				 , NVL(TOT_TAX_MON,0) AS TOT_TAX_MON
				 , TO_CHAR(TO_DATE(PAYMENT_YMD_2D,'YYYYMMDD'),'YYYY-MM-DD') AS PAYMENT_YMD_2D
				 , NVL(DELAY_DAY,0) AS DELAY_DAY
				 , NVL(PAYMENT_ADD_TAX_MON,0) AS PAYMENT_ADD_TAX_MON
				 , NVL(REG_ADD_TAX_MON,0) AS REG_ADD_TAX_MON
				 , OWN_TYPE
				 , NVL(NON_REG_MON,0) AS NON_REG_MON
				 , NVL(UNDER_REG_MON,0) AS UNDER_REG_MON
				 , NVL(PAYMENT_DELAY_MON,0) AS PAYMENT_DELAY_MON
				 , HEAD_OFFICE_ADDR
				 , CRTDATE
			  FROM TCPN935
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND TAX_DOC_NO	= #taxDocNo#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>

	<query id="saveEarnIncomeTaxMgr">
		<![CDATA[
				MERGE INTO TCPN913 T
				USING	(
						SELECT A.TAX_DOC_NO
							 , A.BUSINESS_PLACE_CD
							 , A.REPORT_YMD
							 , A.RPT_CD
							 , A.BELONG_YM
							 , A.PAYMENT_YM
							 , A.ORIGIN_RPT_TYPE
							 , A.YEA_YN
							 , A.REFUND_REQ_YN
							 , A.SUM_PAYMENT_YN
							 , A.TAG_YB
							 , A.CLOSE_YN
						  FROM (
								SELECT TRIM(#tax_doc_no#)							AS TAX_DOC_NO
									 , TRIM(#business_place_cd#)					AS BUSINESS_PLACE_CD
									 , TRIM(#report_ymd#)						AS REPORT_YMD
									 , TRIM(#rpt_cd#)							AS RPT_CD
									 , TRIM(#belong_ym#)							AS BELONG_YM
									 , TRIM(#payment_ym#)						AS PAYMENT_YM
									 , TRIM(#origin_rpt_type#)					AS ORIGIN_RPT_TYPE
									 , DECODE(TRIM(#yea_yn#),'1','Y','N')		AS YEA_YN
									 , DECODE(TRIM(#refund_req_yn#),'1','Y','N')	AS REFUND_REQ_YN
									 , DECODE(TRIM(#sum_payment_yn#),'1','Y','N')	AS SUM_PAYMENT_YN
									 , DECODE(TRIM(#tag_yb#),'1','Y','N')		AS TAG_YB
									 , DECODE(TRIM(#close_yn#),'1','Y','N')		AS CLOSE_YN
								  FROM DUAL
								) A
						 WHERE A.TAX_DOC_NO			IS NOT NULL
						   AND A.BUSINESS_PLACE_CD	IS NOT NULL
						) S
				ON (	T.ENTER_CD			= #ssnEnterCd#
					AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
					AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
					)
				WHEN MATCHED THEN
					UPDATE SET T.REPORT_YMD		= S.REPORT_YMD
							 , T.RPT_CD			= S.RPT_CD
							 , T.BELONG_YM		= S.BELONG_YM
							 , T.PAYMENT_YM		= S.PAYMENT_YM
							 , T.ORIGIN_RPT_TYPE= S.ORIGIN_RPT_TYPE
							 , T.YEA_YN			= S.YEA_YN
							 , T.REFUND_REQ_YN	= S.REFUND_REQ_YN
							 , T.SUM_PAYMENT_YN	= S.SUM_PAYMENT_YN
							 , T.TAG_YB			= S.TAG_YB
							 , T.CLOSE_YN		= S.CLOSE_YN
							 , T.CHKDATE		= SYSDATE
							 , T.CHKID			= #ssnSabun#
				WHEN NOT MATCHED THEN
					INSERT
					(
						  T.ENTER_CD
						, T.TAX_DOC_NO
						, T.BUSINESS_PLACE_CD
						, T.REPORT_YMD
						, T.RPT_CD
						, T.BELONG_YM
						, T.PAYMENT_YM
						, T.ORIGIN_RPT_TYPE
						, T.YEA_YN
						, T.REFUND_REQ_YN
						, T.SUM_PAYMENT_YN
						, T.TAG_YB
						, T.CLOSE_YN
						, T.CHKDATE
						, T.CHKID
					)
					VALUES
					(
						  #ssnEnterCd#
						, S.TAX_DOC_NO
						, S.BUSINESS_PLACE_CD
						, S.REPORT_YMD
						, S.RPT_CD
						, S.BELONG_YM
						, S.PAYMENT_YM
						, S.ORIGIN_RPT_TYPE
						, S.YEA_YN
						, S.REFUND_REQ_YN
						, S.SUM_PAYMENT_YN
						, S.TAG_YB
						, S.CLOSE_YN
						, SYSDATE
						, #ssnSabun#
					)
			]]>
	</query>

	<query id="saveEarnIncomeTaxMgrDtl1Tab1">
		<![CDATA[
				MERGE INTO TCPN915 T
				USING	(
						SELECT A.TAX_DOC_NO
							 , A.BUSINESS_PLACE_CD
							 , A.TAX_ELE_CD
							 , A.INWON_CNT
							 , A.PAYMENT_MON
							 , A.PAYE_ITAX_MON
							 , A.PAYE_ATAX_MON
							 , A.PAYE_ADDTAX_MON
							 , A.REFUND_MON
							 , A.PAY_ITAX_MON
							 , A.PAY_ATAX_MON
						  FROM (
								SELECT TRIM(#tax_doc_no#)					AS TAX_DOC_NO
									 , TRIM(#business_place_cd#)			AS BUSINESS_PLACE_CD
									 , TRIM(#tax_ele_cd#)					AS TAX_ELE_CD
									 , TO_NUMBER(TRIM(#inwon_cnt#))		AS INWON_CNT
									 , TO_NUMBER(TRIM(#payment_mon#))	AS PAYMENT_MON
									 , TO_NUMBER(TRIM(#paye_itax_mon#))	AS PAYE_ITAX_MON
									 , TO_NUMBER(TRIM(#paye_atax_mon#))	AS PAYE_ATAX_MON
									 , TO_NUMBER(TRIM(#paye_addtax_mon#))	AS PAYE_ADDTAX_MON
									 , TO_NUMBER(TRIM(#refund_mon#))		AS REFUND_MON
									 , TO_NUMBER(TRIM(#pay_itax_mon#))	AS PAY_ITAX_MON
									 , TO_NUMBER(TRIM(#pay_atax_mon#))	AS PAY_ATAX_MON
								  FROM DUAL
								) A
						 WHERE A.TAX_DOC_NO			IS NOT NULL
						   AND A.BUSINESS_PLACE_CD	IS NOT NULL
						   AND A.TAX_ELE_CD			IS NOT NULL
						) S
				ON (	T.ENTER_CD			= #ssnEnterCd#
					AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
					AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
					AND	T.TAX_ELE_CD		= S.TAX_ELE_CD
					)
				WHEN MATCHED THEN
					UPDATE SET T.INWON_CNT			= S.INWON_CNT
							 , T.PAYMENT_MON		= S.PAYMENT_MON
							 , T.PAYE_ITAX_MON		= S.PAYE_ITAX_MON
							 , T.PAYE_ATAX_MON		= S.PAYE_ATAX_MON
							 , T.PAYE_ADDTAX_MON	= S.PAYE_ADDTAX_MON
							 , T.REFUND_MON			= S.REFUND_MON
							 , T.PAY_ITAX_MON		= S.PAY_ITAX_MON
							 , T.PAY_ATAX_MON		= S.PAY_ATAX_MON
							 , T.CHKDATE			= SYSDATE
							 , T.CHKID				= #ssnSabun#
				WHEN NOT MATCHED THEN
					INSERT
					(
						  T.ENTER_CD
						, T.TAX_DOC_NO
						, T.BUSINESS_PLACE_CD
						, T.TAX_ELE_CD
						, T.INWON_CNT
						, T.PAYMENT_MON
						, T.PAYE_ITAX_MON
						, T.PAYE_ATAX_MON
						, T.PAYE_ADDTAX_MON
						, T.REFUND_MON
						, T.PAY_ITAX_MON
						, T.PAY_ATAX_MON
						, T.CHKDATE
						, T.CHKID
					)
					VALUES
					(
						  #ssnEnterCd#
						, S.TAX_DOC_NO
						, S.BUSINESS_PLACE_CD
						, S.TAX_ELE_CD
						, S.INWON_CNT
						, S.PAYMENT_MON
						, S.PAYE_ITAX_MON
						, S.PAYE_ATAX_MON
						, S.PAYE_ADDTAX_MON
						, S.REFUND_MON
						, S.PAY_ITAX_MON
						, S.PAY_ATAX_MON
						, SYSDATE
						, #ssnSabun#
					)
			]]>
	</query>

	<query id="saveEarnIncomeTaxMgrDtl1Tab1Dtl">
		<![CDATA[
				MERGE INTO TCPN917 T
				USING	(
						SELECT A.TAX_DOC_NO
							 , A.BUSINESS_PLACE_CD
							 , A.AMT_12
							 , A.AMT_13
							 , A.AMT_14
							 , A.AMT_15
							 , A.AMT_16
							 , A.AMT_17_1
							 , A.AMT_17_2
							 , A.AMT_18
							 , A.AMT_19
							 , A.AMT_20
							 , A.AMT_21
						  FROM (
								SELECT TRIM(#tax_doc_no#)				AS TAX_DOC_NO
									 , TRIM(#business_place_cd#)		AS BUSINESS_PLACE_CD
									 , TO_NUMBER(TRIM(#amt_12#))		AS AMT_12
									 , TO_NUMBER(TRIM(#amt_13#))		AS AMT_13
									 , TO_NUMBER(TRIM(#amt_14#))		AS AMT_14
									 , TO_NUMBER(TRIM(#amt_15#))		AS AMT_15
									 , TO_NUMBER(TRIM(#amt_16#))		AS AMT_16
									 , TO_NUMBER(TRIM(#amt_17_1#))	AS AMT_17_1
									 , TO_NUMBER(TRIM(#amt_17_2#))	AS AMT_17_2
									 , TO_NUMBER(TRIM(#amt_18#))		AS AMT_18
									 , TO_NUMBER(TRIM(#amt_19#))		AS AMT_19
									 , TO_NUMBER(TRIM(#amt_20#))		AS AMT_20
									 , TO_NUMBER(TRIM(#amt_21#))		AS AMT_21
								  FROM DUAL
								) A
						 WHERE A.TAX_DOC_NO			IS NOT NULL
						   AND A.BUSINESS_PLACE_CD	IS NOT NULL
						) S
				ON (	T.ENTER_CD			= #ssnEnterCd#
					AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
					AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
					)
				WHEN MATCHED THEN
					UPDATE SET T.AMT_12		= S.AMT_12
							 , T.AMT_13		= S.AMT_13
							 , T.AMT_14		= S.AMT_14
							 , T.AMT_15		= S.AMT_15
							 , T.AMT_16		= S.AMT_16
							 , T.AMT_17_1	= S.AMT_17_1
							 , T.AMT_17_2	= S.AMT_17_2
							 , T.AMT_18		= S.AMT_18
							 , T.AMT_19		= S.AMT_19
							 , T.AMT_20		= S.AMT_20
							 , T.AMT_21		= S.AMT_21
							 , T.CHKDATE	= SYSDATE
							 , T.CHKID		= #ssnSabun#
				WHEN NOT MATCHED THEN
					INSERT
					(
						  T.ENTER_CD
						, T.TAX_DOC_NO
						, T.BUSINESS_PLACE_CD
						, T.AMT_12
						, T.AMT_13
						, T.AMT_14
						, T.AMT_15
						, T.AMT_16
						, T.AMT_17_1
						, T.AMT_17_2
						, T.AMT_18
						, T.AMT_19
						, T.AMT_20
						, T.AMT_21
						, T.CHKDATE
						, T.CHKID
					)
					VALUES
					(
						  #ssnEnterCd#
						, S.TAX_DOC_NO
						, S.BUSINESS_PLACE_CD
						, S.AMT_12
						, S.AMT_13
						, S.AMT_14
						, S.AMT_15
						, S.AMT_16
						, S.AMT_17_1
						, S.AMT_17_2
						, S.AMT_18
						, S.AMT_19
						, S.AMT_20
						, S.AMT_21
						, SYSDATE
						, #ssnSabun#
					)
			]]>
	</query>

	<query id="saveEarnIncomeTaxMgrDtl1Tab3">
			<![CDATA[
					MERGE INTO TCPN919 T
					USING	(
							SELECT A.TAX_DOC_NO
								 , A.BUSINESS_PLACE_CD
								 , A.INCOME_CD
								 , A.TAX_ELE_CD
								 , A.BELONG_YM
								 , A.PAYMENT_YM
								 , A.INWON_CNT
								 , A.TAXABLE_PAY_MON
								 , A.FIN_TOT_TAX_MON
								 , A.CURR_TOT_TAX_MON
								 , A.PRE_TOT_TAX_MON
								 , A.GI_TOT_TAX_MON
								 , A.BLC_TOT_TAX_MON
								 -- 2016-02-23 YHCHOI ADD
								 , A.INS_TOT_TAX_MON
								 , A.REFUND_MON
								 , A.REFUND_REQ_MON
							  FROM (
									SELECT TRIM(#tax_doc_no#)						AS TAX_DOC_NO
										 , TRIM(#business_place_cd#)				AS BUSINESS_PLACE_CD
										 , TRIM(#income_cd#)						AS INCOME_CD
										 , TRIM(#tax_ele_cd#)						AS TAX_ELE_CD
										 , TRIM(#belong_ym#)						AS BELONG_YM
										 , TRIM(#payment_ym#)						AS PAYMENT_YM
										 , TO_NUMBER(TRIM(#inwon_cnt#))			AS INWON_CNT
										 , TO_NUMBER(TRIM(#taxable_pay_mon#))		AS TAXABLE_PAY_MON
										 , TO_NUMBER(TRIM(#fin_tot_tax_mon#))		AS FIN_TOT_TAX_MON
										 , TO_NUMBER(TRIM(#curr_tot_tax_mon#))		AS CURR_TOT_TAX_MON
										 , TO_NUMBER(TRIM(#pre_tot_tax_mon#))		AS PRE_TOT_TAX_MON
										 , TO_NUMBER(TRIM(#gi_tot_tax_mon#))		AS GI_TOT_TAX_MON
										 , TO_NUMBER(TRIM(#blc_tot_tax_mon#))		AS BLC_TOT_TAX_MON
										 -- 2016-02-23 YHCHOI ADD
										 , TO_NUMBER(TRIM(#ins_tot_tax_mon#))		AS INS_TOT_TAX_MON
										 , TO_NUMBER(TRIM(#refund_mon#))			AS REFUND_MON
										 , TO_NUMBER(TRIM(#refund_req_mon#))		AS REFUND_REQ_MON
									  FROM DUAL
									) A
							 WHERE A.TAX_DOC_NO			IS NOT NULL
							   AND A.BUSINESS_PLACE_CD	IS NOT NULL
							   AND A.INCOME_CD			IS NOT NULL
							   AND A.TAX_ELE_CD			IS NOT NULL
							) S
					ON (	T.ENTER_CD			= #ssnEnterCd#
						AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
						AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
						AND	T.INCOME_CD			= S.INCOME_CD
						AND	T.TAX_ELE_CD		= S.TAX_ELE_CD
						AND	T.BELONG_YM		= S.BELONG_YM
						AND	T.PAYMENT_YM	= S.PAYMENT_YM
						)
					WHEN MATCHED THEN
						UPDATE SET T.INWON_CNT			= S.INWON_CNT
								 , T.TAXABLE_PAY_MON	= S.TAXABLE_PAY_MON
								 , T.FIN_TOT_TAX_MON	= S.FIN_TOT_TAX_MON
								 , T.CURR_TOT_TAX_MON	= S.CURR_TOT_TAX_MON
								 , T.PRE_TOT_TAX_MON	= S.PRE_TOT_TAX_MON
								 , T.GI_TOT_TAX_MON		= S.GI_TOT_TAX_MON
								 , T.BLC_TOT_TAX_MON	= S.BLC_TOT_TAX_MON
								 -- 2016-02-23 YHCHOI ADD
								 , T.INS_TOT_TAX_MON	= S.INS_TOT_TAX_MON
								 , T.REFUND_MON			= S.REFUND_MON
								 , T.REFUND_REQ_MON		= S.REFUND_REQ_MON
								 , T.CHKDATE			= SYSDATE
								 , T.CHKID				= #ssnSabun#
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.TAX_DOC_NO
							, T.BUSINESS_PLACE_CD
							, T.INCOME_CD
							, T.TAX_ELE_CD
							, T.BELONG_YM
							, T.PAYMENT_YM
							, T.INWON_CNT
							, T.TAXABLE_PAY_MON
							, T.FIN_TOT_TAX_MON
							, T.CURR_TOT_TAX_MON
							, T.PRE_TOT_TAX_MON
							, T.GI_TOT_TAX_MON
							, T.BLC_TOT_TAX_MON
							-- 2016-02-23 YHCHOI ADD
							, T.INS_TOT_TAX_MON
							, T.REFUND_MON
							, T.REFUND_REQ_MON
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #ssnEnterCd#
							, S.TAX_DOC_NO
							, S.BUSINESS_PLACE_CD
							, S.INCOME_CD
							, S.TAX_ELE_CD
							, S.BELONG_YM
							, S.PAYMENT_YM
							, S.INWON_CNT
							, S.TAXABLE_PAY_MON
							, S.FIN_TOT_TAX_MON
							, S.CURR_TOT_TAX_MON
							, S.PRE_TOT_TAX_MON
							, S.GI_TOT_TAX_MON
							, S.BLC_TOT_TAX_MON
							-- 2016-02-23 YHCHOI ADD
							, S.INS_TOT_TAX_MON
							, S.REFUND_MON
							, S.REFUND_REQ_MON
							, SYSDATE
							, #ssnSabun#
						)
				]]>
	</query>

	<query id="saveEarnIncomeTaxMgrDtl2">
			<![CDATA[
					MERGE INTO TCPN931 T
					USING	(
							SELECT A.TAX_DOC_NO
								 , A.BUSINESS_PLACE_CD
								 , A.LOCATION_CD
								 , A.EARN_CD
								 , A.EMP_CNT
								 , A.TAX_STD_MON
								 , A.RTAX_MON
							  FROM (
									SELECT TRIM(#tax_doc_no#)					AS TAX_DOC_NO
										 , TRIM(#business_place_cd#)			AS BUSINESS_PLACE_CD
										 , TRIM(#location_cd#)				AS LOCATION_CD
										 , TRIM(#earn_cd#)					AS EARN_CD
										 , TO_NUMBER(TRIM(#emp_cnt#))		AS EMP_CNT
										 , TO_NUMBER(TRIM(#tax_std_mon#))		AS TAX_STD_MON
										 , TO_NUMBER(TRIM(#rtax_mon#))		AS RTAX_MON
									  FROM DUAL
									) A
							 WHERE A.TAX_DOC_NO			IS NOT NULL
							   AND A.BUSINESS_PLACE_CD	IS NOT NULL
							   AND A.LOCATION_CD		IS NOT NULL
							   AND A.EARN_CD			IS NOT NULL
							) S
					ON (	T.ENTER_CD			= #ssnEnterCd#
						AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
						AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
						AND	T.LOCATION_CD		= S.LOCATION_CD
						AND	T.EARN_CD			= S.EARN_CD
						)
					WHEN MATCHED THEN
						UPDATE SET T.EMP_CNT		= S.EMP_CNT
								 , T.TAX_STD_MON	= S.TAX_STD_MON
								 , T.RTAX_MON		= S.RTAX_MON
								 , T.CHKDATE		= SYSDATE
								 , T.CHKID			= #ssnSabun#
					WHEN NOT MATCHED THEN
						INSERT
						(
							  T.ENTER_CD
							, T.TAX_DOC_NO
							, T.BUSINESS_PLACE_CD
							, T.LOCATION_CD
							, T.EARN_CD
							, T.EMP_CNT
							, T.TAX_STD_MON
							, T.RTAX_MON
							, T.CHKDATE
							, T.CHKID
						)
						VALUES
						(
							  #ssnEnterCd#
							, S.TAX_DOC_NO
							, S.BUSINESS_PLACE_CD
							, S.LOCATION_CD
							, S.EARN_CD
							, S.EMP_CNT
							, S.TAX_STD_MON
							, S.RTAX_MON
							, SYSDATE
							, #ssnSabun#
						)
				]]>
	</query>

<!-- 지방소득세환급액 입력 항목변경 (20180629) -->
	<query id="saveEarnIncomeTaxMgrDtl2RefundMon_old">
		<![CDATA[
			MERGE INTO TCPN933 T
			USING	(
					SELECT A.TAX_DOC_NO
						 , A.BUSINESS_PLACE_CD
						 , A.LOCATION_CD
						 , A.E_PRE_NO_REFUND_MON
						 , A.E_CRE_REFUND_MON
						 , A.E_ADJ_REFUND_MON
						 , A.E_NXT_OVER_MON
						 , A.R_PRE_NO_REFUND_MON
						 , A.R_CRE_REFUND_MON
						 , A.R_ADJ_REFUND_MON
						 , A.R_NXT_OVER_MON
					  FROM (
							SELECT TRIM(#taxDocNo#)										AS TAX_DOC_NO
								 , TRIM(#businessPlaceCd#)								AS BUSINESS_PLACE_CD
								 , TRIM(#locationCd#)									AS LOCATION_CD
								 , TO_NUMBER(TRIM(REPLACE(#ePreNoRefundMon#,',','')))	AS E_PRE_NO_REFUND_MON
								 , TO_NUMBER(TRIM(REPLACE(#eCreRefundMon#,',','')))		AS E_CRE_REFUND_MON
								 , TO_NUMBER(TRIM(REPLACE(#eAdjRefundMon#,',','')))		AS E_ADJ_REFUND_MON
								 , TO_NUMBER(TRIM(REPLACE(#eNxtOverMon#,',','')))		AS E_NXT_OVER_MON
								 , TO_NUMBER(TRIM(REPLACE(#rPreNoRefundMon#,',','')))	AS R_PRE_NO_REFUND_MON
								 , TO_NUMBER(TRIM(REPLACE(#rCreRefundMon#,',','')))		AS R_CRE_REFUND_MON
								 , TO_NUMBER(TRIM(REPLACE(#rAdjRefundMon#,',','')))		AS R_ADJ_REFUND_MON
								 , TO_NUMBER(TRIM(REPLACE(#rNxtOverMon#,',','')))		AS R_NXT_OVER_MON
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					   AND A.LOCATION_CD		IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
				AND	T.LOCATION_CD		= S.LOCATION_CD
				)
			WHEN MATCHED THEN
				UPDATE SET T.E_PRE_NO_REFUND_MON	= S.E_PRE_NO_REFUND_MON
						 , T.E_CRE_REFUND_MON		= S.E_CRE_REFUND_MON
						 , T.E_ADJ_REFUND_MON		= S.E_ADJ_REFUND_MON
						 , T.E_NXT_OVER_MON			= S.E_NXT_OVER_MON
						 , T.R_PRE_NO_REFUND_MON	= S.R_PRE_NO_REFUND_MON
						 , T.R_CRE_REFUND_MON		= S.R_CRE_REFUND_MON
						 , T.R_ADJ_REFUND_MON		= S.R_ADJ_REFUND_MON
						 , T.R_NXT_OVER_MON			= S.R_NXT_OVER_MON
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.LOCATION_CD
					, T.E_PRE_NO_REFUND_MON
					, T.E_CRE_REFUND_MON
					, T.E_ADJ_REFUND_MON
					, T.E_NXT_OVER_MON
					, T.R_PRE_NO_REFUND_MON
					, T.R_CRE_REFUND_MON
					, T.R_ADJ_REFUND_MON
					, T.R_NXT_OVER_MON
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.LOCATION_CD
					, S.E_PRE_NO_REFUND_MON
					, S.E_CRE_REFUND_MON
					, S.E_ADJ_REFUND_MON
					, S.E_NXT_OVER_MON
					, S.R_PRE_NO_REFUND_MON
					, S.R_CRE_REFUND_MON
					, S.R_ADJ_REFUND_MON
					, S.R_NXT_OVER_MON
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>
	
	<!-- 지방소득세환급액 입력 항목변경 (20180629) -->	
	<query id="saveEarnIncomeTaxMgrDtl2RefundMon">
		<![CDATA[
			MERGE INTO TCPN933 T
			USING	(
					SELECT A.TAX_DOC_NO
						 , A.BUSINESS_PLACE_CD
						 , A.LOCATION_CD
						 , A.PAY_ADTX				--가산세
						 , A.ADTX_AM				--가산세1정액
						 , A.DLQ_ADTX				--가산세2지연기간
						 , A.ADD_MM_RTN				--당월기타환급액
						 , A.ADD_MM_AAMT			--당월추가납부액
						 , A.ADD_YY_TRTN			--연말정산환급액
						 , A.ADD_YY_TAMT			--연말정산추가납부액
						 , A.ADD_ETC_RTN			--중도퇴사자환급액
						 , A.ADD_RDT_ADTX			--가산세대상추가납부액
						 , A.ADD_RDT_AADD			--가산세대상추가가산세
						 , A.ADD_SUM_RTN			--환급합계금액
						 , A.ADD_SUM_AAMT			--추가납부합계금액
						 , A.ADD_OUT_AMT			--가감조정금액
						 , A.ADD_TOT_AMT			--납부총금액
						 , A.INTX					--납부할 지방소득세
						 , A.TOT_ADTX				--납부할 가산세
						 , A.ADD_OUT_SAMT			--차감후환급잔액
						 , A.DLQ_CNT				--납부지연일수
					  FROM (
							SELECT TRIM(#taxDocNo#)									AS TAX_DOC_NO
								 , TRIM(#businessPlaceCd#)							AS BUSINESS_PLACE_CD
								 , TRIM(#locationCd#)								AS LOCATION_CD
								 , TO_NUMBER(TRIM(REPLACE(#payAdtx#,',','')))		AS PAY_ADTX	
								 , TO_NUMBER(TRIM(REPLACE(#adtxAm#,',','')))		AS ADTX_AM	
								 , TO_NUMBER(TRIM(REPLACE(#dlqAdtx#,',','')))		AS DLQ_ADTX	
								 , TO_NUMBER(TRIM(REPLACE(#addMmRtn#,',','')))		AS ADD_MM_RTN	
								 , TO_NUMBER(TRIM(REPLACE(#addMmAamt#,',','')))		AS ADD_MM_AAMT
								 , TO_NUMBER(TRIM(REPLACE(#addYyTrtn#,',','')))		AS ADD_YY_TRTN
								 , TO_NUMBER(TRIM(REPLACE(#addYyTamt#,',','')))		AS ADD_YY_TAMT
								 , TO_NUMBER(TRIM(REPLACE(#addEtcRtn#,',','')))		AS ADD_ETC_RTN
								 , TO_NUMBER(TRIM(REPLACE(#addRdtAdtx#,',','')))	AS ADD_RDT_ADTX
								 , TO_NUMBER(TRIM(REPLACE(#addRdtAadd#,',','')))	AS ADD_RDT_AADD
								 , TO_NUMBER(TRIM(REPLACE(#addSumRtn#,',','')))		AS ADD_SUM_RTN
								 , TO_NUMBER(TRIM(REPLACE(#addSumAamt#,',','')))	AS ADD_SUM_AAMT
								 , TO_NUMBER(TRIM(REPLACE(#addOutAmt#,',','')))		AS ADD_OUT_AMT
								 , TO_NUMBER(TRIM(REPLACE(#addTotAmt#,',','')))		AS ADD_TOT_AMT
								 , TO_NUMBER(TRIM(REPLACE(#intx#,',','')))			AS INTX		
								 , TO_NUMBER(TRIM(REPLACE(#totAdtx#,',','')))		AS TOT_ADTX	
								 , TO_NUMBER(TRIM(REPLACE(#addOutSamt#,',','')))	AS ADD_OUT_SAMT
								 , TRIM(#dlqCnt#)									AS DLQ_CNT
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					   AND A.LOCATION_CD		IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
				AND	T.LOCATION_CD		= S.LOCATION_CD
				)
			WHEN MATCHED THEN
				UPDATE SET T.PAY_ADTX			= S.PAY_ADTX		
						 , T.ADTX_AM			= S.ADTX_AM		
						 , T.DLQ_ADTX			= S.DLQ_ADTX		
						 , T.ADD_MM_RTN			= S.ADD_MM_RTN		
						 , T.ADD_MM_AAMT		= S.ADD_MM_AAMT	
						 , T.ADD_YY_TRTN		= S.ADD_YY_TRTN	
						 , T.ADD_YY_TAMT		= S.ADD_YY_TAMT	
						 , T.ADD_ETC_RTN		= S.ADD_ETC_RTN	
						 , T.ADD_RDT_ADTX		= S.ADD_RDT_ADTX	
						 , T.ADD_RDT_AADD		= S.ADD_RDT_AADD	
						 , T.ADD_SUM_RTN		= S.ADD_SUM_RTN	
						 , T.ADD_SUM_AAMT		= S.ADD_SUM_AAMT	
						 , T.ADD_OUT_AMT		= S.ADD_OUT_AMT	
						 , T.ADD_TOT_AMT		= S.ADD_TOT_AMT	
						 , T.INTX				= S.INTX			
						 , T.TOT_ADTX			= S.TOT_ADTX		
						 , T.ADD_OUT_SAMT		= S.ADD_OUT_SAMT	
						 , T.DLQ_CNT			= S.DLQ_CNT	
						 , T.CHKDATE			= SYSDATE
						 , T.CHKID				= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.LOCATION_CD
					, T.PAY_ADTX		
					, T.ADTX_AM		
					, T.DLQ_ADTX		
					, T.ADD_MM_RTN		
					, T.ADD_MM_AAMT	
					, T.ADD_YY_TRTN	
					, T.ADD_YY_TAMT	
					, T.ADD_ETC_RTN	
					, T.ADD_RDT_ADTX	
					, T.ADD_RDT_AADD	
					, T.ADD_SUM_RTN	
					, T.ADD_SUM_AAMT	
					, T.ADD_OUT_AMT	
					, T.ADD_TOT_AMT	
					, T.INTX			
					, T.TOT_ADTX		
					, T.ADD_OUT_SAMT	
					, T.DLQ_CNT	
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.LOCATION_CD
					, S.PAY_ADTX		
					, S.ADTX_AM		
					, S.DLQ_ADTX		
					, S.ADD_MM_RTN		
					, S.ADD_MM_AAMT	
					, S.ADD_YY_TRTN	
					, S.ADD_YY_TAMT	
					, S.ADD_ETC_RTN	
					, S.ADD_RDT_ADTX	
					, S.ADD_RDT_AADD	
					, S.ADD_SUM_RTN	
					, S.ADD_SUM_AAMT	
					, S.ADD_OUT_AMT	
					, S.ADD_TOT_AMT	
					, S.INTX			
					, S.TOT_ADTX		
					, S.ADD_OUT_SAMT	
					, S.DLQ_CNT	
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>

	<query id="saveEarnIncomeTaxMgrDtl3">
		<![CDATA[
			MERGE INTO TCPN935 T
			USING	(
					SELECT A.TAX_DOC_NO
						 , A.BUSINESS_PLACE_CD
						 , A.LOCATION_CD
						 , A.S_EMP_CNT
						 , A.D_EMP_CNT
						 , A.TAX_EXP_MON
						 , A.TAX_MON
						 , A.TAX_CAL_MON
						 , A.PAYMENT_YMD
						 , A.TAX_ADD_MON
						 , A.TOT_TAX_MON
						 , A.PAYMENT_YMD_2D
						 , A.DELAY_DAY
						 , A.PAYMENT_ADD_TAX_MON
						 , A.REG_ADD_TAX_MON
						 , A.OWN_TYPE
					  FROM (
							SELECT TRIM(#taxDocNo#)										AS TAX_DOC_NO
								 , TRIM(#businessPlaceCd#)								AS BUSINESS_PLACE_CD
								 , TRIM(#locationCd#)								AS LOCATION_CD
								 , NVL(TO_NUMBER(TRIM(REPLACE(#sEmpCnt#,',',''))),0)		AS S_EMP_CNT
								 , TO_NUMBER(TRIM(REPLACE(#dEmpCnt#,',','')))			AS D_EMP_CNT
								 , TO_NUMBER(TRIM(REPLACE(#taxExpMon#,',','')))			AS TAX_EXP_MON
								 , TO_NUMBER(TRIM(REPLACE(#taxMon#,',','')))				AS TAX_MON
								 , TO_NUMBER(TRIM(REPLACE(#taxCalMon#,',','')))			AS TAX_CAL_MON
								 , TRIM(REPLACE(#paymentYmd#,'-',''))					AS PAYMENT_YMD
								 , TO_NUMBER(TRIM(REPLACE(#taxAddMon#,',','')))			AS TAX_ADD_MON
								 , TO_NUMBER(TRIM(REPLACE(#totTaxMon#,',','')))			AS TOT_TAX_MON
								 , TRIM(REPLACE(#paymentYmd2d#,'-',''))					AS PAYMENT_YMD_2D
								 , TO_NUMBER(TRIM(REPLACE(#delayDay#,',','')))			AS DELAY_DAY
								 , TO_NUMBER(TRIM(REPLACE(#paymentAddTaxMon#,',','')))	AS PAYMENT_ADD_TAX_MON
								 , TO_NUMBER(TRIM(REPLACE(#regAddTaxMon#,',','')))		AS REG_ADD_TAX_MON
								 , TRIM(#ownType#)										AS OWN_TYPE
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
				AND	T.LOCATION_CD	= S.LOCATION_CD
				)
			WHEN MATCHED THEN
				UPDATE SET T.S_EMP_CNT				= S.S_EMP_CNT
				         , T.D_EMP_CNT				= S.D_EMP_CNT
						 , T.TAX_EXP_MON			= S.TAX_EXP_MON
						 , T.TAX_MON				= S.TAX_MON
						 , T.TAX_CAL_MON			= S.TAX_CAL_MON
						 , T.PAYMENT_YMD			= S.PAYMENT_YMD
						 , T.TAX_ADD_MON			= S.TAX_ADD_MON
						 , T.TOT_TAX_MON			= S.TOT_TAX_MON
						 , T.PAYMENT_YMD_2D			= S.PAYMENT_YMD_2D
						 , T.DELAY_DAY				= S.DELAY_DAY
						 , T.PAYMENT_ADD_TAX_MON	= S.PAYMENT_ADD_TAX_MON
						 , T.REG_ADD_TAX_MON		= S.REG_ADD_TAX_MON
						 , T.OWN_TYPE				= S.OWN_TYPE
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.LOCATION_CD
					, T.S_EMP_CNT
					, T.D_EMP_CNT
					, T.TAX_EXP_MON
					, T.TAX_MON
					, T.TAX_CAL_MON
					, T.PAYMENT_YMD
					, T.TAX_ADD_MON
					, T.TOT_TAX_MON
					, T.PAYMENT_YMD_2D
					, T.DELAY_DAY
					, T.PAYMENT_ADD_TAX_MON
					, T.REG_ADD_TAX_MON
					, T.OWN_TYPE
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.LOCATION_CD
					, S.S_EMP_CNT
					, S.D_EMP_CNT
					, S.TAX_EXP_MON
					, S.TAX_MON
					, S.TAX_CAL_MON
					, S.PAYMENT_YMD
					, S.TAX_ADD_MON
					, S.TOT_TAX_MON
					, S.PAYMENT_YMD_2D
					, S.DELAY_DAY
					, S.PAYMENT_ADD_TAX_MON
					, S.REG_ADD_TAX_MON
					, S.OWN_TYPE
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>


	<query id="saveEarnIncomeTaxMgrDtl3_2025">
		<![CDATA[
			MERGE INTO TCPN935 T
			USING	(
					SELECT A.TAX_DOC_NO
						 , A.BUSINESS_PLACE_CD
						 , A.LOCATION_CD
						 , A.S_EMP_CNT
						 , A.D_EMP_CNT
						 , A.TAX_EXP_MON
						 , A.TAX_MON
						 , A.TAX_CAL_MON
						 , A.PAYMENT_YMD
						 , A.TAX_ADD_MON
						 , A.TOT_TAX_MON
						 , A.PAYMENT_YMD_2D
						 , A.DELAY_DAY
						 , A.NON_REG_MON
						 , A.UNDER_REG_MON
						 , A.PAYMENT_DELAY_MON						 
						 , A.OWN_TYPE
						 , A.HEAD_OFFICE_ADDR
					  FROM (
							SELECT TRIM(#taxDocNo#)										AS TAX_DOC_NO
								 , TRIM(#businessPlaceCd#)								AS BUSINESS_PLACE_CD
								 , TRIM(#locationCd#)								AS LOCATION_CD
								 , NVL(TO_NUMBER(TRIM(REPLACE(#sEmpCnt#,',',''))),0)		AS S_EMP_CNT
								 , TO_NUMBER(TRIM(REPLACE(#dEmpCnt#,',','')))			AS D_EMP_CNT
								 , TO_NUMBER(TRIM(REPLACE(#taxExpMon#,',','')))			AS TAX_EXP_MON
								 , TO_NUMBER(TRIM(REPLACE(#taxMon#,',','')))				AS TAX_MON
								 , TO_NUMBER(TRIM(REPLACE(#taxCalMon#,',','')))			AS TAX_CAL_MON
								 , TRIM(REPLACE(#paymentYmd#,'-',''))					AS PAYMENT_YMD
								 , TO_NUMBER(TRIM(REPLACE(#taxAddMon#,',','')))			AS TAX_ADD_MON
								 , TO_NUMBER(TRIM(REPLACE(#totTaxMon#,',','')))			AS TOT_TAX_MON
								 , TRIM(REPLACE(#paymentYmd2d#,'-',''))					AS PAYMENT_YMD_2D
								 , TO_NUMBER(TRIM(REPLACE(#delayDay#,',','')))			AS DELAY_DAY
								 , TO_NUMBER(TRIM(REPLACE(#nonRegMon#,',','')))	        AS NON_REG_MON
								 , TO_NUMBER(TRIM(REPLACE(#underRegMon#,',','')))		AS UNDER_REG_MON
								 , TO_NUMBER(TRIM(REPLACE(#paymentDelayMon#,',','')))	AS PAYMENT_DELAY_MON
								 , TRIM(#ownType#)										AS OWN_TYPE
								 , TRIM(#headOfficeAddr#)								AS HEAD_OFFICE_ADDR
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
				AND	T.LOCATION_CD	= S.LOCATION_CD
				)
			WHEN MATCHED THEN
				UPDATE SET T.S_EMP_CNT				= S.S_EMP_CNT
				         , T.D_EMP_CNT				= S.D_EMP_CNT
						 , T.TAX_EXP_MON			= S.TAX_EXP_MON
						 , T.TAX_MON				= S.TAX_MON
						 , T.TAX_CAL_MON			= S.TAX_CAL_MON
						 , T.PAYMENT_YMD			= S.PAYMENT_YMD
						 , T.TAX_ADD_MON			= S.TAX_ADD_MON
						 , T.TOT_TAX_MON			= S.TOT_TAX_MON
						 , T.PAYMENT_YMD_2D			= S.PAYMENT_YMD_2D
						 , T.DELAY_DAY				= S.DELAY_DAY
						 , T.NON_REG_MON	        = S.NON_REG_MON
						 , T.UNDER_REG_MON		    = S.UNDER_REG_MON
						 , T.PAYMENT_DELAY_MON		= S.PAYMENT_DELAY_MON
						 , T.OWN_TYPE				= S.OWN_TYPE
						 , T.HEAD_OFFICE_ADDR		= S.HEAD_OFFICE_ADDR
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.LOCATION_CD
					, T.S_EMP_CNT
					, T.D_EMP_CNT
					, T.TAX_EXP_MON
					, T.TAX_MON
					, T.TAX_CAL_MON
					, T.PAYMENT_YMD
					, T.TAX_ADD_MON
					, T.TOT_TAX_MON
					, T.PAYMENT_YMD_2D
					, T.DELAY_DAY
					, T.NON_REG_MON
					, T.UNDER_REG_MON
					, T.PAYMENT_DELAY_MON
					, T.OWN_TYPE
					, T.HEAD_OFFICE_ADDR
					, T.CRTDATE
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.LOCATION_CD
					, S.S_EMP_CNT
					, S.D_EMP_CNT
					, S.TAX_EXP_MON
					, S.TAX_MON
					, S.TAX_CAL_MON
					, S.PAYMENT_YMD
					, S.TAX_ADD_MON
					, S.TOT_TAX_MON
					, S.PAYMENT_YMD_2D
					, S.DELAY_DAY
					, S.NON_REG_MON
					, S.UNDER_REG_MON
					, S.PAYMENT_DELAY_MON
					, S.OWN_TYPE
					, S.HEAD_OFFICE_ADDR
					, TO_CHAR(SYSDATE, 'YYYYMMDD')
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>


	<query id="saveEarnIncomeTaxMgrDtl1Tab4List940">
		<![CDATA[
			MERGE INTO TCPN940 T
			USING	(
					SELECT	 A.TAX_DOC_NO 
			                ,A.BUSINESS_PLACE_CD 
			                ,A.INCOME_CD 
			                ,A.TAX_ELE_CD 
			                ,A.BELONG_YM 
			                ,A.PAYMENT_YM 
			                ,A.INWON_CNT 
			                ,A.PAYMENT_MON 
			                ,A.PAYE_ITAX_MON 
			                ,A.PAYE_ATAX_MON
			                ,A.PAYE_ADDTAX_MON 
					  FROM (
							SELECT TRIM(#tax_doc_no#)		AS TAX_DOC_NO
								 , TRIM(#business_place_cd#) AS BUSINESS_PLACE_CD
								 , TRIM(#income_cd#)		AS INCOME_CD
				                 , TRIM(#tax_ele_cd#) 		AS TAX_ELE_CD 
				                 , TRIM(#belong_ym#) 		AS BELONG_YM 
				                 , TRIM(#payment_ym#) 		AS PAYMENT_YM 
				                 , TRIM(#inwon_cnt#) 		AS INWON_CNT 
				                 , TRIM(#payment_mon#) 		AS PAYMENT_MON 
				                 , TRIM(#paye_itax_mon#) 	AS PAYE_ITAX_MON 
				                 , TRIM(#paye_atax_mon#) 	AS PAYE_ATAX_MON
				                 , TRIM(#paye_addtax_mon#) 	AS PAYE_ADDTAX_MON 
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					   AND A.INCOME_CD			IS NOT NULL
					   AND A.TAX_ELE_CD			IS NOT NULL
					   AND A.BELONG_YM			IS NOT NULL
					   AND A.PAYMENT_YM			IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
				AND	T.INCOME_CD			= S.INCOME_CD
				AND	T.TAX_ELE_CD		= S.TAX_ELE_CD
				AND	T.BELONG_YM			= S.BELONG_YM
				AND	T.PAYMENT_YM		= S.PAYMENT_YM
				)
			WHEN MATCHED THEN
				UPDATE SET T.INWON_CNT				= S.INWON_CNT
				         , T.PAYMENT_MON			= S.PAYMENT_MON
						 , T.PAYE_ITAX_MON			= S.PAYE_ITAX_MON
						 , T.PAYE_ATAX_MON			= S.PAYE_ATAX_MON
						 , T.PAYE_ADDTAX_MON		= S.PAYE_ADDTAX_MON
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO 
	                , T.BUSINESS_PLACE_CD 
	                , T.INCOME_CD 
	                , T.TAX_ELE_CD 
	                , T.BELONG_YM 
	                , T.PAYMENT_YM 
	                , T.INWON_CNT 
	                , T.PAYMENT_MON 
	                , T.PAYE_ITAX_MON 
	                , T.PAYE_ATAX_MON
	                , T.PAYE_ADDTAX_MON 
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO 
	                , S.BUSINESS_PLACE_CD 
	                , S.INCOME_CD 
	                , S.TAX_ELE_CD 
	                , S.BELONG_YM 
	                , S.PAYMENT_YM 
	                , S.INWON_CNT 
	                , S.PAYMENT_MON 
	                , S.PAYE_ITAX_MON 
	                , S.PAYE_ATAX_MON
	                , S.PAYE_ADDTAX_MON 
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>
	
	<query id="saveEarnIncomeTaxMgrDtl1Tab4List941">
		<![CDATA[
			MERGE INTO TCPN941 T
			USING	(
					SELECT	 A.TAX_DOC_NO
							, A.BUSINESS_PLACE_CD
							, A.INCOME_CD
							, A.SABUN
							, A.TY_GUBUN
							, A.SEQ
							, A.NAME
							, A.RES_NO
							, A.ENTER_NM
							, A.ENTER_NO
							, A.PAYE_ITAX_MON
							, A.PAYE_ATAX_MON
					  FROM (
							SELECT TRIM(#tax_doc_no#)		AS TAX_DOC_NO
								 , TRIM(#business_place_cd#) AS BUSINESS_PLACE_CD
								 , TRIM(#income_cd#)		AS INCOME_CD
				                 , TRIM(#sabun#) 			AS SABUN 
				                 , TRIM(#ty_gubun#) 		AS TY_GUBUN 
				                 , TRIM(#seq#)				AS SEQ
				                 , TRIM(#name#) 			AS NAME 
				                 , Cryptit.encrypt(TRIM(#res_no#), #ssnEnterCd#) AS RES_NO 
				                 , TRIM(#enter_nm#) 		AS ENTER_NM 
				                 , TRIM(#enter_no#) 		AS ENTER_NO 
				                 , TRIM(#paye_itax_mon#) 	AS PAYE_ITAX_MON
				                 , TRIM(#paye_atax_mon#) 	AS PAYE_ATAX_MON 
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					   AND A.INCOME_CD			IS NOT NULL
					   AND A.SABUN			IS NOT NULL
					   AND A.TY_GUBUN		IS NOT NULL
					   AND A.SEQ			IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
				AND	T.INCOME_CD			= S.INCOME_CD
				AND	T.SABUN				= S.SABUN
				AND	T.TY_GUBUN			= S.TY_GUBUN
				AND	T.SEQ				= S.SEQ
				)
			WHEN MATCHED THEN
				UPDATE SET T.NAME					= S.NAME
				         , T.RES_NO					= S.RES_NO
						 , T.ENTER_NM				= S.ENTER_NM
						 , T.ENTER_NO				= S.ENTER_NO
						 , T.PAYE_ITAX_MON			= S.PAYE_ITAX_MON
						 , T.PAYE_ATAX_MON			= S.PAYE_ATAX_MON
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.INCOME_CD
					, T.SABUN
					, T.TY_GUBUN
					, T.SEQ
					, T.NAME
					, T.RES_NO
					, T.ENTER_NM
					, T.ENTER_NO
					, T.PAYE_ITAX_MON
					, T.PAYE_ATAX_MON
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.INCOME_CD
					, S.SABUN
					, S.TY_GUBUN
					--, S.SEQ
					, NVL((SELECT MAX(seq)+1 
				                 	FROM TCPN941 
				                 	WHERE ENTER_CD = #ssnEnterCd#
				                 	  AND TAX_DOC_NO = TRIM(#tax_doc_no#)
				                 	  AND BUSINESS_PLACE_CD = TRIM(#business_place_cd#)
				                 	  AND INCOME_CD = TRIM(#income_cd#)
				                 	  AND SABUN = TRIM(#sabun#) 
				                 	  AND TY_GUBUN = TRIM(#ty_gubun#) 
				                 	),1)
					, S.NAME
					, S.RES_NO
					, S.ENTER_NM
					, S.ENTER_NO
					, S.PAYE_ITAX_MON
					, S.PAYE_ATAX_MON
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>	
	
	<query id="saveEarnIncomeTaxMgrDtl1Tab4List942">
		<![CDATA[
			MERGE INTO TCPN942 T
			USING	(
					SELECT	 A.TAX_DOC_NO
							, A.BUSINESS_PLACE_CD
							, A.REASON_1_YN
							, A.REASON_2_YN
							, A.REASON_3_YN
							, A.REASON_4_YN
							, A.REASON_5_YN
							, A.REASON_MEMO
					  FROM (
							SELECT TRIM(#tax_doc_no#)		AS TAX_DOC_NO
								 , TRIM(#business_place_cd#) AS BUSINESS_PLACE_CD
								 , TRIM(#reason_1_yn#)		AS REASON_1_YN
				                 , TRIM(#reason_2_yn#) 		AS REASON_2_YN 
				                 , TRIM(#reason_3_yn#) 		AS REASON_3_YN 
				                 , TRIM(#reason_4_yn#) 		AS REASON_4_YN
				                 , TRIM(#reason_5_yn#) 		AS REASON_5_YN 
				                 , TRIM(#reason_memo#) 	AS REASON_MEMO 
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BUSINESS_PLACE_CD	= S.BUSINESS_PLACE_CD
				)
			WHEN MATCHED THEN
				UPDATE SET T.REASON_1_YN			= S.REASON_1_YN
				         , T.REASON_2_YN			= S.REASON_2_YN
						 , T.REASON_3_YN			= S.REASON_3_YN
						 , T.REASON_4_YN			= S.REASON_4_YN
						 , T.REASON_5_YN			= S.REASON_5_YN
						 , T.REASON_MEMO			= S.REASON_MEMO
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.REASON_1_YN
					, T.REASON_2_YN
					, T.REASON_3_YN
					, T.REASON_4_YN
					, T.REASON_5_YN
					, T.REASON_MEMO
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.REASON_1_YN
					, S.REASON_2_YN
					, S.REASON_3_YN
					, S.REASON_4_YN
					, S.REASON_5_YN
					, S.REASON_MEMO
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>	
		
	<query id="saveEarnIncomeTaxMgrDtl1Tab5List943">
		<![CDATA[
			MERGE INTO TCPN943 T
			USING	(
					SELECT	 A.TAX_DOC_NO
							, A.BUSINESS_PLACE_CD
							, A.BELONG_YM
							, A.PAYMENT_YM
							, A.ORIGIN_RPT_TYPE
							, A.INCOME_CD
							, A.AMT_1
							, A.AMT_2
							, A.AMT_3
					  FROM (
							SELECT TRIM(#tax_doc_no#)		AS TAX_DOC_NO
								 , TRIM(#business_place_cd#) AS BUSINESS_PLACE_CD
								 , TRIM(#belong_ym#)		AS BELONG_YM
				                 , TRIM(#payment_ym#) 		AS PAYMENT_YM 
				                 , TRIM(#origin_rpt_type#)  AS ORIGIN_RPT_TYPE 
				                 , TRIM(#income_cd#) 		AS INCOME_CD
				                 , TRIM(#amt_1#) 			AS AMT_1 
				                 , TRIM(#amt_2#) 			AS AMT_2
				                 , TRIM(#amt_3#) 			AS AMT_3
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					   AND A.BELONG_YM 			IS NOT NULL
					   AND A.PAYMENT_YM 		IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BELONG_YM			= S.BELONG_YM
				AND	T.PAYMENT_YM		= S.PAYMENT_YM
				AND	T.ORIGIN_RPT_TYPE	= S.ORIGIN_RPT_TYPE
				AND	T.INCOME_CD			= S.INCOME_CD
				)
			WHEN MATCHED THEN
				UPDATE SET T.AMT_1			= S.AMT_1
				         , T.AMT_2			= S.AMT_2
						 , T.AMT_3			= S.AMT_3
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.BELONG_YM
					, T.PAYMENT_YM
					, T.ORIGIN_RPT_TYPE
					, T.INCOME_CD
					, T.AMT_1
					, T.AMT_2
					, T.AMT_3
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.BELONG_YM
					, S.PAYMENT_YM
					, S.ORIGIN_RPT_TYPE
					, S.INCOME_CD
					, S.AMT_1
					, S.AMT_2
					, S.AMT_3
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>	
			
	<query id="saveEarnIncomeTaxMgrDtl1Tab5List943_2">
		<![CDATA[
			MERGE INTO TCPN944 X
         USING ( SELECT ENTER_CD
                       ,TAX_DOC_NO
                       ,BUSINESS_PLACE_CD
                       ,1 AS SEQ
                       ,BELONG_YM
                       ,PAYMENT_YM
                       ,SUM(NVL(AMT_3,0)) AS AMT
                 FROM TCPN943
                 WHERE ENTER_CD =  #ssnEnterCd#
                   AND TAX_DOC_NO = TRIM(#tax_doc_no#)
                   AND BUSINESS_PLACE_CD = TRIM(#business_place_cd#)
                 GROUP BY ENTER_CD, TAX_DOC_NO, BUSINESS_PLACE_CD, BELONG_YM, PAYMENT_YM   ) Y
            ON (     X.ENTER_CD          = Y.ENTER_CD
                AND  X.TAX_DOC_NO        = Y.TAX_DOC_NO
                AND  X.BUSINESS_PLACE_CD = Y.BUSINESS_PLACE_CD
                AND  X.SEQ               = Y.SEQ )
         WHEN MATCHED THEN
             UPDATE SET  X.AMT_7 = Y.AMT,
                         X.AMT_8 = (CASE WHEN NVL(X.AMT_8,0) <> 0 AND NVL(X.AMT_7,0) <> NVL(X.AMT_8,0) THEN X.AMT_8 ELSE Y.AMT END),
                         X.AMT_10 = (CASE WHEN NVL(X.AMT_8,0) <> 0 AND NVL(X.AMT_7,0) <> NVL(X.AMT_8,0) THEN X.AMT_8 ELSE Y.AMT END) - NVL(X.AMT_9,0),
                         X.CHKDATE = SYSDATE,
                         X.CHKID   =  #ssnSabun#
         WHEN NOT MATCHED THEN
             INSERT (
                     ENTER_CD, TAX_DOC_NO, BUSINESS_PLACE_CD, SEQ,
                     BELONG_YM, PAYMENT_YM,
                     AMT_7, AMT_8, AMT_10,
                     CHKDATE, CHKID
             )
             VALUES (
                     Y.ENTER_CD, Y.TAX_DOC_NO, Y.BUSINESS_PLACE_CD, 
                 	 Y.SEQ,
                     Y.BELONG_YM, Y.PAYMENT_YM,
                     Y.AMT, Y.AMT, Y.AMT,
                     SYSDATE,  #ssnSabun#
             )
		]]>
	</query>	
				
	<query id="saveEarnIncomeTaxMgrDtl1Tab5List944">
		<![CDATA[
			MERGE INTO TCPN944 T
			USING	(
					SELECT	 A.TAX_DOC_NO
							, A.BUSINESS_PLACE_CD
							, A.SEQ
							, A.BELONG_YM
							, A.PAYMENT_YM
							, A.AMT_4
							, A.AMT_5
							, A.AMT_6
							, A.AMT_7
							, A.AMT_8
							, A.AMT_9
							, A.AMT_10
					  FROM (
							SELECT TRIM(#tax_doc_no#)		AS TAX_DOC_NO
								 , TRIM(#business_place_cd#) AS BUSINESS_PLACE_CD
								 , TRIM(#seq#)				AS SEQ
								 , TRIM(#belong_ym#)		AS BELONG_YM
				                 , TRIM(#payment_ym#) 		AS PAYMENT_YM 
				                 , TRIM(#amt_4#) 			AS AMT_4 
				                 , TRIM(#amt_5#) 			AS AMT_5
				                 , TRIM(#amt_6#) 			AS AMT_6
				                 , TRIM(#amt_7#) 			AS AMT_7
				                 , TRIM(#amt_8#) 			AS AMT_8
				                 , TRIM(#amt_9#) 			AS AMT_9
				                 , TRIM(#amt_10#) 			AS AMT_10
							  FROM DUAL
							) A
					 WHERE A.TAX_DOC_NO			IS NOT NULL
					   AND A.BUSINESS_PLACE_CD	IS NOT NULL
					   AND A.BELONG_YM 			IS NOT NULL
					   AND A.PAYMENT_YM 		IS NOT NULL
					) S
			ON (	T.ENTER_CD			= #ssnEnterCd#
				AND	T.TAX_DOC_NO		= S.TAX_DOC_NO
				AND	T.BELONG_YM			= S.BELONG_YM
				AND	T.PAYMENT_YM		= S.PAYMENT_YM
				AND	T.SEQ				= S.SEQ
				)
			WHEN MATCHED THEN
				UPDATE SET T.AMT_4			= S.AMT_4
				         , T.AMT_5			= S.AMT_5
						 , T.AMT_6			= S.AMT_6
						 , T.AMT_7			= S.AMT_7
						 , T.AMT_8			= S.AMT_8
						 , T.AMT_9			= S.AMT_9
						 , T.AMT_10			= S.AMT_10
						 , T.CHKDATE				= SYSDATE
						 , T.CHKID					= #ssnSabun#
			WHEN NOT MATCHED THEN
				INSERT
				(
					  T.ENTER_CD
					, T.TAX_DOC_NO
					, T.BUSINESS_PLACE_CD
					, T.SEQ
					, T.BELONG_YM
					, T.PAYMENT_YM
					, T.AMT_4
					, T.AMT_5
					, T.AMT_6
					, T.AMT_7
					, T.AMT_8
					, T.AMT_9
					, T.AMT_10
					, T.CHKDATE
					, T.CHKID
				)
				VALUES
				(
					  #ssnEnterCd#
					, S.TAX_DOC_NO
					, S.BUSINESS_PLACE_CD
					, S.SEQ
					, S.BELONG_YM
					, S.PAYMENT_YM
					, S.AMT_4
					, S.AMT_5
					, S.AMT_6
					, S.AMT_7
					, S.AMT_8
					, S.AMT_9
					, S.AMT_10
					, SYSDATE
					, #ssnSabun#
				)
		]]>
	</query>	
				
	<query id="deleteEarnIncomeTaxMgr">
		<![CDATA[
				DELETE FROM TCPN913
				 WHERE ENTER_CD||'_'||TAX_DOC_NO||'_'||BUSINESS_PLACE_CD IN ( NULL
						,
							TRIM(#ssnEnterCd#)||'_'||TRIM(#tax_doc_no#)||'_'||TRIM(#business_place_cd#)
						)
			]]>
	</query>

	<query id="deleteEarnIncomeTaxMgrDtl1Tab3">
		<![CDATA[
				DELETE FROM TCPN919
				 WHERE ENTER_CD||'_'||TAX_DOC_NO||'_'||BUSINESS_PLACE_CD||'_'||TAX_ELE_CD IN ( NULL
						,
							TRIM(#ssnEnterCd#)||'_'||TRIM(#tax_doc_no#)||'_'||TRIM(#business_place_cd#)||'_'||TRIM(#tax_ele_cd#)
						)
			]]>
	</query>
	
	<query id="deleteEarnIncomeTaxMgrDtl1Tab4List940">
		<![CDATA[
				DELETE FROM TCPN940
				 WHERE ENTER_CD||'_'||TAX_DOC_NO||'_'||BUSINESS_PLACE_CD||'_'||INCOME_CD||'_'||TAX_ELE_CD||'_'||BELONG_YM||'_'||PAYMENT_YM IN ( NULL
						,
							TRIM(#ssnEnterCd#)||'_'||TRIM(#tax_doc_no#)||'_'||TRIM(#business_place_cd#)||'_'||TRIM(#income_cd#)||'_'||TRIM(#tax_ele_cd#)||'_'||TRIM(#belong_ym#)||'_'||TRIM(#payment_ym#)
						)
			]]>
	</query>
	
	<query id="deleteEarnIncomeTaxMgrDtl1Tab4List941">
		<![CDATA[
				DELETE FROM TCPN941
				 WHERE ENTER_CD||'_'||TAX_DOC_NO||'_'||BUSINESS_PLACE_CD||'_'||INCOME_CD||'_'||SABUN||'_'||TY_GUBUN||'_'||SEQ IN ( NULL
						,
							TRIM(#ssnEnterCd#)||'_'||TRIM(#tax_doc_no#)||'_'||TRIM(#business_place_cd#)||'_'||TRIM(#income_cd#)||'_'||TRIM(#sabun#)||'_'||TRIM(#ty_gubun#)||'_'||TRIM(#seq#)
						)
			]]>
	</query>
		
	<query id="deleteEarnIncomeTaxMgrDtl1Tab4List942">
		<![CDATA[
				DELETE FROM TCPN942
				 WHERE ENTER_CD||'_'||TAX_DOC_NO||'_'||BUSINESS_PLACE_CD IN ( NULL
						,
							TRIM(#ssnEnterCd#)||'_'||TRIM(#tax_doc_no#)||'_'||TRIM(#business_place_cd#)
						)
			]]>
	</query>		
	
	<query id="deleteEarnIncomeTaxMgrDtl1Tab5List943">
		<![CDATA[
				DELETE FROM TCPN943
				 WHERE ENTER_CD||'_'||TAX_DOC_NO||'_'||BUSINESS_PLACE_CD||'_'||INCOME_CD||'_'||ORIGIN_RPT_TYPE||'_'||BELONG_YM||'_'||PAYMENT_YM IN ( NULL
						,
							TRIM(#ssnEnterCd#)||'_'||TRIM(#tax_doc_no#)||'_'||TRIM(#business_place_cd#)||'_'||TRIM(#income_cd#)||'_'||TRIM(#origin_rpt_type#)||'_'||TRIM(#belong_ym#)||'_'||TRIM(#payment_ym#)
						)
			]]>
	</query>		
	
	<query id="deleteEarnIncomeTaxMgrDtl1Tab5List944">
		<![CDATA[
				DELETE FROM TCPN944
				 WHERE ENTER_CD||'_'||TAX_DOC_NO||'_'||BUSINESS_PLACE_CD||'_'||SEQ||'_'||BELONG_YM||'_'||PAYMENT_YM IN ( NULL
						,
							TRIM(#ssnEnterCd#)||'_'||TRIM(#tax_doc_no#)||'_'||TRIM(#business_place_cd#)||'_'||TRIM(#seq#)||'_'||TRIM(#belong_ym#)||'_'||TRIM(#payment_ym#)
						)
			]]>
	</query>	
	
	<query id="getAdmCd">
		<![CDATA[
			SELECT ADM_CD				   
			  FROM TSYS015
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>
	
	<query id="getReqDiv">
		<![CDATA[
			SELECT REQ_DIV				   
			  FROM TCPN933
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND TAX_DOC_NO 	= #taxDocNo#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>
	
	<query id="getTprCod">
		<![CDATA[
			SELECT TPR_COD				   
			  FROM TCPN933
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND TAX_DOC_NO 	= #taxDocNo#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>
	
	<query id="updateAdmCd">
		<![CDATA[
				UPDATE TSYS015 SET
				 	 ADM_CD  = #admCd#
					,CHKDATE = sysdate
					,CHKID   = #ssnSabun#
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>
	
	<query id="updateReqDiv">
		<![CDATA[
				UPDATE TCPN933 SET
				 	 REQ_DIV  	= #reqDiv#
					,CHKDATE 	= sysdate
					,CHKID   	= #ssnSabun#
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND TAX_DOC_NO 	= #taxDocNo#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>
	
	<query id="updateTprCod">
		<![CDATA[
				UPDATE TCPN933 SET
				 	 TPR_COD  	= #tprCod#
					,CHKDATE 	= sysdate
					,CHKID   	= #ssnSabun#
			 WHERE ENTER_CD		= #ssnEnterCd#
			   AND TAX_DOC_NO 	= #taxDocNo#
			   AND BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND LOCATION_CD	= #locationCd#
		]]>
	</query>
	
	
	<query id="getRtaxMonSum">
		<![CDATA[
			SELECT SUM(EMP_CNT) AS EMP_CNT_SUM 
				 , SUM(TAX_STD_MON) AS TAX_STD_MON_SUM
				 , SUM(RTAX_MON) AS RTAX_MON_SUM
			  FROM TCPN931 A
			 WHERE A.ENTER_CD	= #ssnEnterCd#
			   AND A.TAX_DOC_NO	= #taxDocNo#
			   AND A.BUSINESS_PLACE_CD = #businessPlaceCd#
			   AND A.LOCATION_CD= #locationCd#
			   AND A.EARN_CD	<> '99'
		]]>
	</query>
	
	<query id="getDueDate">
		<![CDATA[
			WITH T AS (
			    SELECT TO_CHAR(ADD_MONTHS(TO_DATE(#paymentYmd#,'YYYYMMDD'), 1), 'yyyymm') || '10' AS DUE_DATE
			      FROM DUAL
			)
			SELECT CASE WHEN TO_CHAR(TO_DATE(T.DUE_DATE,'YYYYMMDD'), 'd') = '1' THEN TO_CHAR(TO_DATE(T.DUE_DATE,'YYYYMMDD')+1,'YYYYMMDD')
			            WHEN TO_CHAR(TO_DATE(T.DUE_DATE,'YYYYMMDD'), 'd') = '7' THEN TO_CHAR(TO_DATE(T.DUE_DATE,'YYYYMMDD')+2,'YYYYMMDD')
			            ELSE T.DUE_DATE END AS DUE_DATE
			  FROM T
		]]>
	</query>


	<!-- 원천징수명세서 및 납부세액 상세 대상자 팝업 조회  -->
	<query id="getEarnIncomeTaxMgrDtl1Tab1EmpPopupList">
		<![CDATA[
					SELECT ENTER_CD
						 , TAX_DOC_NO
						 , BUSINESS_PLACE_CD
						 , TAX_ELE_CD
						 , SABUN
						 , F_COM_GET_NAMES(ENTER_CD,SABUN) AS NAME
						 , PAYMENT_MON
						 , PAYE_ITAX_MON
						 , PAYE_ATAX_MON
						 , PAYE_ADDTAX_MON
						 , REFUND_MON
						 , PAY_ITAX_MON
						 , PAY_ATAX_MON
					  FROM TCPN916
					 WHERE ENTER_CD	= #ssnEnterCd#
					   AND TAX_DOC_NO = #searchTaxDocNo#
					   AND BUSINESS_PLACE_CD = #searchBusinessPlaceCd#
					   AND TAX_ELE_CD = #searchTaxEleCd#
					   AND SABUN||F_COM_GET_NAMES(ENTER_CD,SABUN) LIKE '%'||#searchSabunName#||'%'
					ORDER BY SABUN
			]]>
	</query>

	<!-- 지방세 상세 대상자 팝업 조회  -->
	<query id="getEarnIncomeTaxMgrDtl2EmpPopupList">
		<![CDATA[
					SELECT ENTER_CD
						 , TAX_DOC_NO
						 , BUSINESS_PLACE_CD
						 , LOCATION_CD
						 , EARN_CD
						 , EARN_DTL
						 , CASE WHEN EARN_DTL = '2'
						 			THEN '간이세액'						 			
								WHEN EARN_DTL = '3'
						 			THEN '중도퇴사'
								WHEN EARN_DTL = '4'
						 			THEN '일용소득'
						 		ELSE ''
						   END EARN_DTL_NM					 									 			
						 , SABUN
						 , F_COM_GET_NAMES(ENTER_CD,SABUN) AS NAME
						 , TAX_STD_MON
						 , RTAX_MON
						 , ATTR1
						 , ATTR2
						 , ATTR
					  FROM TCPN932
					 WHERE ENTER_CD	= #ssnEnterCd#
					   AND TAX_DOC_NO = #searchTaxDocNo#
					   AND BUSINESS_PLACE_CD = #searchBusinessPlaceCd#
					   AND LOCATION_CD = #searchLocationCd#
					   AND EARN_CD = #searchEarnCd#
					   AND EARN_DTL = DECODE(#searchEarnDtl#, null, EARN_DTL, #searchEarnDtl#)
					   AND SABUN||F_COM_GET_NAMES(ENTER_CD,SABUN) LIKE '%'||#searchSabunName#||'%'
					ORDER BY EARN_DTL, SABUN
			]]>
	</query>		

	<!-- 사업소세 상세 대상자 팝업 조회  -->
	<query id="getEarnIncomeTaxMgrDtl3EmpPopupList">
		<![CDATA[
					SELECT ENTER_CD
						 , TAX_DOC_NO
						 , BUSINESS_PLACE_CD
						 , LOCATION_CD
						 , EMP_TYPE
						 , SABUN
						 , F_COM_GET_NAMES(ENTER_CD,SABUN) AS NAME
						 , TAX_EXP_MON
						 , TAX_MON
						 , ATTR1
						 , ATTR2
						 , ATTR3
						 , ATTR4
					  FROM TCPN936
					 WHERE ENTER_CD	= #ssnEnterCd#
					   AND TAX_DOC_NO = #searchTaxDocNo#
					   AND BUSINESS_PLACE_CD = #searchBusinessPlaceCd#
					   AND LOCATION_CD = #searchLocationCd#
					   AND EMP_TYPE = DECODE(#searchEmpType#, null, EMP_TYPE, #searchEmpType#)
					   AND SABUN||F_COM_GET_NAMES(ENTER_CD,SABUN) LIKE '%'||#searchSabunName#||'%'
					ORDER BY EMP_TYPE, SABUN
			]]>
	</query>		
	
</root>