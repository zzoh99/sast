<?xml version="1.0" encoding="UTF-8"?>
<root>
<!-- 신고서 신고일 목록 조회 -->
	<query id="selectDeclarationMgrTargetList">
		<![CDATA[
			SELECT T.ENTER_CD
			     , T.DECLARATION_ORG_CD
			     , T.DECLARATION_TYPE
			     , T.TARGET_YMD
			     , T.SDATE
			     , T.EDATE
			     , T.BUSINESS_PLACE_CD
			     , T.NOTE
			     , (SELECT COUNT(E.SABUN)
			          FROM TBEN047 E
			         WHERE E.ENTER_CD = T.ENTER_CD
			           AND E.DECLARATION_ORG_CD = T.DECLARATION_ORG_CD
			           AND E.DECLARATION_TYPE = T.DECLARATION_TYPE
			           AND E.TARGET_YMD = T.TARGET_YMD
			       ) AS ELE_CNT
			  FROM TBEN045 T
			 WHERE T.ENTER_CD = #ssnEnterCd#
			   AND T.DECLARATION_ORG_CD LIKE '%' || #searchDeclarationOrgCd# || '%'
			   AND T.DECLARATION_TYPE LIKE '%' || #searchDeclarationType# || '%'
			   AND SUBSTR(T.TARGET_YMD, 1, 4) LIKE '%' || #searchDeclarationTargetYear# || '%'
			   AND SUBSTR(T.TARGET_YMD, 5, 2) LIKE '%' || #searchDeclarationTargetMonth# || '%'
			 ORDER BY T.TARGET_YMD DESC, T.DECLARATION_ORG_CD, T.DECLARATION_TYPE
		]]>
		</query>

<!-- 신고서 신고일 저장 -->
	<query id="mergeDeclarationMgrTarget">
		<![CDATA[
			MERGE INTO TBEN045 T
			USING (
			           SELECT A.ENTER_CD
			                , A.DECLARATION_ORG_CD
			                , A.DECLARATION_TYPE
			                , A.TARGET_YMD
			                , A.SDATE
			                , A.EDATE
			                , A.BUSINESS_PLACE_CD
			                , A.NOTE
			                , A.CHKID
			             FROM (
			                       SELECT TRIM( #ssnEnterCd# ) AS ENTER_CD
			                            , TRIM( #declaration_org_cd# ) AS DECLARATION_ORG_CD
			                            , TRIM( #declaration_type# ) AS DECLARATION_TYPE
			                            , TRIM( #target_ymd# ) AS TARGET_YMD
			                            , TRIM( #sdate# ) AS SDATE
			                            , TRIM( #edate# ) AS EDATE
			                            , TRIM( #business_place_cd# ) AS BUSINESS_PLACE_CD
			                            , TRIM( #note# ) AS NOTE
			                            , TRIM( #ssnSabun# ) AS CHKID
			                         FROM DUAL
			                  ) A
			            WHERE A.ENTER_CD IS NOT NULL
			              AND A.DECLARATION_ORG_CD IS NOT NULL
			              AND A.DECLARATION_TYPE IS NOT NULL
			              AND A.TARGET_YMD IS NOT NULL
			      ) S
			   ON (
			                  T.ENTER_CD           = S.ENTER_CD
			              AND T.DECLARATION_ORG_CD = S.DECLARATION_ORG_CD
			              AND T.DECLARATION_TYPE   = S.DECLARATION_TYPE
			              AND T.TARGET_YMD         = S.TARGET_YMD
			      )
			 WHEN MATCHED THEN
			      UPDATE SET
			             T.CHKDATE           = SYSDATE
			           , T.CHKID             = S.CHKID
			           , T.SDATE             = S.SDATE
			           , T.EDATE             = S.EDATE
			           , T.BUSINESS_PLACE_CD = S.BUSINESS_PLACE_CD
			           , T.NOTE              = S.NOTE
			 WHEN NOT MATCHED THEN
			      INSERT (
			             T.ENTER_CD
			           , T.DECLARATION_ORG_CD
			           , T.DECLARATION_TYPE
			           , T.TARGET_YMD
			           , T.SDATE
			           , T.EDATE
			           , T.BUSINESS_PLACE_CD
			           , T.NOTE
			           , T.CHKDATE
			           , T.CHKID
			      ) VALUES (
			             S.ENTER_CD
			           , S.DECLARATION_ORG_CD
			           , S.DECLARATION_TYPE
			           , S.TARGET_YMD
			           , S.SDATE
			           , S.EDATE
			           , S.BUSINESS_PLACE_CD
			           , S.NOTE
			           , SYSDATE
			           , S.CHKID
			      )
		]]>
	</query>

<!-- 신고서 신고일 삭제  -->
	<query id="deleteDeclarationMgrTarget">
		<![CDATA[
			DELETE FROM TBEN045
			 WHERE ENTER_CD           = #ssnEnterCd#
			   AND DECLARATION_ORG_CD = #declaration_org_cd#
			   AND DECLARATION_TYPE   = #declaration_type#
			   AND TARGET_YMD         = #target_ymd#
		]]>
	</query>

<!-- 신고서 항목 목록 조회 -->
	<query id="selectDeclarationMgrEleList">
		<![CDATA[
			SELECT E.ENTER_CD
			     , E.DECLARATION_ORG_CD
			     , E.DECLARATION_TYPE
			     , E.USE_SDATE
			     , E.DISPLAY_SEQ
			     , E.ELEMENT_NM
			     , E.ELEMENT_DESC
			     , E.ELEMENT_LENGTH
			     , E.ELEMENT_ALIGN
			     , E.ELEMENT_SEQ
			     , E.ELEMENT_EMPTY_CHAR
			     , E.ELEMENT_TYPE
			     , E.ELEMENT_DEFAULT_VALUE
			     , E.ELEMENT_FIX_VALUE
			     , E.ELEMENT_REQUIRED_YN
			     , E.EDI_EXPORT_YN
			     , E.MAPPING_CD
			     , DECODE(E.SQL_SYNTAX, NULL, 'N', 'Y') AS DEFAULT_VAL_IN_SQL
			  FROM TBEN043 E
			     , TBEN041 T
			 WHERE E.ENTER_CD           = T.ENTER_CD
			   AND E.DECLARATION_ORG_CD = T.DECLARATION_ORG_CD
			   AND E.DECLARATION_TYPE   = T.DECLARATION_TYPE
			   AND E.ENTER_CD           = #ssnEnterCd#
			   AND E.DECLARATION_ORG_CD = #declaration_org_cd#
			   AND E.DECLARATION_TYPE   = #declaration_type#
			   AND TO_DATE(#target_ymd#, 'YYYYMMDD') BETWEEN TO_DATE(E.USE_SDATE, 'YYYYMMDD') AND TO_DATE(NVL(T.USE_EDATE, '99991231'), 'YYYYMMDD')
			 ORDER BY E.DISPLAY_SEQ
		]]>
	</query>

<!-- 신고서 항목 입력값 목록 조회 -->
	<query id="selectDeclarationMgrEleValList">
		<![CDATA[
			SELECT *
			  FROM (
			            SELECT T.ENTER_CD
			                 , T.DECLARATION_ORG_CD
			                 , T.DECLARATION_TYPE
			                 , T.TARGET_YMD
			                 , T.SABUN
			                 , F_COM_GET_NAMES(T.ENTER_CD, T.SABUN, NULL) AS NAME
			                 , F_COM_GET_ORG_NM2(T.ENTER_CD, T.SABUN, T.TARGET_YMD) AS ORG_NM
			                 , F_COM_GET_JIKGUB_NM(T.ENTER_CD, T.SABUN, T.TARGET_YMD) AS JIKGUB_NM
			                 , F_COM_GET_JOB_NM(T.ENTER_CD, T.SABUN, T.TARGET_YMD) AS JOB_NM
			                 , NVL(O.SEQ, T.SABUN) AS SEQ
			                 $pivotSQL$
			              FROM TBEN047 T
			                 , (
			                        SELECT O1.ENTER_CD
			                             , O1.DECLARATION_ORG_CD
			                             , O1.DECLARATION_TYPE
			                             , O1.TARGET_YMD
			                             , O1.SABUN
			                             , LPAD(O1.ELEMENT_VAL, 10, '0') AS SEQ
			                          FROM TBEN047 O1
			                         WHERE 1 = 1
			                           AND O1.ENTER_CD           = #ssnEnterCd#
			                           AND O1.DECLARATION_ORG_CD = #declaration_org_cd#
			                           AND O1.DECLARATION_TYPE   = #declaration_type#
			                           AND O1.TARGET_YMD         = #target_ymd#
			                           AND O1.ELEMENT_TYPE       = 'SEQ'
			                   ) O
			             WHERE 1 = 1
			               AND T.ENTER_CD           = O.ENTER_CD(+)
			               AND T.DECLARATION_ORG_CD = O.DECLARATION_ORG_CD(+)
			               AND T.DECLARATION_TYPE   = O.DECLARATION_TYPE(+)
			               AND T.TARGET_YMD         = O.TARGET_YMD(+)
			               AND T.SABUN              = O.SABUN(+)
			               AND T.ENTER_CD           = #ssnEnterCd#
			               AND T.DECLARATION_ORG_CD = #declaration_org_cd#
			               AND T.DECLARATION_TYPE   = #declaration_type#
			               AND T.TARGET_YMD         = #target_ymd#
			             GROUP BY T.ENTER_CD, T.DECLARATION_ORG_CD, T.DECLARATION_TYPE, T.TARGET_YMD, T.SABUN, O.SEQ
			       )
			 ORDER BY SEQ
		]]>
	</query>

<!-- 신고서 항목 입력값 저장 -->
	<query id="mergeDeclarationMgrEleVal">
		<![CDATA[
			MERGE INTO TBEN047 T
			USING (
			           SELECT A.ENTER_CD
			                , A.DECLARATION_ORG_CD
			                , A.DECLARATION_TYPE
			                , A.TARGET_YMD
			                , A.SABUN
			                , A.ELEMENT_NM
			                , DECODE(A.ENCRYPT_YN, 'Y', CRYPTIT.ENCRYPT(A.ELEMENT_VAL, A.ENTER_CD), A.ELEMENT_VAL) AS ELEMENT_VAL
			                , A.ENCRYPT_YN
			                , (
			                       SELECT E1.ELEMENT_TYPE
			                         FROM TBEN043 E1
			                            , TBEN041 T1
			                        WHERE E1.ENTER_CD           = T1.ENTER_CD
			                          AND E1.DECLARATION_ORG_CD = T1.DECLARATION_ORG_CD
			                          AND E1.DECLARATION_TYPE   = T1.DECLARATION_TYPE
			                          AND E1.USE_SDATE          = T1.USE_SDATE
			                          AND E1.ENTER_CD           = A.ENTER_CD
			                          AND E1.DECLARATION_ORG_CD = A.DECLARATION_ORG_CD
			                          AND E1.DECLARATION_TYPE   = A.DECLARATION_TYPE
			                          AND E1.ELEMENT_NM         = A.ELEMENT_NM
			                          AND TO_DATE(A.TARGET_YMD, 'YYYYMMDD') BETWEEN TO_DATE(T1.USE_SDATE, 'YYYYMMDD') AND TO_DATE(NVL(T1.USE_EDATE, '99991231'), 'YYYYMMDD')
			                  ) AS ELEMENT_TYPE
			                , A.CHKID
			             FROM (
			                       SELECT TRIM( #ssnEnterCd# ) AS ENTER_CD
			                            , TRIM( #declaration_org_cd# ) AS DECLARATION_ORG_CD
			                            , TRIM( #declaration_type# ) AS DECLARATION_TYPE
			                            , TRIM( #target_ymd# ) AS TARGET_YMD
			                            , TRIM( #sabun# ) AS SABUN
			                            , TRIM( #element_nm# ) AS ELEMENT_NM
			                            , TRIM( #element_val# ) AS ELEMENT_VAL
			                            , TRIM( #encrypt_yn# ) AS ENCRYPT_YN
			                            , TRIM( #ssnSabun# ) AS CHKID
			                         FROM DUAL
			                  ) A
			            WHERE A.ENTER_CD IS NOT NULL
			              AND A.DECLARATION_ORG_CD IS NOT NULL
			              AND A.DECLARATION_TYPE IS NOT NULL
			              AND A.TARGET_YMD IS NOT NULL
			              AND A.ELEMENT_NM IS NOT NULL
			      ) S
			   ON (
			                  T.ENTER_CD           = S.ENTER_CD
			              AND T.DECLARATION_ORG_CD = S.DECLARATION_ORG_CD
			              AND T.DECLARATION_TYPE   = S.DECLARATION_TYPE
			              AND T.TARGET_YMD         = S.TARGET_YMD
			              AND T.SABUN              = S.SABUN
			              AND T.ELEMENT_NM         = S.ELEMENT_NM
			      )
			 WHEN MATCHED THEN
			      UPDATE SET
			             T.CHKDATE            = SYSDATE
			           , T.CHKID              = S.CHKID
			           , T.ELEMENT_VAL        = S.ELEMENT_VAL
			           , T.ENCRYPT_YN         = S.ENCRYPT_YN
			           , T.ELEMENT_TYPE       = S.ELEMENT_TYPE
			 WHEN NOT MATCHED THEN
			      INSERT (
			             T.ENTER_CD
			           , T.DECLARATION_ORG_CD
			           , T.DECLARATION_TYPE
			           , T.TARGET_YMD
			           , T.SABUN
			           , T.ELEMENT_NM
			           , T.ELEMENT_VAL
			           , T.ELEMENT_TYPE
			           , T.ENCRYPT_YN
			           , T.CHKDATE
			           , T.CHKID
			      ) VALUES (
			             S.ENTER_CD
			           , S.DECLARATION_ORG_CD
			           , S.DECLARATION_TYPE
			           , S.TARGET_YMD
			           , S.SABUN
			           , S.ELEMENT_NM
			           , S.ELEMENT_VAL
			           , S.ELEMENT_TYPE
			           , S.ENCRYPT_YN
			           , SYSDATE
			           , S.CHKID
			      )
		]]>
	</query>

<!-- 신고서 항목 입력값 삭제  -->
	<query id="deleteDeclarationMgrEleVal">
		<![CDATA[
			DELETE FROM TBEN047
			 WHERE ENTER_CD           = #ssnEnterCd#
			   AND DECLARATION_ORG_CD = #declaration_org_cd#
			   AND DECLARATION_TYPE   = #declaration_type#
			   AND TARGET_YMD         = #target_ymd#
			   AND SABUN              = #sabun#
		]]>
	</query>

<!-- 신고서 서식  조회 -->
	<query id="selectDeclarationInfoMap">
		<![CDATA[
			SELECT ENTER_CD
			     , DECLARATION_ORG_CD
			     , DECLARATION_TYPE
			     , USE_SDATE
			     , USE_EDATE
			     , EXPORT_TYPE
			     , EDI_ENCODING
			     , DELIMITER
			     , NOTE
			  FROM TBEN041
			 WHERE ENTER_CD           = #ssnEnterCd#
			   AND DECLARATION_ORG_CD = #declaration_org_cd#
			   AND DECLARATION_TYPE   = #declaration_type#
			   AND TO_DATE(#target_ymd#, 'YYYYMMDD') BETWEEN TO_DATE(USE_SDATE, 'YYYYMMDD') AND TO_DATE(NVL(USE_EDATE, '99991231'), 'YYYYMMDD')
		]]>
		</query>

<!-- 신고서 항목 목록 조회(EDI 출력용) -->
	<query id="selectDeclarationMgrEleListForEdi">
		<![CDATA[
			SELECT E.ENTER_CD
			     , E.DECLARATION_ORG_CD
			     , E.DECLARATION_TYPE
			     , E.USE_SDATE
			     , E.DISPLAY_SEQ
			     , E.ELEMENT_NM
			     , E.ELEMENT_DESC
			     , E.ELEMENT_LENGTH
			     , E.ELEMENT_ALIGN
			     , E.ELEMENT_SEQ
			     , E.ELEMENT_EMPTY_CHAR
			     , E.ELEMENT_TYPE
			     , E.ELEMENT_DEFAULT_VALUE
			     , E.ELEMENT_FIX_VALUE
			     , E.ELEMENT_REQUIRED_YN
			     , E.EDI_EXPORT_YN
			     , E.MAPPING_CD
			     , DECODE(E.SQL_SYNTAX, NULL, 'N', 'Y') AS DEFAULT_VAL_IN_SQL
			  FROM TBEN043 E
			     , TBEN041 T
			 WHERE E.ENTER_CD           = T.ENTER_CD
			   AND E.DECLARATION_ORG_CD = T.DECLARATION_ORG_CD
			   AND E.DECLARATION_TYPE   = T.DECLARATION_TYPE
			   AND E.ENTER_CD           = #ssnEnterCd#
			   AND E.DECLARATION_ORG_CD = #declaration_org_cd#
			   AND E.DECLARATION_TYPE   = #declaration_type#
			   AND TO_DATE(#target_ymd#, 'YYYYMMDD') BETWEEN TO_DATE(E.USE_SDATE, 'YYYYMMDD') AND TO_DATE(NVL(T.USE_EDATE, '99991231'), 'YYYYMMDD')
			   AND E.EDI_EXPORT_YN = 'Y'
			 ORDER BY E.ELEMENT_SEQ
		]]>
	</query>

<!-- Txt Edi 파일용 신고서 입력값 목록 조회  -->
	<query id="selectDeclarationMgrEleValListForTxtEdi">
		<![CDATA[
			SELECT R.ENTER_CD
			     , R.DECLARATION_ORG_CD
			     , R.DECLARATION_TYPE
			     , R.TARGET_YMD
			     , R.SABUN
			     , R.VAL
			     , R.SEQ
			  FROM (
			            SELECT T.ENTER_CD
			                 , T.DECLARATION_ORG_CD
			                 , T.DECLARATION_TYPE
			                 , T.TARGET_YMD
			                 , T.SABUN
			                 , F_BEN_GET_EDI_ALL_TEXT(T.ENTER_CD, T.DECLARATION_ORG_CD, T.DECLARATION_TYPE, T.TARGET_YMD, T.SABUN, #delimiter#) AS VAL
			                 , NVL(O.SEQ, T.SABUN) AS SEQ
			              FROM TBEN047 T
			                 , (
			                        SELECT O1.ENTER_CD
			                             , O1.DECLARATION_ORG_CD
			                             , O1.DECLARATION_TYPE
			                             , O1.TARGET_YMD
			                             , O1.SABUN
			                             , LPAD(O1.ELEMENT_VAL, 10, '0') AS SEQ
			                          FROM TBEN047 O1
			                         WHERE 1 = 1
			                           AND O1.ENTER_CD           = #ssnEnterCd#
			                           AND O1.DECLARATION_ORG_CD = #declaration_org_cd#
			                           AND O1.DECLARATION_TYPE   = #declaration_type#
			                           AND O1.TARGET_YMD         = #target_ymd#
			                           AND O1.ELEMENT_TYPE       = 'SEQ'
			                   ) O
			             WHERE 1 = 1
			               AND T.ENTER_CD           = O.ENTER_CD(+)
			               AND T.DECLARATION_ORG_CD = O.DECLARATION_ORG_CD(+)
			               AND T.DECLARATION_TYPE   = O.DECLARATION_TYPE(+)
			               AND T.TARGET_YMD         = O.TARGET_YMD(+)
			               AND T.SABUN              = O.SABUN(+)
			               AND T.ENTER_CD           = #ssnEnterCd#
			               AND T.DECLARATION_ORG_CD = #declaration_org_cd#
			               AND T.DECLARATION_TYPE   = #declaration_type#
			               AND T.TARGET_YMD         = #target_ymd#
			               AND EXISTS (SELECT * FROM TBEN047
			                            WHERE ENTER_CD           = #ssnEnterCd#
			                               AND DECLARATION_ORG_CD = #declaration_org_cd#
			                               AND DECLARATION_TYPE   = #declaration_type#
			                               AND TARGET_YMD         = #target_ymd#
			                               AND SABUN = T.SABUN
			                               AND ELEMENT_NM  LIKE '%신고여부%'
			                               AND ELEMENT_VAL = '10')
			             GROUP BY T.ENTER_CD, T.DECLARATION_ORG_CD, T.DECLARATION_TYPE, T.TARGET_YMD, T.SABUN, O.SEQ
			       ) R
			 ORDER BY R.SEQ
		]]>
	</query>

<!-- SQL 구문 실행을 통한 입력항목 기본값 조회  -->
	<query id="selectDefaultValForSQLSyntax">
		<![CDATA[
			SELECT F_BEN_GET_EDI_VAL_SQL(#ssnEnterCd#, #declaration_org_cd#, #declaration_type#, #target_ymd#, #sabun#, #element_nm#) AS VAL
			  FROM DUAL
		]]>
	</query>

</root>